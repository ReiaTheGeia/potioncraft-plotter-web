{"version":3,"file":"client.9a278a4a0cc8352e9286.bundle.js","mappings":"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","sources":["webpack://potioncraft-plotter/./src/style.css","webpack://potioncraft-plotter/./src/style.css?7163","webpack://potioncraft-plotter/./src/components/DragReorderable.tsx","webpack://potioncraft-plotter/./src/components/EntityDetails.tsx","webpack://potioncraft-plotter/./src/components/IncDecSlider.tsx","webpack://potioncraft-plotter/./src/components/IngredientSelector.tsx","webpack://potioncraft-plotter/./src/components/Map/Map.tsx","webpack://potioncraft-plotter/./src/components/Map/index.ts","webpack://potioncraft-plotter/./src/components/Overlay.tsx","webpack://potioncraft-plotter/./src/components/PanZoomViewport/CoordinateMappingViewportViewModel.ts","webpack://potioncraft-plotter/./src/components/PanZoomViewport/PanZoomViewport.tsx","webpack://potioncraft-plotter/./src/components/PanZoomViewport/index.ts","webpack://potioncraft-plotter/./src/components/PlotBuilderItemsList.tsx","webpack://potioncraft-plotter/./src/components/PlotBuilderView/PlotBuilderView.tsx","webpack://potioncraft-plotter/./src/components/PlotBuilderView/PlotBuilderViewModel.ts","webpack://potioncraft-plotter/./src/components/PlotBuilderView/index.ts","webpack://potioncraft-plotter/./src/components/PlotDetails.tsx","webpack://potioncraft-plotter/./src/components/PlotSvg.tsx","webpack://potioncraft-plotter/./src/components/Plot/Plot.tsx","webpack://potioncraft-plotter/./src/components/Plot/index.ts","webpack://potioncraft-plotter/./src/components/PointDetails.tsx","webpack://potioncraft-plotter/./src/components/StepDetails.tsx","webpack://potioncraft-plotter/./src/console.ts","webpack://potioncraft-plotter/./src/container.tsx","webpack://potioncraft-plotter/./src/curves.ts","webpack://potioncraft-plotter/./src/game-settings.ts","webpack://potioncraft-plotter/./src/hooks/component-bounds.ts","webpack://potioncraft-plotter/./src/hooks/native-event.ts","webpack://potioncraft-plotter/./src/hooks/observe.ts","webpack://potioncraft-plotter/./src/index.tsx","webpack://potioncraft-plotter/./src/modifier-keys.ts","webpack://potioncraft-plotter/./src/pages/Challenge/ChallengePage.tsx","webpack://potioncraft-plotter/./src/pages/Challenge/ChallengePageViewModel.ts","webpack://potioncraft-plotter/./src/pages/Challenge/index.ts","webpack://potioncraft-plotter/./src/pages/Index.tsx","webpack://potioncraft-plotter/./src/pages/Plotter/PlotterPage.tsx","webpack://potioncraft-plotter/./src/pages/Plotter/PlotterPageViewModel.ts","webpack://potioncraft-plotter/./src/pages/Plotter/index.ts","webpack://potioncraft-plotter/./src/point-array.ts","webpack://potioncraft-plotter/./src/rectangles.ts","webpack://potioncraft-plotter/./src/routes.tsx","webpack://potioncraft-plotter/./src/runtime-env.ts","webpack://potioncraft-plotter/./src/services/challenge/ChallengeFactory.ts","webpack://potioncraft-plotter/./src/services/challenge/challenge-types/BrewEffectAtPointChallenge.ts","webpack://potioncraft-plotter/./src/services/challenge/module.ts","webpack://potioncraft-plotter/./src/services/history/AppRouter.tsx","webpack://potioncraft-plotter/./src/services/history/History.ts","webpack://potioncraft-plotter/./src/services/history/module.ts","webpack://potioncraft-plotter/./src/services/ingredients/IngredientRegistry.ts","webpack://potioncraft-plotter/./src/services/ingredients/ingredients.ts","webpack://potioncraft-plotter/./src/services/ingredients/module.ts","webpack://potioncraft-plotter/./src/services/ingredients/types.ts","webpack://potioncraft-plotter/./src/services/module.ts","webpack://potioncraft-plotter/./src/services/plotter/Plotter.ts","webpack://potioncraft-plotter/./src/services/plotter/builder/AddIngredientPlotBuilderItem.ts","webpack://potioncraft-plotter/./src/services/plotter/builder/HeatVortexPlotBuilderItem.ts","webpack://potioncraft-plotter/./src/services/plotter/builder/PlotBuilder.ts","webpack://potioncraft-plotter/./src/services/plotter/builder/PlotBuilderItem.ts","webpack://potioncraft-plotter/./src/services/plotter/builder/PlotBuilderItemCollection.ts","webpack://potioncraft-plotter/./src/services/plotter/builder/PourSolventPlotBuilderItem.ts","webpack://potioncraft-plotter/./src/services/plotter/builder/SetPositionPlotBuilderItem.ts","webpack://potioncraft-plotter/./src/services/plotter/builder/StirCauldronPlotBuilderItem.ts","webpack://potioncraft-plotter/./src/services/plotter/builder/VoidSaltPlotBuilderItem.ts","webpack://potioncraft-plotter/./src/services/plotter/builder/index.ts","webpack://potioncraft-plotter/./src/services/plotter/module.ts","webpack://potioncraft-plotter/./src/services/plotter/types.ts","webpack://potioncraft-plotter/./src/services/plotter/utils.ts","webpack://potioncraft-plotter/./src/services/potion-bases/PotionBaseRegistry.ts","webpack://potioncraft-plotter/./src/services/potion-bases/module.ts","webpack://potioncraft-plotter/./src/services/potion-maps/PotionMap.ts","webpack://potioncraft-plotter/./src/services/potion-maps/entity-defs.ts","webpack://potioncraft-plotter/./src/services/potion-maps/maps/index.ts","webpack://potioncraft-plotter/./src/services/potion-maps/regions.ts","webpack://potioncraft-plotter/./src/size.ts","webpack://potioncraft-plotter/./src/theme.tsx","webpack://potioncraft-plotter/./src/utils.ts","webpack://potioncraft-plotter/./src/vector2.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\r\\nThis should be kept minimal and only provide globals\\r\\nor non-react component styles.\\r\\n*/\\r\\n\\r\\nhtml, body, #root {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  margin: 0;\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;;;CAGC;;AAED;EACE,WAAW;EACX,YAAY;EACZ,SAAS;AACX\",\"sourcesContent\":[\"/*\\r\\nThis should be kept minimal and only provide globals\\r\\nor non-react component styles.\\r\\n*/\\r\\n\\r\\nhtml, body, #root {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  margin: 0;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from \"react\";\r\nimport forkRef from \"react-fork-ref\";\r\n\r\nexport type PrimaryDragReorderableAxis =\r\n  | \"left-to-right\"\r\n  | \"right-to-left\"\r\n  | \"top-to-bottom\"\r\n  | \"bottom-to-top\";\r\nexport type SecondaryDragReorderableAxis = \"none\" | PrimaryDragReorderableAxis;\r\n\r\nexport interface DragReorderEventParams {\r\n  /**\r\n   * The index of the value being reordered.\r\n   */\r\n  fromIndex: number;\r\n\r\n  /**\r\n   * The index the value is being reordered to.\r\n   */\r\n  toIndex: number;\r\n}\r\n\r\nexport interface DragReorderableItemParams {\r\n  /**\r\n   * Whether the element for this value is being dragged.\r\n   */\r\n  isDragging: boolean;\r\n\r\n  /**\r\n   * Whether the dragged value is going to be dropped before this element.\r\n   */\r\n  isDropBefore: boolean;\r\n\r\n  /**\r\n   * Whether the dragged value is going to be dropped after this element.\r\n   */\r\n  isDropAfter: boolean;\r\n}\r\n\r\nexport type DragReorderableRenderFunc<TValue = any> = (\r\n  /**\r\n   * The value this element is for.\r\n   */\r\n  value: TValue,\r\n  /**\r\n   * Parameters describing the drag or drop condition of this element.\r\n   */\r\n  params: DragReorderableItemParams,\r\n\r\n  /**\r\n   * A function to get the properties that should be applied to the root element.\r\n   */\r\n  getRootProps: <T extends React.HTMLProps<HTMLElement>>(\r\n    props?: T & { ref?: React.Ref<HTMLElement> }\r\n  ) => {\r\n    ref: React.Ref<HTMLElement | null>;\r\n  } & T,\r\n\r\n  /***\r\n   * A function to get the properties that should be applied to the draggable handle of this element.\r\n   */\r\n  getDragHandleProps: <T extends React.HTMLProps<HTMLElement>>(\r\n    props?: T\r\n  ) => {\r\n    onPointerDown: React.PointerEventHandler<HTMLElement>;\r\n    onPointerMove: React.PointerEventHandler<HTMLElement>;\r\n    onPointerUp: React.PointerEventHandler<HTMLElement>;\r\n  }\r\n) => React.ReactElement;\r\n\r\nexport interface DragReorderableProps<TValue = any> {\r\n  /**\r\n   * The values representing draggable items.  The order of the values controls the order of the value components in the list.\r\n   */\r\n  values: readonly TValue[];\r\n\r\n  /**\r\n   * The primary direction of the reorderable.\r\n   * This controls how this component will determine the relative order between elements during drag operations.\r\n   */\r\n  primaryAxis: PrimaryDragReorderableAxis;\r\n\r\n  /**\r\n   * The secondary direction of the reorderable.\r\n   * This controls how this component will determine the relative order between elements during drag operations.\r\n   */\r\n  secondaryAxis?: SecondaryDragReorderableAxis;\r\n\r\n  /**\r\n   * An optional drop indicator to render between the items where a drop is currently being hovered.\r\n   */\r\n  dropIndicator?: JSX.Element;\r\n\r\n  /**\r\n   * An event raised when a reorder event occurs.\r\n   * @param values The values in the new order.\r\n   * @param params Parameters describing the reorder event.\r\n   */\r\n  onReorder(values: TValue[], params: DragReorderEventParams): void;\r\n\r\n  /**\r\n   * The render function for each reorderable component.\r\n   */\r\n  children: DragReorderableRenderFunc<TValue>;\r\n}\r\n\r\ninterface ElementBounds {\r\n  left: number;\r\n  top: number;\r\n  right: number;\r\n  bottom: number;\r\n}\r\n\r\nconst DragReoderable = <TValue,>({\r\n  values,\r\n  primaryAxis,\r\n  secondaryAxis = \"none\",\r\n  dropIndicator,\r\n  onReorder,\r\n  children,\r\n}: DragReorderableProps<TValue>) => {\r\n  /**\r\n   * The bounds of each child element matched to the index of the value it represents.\r\n   */\r\n  const childrenBoundsRef = React.useRef<(ElementBounds | null)[]>([]);\r\n\r\n  const [dragIndex, setDragIndex] = React.useState(-1);\r\n  const [dropIndex, setDropIndex] = React.useState(-1);\r\n\r\n  const onBoundsChanged = React.useCallback(\r\n    (valueIndex: number, bounds: ElementBounds | null) => {\r\n      childrenBoundsRef.current[valueIndex] = bounds;\r\n    },\r\n    []\r\n  );\r\n\r\n  const onDragStart = React.useCallback(\r\n    (valueIndex: number) => {\r\n      if (dragIndex !== -1) {\r\n        return;\r\n      }\r\n      setDragIndex(valueIndex);\r\n    },\r\n    [dragIndex]\r\n  );\r\n\r\n  const onDragMove = React.useCallback(\r\n    (valueIndex: number, e: React.PointerEvent) => {\r\n      // valueIndex should remain the dragIndex, as that element will have captured the pointer for the duration of the drag.\r\n\r\n      if (dragIndex === -1) {\r\n        return;\r\n      }\r\n\r\n      const index = getInsertionIndex(\r\n        childrenBoundsRef.current.filter(isNotNull),\r\n        primaryAxis,\r\n        secondaryAxis,\r\n        e.clientX,\r\n        e.clientY\r\n      );\r\n\r\n      setDropIndex(index);\r\n    },\r\n    [dragIndex]\r\n  );\r\n\r\n  const onDragEnd = React.useCallback(\r\n    (valueIndex: number) => {\r\n      if (\r\n        dragIndex === -1 ||\r\n        dropIndex === -1 ||\r\n        dragIndex === dropIndex ||\r\n        // If we remove the item to place it in the place of the next item, the items will collapse back into their same positions.\r\n        dragIndex + 1 === dropIndex\r\n      ) {\r\n        setDragIndex(-1);\r\n        setDropIndex(-1);\r\n        return;\r\n      }\r\n\r\n      const newValues = [...values];\r\n\r\n      let newValueIndex = dropIndex;\r\n\r\n      // Remove the item being dragged from the list.\r\n      const draggedValue = values[dragIndex];\r\n      newValues.splice(dragIndex, 1);\r\n\r\n      if (dragIndex < newValueIndex) {\r\n        // If the item we removed was before where we are dropping, decrement the drop index\r\n        // to compensate for its removal.\r\n        newValueIndex--;\r\n      }\r\n\r\n      newValues.splice(newValueIndex, 0, draggedValue);\r\n      onReorder(newValues, { fromIndex: dragIndex, toIndex: dropIndex });\r\n\r\n      setDragIndex(-1);\r\n      setDropIndex(-1);\r\n    },\r\n    [dragIndex, dropIndex, values, onReorder]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {values.map((value, index) => (\r\n        <React.Fragment key={index}>\r\n          {dropIndex === index && dropIndicator}\r\n          <DragReorderableItem\r\n            valueIndex={index}\r\n            dropIndex={dropIndex}\r\n            value={value}\r\n            isDragging={dragIndex === index}\r\n            onBoundsChanged={onBoundsChanged}\r\n            onDragStart={onDragStart}\r\n            onDragMove={onDragMove}\r\n            onDragEnd={onDragEnd}\r\n          >\r\n            {children}\r\n          </DragReorderableItem>\r\n        </React.Fragment>\r\n      ))}\r\n      {dropIndex === values.length && dropIndicator}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragReoderable;\r\n\r\ninterface DragReorderableItemProps {\r\n  valueIndex: number;\r\n  dropIndex: number;\r\n  value: any;\r\n  isDragging: boolean;\r\n  onBoundsChanged(valueIndex: number, bounds: ElementBounds | null): void;\r\n  onDragStart(valueIndex: number): void;\r\n  onDragMove(valueIndex: number, e: React.PointerEvent): void;\r\n  onDragEnd(valueIndex: number, e: React.PointerEvent): void;\r\n  children: DragReorderableRenderFunc;\r\n}\r\n\r\nconst DragReorderableItem = ({\r\n  valueIndex,\r\n  dropIndex,\r\n  value,\r\n  isDragging,\r\n  onBoundsChanged,\r\n  onDragStart,\r\n  onDragMove,\r\n  onDragEnd,\r\n  children,\r\n}: DragReorderableItemProps) => {\r\n  const [capturedPointerId, setCapturedPointerId] = React.useState<\r\n    number | null\r\n  >(null);\r\n\r\n  const onPointerDown = React.useCallback(\r\n    (e: React.PointerEvent<HTMLElement>) => {\r\n      if (capturedPointerId !== null) {\r\n        // Already captured one.\r\n        return;\r\n      }\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.currentTarget.setPointerCapture(e.pointerId);\r\n      setCapturedPointerId(e.pointerId);\r\n      e.preventDefault();\r\n      onDragStart(valueIndex);\r\n    },\r\n    [onDragStart, capturedPointerId, valueIndex]\r\n  );\r\n\r\n  const onPointerMove = React.useCallback(\r\n    (e: React.PointerEvent<HTMLElement>) => {\r\n      if (capturedPointerId !== e.pointerId) {\r\n        return;\r\n      }\r\n\r\n      onDragMove(valueIndex, e);\r\n    },\r\n    [onDragMove, capturedPointerId, valueIndex]\r\n  );\r\n\r\n  const onPointerUp = React.useCallback(\r\n    (e: React.PointerEvent<HTMLElement>) => {\r\n      if (capturedPointerId !== e.pointerId) {\r\n        return;\r\n      }\r\n\r\n      e.currentTarget.releasePointerCapture(e.pointerId);\r\n      setCapturedPointerId(null);\r\n      onDragEnd(valueIndex, e);\r\n    },\r\n    [onDragEnd, capturedPointerId, valueIndex]\r\n  );\r\n\r\n  // Keep these synced to a ref so we can access them inside the mutation observer without having\r\n  // to rebuild the observer on every change.\r\n  const onBoundsRef = React.useRef(onBoundsChanged);\r\n  const valueIndexRef = React.useRef(valueIndex);\r\n  React.useEffect(() => {\r\n    onBoundsRef.current = onBoundsChanged;\r\n    valueIndexRef.current = valueIndex;\r\n  }, [onBoundsChanged, valueIndex]);\r\n\r\n  const observerRef = React.useRef<MutationObserver | null>(null);\r\n  // Clean up the observer on unmount.\r\n  React.useEffect(() => {\r\n    return () => observerRef.current?.disconnect();\r\n  }, []);\r\n\r\n  // Build the mutation observer when the ref changes.\r\n  const refCallback = (ref: HTMLElement | null) => {\r\n    if (observerRef.current) {\r\n      observerRef.current.disconnect();\r\n      observerRef.current = null;\r\n    }\r\n\r\n    if (!ref) {\r\n      onBoundsChanged(valueIndex, null);\r\n      return;\r\n    }\r\n\r\n    const observer = new MutationObserver(() => {\r\n      const { left, top, right, bottom } = ref.getBoundingClientRect();\r\n      onBoundsChanged(valueIndexRef.current, { left, top, right, bottom });\r\n    });\r\n\r\n    observer.observe(ref, {\r\n      attributes: true,\r\n      characterData: true,\r\n      childList: true,\r\n      subtree: true,\r\n    });\r\n\r\n    observerRef.current = observer;\r\n\r\n    const { left, top, right, bottom } = ref.getBoundingClientRect();\r\n    onBoundsChanged(valueIndexRef.current, { left, top, right, bottom });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {children(\r\n        value,\r\n        {\r\n          isDragging,\r\n          isDropBefore: dropIndex === valueIndex,\r\n          isDropAfter: dropIndex + 1 === valueIndex,\r\n        },\r\n        (additionalProps = {} as any) => ({\r\n          ...additionalProps,\r\n          ref: forkRef(refCallback, additionalProps.ref ?? (() => {})),\r\n        }),\r\n        (additionalProps = {} as any) => ({\r\n          ...additionalProps,\r\n          onPointerDown,\r\n          onPointerMove,\r\n          onPointerUp,\r\n        })\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ntype IndexedBounds = ElementBounds & { itemIndex: number };\r\n\r\n/**\r\n * A group of children and their bounds along one span of an axis.\r\n */\r\ninterface ChildGroup {\r\n  /**\r\n   * The leftmost extent of every child in this group.\r\n   */\r\n  left: number;\r\n\r\n  /**\r\n   * The rightmost extent of every child in this group.\r\n   */\r\n  right: number;\r\n\r\n  /**\r\n   * The topmost extent of every child in this group.\r\n   */\r\n  top: number;\r\n\r\n  /**\r\n   * The bottommost extent of every child in this group.\r\n   */\r\n  bottom: number;\r\n\r\n  /**\r\n   * The bounds and index of every child in this group.\r\n   */\r\n  items: IndexedBounds[];\r\n}\r\n\r\n/**\r\n * Break the elements up into groups based on the primary and secondary axis.\r\n */\r\nfunction getGroups(\r\n  bounds: ElementBounds[],\r\n  primaryAxis: PrimaryDragReorderableAxis,\r\n  secondaryAxis: SecondaryDragReorderableAxis\r\n): ChildGroup[] {\r\n  let currentGroup: ChildGroup | null = null;\r\n  const groups: ChildGroup[] = [];\r\n\r\n  let lastPrimaryPosition: number | null = null;\r\n  for (let i = 0; i < bounds.length; i++) {\r\n    const bound = bounds[i];\r\n\r\n    // Get the position of the element along the primary axis.\r\n    let itemPrimaryPosition: number;\r\n    switch (primaryAxis) {\r\n      case \"left-to-right\":\r\n        itemPrimaryPosition = bound.left;\r\n        break;\r\n      case \"right-to-left\":\r\n        itemPrimaryPosition = bound.right;\r\n        break;\r\n      case \"top-to-bottom\":\r\n        itemPrimaryPosition = bound.top;\r\n        break;\r\n      case \"bottom-to-top\":\r\n        itemPrimaryPosition = bound.bottom;\r\n        break;\r\n    }\r\n\r\n    if (\r\n      // Start a group if we have not yet created one.\r\n      !currentGroup ||\r\n      // Check to see if we have started a new row due to wraparound onto the secondary axis.\r\n      (secondaryAxis !== \"none\" &&\r\n        lastPrimaryPosition != null &&\r\n        // If we are ordering in reverse, then we need to start a new primary axis group\r\n        // if the next item ends up less further along than the previous one.\r\n        (axisIsFlipped(primaryAxis)\r\n          ? itemPrimaryPosition > lastPrimaryPosition\r\n          : itemPrimaryPosition < lastPrimaryPosition))\r\n    ) {\r\n      currentGroup = {\r\n        left: bound.left,\r\n        right: bound.right,\r\n        top: bound.top,\r\n        bottom: bound.bottom,\r\n        items: [\r\n          {\r\n            ...bound,\r\n            itemIndex: i,\r\n          },\r\n        ],\r\n      };\r\n      groups.push(currentGroup);\r\n    } else {\r\n      // The item is still within the current group.  Update the group to include it.\r\n      currentGroup.left = Math.min(currentGroup.left, bound.left);\r\n      currentGroup.right = Math.max(currentGroup.right, bound.right);\r\n      currentGroup.top = Math.min(currentGroup.top, bound.top);\r\n      currentGroup.bottom = Math.max(currentGroup.bottom, bound.bottom);\r\n      currentGroup.items.push({\r\n        ...bound,\r\n        itemIndex: i,\r\n      });\r\n    }\r\n\r\n    lastPrimaryPosition = itemPrimaryPosition;\r\n  }\r\n\r\n  if (axisIsFlipped(primaryAxis)) {\r\n    groups.forEach((group) => group.items.reverse());\r\n  }\r\n\r\n  if (secondaryAxis !== \"none\" && axisIsFlipped(secondaryAxis)) {\r\n    groups.reverse();\r\n  }\r\n\r\n  return groups;\r\n}\r\n\r\n/**\r\n * Determine the insertion point for the given mouse coords based on the bounds of all elements and the sort axes.\r\n */\r\nfunction getInsertionIndex(\r\n  bounds: ElementBounds[],\r\n  primaryAxis: PrimaryDragReorderableAxis,\r\n  secondaryAxis: SecondaryDragReorderableAxis,\r\n  x: number,\r\n  y: number\r\n): number {\r\n  const groups = getGroups(bounds, primaryAxis, secondaryAxis);\r\n  if (groups.length === 0) {\r\n    return -1;\r\n  }\r\n\r\n  // Find the target group along the secondary axis\r\n  let targetGroup: ChildGroup | null = null;\r\n  if (secondaryAxis === \"none\") {\r\n    targetGroup = groups[0];\r\n  } else {\r\n    // Secondary axis is active, so we need to find which secondary axis group the mouse is over.\r\n    const horizontalSecondary = axisIsHorizontal(secondaryAxis);\r\n    for (const group of groups) {\r\n      if (horizontalSecondary) {\r\n        if (x < group.left || x > group.right) {\r\n          continue;\r\n        }\r\n      } else {\r\n        if (y < group.top || y > group.bottom) {\r\n          continue;\r\n        }\r\n      }\r\n\r\n      targetGroup = group;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (!targetGroup || !targetGroup.items.length) {\r\n    return -1;\r\n  }\r\n\r\n  let primaryPosition = axisIsHorizontal(primaryAxis) ? x : y;\r\n  for (let i = 0; i < targetGroup.items.length; i++) {\r\n    const item = targetGroup.items[i];\r\n\r\n    let itemPrimaryMin: number;\r\n    let itemPrimaryMax: number;\r\n\r\n    if (axisIsHorizontal(primaryAxis)) {\r\n      itemPrimaryMin = item.left;\r\n      itemPrimaryMax = item.right;\r\n    } else {\r\n      itemPrimaryMin = item.top;\r\n      itemPrimaryMax = item.bottom;\r\n    }\r\n\r\n    if (primaryPosition < itemPrimaryMin) {\r\n      // Mouse is past the previous item, not not yet at this item.\r\n      // Use this item's index\r\n      // TODO: Return which of the two the mouse is closer to.\r\n      return item.itemIndex;\r\n    }\r\n\r\n    if (primaryPosition < itemPrimaryMax) {\r\n      // Mouse is on this item\r\n      const center = itemPrimaryMin + (itemPrimaryMax - itemPrimaryMin) / 2;\r\n      if (primaryPosition < center) {\r\n        // Mouse is closer to the start of this item, so return the item index to place the drop before us.\r\n        return item.itemIndex;\r\n      } else {\r\n        // Mouse is closer to the end of this item, so return one after this index to place the drop after us.\r\n        return item.itemIndex + 1;\r\n      }\r\n    }\r\n\r\n    // Position was past this item, loop and search the next.\r\n  }\r\n\r\n  // If we didn't find an item by now, consider us past the last item on this axis.\r\n  return targetGroup.items[targetGroup.items.length - 1].itemIndex + 1;\r\n}\r\n\r\nfunction axisIsHorizontal(axis: PrimaryDragReorderableAxis) {\r\n  return axis === \"left-to-right\" || axis === \"right-to-left\";\r\n}\r\n\r\nfunction axisIsFlipped(axis: PrimaryDragReorderableAxis) {\r\n  return axis === \"right-to-left\" || axis === \"bottom-to-top\";\r\n}\r\n\r\nfunction isNotNull<T>(x: T | null | undefined): x is T {\r\n  return x != null;\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Card, CardContent } from \"@mui/material\";\r\n\r\nimport {\r\n  MapEntity,\r\n  PotionEffectMapEntity,\r\n  VortexMapEntity,\r\n} from \"@/services/potion-maps/types\";\r\n\r\nexport interface StepDetailsProps {\r\n  className?: string;\r\n  entity: MapEntity;\r\n}\r\n\r\nconst EntityDetails = ({ entity, className }: StepDetailsProps) => {\r\n  let content: React.ReactNode;\r\n  switch (entity.entityType) {\r\n    case \"PotionEffect\":\r\n      content = <PotionEffectMapEntityDetails entity={entity} />;\r\n      break;\r\n    case \"Vortex\":\r\n      content = <VortexMapEntityDetails entity={entity} />;\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  return (\r\n    <Card className={className} variant=\"outlined\">\r\n      <CardContent>{content}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EntityDetails;\r\n\r\nconst PotionEffectMapEntityDetails = ({\r\n  entity,\r\n}: {\r\n  entity: PotionEffectMapEntity;\r\n}) => {\r\n  return (\r\n    <div>\r\n      {entity.effect} ({entity.x}, {entity.y})\r\n    </div>\r\n  );\r\n};\r\n\r\nconst VortexMapEntityDetails = ({ entity }: { entity: VortexMapEntity }) => {\r\n  return (\r\n    <div>\r\n      Vortex ({entity.x}, {entity.y})\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Slider } from \"@mui/material\";\r\n\r\nexport interface IncDecSliderProps {\r\n  className?: string;\r\n  value: number;\r\n  /**\r\n   * The rate of change at maximum deflection in units per second.\r\n   */\r\n  rate: number;\r\n  onChange(value: number): void;\r\n  onChangeCommitted?(): void;\r\n}\r\n\r\nconst IncDecSlider = ({\r\n  className,\r\n  value,\r\n  rate,\r\n  onChange,\r\n  onChangeCommitted,\r\n}: IncDecSliderProps) => {\r\n  const [delta, setDelta] = React.useState(0);\r\n  React.useEffect(() => {\r\n    const token = setInterval(() => {\r\n      if (delta === 0) {\r\n        return;\r\n      }\r\n\r\n      const newValue = value + delta * rate * (1 / 10);\r\n      onChange(newValue);\r\n    }, 10);\r\n    return () => clearInterval(token);\r\n  }, [value, delta, rate]);\r\n\r\n  return (\r\n    <Slider\r\n      className={className}\r\n      min={-1}\r\n      max={1}\r\n      step={0.01}\r\n      value={delta}\r\n      onChange={(e, v) => {\r\n        setDelta(v as number);\r\n      }}\r\n      onChangeCommitted={() => {\r\n        setDelta(0);\r\n        if (onChangeCommitted) {\r\n          onChangeCommitted();\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default IncDecSlider;\r\n","import React from \"react\";\r\nimport { sortBy } from \"lodash\";\r\n\r\nimport {\r\n  MenuItem,\r\n  Select,\r\n  SelectProps,\r\n  SelectChangeEvent,\r\n  ListItemText,\r\n  Tooltip,\r\n  styled,\r\n} from \"@mui/material\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\n\r\nimport {\r\n  IngredientDescriptor,\r\n  IngredientId,\r\n} from \"@/services/ingredients/types\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\nimport { MAX_INGREDIENT_EXTENT, POTION_RADIUS } from \"@/game-settings\";\r\n\r\nexport interface IngredientSelectorProps\r\n  extends Omit<SelectProps<IngredientId | \"\">, \"value\" | \"onChange\"> {\r\n  value: IngredientId | null;\r\n  allowEmpty?: boolean;\r\n  onChange(value: IngredientId | null): void;\r\n  onMouseOverItem?(value: IngredientId | null): void;\r\n  onMouseOutItem?(): void;\r\n}\r\n\r\nconst StyledTooltip = styled(Tooltip)({\r\n  tooltipPlacementLeft: {\r\n    margin: \"10px 0\",\r\n  },\r\n});\r\n\r\nconst IngredientSelector = ({\r\n  value,\r\n  onChange,\r\n  allowEmpty = false,\r\n  onMouseOverItem,\r\n  onMouseOutItem,\r\n  ...props\r\n}: IngredientSelectorProps) => {\r\n  const registry = useDIDependency(IngredientRegistry);\r\n  const ingredients = registry.getIngredients();\r\n  const sortedIngredients = sortBy(\r\n    ingredients,\r\n    (ingredient) => ingredient.name\r\n  );\r\n\r\n  const onSelectChange = React.useCallback(\r\n    (e: SelectChangeEvent<IngredientId | \"\">) => {\r\n      const value = e.target.value;\r\n      if (value === \"\") {\r\n        onChange(null);\r\n      } else {\r\n        onChange(value as any);\r\n      }\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <Select<IngredientId | \"\">\r\n      {...props}\r\n      value={value ?? \"\"}\r\n      onChange={onSelectChange}\r\n    >\r\n      {allowEmpty && <MenuItem value=\"\"></MenuItem>}\r\n      {sortedIngredients.map((ingredient) => (\r\n        <MenuItem\r\n          key={ingredient.id}\r\n          value={ingredient.id}\r\n          onMouseOver={\r\n            onMouseOverItem ? () => onMouseOverItem(ingredient.id) : undefined\r\n          }\r\n          onMouseOut={onMouseOutItem}\r\n        >\r\n          <StyledTooltip\r\n            placement=\"left\"\r\n            title={\r\n              <svg\r\n                width=\"100px\"\r\n                height=\"100px\"\r\n                viewBox={`-${MAX_INGREDIENT_EXTENT} -${MAX_INGREDIENT_EXTENT} ${\r\n                  MAX_INGREDIENT_EXTENT * 2\r\n                } ${MAX_INGREDIENT_EXTENT * 2}`}\r\n                transform=\"scale(1, -1)\"\r\n              >\r\n                <circle cx={0} cy={0} r={POTION_RADIUS} fill=\"blue\" />\r\n                <path\r\n                  d={ingredient.path.reduce(\r\n                    (path, curve) =>\r\n                      path +\r\n                      `M ${curve.start.x} ${curve.start.y} C ${curve.p1.x},${curve.p1.y} ${curve.p2.x},${curve.p2.y} ${curve.end.x},${curve.end.y}`,\r\n                    \"M 0 0 \"\r\n                  )}\r\n                  stroke=\"black\"\r\n                  strokeWidth={0.2}\r\n                  fill=\"none\"\r\n                />\r\n              </svg>\r\n            }\r\n          >\r\n            <ListItemText>{ingredient.name}</ListItemText>\r\n          </StyledTooltip>\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default IngredientSelector;\r\n","import React from \"react\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { Vec2Zero } from \"@/vector2\";\r\nimport { degreesToRadians } from \"@/utils\";\r\nimport { SizeZero } from \"@/size\";\r\n\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { PotionMap } from \"@/services/potion-maps/PotionMap\";\r\nimport {\r\n  DangerZonePartMapEntity,\r\n  ExperienceBonusMapEntity,\r\n  MapEntity,\r\n  PotionEffectMapEntity,\r\n  VortexMapEntity,\r\n} from \"@/services/potion-maps/types\";\r\n\r\nimport { IMapViewModel } from \"./MapViewModel\";\r\n\r\nexport interface MapProps {\r\n  className?: string;\r\n  map: PotionMap;\r\n  viewModel: IMapViewModel;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  backgroundColor: \"#DABE99\",\r\n  overflow: \"hidden\",\r\n}));\r\n\r\nconst imgCache = new Map<string, HTMLImageElement>();\r\nfunction makeImg(src: string): HTMLImageElement {\r\n  if (imgCache.has(src)) {\r\n    return imgCache.get(src)!;\r\n  }\r\n\r\n  const img = new Image();\r\n  img.onerror = console.error.bind(console);\r\n  img.src = src;\r\n  imgCache.set(src, img);\r\n  return img;\r\n}\r\n\r\nconst MapSlotSrc = require(\"@/assets/MapSlot.png\");\r\n\r\nconst PotionMapComponent = ({ className, map, viewModel }: MapProps) => {\r\n  const { width, height } = useObservation(viewModel.viewportSize$) ?? SizeZero;\r\n  const offset = useObservation(viewModel.viewOffset$) ?? Vec2Zero;\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n\r\n  const [canvasRef, setCanvasRef] = React.useState<HTMLCanvasElement | null>(\r\n    null\r\n  );\r\n\r\n  const entities = map.entities;\r\n\r\n  React.useEffect(() => {\r\n    if (!canvasRef) {\r\n      return;\r\n    }\r\n\r\n    const id = requestAnimationFrame(() => {\r\n      const ctx = canvasRef.getContext(\"2d\")!;\r\n\r\n      ctx.clearRect(0, 0, width, height);\r\n\r\n      transformToMap(ctx, scale, offset.x, offset.y, () => {\r\n        // Map border\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = \"red\";\r\n        ctx.lineWidth = 0.2;\r\n        ctx.moveTo(-60, -60);\r\n        ctx.lineTo(-60, 60);\r\n        ctx.lineTo(60, 60);\r\n        ctx.lineTo(60, -60);\r\n        ctx.lineTo(-60, -60);\r\n        ctx.stroke();\r\n\r\n        // ctx.beginPath();\r\n        // ctx.fillStyle = \"blue\";\r\n        // ctx.arc(0, 0, POTION_RADIUS, 0, 2 * Math.PI);\r\n        // ctx.fill();\r\n\r\n        ctx.save();\r\n        const img = makeImg(MapSlotSrc);\r\n        const mapSlotW = img.width / 100;\r\n        const mapSlotH = img.height / 100;\r\n        ctx.scale(1, -1);\r\n        ctx.translate(-mapSlotW / 2, -mapSlotH / 2 - 0.19);\r\n        ctx.drawImage(img, 0, 0, mapSlotW, mapSlotH);\r\n        ctx.restore();\r\n\r\n        for (const entity of entities) {\r\n          renderEntity(ctx, entity);\r\n        }\r\n      });\r\n    });\r\n\r\n    return () => cancelAnimationFrame(id);\r\n  }, [canvasRef, entities, width, height, offset.x, offset.y, scale]);\r\n\r\n  return (\r\n    <Root className={className}>\r\n      <canvas ref={(ref) => setCanvasRef(ref)} width={width} height={height} />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PotionMapComponent;\r\n\r\nfunction transformToMap(\r\n  ctx: CanvasRenderingContext2D,\r\n  zoomFactor: number,\r\n  offsetX: number,\r\n  offsetY: number,\r\n  handler: () => void\r\n) {\r\n  ctx.save();\r\n  ctx.scale(zoomFactor, zoomFactor);\r\n\r\n  ctx.translate(MAP_EXTENT_RADIUS, MAP_EXTENT_RADIUS);\r\n\r\n  ctx.scale(1, -1);\r\n\r\n  // Offset is in map units, so apply after the inversion of y.\r\n  ctx.translate(offsetX, offsetY);\r\n\r\n  handler();\r\n  ctx.restore();\r\n}\r\n\r\nfunction renderEntity(ctx: CanvasRenderingContext2D, entity: MapEntity) {\r\n  switch (entity.entityType) {\r\n    case \"DangerZonePart\":\r\n      renderDangerZonePart(ctx, entity);\r\n      return;\r\n    case \"PotionEffect\":\r\n      renderPotionEffectEntity(ctx, entity);\r\n      return;\r\n    case \"ExperienceBonus\":\r\n      renderExperienceBonusEntity(ctx, entity);\r\n      return;\r\n    case \"Vortex\":\r\n      renderVortexEntity(ctx, entity);\r\n      return;\r\n  }\r\n}\r\n\r\nconst DangerZoneImageSrces: Record<string, string> = {\r\n  Bone1: require(\"@/assets/danger-zone-parts/Bone1.png\"),\r\n  Bone2: require(\"@/assets/danger-zone-parts/Bone2.png\"),\r\n  Fang1: require(\"@/assets/danger-zone-parts/Fang1.png\"),\r\n  Fang2: require(\"@/assets/danger-zone-parts/Fang2.png\"),\r\n  Skull1: require(\"@/assets/danger-zone-parts/Skull1.png\"),\r\n};\r\n\r\nfunction renderDangerZonePart(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: DangerZonePartMapEntity\r\n) {\r\n  ctx.save();\r\n\r\n  ctx.translate(entity.x, entity.y);\r\n  ctx.rotate(degreesToRadians(entity.angle));\r\n\r\n  // switch (entity.prefab) {\r\n  //   case \"Fang1\":\r\n  //     // 0.1226418, 0.400135\r\n  //     ctx.fillRect(-0.06, -0.02, 0.12, 0.4);\r\n  //     break;\r\n  //   case \"Fang2\":\r\n  //     // 0.1371522, 0.2445218\r\n  //     ctx.fillRect(-0.065, -0.12, 0.13, 0.24);\r\n  //     break;\r\n  //   case \"Bone1\":\r\n  //     // 0.1287996, 0.6983229\r\n  //     ctx.fillRect(-0.06, -0.345, 0.12, 0.69);\r\n  //     break;\r\n  //   case \"Bone2\":\r\n  //     // 0.1529365, 0.7249526\r\n  //     ctx.fillRect(-0.07, -0.36, 0.14, 0.72);\r\n  //     break;\r\n  //   case \"Skull1\":\r\n  //   default:\r\n  //     ctx.beginPath();\r\n  //     ctx.arc(0, 0, 0.24, 0, 2 * Math.PI);\r\n  //     ctx.fill();\r\n  //     break;\r\n  // }\r\n\r\n  const src = DangerZoneImageSrces[entity.prefab];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 130;\r\n    const h = img.height / 130;\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n\r\nconst PotionEffectImageSrces: Record<string, string> = {\r\n  Acid: require(\"@/assets/potion-effects/Acid.webp\"),\r\n  Berserker: require(\"@/assets/potion-effects/Berserker.webp\"),\r\n  Bounce: require(\"@/assets/potion-effects/Bounce.webp\"),\r\n  Charm: require(\"@/assets/potion-effects/Charm.webp\"),\r\n  Crop: require(\"@/assets/potion-effects/Crop.webp\"),\r\n  Explosion: require(\"@/assets/potion-effects/Explosion.webp\"),\r\n  Fire: require(\"@/assets/potion-effects/Fire.webp\"),\r\n  Fly: require(\"@/assets/potion-effects/Fly.webp\"),\r\n  Frost: require(\"@/assets/potion-effects/Frost.webp\"),\r\n  Growth: require(\"@/assets/potion-effects/Growth.webp\"),\r\n  Hallucinations: require(\"@/assets/potion-effects/Hallucinations.webp\"),\r\n  Healing: require(\"@/assets/potion-effects/Healing.webp\"),\r\n  Invisibility: require(\"@/assets/potion-effects/Invisibility.webp\"),\r\n  Libido: require(\"@/assets/potion-effects/Libido.webp\"),\r\n  Light: require(\"@/assets/potion-effects/Light.webp\"),\r\n  Lightning: require(\"@/assets/potion-effects/Lightning.webp\"),\r\n  Mana: require(\"@/assets/potion-effects/Mana.webp\"),\r\n  Necromancy: require(\"@/assets/potion-effects/Necromancy.webp\"),\r\n  Poison: require(\"@/assets/potion-effects/Poison.webp\"),\r\n  SharpVision: require(\"@/assets/potion-effects/SharpVision.webp\"),\r\n  Sleep: require(\"@/assets/potion-effects/Sleep.webp\"),\r\n  SlowDown: require(\"@/assets/potion-effects/SlowDown.webp\"),\r\n  StoneSkin: require(\"@/assets/potion-effects/StoneSkin.webp\"),\r\n};\r\n\r\nconst EffectSlotSrc = require(\"@/assets/EffectSlot.png\");\r\nfunction renderPotionEffectEntity(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: PotionEffectMapEntity\r\n) {\r\n  // Line from effect to origin\r\n  ctx.save();\r\n  var grad = ctx.createLinearGradient(entity.x, entity.y, 0, 0);\r\n  grad.addColorStop(0, \"#D2AA7B\");\r\n  grad.addColorStop(1, \"transparent\");\r\n  ctx.strokeStyle = grad;\r\n  ctx.lineWidth = 0.05;\r\n  ctx.beginPath();\r\n  ctx.moveTo(entity.x, entity.y);\r\n  ctx.lineTo(0, 0);\r\n  ctx.stroke();\r\n  ctx.restore();\r\n\r\n  // Effect artwork\r\n  ctx.save();\r\n\r\n  ctx.translate(entity.x, entity.y);\r\n\r\n  // ctx.beginPath();\r\n  // ctx.fillStyle = \"red\";\r\n  // ctx.arc(0, 0, POTION_RADIUS, 0, 2 * Math.PI);\r\n  // ctx.fill();\r\n\r\n  const container = makeImg(EffectSlotSrc);\r\n  const containerW = container.width / 100;\r\n  const containerH = container.height / 100;\r\n  ctx.save();\r\n  ctx.scale(1, -1);\r\n  ctx.translate(-containerW / 2, -containerH / 2 - 0.2);\r\n  ctx.drawImage(container, 0, 0, containerW, containerH);\r\n  ctx.restore();\r\n\r\n  const src = PotionEffectImageSrces[entity.effect];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 40;\r\n    const h = img.height / 40;\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n\r\nconst ExperienceBonusImagesSrc: Record<string, string> = {\r\n  Little: require(\"@/assets/experience-bonus/xp-small.png\"),\r\n  Medium: require(\"@/assets/experience-bonus/xp-medium.png\"),\r\n  Large: require(\"@/assets/experience-bonus/xp-large.png\"),\r\n};\r\n\r\nfunction renderExperienceBonusEntity(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: ExperienceBonusMapEntity\r\n) {\r\n  ctx.save();\r\n  ctx.translate(entity.x, entity.y);\r\n\r\n  const src = ExperienceBonusImagesSrc[entity.prefab];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 200;\r\n    const h = img.height / 200;\r\n    ctx.save();\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n    ctx.restore();\r\n  }\r\n\r\n  // ctx.beginPath();\r\n  // ctx.fillStyle = \"green\";\r\n  // ctx.arc(0, 0, 0.3, 0, 2 * Math.PI);\r\n  // ctx.fill();\r\n\r\n  ctx.restore();\r\n}\r\n\r\nconst VortexImagesSrc: Record<string, string> = {\r\n  Large: require(\"@/assets/vortexes/Vortex Large Idle.png\"),\r\n  Medium: require(\"@/assets/vortexes/Vortex Medium Idle.png\"),\r\n};\r\n\r\nfunction renderVortexEntity(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: VortexMapEntity\r\n) {\r\n  ctx.save();\r\n  ctx.translate(entity.x, entity.y);\r\n\r\n  // let radius = 0;\r\n  // switch (entity.prefab) {\r\n  //   case \"Large\":\r\n  //     radius = 1.65;\r\n  //     break;\r\n  //   case \"Medium\":\r\n  //     radius = 1.25;\r\n  //     break;\r\n  // }\r\n\r\n  // if (radius > 0) {\r\n  //   ctx.beginPath();\r\n  //   ctx.fillStyle = \"purple\";\r\n  //   ctx.arc(0, 0, radius, 0, 2 * Math.PI);\r\n  //   ctx.fill();\r\n  // }\r\n\r\n  // const backgroundSrc = VortexBackgroundImagesSrc[entity.prefab];\r\n  // if (backgroundSrc) {\r\n  //   const img = makeImg(backgroundSrc);\r\n  //   const w = img.width / 150;\r\n  //   const h = img.height / 150;\r\n  //   ctx.save();\r\n  //   ctx.scale(1, -1);\r\n  //   ctx.translate(-w / 2, -h / 2);\r\n  //   ctx.drawImage(img, 0, 0, w, h);\r\n  //   ctx.restore();\r\n  // }\r\n\r\n  const src = VortexImagesSrc[entity.prefab];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 100;\r\n    const h = img.height / 100;\r\n    ctx.save();\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n    ctx.restore();\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n","import PotionMap from \"./Map\";\r\nexport default PotionMap;\r\n","import React from \"react\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nexport interface OverlayProps {\r\n  position: \"top-left\" | \"top\" | \"top-right\";\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  position: \"absolute\",\r\n  \"&.top-left\": {\r\n    top: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n  },\r\n  \"&.top\": {\r\n    top: theme.spacing(2),\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  \"&.top-right\": {\r\n    top: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Overlay = ({ position, children }: OverlayProps) => {\r\n  return <Root className={position}>{children}</Root>;\r\n};\r\n\r\nexport default Overlay;\r\n","import { BehaviorSubject, combineLatest, map, Observable } from \"rxjs\";\r\n\r\nimport { Size, SizeZero } from \"@/size\";\r\nimport { vec2Add, vec2Subtract, Vec2Zero, Vector2 } from \"@/vector2\";\r\n\r\nimport { IPanZoomViewportViewModel } from \"./PanZoomViewportViewModel\";\r\n\r\nexport class CoordinateMappingViewportViewModel\r\n  implements IPanZoomViewportViewModel\r\n{\r\n  private readonly _viewportSize$ = new BehaviorSubject<Size>(SizeZero);\r\n\r\n  /**\r\n   * The offset of the map on the viewport, in map units, unscaled.\r\n   */\r\n  private readonly _viewOffset$ = new BehaviorSubject<Vector2>(Vec2Zero);\r\n  private readonly _viewScale$ = new BehaviorSubject<number>(1);\r\n\r\n  private readonly _mouseClientPosition$ = new BehaviorSubject<Vector2 | null>(\r\n    null\r\n  );\r\n  private readonly _mouseWorldPosition$: Observable<Vector2 | null>;\r\n\r\n  get viewportSize$(): Observable<Size> {\r\n    return this._viewportSize$;\r\n  }\r\n\r\n  get viewOffset$(): Observable<Vector2> {\r\n    return this._viewOffset$;\r\n  }\r\n  get viewScale$(): Observable<number> {\r\n    return this._viewScale$;\r\n  }\r\n\r\n  get mouseWorldPosition$(): Observable<Vector2 | null> {\r\n    return this._mouseWorldPosition$;\r\n  }\r\n\r\n  constructor(\r\n    private readonly _initialSize: Size,\r\n    private readonly _originOffset: Vector2,\r\n    private readonly _unitScale: Vector2\r\n  ) {\r\n    this._viewportSize$.next(_initialSize);\r\n    this._mouseWorldPosition$ = combineLatest([\r\n      this._mouseClientPosition$,\r\n      this._viewOffset$,\r\n      this._viewScale$,\r\n    ]).pipe(\r\n      map(([clientPos]) => (clientPos ? this.clientToWorld(clientPos) : null))\r\n    );\r\n  }\r\n\r\n  zoom(delta: number, on: Vector2 | null = null) {\r\n    const prevWorld = on ? this.clientToWorld(on) : Vec2Zero;\r\n    const pzoom = this._viewScale$.value;\r\n    const zoom = pzoom * delta;\r\n    this._viewScale$.next(zoom);\r\n    if (on) {\r\n      const world = this.clientToWorld(on);\r\n      const delta = vec2Subtract(world, prevWorld);\r\n      this._viewOffset$.next(vec2Add(this._viewOffset$.value, delta));\r\n    }\r\n  }\r\n\r\n  setZoom(zoom: number) {\r\n    const delta = zoom / this._viewScale$.value;\r\n    const { width, height } = this._viewportSize$.value;\r\n    this.zoom(delta, { x: width / 2, y: height / 2 });\r\n  }\r\n\r\n  pan(dx: number, dy: number, applyZoom = false) {\r\n    const z = applyZoom ? 1 / this._viewScale$.value : 1;\r\n    this._viewOffset$.next(\r\n      vec2Add(this._viewOffset$.value, { x: dx * z, y: dy * z })\r\n    );\r\n  }\r\n\r\n  onMouseMove(clientX: number, clientY: number): void {\r\n    this._mouseClientPosition$.next({ x: clientX, y: clientY });\r\n  }\r\n\r\n  onMouseOut() {\r\n    this._mouseClientPosition$.next(null);\r\n  }\r\n\r\n  onViewportResized(width: number, height: number): void {\r\n    let prevSize = this._viewportSize$.value;\r\n    if (prevSize.width === 0 || prevSize.height === 0) {\r\n      prevSize = this._initialSize;\r\n    }\r\n\r\n    this._viewportSize$.next({ width, height });\r\n\r\n    if (width === 0 || height === 0) {\r\n      return;\r\n    }\r\n\r\n    let scaleFactor = 1;\r\n    if (width < height) {\r\n      scaleFactor = width / prevSize.width;\r\n    } else {\r\n      scaleFactor = height / prevSize.height;\r\n    }\r\n\r\n    // TODO: Keep the view centered.\r\n    // const offset: Point = {\r\n    //   x: (prevSize.width - width) / 2 / this._viewScale$.value,\r\n    //   y: (prevSize.height - height) / 2 / this._viewScale$.value,\r\n    // };\r\n    this._viewScale$.next(this._viewScale$.value * scaleFactor);\r\n    // this._viewOffset$.next(pointAdd(this._viewOffset$.value, offset));\r\n  }\r\n\r\n  clientToWorld(p: Vector2): Vector2 {\r\n    const zoomFactor = this._viewScale$.value;\r\n    const { x: offsetX, y: offsetY } = this._viewOffset$.value;\r\n\r\n    // offset is in world coords.\r\n    // We need to add offsetY instead of subtract as y is flipped in world coords when compared to screen.\r\n    return {\r\n      x:\r\n        (p.x / zoomFactor - this._originOffset.x - offsetX) * this._unitScale.x,\r\n      y:\r\n        (p.y / zoomFactor - this._originOffset.y + offsetY) * this._unitScale.y,\r\n    };\r\n  }\r\n\r\n  worldToClient(p: Vector2): Vector2 {\r\n    const zoomFactor = this._viewScale$.value;\r\n    const { x: offsetX, y: offsetY } = this._viewOffset$.value;\r\n\r\n    // Why the hell is this opposite of crucible-web even with the same client to world coord function?\r\n    return {\r\n      x:\r\n        (this._unitScale.x / p.x + this._originOffset.x + offsetX) * zoomFactor,\r\n      y:\r\n        (this._unitScale.y / p.y + this._originOffset.y + offsetY) * zoomFactor,\r\n    };\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { getModifiers } from \"@/modifier-keys\";\r\nimport { Vector2, vec2Subtract, Vec2Zero } from \"@/vector2\";\r\n\r\nimport { useComponentBounds } from \"@/hooks/component-bounds\";\r\nimport { useNativeEvent } from \"@/hooks/native-event\";\r\n\r\nimport { IPanZoomViewportViewModel } from \"./PanZoomViewportViewModel\";\r\n\r\nexport interface PanZoomHandlerProps {\r\n  className?: string;\r\n  viewModel: IPanZoomViewportViewModel;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ZOOM_FACTOR = 1.15;\r\nexport const PAN_FACTOR = 0.15;\r\n\r\nconst Root = styled(\"div\")({\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n});\r\n\r\nconst PanZoomViewport = ({\r\n  className,\r\n  viewModel,\r\n  children,\r\n}: PanZoomHandlerProps) => {\r\n  const containerRef = React.useRef<HTMLDivElement | null>(null);\r\n  const containerBounds = useComponentBounds(containerRef);\r\n  const [dragPointer, setDragPointer] = React.useState<number | null>(null);\r\n  const [mouseLastPos, setMouseLastPos] = React.useState<Vector2>(Vec2Zero);\r\n\r\n  React.useLayoutEffect(() => {\r\n    viewModel.onViewportResized(containerBounds.width, containerBounds.height);\r\n  }, [containerBounds.width, containerBounds.height]);\r\n\r\n  const onWheel = React.useCallback((e: WheelEvent) => {\r\n    const target = containerRef.current;\r\n    if (!target || e.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const modifiers = getModifiers(e);\r\n\r\n    if (modifiers.ctrlMetaKey) {\r\n      viewModel.zoom(e.deltaY < 0 ? ZOOM_FACTOR : 1 / ZOOM_FACTOR, {\r\n        x: e.clientX,\r\n        y: e.clientY,\r\n      });\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else if (modifiers.shiftKey) {\r\n      viewModel.pan(-e.deltaY * PAN_FACTOR, 0, true);\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else {\r\n      viewModel.pan(0, e.deltaY * PAN_FACTOR, true);\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }, []);\r\n\r\n  const onPointerDown = React.useCallback(\r\n    (e: React.PointerEvent<HTMLDivElement>) => {\r\n      if (dragPointer != null) {\r\n        return;\r\n      }\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n      setDragPointer(e.pointerId);\r\n      e.currentTarget.setPointerCapture(e.pointerId);\r\n      setMouseLastPos({ x: e.clientX, y: e.clientY });\r\n    },\r\n    [dragPointer]\r\n  );\r\n\r\n  const onPointerMove = React.useCallback(\r\n    (e: React.PointerEvent<HTMLDivElement>) => {\r\n      if (dragPointer == null) {\r\n        return;\r\n      }\r\n      const p = { x: e.clientX, y: e.clientY };\r\n      const delta = vec2Subtract(p, mouseLastPos);\r\n      setMouseLastPos(p);\r\n      // FIXME: Panning is miscalculated.  Mouse drifts from grab position.\r\n      viewModel.pan(delta.x, -delta.y, true);\r\n    },\r\n    [mouseLastPos, viewModel]\r\n  );\r\n\r\n  const onPointerUp = React.useCallback(\r\n    (e: React.PointerEvent) => {\r\n      if (e.pointerId != dragPointer) {\r\n        return;\r\n      }\r\n      setDragPointer(null);\r\n      setMouseLastPos(Vec2Zero);\r\n      e.currentTarget.releasePointerCapture(e.pointerId);\r\n    },\r\n    [dragPointer]\r\n  );\r\n\r\n  const onMouseOut = React.useCallback(\r\n    () => viewModel.onMouseOut(),\r\n    [viewModel]\r\n  );\r\n\r\n  // React listens to the root listener for all events,\r\n  //  and chrome assumes the root event listener for mouse events\r\n  //  never wants to preventDefault.\r\n  // We need to take a local event listener and mark it as not passive.\r\n  // https://github.com/facebook/react/issues/14856\r\n  useNativeEvent(containerRef, \"wheel\", onWheel, { passive: false });\r\n\r\n  return (\r\n    <Root\r\n      className={className}\r\n      ref={containerRef}\r\n      onMouseMove={(e) => viewModel.onMouseMove(e.clientX, e.clientY)}\r\n      onPointerDown={onPointerDown}\r\n      onPointerMove={onPointerMove}\r\n      onPointerUp={onPointerUp}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      {children}\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PanZoomViewport;\r\n","import PanZoomViewport from \"./PanZoomViewport\";\r\nexport default PanZoomViewport;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  styled,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Slider,\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { DragHandle } from \"@mui/icons-material\";\r\nimport { Add as AddIcon, Delete as DeleteIcon } from \"@mui/icons-material\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport {\r\n  PlotBuilderItem,\r\n  SetPositionPlotBuilderItem,\r\n  AddIngredientPlotBuilderItem,\r\n  PourSolventPlotBuilderItem,\r\n  StirCauldronPlotBuilderItem,\r\n  HeatVortexPlotBuilderItem,\r\n  PlotBuilderItemCollection,\r\n  VoidSaltPlotBuilderItem,\r\n} from \"@/services/plotter/builder\";\r\nimport { IngredientId } from \"@/services/ingredients/types\";\r\n\r\nimport DragReoderable from \"./DragReorderable\";\r\nimport IngredientSelector from \"./IngredientSelector\";\r\nimport IncDecSlider from \"./IncDecSlider\";\r\n\r\nexport interface PlotBuilderItemsListProps {\r\n  className?: string;\r\n  plotBuilderItemCollection: PlotBuilderItemCollection;\r\n  highlightItem?: PlotBuilderItem | null;\r\n  enableCheats?: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  overflow: \"auto\",\r\n  boxSixing: \"border-box\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  \"& .list\": {\r\n    listStyle: \"none\",\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  \"& .list-item-container\": {\r\n    position: \"relative\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  \"& .list-item-drag-handle\": {\r\n    position: \"absolute\",\r\n    top: theme.spacing(1),\r\n    left: theme.spacing(1),\r\n  },\r\n  \"& .list-item\": {\r\n    position: \"relative\",\r\n  },\r\n  \"& .list-item-content\": {\r\n    paddingTop: theme.spacing(4),\r\n  },\r\n  \"& .list-item .delete-button\": {\r\n    position: \"absolute\",\r\n    top: \"5px\",\r\n    right: \"15px\",\r\n  },\r\n  \"& .drop-indicator\": {\r\n    width: \"100%\",\r\n    height: 0,\r\n    borderBottom: \"4px solid black\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  \"& .buttons\": {\r\n    alignSelf: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst PlotBuilderItemsList = ({\r\n  className,\r\n  plotBuilderItemCollection,\r\n  highlightItem,\r\n  enableCheats,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotBuilderItemsListProps) => {\r\n  const items =\r\n    useObservation(plotBuilderItemCollection.plotBuilderItems$) ?? [];\r\n  return (\r\n    <Root className={className}>\r\n      <ul className=\"list\">\r\n        <DragReoderable\r\n          values={items}\r\n          primaryAxis=\"top-to-bottom\"\r\n          dropIndicator={<div className=\"drop-indicator\" />}\r\n          onReorder={(_, p) => {\r\n            plotBuilderItemCollection.moveItem(items[p.fromIndex], p.toIndex);\r\n          }}\r\n        >\r\n          {(value, params, getRootProps, getDragHandleProps) => (\r\n            <div {...getRootProps()} className=\"list-item-container\">\r\n              <PlotListItem\r\n                item={value}\r\n                highlight={value === highlightItem}\r\n                onMouseOver={onMouseOver}\r\n                onMouseOut={onMouseOut}\r\n              />\r\n              <div className=\"list-item-drag-handle\" {...getDragHandleProps()}>\r\n                <DragHandle />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </DragReoderable>\r\n      </ul>\r\n      <div className=\"buttons\">\r\n        <Button\r\n          color=\"primary\"\r\n          onClick={() => plotBuilderItemCollection.addIngredient()}\r\n        >\r\n          <AddIcon /> Add Ingredient\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          onClick={() => plotBuilderItemCollection.addStirCauldron()}\r\n        >\r\n          <AddIcon /> Stir Cauldron\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          onClick={() => plotBuilderItemCollection.addPourSolvent()}\r\n        >\r\n          <AddIcon /> Pour Solvent\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          onClick={() => plotBuilderItemCollection.addHeatVortex()}\r\n        >\r\n          <AddIcon /> Heat Vortex\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          onClick={() => plotBuilderItemCollection.addVoidSalt()}\r\n        >\r\n          <AddIcon /> Add Void Salt\r\n        </Button>\r\n        {enableCheats && (\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={() => plotBuilderItemCollection.addSetPosition()}\r\n          >\r\n            <AddIcon /> Add Teleport\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PlotBuilderItemsList;\r\n\r\ninterface PlotListItemProps {\r\n  item: PlotBuilderItem;\r\n  highlight?: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst PlotListItem = React.memo(\r\n  React.forwardRef<HTMLDivElement, PlotListItemProps>(\r\n    ({ item, highlight = false, onMouseOver, onMouseOut }, ref) => {\r\n      if (item instanceof AddIngredientPlotBuilderItem) {\r\n        return (\r\n          <AddIngredientPlotListItem\r\n            ref={ref}\r\n            item={item}\r\n            highlight={highlight}\r\n            onMouseOver={onMouseOver}\r\n            onMouseOut={onMouseOut}\r\n          />\r\n        );\r\n      } else if (item instanceof StirCauldronPlotBuilderItem) {\r\n        return (\r\n          <StirCauldronPlotListItem\r\n            ref={ref}\r\n            item={item}\r\n            highlight={highlight}\r\n            onMouseOver={onMouseOver}\r\n            onMouseOut={onMouseOut}\r\n          />\r\n        );\r\n      } else if (item instanceof PourSolventPlotBuilderItem) {\r\n        return (\r\n          <PourSolventPlotListItem\r\n            ref={ref}\r\n            item={item}\r\n            highlight={highlight}\r\n            onMouseOver={onMouseOver}\r\n            onMouseOut={onMouseOut}\r\n          />\r\n        );\r\n      } else if (item instanceof HeatVortexPlotBuilderItem) {\r\n        return (\r\n          <HeatVortexPlotListItem\r\n            ref={ref}\r\n            item={item}\r\n            highlight={highlight}\r\n            onMouseOver={onMouseOver}\r\n            onMouseOut={onMouseOut}\r\n          />\r\n        );\r\n      } else if (item instanceof VoidSaltPlotBuilderItem) {\r\n        return (\r\n          <AddVoidSaltPlotListItem\r\n            ref={ref}\r\n            item={item}\r\n            highlight={highlight}\r\n            onMouseOver={onMouseOver}\r\n            onMouseOut={onMouseOut}\r\n          />\r\n        );\r\n      } else if (item instanceof SetPositionPlotBuilderItem) {\r\n        return (\r\n          <SetPositionPlotListItem\r\n            ref={ref}\r\n            item={item}\r\n            highlight={highlight}\r\n            onMouseOver={onMouseOver}\r\n            onMouseOut={onMouseOut}\r\n          />\r\n        );\r\n      }\r\n      return <div ref={ref}>Unknown PlotItem {item.constructor.name}</div>;\r\n    }\r\n  )\r\n);\r\n\r\ninterface PlotListItemCardProps {\r\n  item: PlotBuilderItem;\r\n  highlight: boolean;\r\n  children: React.ReactNode;\r\n  onMouseOver?(item: PlotBuilderItem): void;\r\n  onMouseOut?(): void;\r\n}\r\n\r\nconst PlotListItemCard = React.forwardRef<\r\n  HTMLDivElement,\r\n  PlotListItemCardProps\r\n>(({ item, highlight, children, onMouseOver, onMouseOut }, ref) => {\r\n  const valid = useObservation(item.isValid$) ?? false;\r\n  const onCardMouseOver = React.useCallback(() => {\r\n    if (onMouseOver) {\r\n      onMouseOver(item);\r\n    }\r\n  }, [onMouseOver, item]);\r\n  const onDeleteClick = React.useCallback(() => item.delete(), [item]);\r\n  return (\r\n    <Card\r\n      ref={ref}\r\n      className=\"list-item\"\r\n      style={{\r\n        backgroundColor:\r\n          (!valid && \"salmon\") || (highlight && \"lightblue\") || undefined,\r\n      }}\r\n      onMouseOver={onCardMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <IconButton\r\n        size=\"small\"\r\n        className=\"delete-button\"\r\n        onClick={onDeleteClick}\r\n      >\r\n        <DeleteIcon />\r\n      </IconButton>\r\n      <CardContent className=\"list-item-content\">{children}</CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\ninterface AddIngredientPlotListItemProps {\r\n  item: AddIngredientPlotBuilderItem;\r\n  highlight: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst AddIngredientPlotListItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  AddIngredientPlotListItemProps\r\n>(({ item, highlight, onMouseOver, onMouseOut }, ref) => {\r\n  const savedIngredientRef = React.useRef<IngredientId | null>(null);\r\n\r\n  // Need both state (for rerender on change) and ref (to check it in a callback)\r\n  const [isPreviewing, setIsPreviewing] = React.useState<boolean>(false);\r\n  const isPreviewingRef = React.useRef(false);\r\n\r\n  // Note: This is from when a transition was used to show the preview, we wanted\r\n  // the slider to update live while the preview was not.  However, we no longer use\r\n  // transitions as the system is now fast enough to deal without it.\r\n  const [localGrind, setLocalGrind] = React.useState<number | null>(null);\r\n\r\n  const [inputGrindPercent, setInputGrindPercent] = React.useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const ingredientId = useObservation(item.ingredientId$) ?? null;\r\n  const grindPercent = useObservation(item.grindPercent$) ?? 0;\r\n\r\n  const onIngredientSelectorOpen = React.useCallback(() => {\r\n    savedIngredientRef.current = item.ingredientId;\r\n    setIsPreviewing(true);\r\n    isPreviewingRef.current = true;\r\n  }, []);\r\n\r\n  const onIngredientSelectorMouseOverItem = React.useCallback(\r\n    (value: IngredientId) => {\r\n      if (!isPreviewing) {\r\n        return;\r\n      }\r\n      item.setIngredient(value);\r\n    },\r\n    [item, isPreviewing]\r\n  );\r\n\r\n  const onIngredientSelectorChange = React.useCallback(\r\n    (value: IngredientId | null) => {\r\n      setIsPreviewing(false);\r\n      isPreviewingRef.current = false;\r\n      item.setIngredient(value);\r\n    },\r\n    [item]\r\n  );\r\n\r\n  const onIngredientSelectorClose = React.useCallback(() => {\r\n    if (isPreviewingRef.current) {\r\n      item.setIngredient(savedIngredientRef.current);\r\n      setIsPreviewing(false);\r\n      isPreviewingRef.current = false;\r\n    }\r\n    savedIngredientRef.current = null;\r\n  }, [item]);\r\n\r\n  const onGrindPercentTextChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let asNumber: number | null = Number(e.target.value) / 100;\r\n      if (isNaN(asNumber) || asNumber < 0 || asNumber > 1) {\r\n        asNumber = null;\r\n      }\r\n\r\n      setInputGrindPercent(e.target.value);\r\n      item.setGrindPercent(asNumber ?? 0);\r\n    },\r\n    [item]\r\n  );\r\n\r\n  const onGrindPercentBlur = React.useCallback(() => {\r\n    setInputGrindPercent(null);\r\n  }, []);\r\n\r\n  const onSliderChange = React.useCallback(\r\n    (_: any, value: number | number[]) => {\r\n      item.setGrindPercent(value as number);\r\n      setLocalGrind(value as number);\r\n    },\r\n    [item]\r\n  );\r\n\r\n  const onSliderChangeCommitted = React.useCallback(\r\n    (_: any, value: number | number[]) => {\r\n      item.setGrindPercent(value as number);\r\n      setLocalGrind(null);\r\n    },\r\n    [item]\r\n  );\r\n\r\n  // We change the ingredientId during mouse over for live feedback, but this changes the ingredient id we wish to display.\r\n  // We need to pin the previously selected id so that IngredientSelector works properly during the selection process.\r\n  const displayIngredientId = isPreviewing\r\n    ? savedIngredientRef.current\r\n    : ingredientId;\r\n  return (\r\n    <PlotListItemCard\r\n      ref={ref}\r\n      item={item}\r\n      highlight={highlight}\r\n      onMouseOver={localGrind != null ? undefined : onMouseOver}\r\n      onMouseOut={localGrind != null ? undefined : onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Ingredient</Typography>\r\n      </div>\r\n      <IngredientSelector\r\n        fullWidth\r\n        value={displayIngredientId}\r\n        allowEmpty={displayIngredientId == null}\r\n        // Store the last ingredient when we open, so we can return to it after closing without making a selection.\r\n        onOpen={onIngredientSelectorOpen}\r\n        // Change the ingredient id with the mouse for a live preview.\r\n        onMouseOverItem={onIngredientSelectorMouseOverItem}\r\n        // Change our saved ingredient when the input is committed.  We will restore it when the input closes after the change.\r\n        onChange={onIngredientSelectorChange}\r\n        onClose={onIngredientSelectorClose}\r\n      />\r\n      <Grid paddingTop={1}>\r\n        <TextField\r\n          label=\"Grind Percent\"\r\n          value={inputGrindPercent ?? grindPercent * 100}\r\n          onChange={onGrindPercentTextChange}\r\n          onBlur={onGrindPercentBlur}\r\n        />\r\n        <Slider\r\n          value={localGrind ?? grindPercent}\r\n          onChange={onSliderChange}\r\n          onChangeCommitted={onSliderChangeCommitted}\r\n          min={0}\r\n          max={1}\r\n          step={0.001}\r\n        />\r\n      </Grid>\r\n    </PlotListItemCard>\r\n  );\r\n});\r\n\r\ninterface StirCauldronPlotListItemProps {\r\n  item: StirCauldronPlotBuilderItem;\r\n  highlight: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\n\r\nconst StirCauldronPlotListItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  StirCauldronPlotListItemProps\r\n>(({ item, highlight, onMouseOver, onMouseOut }, ref) => {\r\n  const distance = useObservation(item.distance$);\r\n  const [inputDistance, setInputDistance] = React.useState<string | null>(null);\r\n\r\n  const onTextFieldChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let asNumber: number | null = Number(e.target.value);\r\n      if (isNaN(asNumber)) {\r\n        asNumber = null;\r\n      }\r\n\r\n      setInputDistance(e.target.value);\r\n      item.setDistance(asNumber);\r\n    },\r\n    [item]\r\n  );\r\n  const onTextFieldBlur = React.useCallback(() => {\r\n    setInputDistance(null);\r\n  }, []);\r\n  const onDistanceChange = React.useCallback(\r\n    (value: number) => {\r\n      item.setDistance(Math.max(0, Number(value.toFixed(3))));\r\n    },\r\n    [item]\r\n  );\r\n\r\n  return (\r\n    <PlotListItemCard\r\n      item={item}\r\n      highlight={highlight}\r\n      onMouseOver={onMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Stir Cauldron</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"Distance\"\r\n        value={inputDistance ?? distance ?? \"\"}\r\n        onChange={onTextFieldChange}\r\n        onBlur={onTextFieldBlur}\r\n      />\r\n      <IncDecSlider\r\n        value={distance ?? 0}\r\n        rate={10}\r\n        onChange={onDistanceChange}\r\n      />\r\n    </PlotListItemCard>\r\n  );\r\n});\r\n\r\ninterface PourSolventPlotListItemProps {\r\n  item: PourSolventPlotBuilderItem;\r\n  highlight: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst PourSolventPlotListItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  PourSolventPlotListItemProps\r\n>(({ item, highlight, onMouseOver, onMouseOut }, ref) => {\r\n  const distance = useObservation(item.distance$);\r\n  const [inputDistance, setInputDistance] = React.useState<string | null>(null);\r\n\r\n  const onTextFieldChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let asNumber: number | null = Number(e.target.value);\r\n      if (isNaN(asNumber)) {\r\n        asNumber = null;\r\n      }\r\n\r\n      setInputDistance(e.target.value);\r\n      item.setDistance(asNumber);\r\n    },\r\n    [item]\r\n  );\r\n  const onTextFieldBlur = React.useCallback(() => {\r\n    setInputDistance(null);\r\n  }, []);\r\n  const onDistanceChange = React.useCallback(\r\n    (value: number) => {\r\n      item.setDistance(Math.max(0, Number(value.toFixed(3))));\r\n    },\r\n    [item]\r\n  );\r\n\r\n  return (\r\n    <PlotListItemCard\r\n      ref={ref}\r\n      item={item}\r\n      highlight={highlight}\r\n      onMouseOver={onMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Pour Solvent</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"Distance\"\r\n        value={inputDistance ?? distance ?? \"\"}\r\n        onChange={onTextFieldChange}\r\n        onBlur={onTextFieldBlur}\r\n      />\r\n      <IncDecSlider\r\n        value={distance ?? 0}\r\n        rate={10}\r\n        onChange={onDistanceChange}\r\n      />\r\n    </PlotListItemCard>\r\n  );\r\n});\r\n\r\ninterface HeatVortexPlotListItemProps {\r\n  item: HeatVortexPlotBuilderItem;\r\n  highlight: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst HeatVortexPlotListItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  HeatVortexPlotListItemProps\r\n>(({ item, highlight, onMouseOver, onMouseOut }, ref) => {\r\n  const distance = useObservation(item.distance$);\r\n  const [inputDistance, setInputDistance] = React.useState<string | null>(null);\r\n\r\n  const onTextFieldChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let asNumber: number | null = Number(e.target.value);\r\n      if (isNaN(asNumber)) {\r\n        asNumber = null;\r\n      }\r\n\r\n      setInputDistance(e.target.value);\r\n      item.setDistance(asNumber);\r\n    },\r\n    [item]\r\n  );\r\n  const onTextFieldBlur = React.useCallback(() => {\r\n    setInputDistance(null);\r\n  }, []);\r\n  const onDistanceChange = React.useCallback(\r\n    (value: number) => {\r\n      item.setDistance(Math.max(0, Number(value.toFixed(3))));\r\n    },\r\n    [item]\r\n  );\r\n\r\n  return (\r\n    <PlotListItemCard\r\n      ref={ref}\r\n      item={item}\r\n      highlight={highlight}\r\n      onMouseOver={onMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Heat Vortex</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"Distance\"\r\n        value={inputDistance ?? distance ?? \"\"}\r\n        onChange={onTextFieldChange}\r\n        onBlur={onTextFieldBlur}\r\n      />\r\n      <IncDecSlider\r\n        value={distance ?? 0}\r\n        rate={10}\r\n        onChange={onDistanceChange}\r\n      />\r\n    </PlotListItemCard>\r\n  );\r\n});\r\n\r\ninterface AddVoidSaltPlotListItemProps {\r\n  item: VoidSaltPlotBuilderItem;\r\n  highlight: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst AddVoidSaltPlotListItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  AddVoidSaltPlotListItemProps\r\n>(({ item, highlight, onMouseOver, onMouseOut }, ref) => {\r\n  const grains = useObservation(item.grains$);\r\n  const [inputGrains, setInputGrains] = React.useState<string | null>(null);\r\n  const [sliderGrains, setSliderGrains] = React.useState<number | null>(null);\r\n  const onTextFieldChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let asNumber: number | null = Number(e.target.value);\r\n      if (isNaN(asNumber)) {\r\n        asNumber = null;\r\n      }\r\n\r\n      setInputGrains(e.target.value);\r\n      item.setGrains(asNumber);\r\n    },\r\n    [item]\r\n  );\r\n  const onTextFieldBlur = React.useCallback(() => {\r\n    setInputGrains(null);\r\n  }, []);\r\n  const onGrainsChange = React.useCallback(\r\n    (value: number) => {\r\n      // Because grains can only be whole numbers, we track the slider value seperately so decimalled values can still increase and decrease\r\n      // appropriately with the rate, making the whole length of the slider useful.\r\n      setSliderGrains(Math.max(0, value));\r\n      item.setGrains(Math.max(0, Math.round(value)));\r\n    },\r\n    [item]\r\n  );\r\n\r\n  return (\r\n    <PlotListItemCard\r\n      ref={ref}\r\n      item={item}\r\n      highlight={highlight}\r\n      onMouseOver={onMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Add Void Salt</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"Grains\"\r\n        value={inputGrains ?? grains ?? \"\"}\r\n        onChange={onTextFieldChange}\r\n        onBlur={onTextFieldBlur}\r\n      />\r\n      <IncDecSlider\r\n        value={sliderGrains ?? grains ?? 0}\r\n        rate={100}\r\n        onChange={onGrainsChange}\r\n        onChangeCommitted={() => setSliderGrains(null)}\r\n      />\r\n    </PlotListItemCard>\r\n  );\r\n});\r\n\r\ninterface SetPositionPlotListItemProps {\r\n  item: SetPositionPlotBuilderItem;\r\n  highlight: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst SetPositionPlotListItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  SetPositionPlotListItemProps\r\n>(({ item, highlight, onMouseOver, onMouseOut }, ref) => {\r\n  const [xInput, setXInput] = React.useState<string | null>(null);\r\n  const [yInput, setYInput] = React.useState<string | null>(null);\r\n\r\n  const x = useObservation(item.x$);\r\n  const y = useObservation(item.y$);\r\n\r\n  const onXChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let asNumber: number | null = Number(e.target.value);\r\n      if (isNaN(asNumber)) {\r\n        asNumber = null;\r\n      }\r\n\r\n      setXInput(e.target.value);\r\n      item.setX(asNumber);\r\n    },\r\n    [item]\r\n  );\r\n\r\n  const onYChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let asNumber: number | null = Number(e.target.value);\r\n      if (isNaN(asNumber)) {\r\n        asNumber = null;\r\n      }\r\n\r\n      setYInput(e.target.value);\r\n      item.setY(asNumber);\r\n    },\r\n    [item]\r\n  );\r\n\r\n  const onXBlur = React.useCallback(() => setXInput(null), []);\r\n  const onYBlur = React.useCallback(() => setYInput(null), []);\r\n\r\n  return (\r\n    <PlotListItemCard\r\n      ref={ref}\r\n      item={item}\r\n      highlight={highlight}\r\n      onMouseOver={onMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Teleport</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"X\"\r\n        value={xInput ?? x ?? \"\"}\r\n        onChange={onXChange}\r\n        onBlur={onXBlur}\r\n      />\r\n      <TextField\r\n        label=\"Y\"\r\n        value={yInput ?? y ?? \"\"}\r\n        onChange={onYChange}\r\n        onBlur={onYBlur}\r\n      />\r\n    </PlotListItemCard>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { styled, Card, CardContent, Typography } from \"@mui/material\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\nimport { EmptyPlotResult } from \"@/services/plotter/types\";\r\n\r\nimport IncDecSlider from \"../IncDecSlider\";\r\nimport PointDetails from \"../PointDetails\";\r\nimport StepDetails from \"../StepDetails\";\r\nimport PlotDetails from \"../PlotDetails\";\r\nimport EntityDetails from \"../EntityDetails\";\r\nimport PotionMap from \"../Map\";\r\nimport PanZoomViewport from \"../PanZoomViewport\";\r\nimport Plot from \"../Plot\";\r\n\r\nimport { IPlotBuilderViewModel } from \"./PlotBuilderViewModel\";\r\n\r\nexport interface PlotBuilderViewProps {\r\n  className?: string;\r\n  viewModel: IPlotBuilderViewModel;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  \"& .pan-zoom-container\": {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .map\": {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .plot\": {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .inspect-stack\": {\r\n    position: \"absolute\",\r\n    top: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  \"& .inspect-stack > *\": {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  \"& .mouse-coords\": {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  \"& .plot-details\": {\r\n    position: \"absolute\",\r\n    top: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  \"& .zoom\": {\r\n    position: \"absolute\",\r\n    width: \"200px\",\r\n    bottom: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst PlotBuilderView = ({ className, viewModel }: PlotBuilderViewProps) => {\r\n  const map = useObservation(viewModel.map$);\r\n  const plot = useObservation(viewModel.plot$);\r\n\r\n  const mouseOverPlotPoint =\r\n    useObservation(viewModel.mouseOverPlotPoint) ?? null;\r\n  const mouseOverPlotItem =\r\n    useObservation(viewModel.mouseOverPlotItem$) ?? null;\r\n  const mouseOverEntity = useObservation(viewModel.mouseOverEntity$) ?? null;\r\n  const mouseWorld = useObservation(viewModel.mouseWorldPosition$) ?? null;\r\n\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n\r\n  return (\r\n    <Root className={className}>\r\n      <PanZoomViewport className=\"pan-zoom-container\" viewModel={viewModel}>\r\n        {map && <PotionMap className=\"map\" map={map} viewModel={viewModel} />}\r\n        <Plot\r\n          className=\"plot\"\r\n          plot={plot ?? EmptyPlotResult}\r\n          viewModel={viewModel}\r\n        />\r\n      </PanZoomViewport>\r\n      <div className=\"inspect-stack\">\r\n        {mouseOverPlotPoint && <PointDetails point={mouseOverPlotPoint} />}\r\n        {mouseOverPlotItem && <StepDetails step={mouseOverPlotItem} />}\r\n        {!mouseOverPlotItem && mouseOverEntity && (\r\n          <EntityDetails entity={mouseOverEntity} />\r\n        )}\r\n      </div>\r\n      {plot && <PlotDetails className=\"plot-details\" plot={plot} />}\r\n      {mouseWorld && (\r\n        <Card className=\"mouse-coords\">\r\n          <CardContent>\r\n            <Typography variant=\"overline\">\r\n              ({mouseWorld.x.toFixed(2)}, {mouseWorld.y.toFixed(2)})\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n      <IncDecSlider\r\n        className=\"zoom\"\r\n        value={scale}\r\n        rate={14}\r\n        onChange={(value) => viewModel.setZoom(value)}\r\n      />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PlotBuilderView;\r\n","import { BehaviorSubject, map, Observable, combineLatest } from \"rxjs\";\r\nimport { first } from \"lodash\";\r\n\r\nimport { vec2Distance, Vector2 } from \"@/vector2\";\r\n\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\n\r\nimport { PlotBuilder } from \"@/services/plotter/builder/PlotBuilder\";\r\nimport { PlotBuilderItem } from \"@/services/plotter/builder/PlotBuilderItem\";\r\nimport { PlotItem, PlotPoint, PlotResult } from \"@/services/plotter/types\";\r\nimport { MapEntity } from \"@/services/potion-maps/types\";\r\nimport { PotionMap } from \"@/services/potion-maps/PotionMap\";\r\n\r\nimport { IPlotViewModel } from \"@/components/Plot/PlotViewModel\";\r\nimport { IPanZoomViewportViewModel } from \"@/components/PanZoomViewport/PanZoomViewportViewModel\";\r\nimport { CoordinateMappingViewportViewModel } from \"@/components/PanZoomViewport/CoordinateMappingViewportViewModel\";\r\n\r\nexport interface IPlotBuilderViewModel\r\n  extends IPanZoomViewportViewModel,\r\n    IPlotViewModel {\r\n  get map$(): Observable<PotionMap | null>;\r\n  get plot$(): Observable<Readonly<PlotResult> | null>;\r\n  get mouseOverPlotItem$(): Observable<PlotItem | null>;\r\n  get mouseOverBuilderItem$(): Observable<PlotBuilderItem | null>;\r\n  get mouseOverEntity$(): Observable<MapEntity | null>;\r\n  get mouseOverPlotPoint(): Observable<PlotPoint | null>;\r\n  get mouseWorldPosition$(): Observable<Vector2 | null>;\r\n\r\n  onMouseOverPlotItem(item: PlotItem | null): void;\r\n  onMouseOverBuilderItem(item: PlotBuilderItem | null): void;\r\n}\r\n\r\nexport class PlotBuilderViewModel\r\n  extends CoordinateMappingViewportViewModel\r\n  implements IPlotBuilderViewModel, IPlotViewModel, IPanZoomViewportViewModel\r\n{\r\n  private readonly _mouseOverPlotItem$ = new BehaviorSubject<PlotItem | null>(\r\n    null\r\n  );\r\n  private readonly _mouseOverBuilderItem$ =\r\n    new BehaviorSubject<PlotBuilderItem | null>(null);\r\n  private readonly _mouseOverEntity$: Observable<MapEntity | null>;\r\n\r\n  private readonly _mouseOverPlotPoint$: Observable<PlotPoint | null>;\r\n\r\n  constructor(private readonly _builder: PlotBuilder) {\r\n    super(\r\n      { width: MAP_EXTENT_RADIUS * 2, height: MAP_EXTENT_RADIUS * 2 },\r\n      { x: MAP_EXTENT_RADIUS, y: MAP_EXTENT_RADIUS },\r\n      { x: 1, y: -1 }\r\n    );\r\n\r\n    this._mouseOverEntity$ = combineLatest([\r\n      this.mouseWorldPosition$,\r\n      _builder.map$,\r\n    ]).pipe(\r\n      map(([worldPos, map]) => {\r\n        if (!worldPos || !map) {\r\n          return null;\r\n        }\r\n\r\n        const entities = map.hitTest(worldPos) ?? [];\r\n        const entity = first(entities);\r\n        return entity ?? null;\r\n      })\r\n    );\r\n\r\n    this._mouseOverPlotPoint$ = combineLatest([\r\n      this.mouseWorldPosition$,\r\n      this._mouseOverPlotItem$,\r\n      this._builder.plot$,\r\n    ]).pipe(\r\n      map(([worldPos, plotItem, plot]) => {\r\n        if (!worldPos || !plotItem || !plot) {\r\n          return null;\r\n        }\r\n\r\n        const plotPoints = plot.committedPoints.concat(plot.pendingPoints);\r\n        const plotItemPoints = plotPoints.filter((x) => x.source === plotItem);\r\n\r\n        let closestPlotItem = first(plotItemPoints);\r\n        if (!closestPlotItem) {\r\n          return null;\r\n        }\r\n\r\n        for (let i = 1; i < plotItemPoints.length; i++) {\r\n          const point = plotItemPoints[i];\r\n          if (\r\n            vec2Distance(worldPos, point) <\r\n            vec2Distance(worldPos, closestPlotItem)\r\n          ) {\r\n            closestPlotItem = point;\r\n          }\r\n        }\r\n\r\n        return closestPlotItem;\r\n      })\r\n    );\r\n  }\r\n\r\n  get builder(): PlotBuilder {\r\n    return this._builder;\r\n  }\r\n\r\n  get map$(): Observable<PotionMap | null> {\r\n    return this._builder.map$;\r\n  }\r\n\r\n  get plot$(): Observable<Readonly<PlotResult> | null> {\r\n    return this._builder.plot$;\r\n  }\r\n\r\n  get mouseOverPlotItem$(): Observable<PlotItem | null> {\r\n    return this._mouseOverPlotItem$;\r\n  }\r\n\r\n  get mouseOverBuilderItem$(): Observable<PlotBuilderItem | null> {\r\n    return this._mouseOverBuilderItem$;\r\n  }\r\n\r\n  get mouseOverEntity$(): Observable<MapEntity | null> {\r\n    return this._mouseOverEntity$;\r\n  }\r\n\r\n  get mouseOverPlotPoint(): Observable<PlotPoint | null> {\r\n    return this._mouseOverPlotPoint$;\r\n  }\r\n\r\n  onMouseOverPlotItem(item: PlotItem | null): void {\r\n    this._mouseOverPlotItem$.next(item);\r\n    this._mouseOverBuilderItem$.next(\r\n      item ? this._builder.builderItemFor(item) : null\r\n    );\r\n  }\r\n\r\n  onMouseOverBuilderItem(item: PlotBuilderItem | null): void {\r\n    this._mouseOverBuilderItem$.next(item);\r\n    this._mouseOverPlotItem$.next(item ? item.plotItem : null);\r\n  }\r\n}\r\n","import PlotBuilderView from \"./PlotBuilderView\";\r\nexport default PlotBuilderView;\r\n","import React from \"react\";\r\nimport { uniq, sum, clamp, last } from \"lodash\";\r\n\r\nimport { Card, CardContent, Typography } from \"@mui/material\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\nimport { pointArrayLength } from \"@/point-array\";\r\nimport { vec2Magnitude, vec2Subtract, Vec2Zero } from \"@/vector2\";\r\n\r\nimport {\r\n  AddIngredientPlotItem,\r\n  PlotItem,\r\n  PlotPoint,\r\n  PlotResult,\r\n} from \"@/services/plotter/types\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\nimport { MapEntity, PotionEffectMapEntity } from \"@/services/potion-maps/types\";\r\nimport { getEffectTier, longestDangerLength } from \"@/services/plotter/utils\";\r\nimport { DANGER_LENGTH_LETHAL } from \"@/game-settings\";\r\n\r\nexport interface PlotDetailsProps {\r\n  className?: string;\r\n  plot: PlotResult;\r\n}\r\n\r\nconst PlotDetails = ({ className, plot }: PlotDetailsProps) => {\r\n  const ingredientRegistry = useDIDependency(IngredientRegistry);\r\n\r\n  const endsAt = last(plot.committedPoints) ?? Vec2Zero;\r\n\r\n  const [\r\n    effects,\r\n    baseCost,\r\n    length,\r\n    totalIngredients,\r\n    totalUniqueIngredients,\r\n    stress,\r\n    longestDanger,\r\n  ] = React.useMemo(() => {\r\n    const allPoints = plot.committedPoints.concat(plot.pendingPoints);\r\n    const sources = uniq(allPoints.map((point) => point.source));\r\n    const ingredients = sources.filter(isIngredientPoint);\r\n\r\n    const effects = getEffects(plot.committedPoints);\r\n\r\n    let baseCost = 0;\r\n    let ingredientTypeCounts: Record<string, number> = {};\r\n    for (const { ingredientId } of ingredients) {\r\n      const ingredient = ingredientRegistry.getIngredientById(ingredientId);\r\n      if (!ingredient) {\r\n        continue;\r\n      }\r\n      baseCost += ingredient.price;\r\n      ingredientTypeCounts[ingredient.id] =\r\n        (ingredientTypeCounts[ingredient.id] ?? 0) + 1;\r\n    }\r\n\r\n    const length = pointArrayLength(plot.committedPoints);\r\n\r\n    const totalIngredients = ingredients.length;\r\n    const totalUniqueIngredients = uniq(\r\n      ingredients.map((x) => x.ingredientId)\r\n    ).length;\r\n\r\n    const stress = Math.sqrt(\r\n      sum(\r\n        Object.keys(ingredientTypeCounts).map((key) =>\r\n          Math.pow(ingredientTypeCounts[key], 2)\r\n        )\r\n      )\r\n    );\r\n\r\n    const longestDanger = longestDangerLength(plot.committedPoints);\r\n\r\n    return [\r\n      effects,\r\n      baseCost,\r\n      length,\r\n      totalIngredients,\r\n      totalUniqueIngredients,\r\n      stress,\r\n      longestDanger,\r\n    ];\r\n  }, [plot, IngredientRegistry]);\r\n\r\n  // PotionCraft subtract .4 health each unit of distance against a max of 1.\r\n  const dangerIsDeath = longestDanger >= DANGER_LENGTH_LETHAL;\r\n\r\n  return (\r\n    <Card className={className} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h6\">Details</Typography>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <Typography>Possible Effects on Path:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography variant=\"overline\">\r\n                  {Object.keys(effects)\r\n                    .map((effect) => `${effect} (${effects[effect]})`)\r\n                    .join(\", \")}\r\n                </Typography>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Typography>Ingredient count:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography variant=\"overline\">\r\n                  {totalIngredients} ({totalUniqueIngredients} unique)\r\n                </Typography>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Typography>Ingredient stress:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography variant=\"overline\">{stress.toFixed(2)}</Typography>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Typography>Cost:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography variant=\"overline\">{baseCost}</Typography>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Typography>Committed length:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography variant=\"overline\">{length.toFixed(2)}</Typography>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Typography>Ends at:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography variant=\"overline\">\r\n                  {endsAt.x.toFixed(2)}, {endsAt.y.toFixed(2)}\r\n                </Typography>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Typography>Longest length in bones:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography\r\n                  variant=\"overline\"\r\n                  color={dangerIsDeath ? \"error\" : \"textPrimary\"}\r\n                >\r\n                  {longestDanger.toFixed(2)} / {DANGER_LENGTH_LETHAL}\r\n                </Typography>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PlotDetails;\r\n\r\nexport function isIngredientPoint(\r\n  point: PlotItem\r\n): point is AddIngredientPlotItem {\r\n  return point.type === \"add-ingredient\";\r\n}\r\n\r\nfunction getEffects(items: PlotPoint[]): Record<string, number> {\r\n  const result: Record<string, number> = {};\r\n  for (const item of items) {\r\n    const effect = item.entities.find(itemIsEffect);\r\n    if (!effect) {\r\n      continue;\r\n    }\r\n\r\n    const distance = vec2Magnitude(vec2Subtract(item, effect));\r\n    const tier = getEffectTier(distance, 0);\r\n    result[effect.effect] = Math.max(result[effect.effect] ?? 0, tier);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction itemIsEffect(item: MapEntity): item is PotionEffectMapEntity {\r\n  return item.entityType === \"PotionEffect\";\r\n}\r\n","import React from \"react\";\r\n\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\nimport { Vector2 } from \"@/vector2\";\r\n\r\nexport interface PlotSvg {\r\n  className?: string;\r\n  width: number;\r\n  height: number;\r\n  scale: number;\r\n  offset: Vector2;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst PlotSvg = ({\r\n  className,\r\n  width,\r\n  height,\r\n  scale,\r\n  offset,\r\n  children,\r\n}: PlotSvg) => {\r\n  return (\r\n    <svg\r\n      className={className}\r\n      width={width}\r\n      height={height}\r\n      viewBox={`0 0 ${width} ${height}`}\r\n    >\r\n      {/* In theory all these transforms can be done in one go, but neither order seems to work when combining them */}\r\n      <g transform={`scale(${scale})`}>\r\n        <g transform={`translate(${MAP_EXTENT_RADIUS}, ${MAP_EXTENT_RADIUS})`}>\r\n          <g transform=\"scale(1, -1)\">\r\n            <g transform={`translate(${offset.x}, ${offset.y})`}>{children}</g>\r\n          </g>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default PlotSvg;\r\n","import React from \"react\";\r\nimport Color from \"color\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { Vec2Zero } from \"@/vector2\";\r\nimport { SizeZero } from \"@/size\";\r\nimport { POTION_RADIUS } from \"@/game-settings\";\r\nimport { PointArray } from \"@/point-array\";\r\nimport { keepEveryK } from \"@/utils\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { PlotItem, PlotPoint, PlotResult } from \"@/services/plotter/types\";\r\n\r\nimport PlotSvg from \"../PlotSvg\";\r\n\r\nimport { IPlotViewModel } from \"./PlotViewModel\";\r\n\r\nimport { last } from \"lodash\";\r\nimport { useDIDependency } from \"@/container\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\n\r\nexport interface PlotProps {\r\n  className?: string;\r\n  plot: PlotResult;\r\n  viewModel: IPlotViewModel;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  overflow: \"hidden\",\r\n  position: \"relative\",\r\n  \"& .plot-svg\": {\r\n    display: \"block\",\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n  },\r\n  \"& .bottle-preview\": {\r\n    pointerEvents: \"none\",\r\n  },\r\n}));\r\n\r\nconst Plot = ({ className, plot, viewModel }: PlotProps) => {\r\n  const { width, height } = useObservation(viewModel.viewportSize$) ?? SizeZero;\r\n  const offset = useObservation(viewModel.viewOffset$) ?? Vec2Zero;\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n  const mouseOverItem = useObservation(viewModel.mouseOverPlotItem$) ?? null;\r\n  const mouseOverPoint = useObservation(viewModel.mouseOverPlotPoint) ?? null;\r\n\r\n  const lastCommitPoint = last(plot.committedPoints) ?? null;\r\n\r\n  const onLineMouseOver = React.useCallback(\r\n    (line: PlotLine) => {\r\n      viewModel.onMouseOverPlotItem(line.source);\r\n    },\r\n    [viewModel]\r\n  );\r\n\r\n  const onLineMouseOut = React.useCallback(() => {\r\n    viewModel.onMouseOverPlotItem(null);\r\n  }, [viewModel]);\r\n\r\n  const [committedLines, pendingLines] = resultToPlotLines(\r\n    plot.committedPoints,\r\n    plot.pendingPoints\r\n  );\r\n\r\n  return (\r\n    <Root className={className}>\r\n      <PlotSvg\r\n        className=\"plot-svg\"\r\n        width={width}\r\n        height={height}\r\n        offset={offset}\r\n        scale={scale}\r\n      >\r\n        {committedLines.map((line, i) => (\r\n          <PlotLine\r\n            key={i}\r\n            line={line}\r\n            pending={false}\r\n            scale={scale}\r\n            highlight={line.source === mouseOverItem}\r\n            onMouseOver={onLineMouseOver}\r\n            onMouseOut={onLineMouseOut}\r\n          />\r\n        ))}\r\n        {pendingLines.map((line, i) => (\r\n          <PlotLine\r\n            key={i}\r\n            line={line}\r\n            pending={true}\r\n            scale={scale}\r\n            highlight={line.source === mouseOverItem}\r\n            onMouseOver={onLineMouseOver}\r\n            onMouseOut={onLineMouseOut}\r\n          />\r\n        ))}\r\n        {lastCommitPoint && (\r\n          <circle\r\n            className=\"bottle-preview\"\r\n            cx={lastCommitPoint.x}\r\n            cy={lastCommitPoint.y}\r\n            r={POTION_RADIUS}\r\n            fill=\"blue\"\r\n            opacity={0.2}\r\n          />\r\n        )}\r\n        {mouseOverPoint && (\r\n          <circle\r\n            className=\"bottle-preview\"\r\n            cx={mouseOverPoint.x}\r\n            cy={mouseOverPoint.y}\r\n            r={POTION_RADIUS}\r\n            fill=\"blue\"\r\n            opacity={0.2}\r\n          />\r\n        )}\r\n      </PlotSvg>\r\n    </Root>\r\n  );\r\n};\r\n\r\ninterface PlotLineProps {\r\n  scale: number;\r\n  line: PlotLine;\r\n  pending: boolean;\r\n  highlight: boolean;\r\n  onMouseOver(line: PlotLine): void;\r\n  onMouseOut(): void;\r\n}\r\nconst PlotLine = ({\r\n  scale,\r\n  line,\r\n  pending,\r\n  highlight,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotLineProps) => {\r\n  const registry = useDIDependency(IngredientRegistry);\r\n  const { points, source, evenOdd } = line;\r\n\r\n  const ingredient = React.useMemo(() => {\r\n    if (source.type !== \"add-ingredient\") {\r\n      return null;\r\n    }\r\n    return registry.getIngredientById(source.ingredientId) ?? null;\r\n  }, [source, registry]);\r\n\r\n  const onPathMouseOver = React.useCallback(() => {\r\n    onMouseOver(line);\r\n  }, [line, onMouseOver]);\r\n\r\n  const onPathMouseOut = React.useCallback(() => {\r\n    onMouseOut();\r\n  }, [onMouseOut]);\r\n\r\n  if (points.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  let color = \"black\";\r\n  switch (source.type) {\r\n    case \"add-ingredient\":\r\n      color = evenOdd ? \"red\" : \"green\";\r\n      break;\r\n    case \"pour-solvent\":\r\n      color = \"blue\";\r\n      break;\r\n    case \"heat-vortex\":\r\n      color = \"purple\";\r\n      break;\r\n  }\r\n\r\n  if (pending) {\r\n    color = Color(color).lighten(0.6).hex();\r\n  }\r\n\r\n  const path = line.points.reduce(\r\n    (str, p) => `${str} L${p.x},${p.y}`,\r\n    `M ${points[0].x} ${points[0].y} `\r\n  );\r\n\r\n  let strokeDashArray: string | undefined = undefined;\r\n  if (ingredient && ingredient.teleports) {\r\n    strokeDashArray = [8 / scale, 8 / scale].join(\" \");\r\n  }\r\n\r\n  return (\r\n    <path\r\n      d={path}\r\n      stroke={color}\r\n      strokeWidth={(highlight ? 6 : 3) / scale}\r\n      strokeDasharray={strokeDashArray}\r\n      fill=\"none\"\r\n      onMouseOver={onPathMouseOver}\r\n      onMouseOut={onPathMouseOut}\r\n    />\r\n  );\r\n};\r\n\r\ninterface PlotLine {\r\n  points: PointArray;\r\n  source: PlotItem;\r\n  evenOdd: boolean;\r\n}\r\n\r\nfunction resultToPlotLines(\r\n  committed: PlotPoint[],\r\n  pending: PlotPoint[],\r\n  trim = 4\r\n) {\r\n  let currentLine: PlotLine | null = null;\r\n  let sourceCounter = 0;\r\n\r\n  const commitedLines: PlotLine[] = [];\r\n  const pendingLines: PlotLine[] = [];\r\n\r\n  let lastSource: PlotItem | null = null;\r\n\r\n  for (const point of committed) {\r\n    if (currentLine == null || currentLine.source != point.source) {\r\n      if (lastSource == null || lastSource !== point.source) {\r\n        sourceCounter++;\r\n        lastSource = point.source;\r\n      }\r\n      currentLine = {\r\n        points: [],\r\n        source: point.source,\r\n        evenOdd: sourceCounter % 2 === 1,\r\n      };\r\n      commitedLines.push(currentLine);\r\n    }\r\n\r\n    currentLine.points.push(point);\r\n  }\r\n\r\n  currentLine = null;\r\n\r\n  for (const point of pending) {\r\n    if (currentLine == null || currentLine.source != point.source) {\r\n      if (lastSource == null || lastSource !== point.source) {\r\n        sourceCounter++;\r\n        lastSource = point.source;\r\n      }\r\n      currentLine = {\r\n        points: [],\r\n        source: point.source,\r\n        evenOdd: sourceCounter % 2 === 1,\r\n      };\r\n      pendingLines.push(currentLine);\r\n    }\r\n\r\n    currentLine.points.push(point);\r\n  }\r\n\r\n  if (trim > 1) {\r\n    for (const line of commitedLines) {\r\n      line.points = keepEveryK(line.points, trim, true);\r\n    }\r\n    for (const line of pendingLines) {\r\n      line.points = keepEveryK(line.points, trim, true);\r\n    }\r\n  }\r\n\r\n  return [commitedLines, pendingLines];\r\n}\r\n\r\nexport default Plot;\r\n","import Plot from \"./Plot\";\r\nexport default Plot;\r\n","import React from \"react\";\r\n\r\nimport { Card, CardContent, Typography } from \"@mui/material\";\r\n\r\nimport { uniq } from \"lodash\";\r\n\r\nimport { EntityDefs } from \"@/services/potion-maps/entity-defs\";\r\n\r\nimport { PlotPoint } from \"@/services/plotter/types\";\r\n\r\nexport interface PointDetailsProps {\r\n  point: PlotPoint;\r\n}\r\n\r\nconst PointDetails = ({ point }: PointDetailsProps) => {\r\n  const touchedItems = uniq(\r\n    point.entities.map((x) => EntityDefs[x.entityType].getFriendlyName(x))\r\n  );\r\n  return (\r\n    <Card variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h6\">Point at mouse</Typography>\r\n        <Typography variant=\"overline\">\r\n          {point.x.toFixed(2)}, {point.y.toFixed(2)}\r\n        </Typography>\r\n        {touchedItems.length > 0 && (\r\n          <>\r\n            <Typography>Bottle touches:</Typography>\r\n            <Typography variant=\"overline\">\r\n              {touchedItems.join(\", \")}\r\n            </Typography>\r\n          </>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PointDetails;\r\n","import React from \"react\";\r\n\r\nimport { Card, CardContent, Typography, styled } from \"@mui/material\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\n\r\nimport { CubicBezierCurve } from \"@/curves\";\r\nimport { MAX_INGREDIENT_EXTENT, POTION_RADIUS } from \"@/game-settings\";\r\n\r\nimport { AddIngredientPlotItem, PlotItem } from \"@/services/plotter/types\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\n\r\nexport interface StepDetailsProps {\r\n  className?: string;\r\n  step: PlotItem;\r\n}\r\n\r\nconst StepDetails = ({ step, className }: StepDetailsProps) => {\r\n  let content: React.ReactNode;\r\n  switch (step.type) {\r\n    case \"add-ingredient\":\r\n      content = <AddIngredient step={step} />;\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  return (\r\n    <Card className={className} variant=\"outlined\">\r\n      <CardContent>{content}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\ninterface AddIngredientStepProps {\r\n  step: AddIngredientPlotItem;\r\n}\r\n\r\nconst AddIngredientRoot = styled(\"div\")({\r\n  \"& .svg-container\": {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\nconst AddIngredient = ({ step }: AddIngredientStepProps) => {\r\n  const ingredientRegistry = useDIDependency(IngredientRegistry);\r\n  const ingredient = ingredientRegistry.getIngredientById(\r\n    step.ingredientId\r\n  ) ?? {\r\n    name: \"Unknown\",\r\n    path: [] as CubicBezierCurve[],\r\n  };\r\n\r\n  const path = ingredient.path.reduce(\r\n    (path, curve) =>\r\n      path +\r\n      `M ${curve.start.x} ${curve.start.y} C ${curve.p1.x},${curve.p1.y} ${curve.p2.x},${curve.p2.y} ${curve.end.x},${curve.end.y}`,\r\n    \"M 0 0 \"\r\n  );\r\n  return (\r\n    <AddIngredientRoot>\r\n      <Typography variant=\"h6\">Ingredient</Typography>\r\n      <Typography variant=\"overline\">{ingredient.name}</Typography>\r\n      <div>\r\n        <Typography>Grind Percentage</Typography>\r\n        <Typography variant=\"overline\">{step.grindPercent}</Typography>\r\n      </div>\r\n      <div className=\"svg-container\">\r\n        <svg\r\n          width=\"100px\"\r\n          height=\"100px\"\r\n          viewBox={`-${MAX_INGREDIENT_EXTENT} -${MAX_INGREDIENT_EXTENT} ${\r\n            MAX_INGREDIENT_EXTENT * 2\r\n          } ${MAX_INGREDIENT_EXTENT * 2}`}\r\n          transform=\"scale(1, -1)\"\r\n        >\r\n          <circle cx={0} cy={0} r={POTION_RADIUS} fill=\"blue\" />\r\n          <path d={path} stroke=\"black\" strokeWidth={0.2} fill=\"none\" />\r\n        </svg>\r\n      </div>\r\n    </AddIngredientRoot>\r\n  );\r\n};\r\n\r\nexport default StepDetails;\r\n","import container from \"./container\";\r\nimport { IngredientRegistry } from \"./services/ingredients/IngredientRegistry\";\r\nimport { Plotter } from \"./services/plotter/Plotter\";\r\nimport { PotionBaseRegistry } from \"./services/potion-bases/PotionBaseRegistry\";\r\n\r\nconst w = window as any;\r\n\r\nw.enableTk = () => {\r\n  w.tk = {\r\n    vector2: require(\"./vector2\"),\r\n    curves: require(\"./curves\"),\r\n    pointArray: require(\"./point-array\"),\r\n    ingredients: container.get(IngredientRegistry),\r\n    plotter: container.get(Plotter),\r\n    potionBases: container.get(PotionBaseRegistry),\r\n    PotionMap: require(\"./services/potion-maps/PotionMap\"),\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  composeModules,\r\n  Container,\r\n  Identifier,\r\n  Newable,\r\n  ParameterRecord,\r\n} from \"microinject\";\r\n\r\nimport servicesModule from \"./services/module\";\r\n\r\nconst modules = composeModules(servicesModule);\r\n\r\nconst ContainerContext = React.createContext<Container>(new Container());\r\n\r\nconst container = new Container();\r\ncontainer.bind(Container).toConstantValue(container);\r\ncontainer.load(modules);\r\n\r\nexport default container;\r\n\r\nexport interface ContainerProviderProps {\r\n  children: React.ReactNode;\r\n}\r\nexport const ContainerProvider = ({ children }: ContainerProviderProps) => {\r\n  return (\r\n    <ContainerContext.Provider value={container}>\r\n      {children}\r\n    </ContainerContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useDIContainer(): Container {\r\n  return React.useContext(ContainerContext);\r\n}\r\n\r\nexport function useDIDependency<T>(identifier: Identifier<T>): T {\r\n  const container = useDIContainer();\r\n  return container.get(identifier);\r\n}\r\n\r\nexport function useDICreate<T>(\r\n  identifier: Newable<T>,\r\n  parameters?: ParameterRecord\r\n): T {\r\n  const container = useDIContainer();\r\n  const valRef = React.useRef<T>();\r\n  if (valRef.current == null) {\r\n    valRef.current = container.create(identifier, parameters);\r\n  }\r\n  return valRef.current;\r\n}\r\n","import {\r\n  BEZIER_CURVE_LENGTH_RESOLUTION,\r\n  PATH_SPACING_PHYSICS,\r\n} from \"./game-settings\";\r\n\r\nimport {\r\n  Vector2,\r\n  vec2Add,\r\n  vec2Distance,\r\n  vec2Magnitude,\r\n  vec2Normalize,\r\n  vec2Scale,\r\n  vec2Subtract,\r\n  Vec2Zero,\r\n} from \"./vector2\";\r\n\r\nexport interface CubicBezierCurve {\r\n  start: Vector2;\r\n  p1: Vector2;\r\n  p2: Vector2;\r\n  end: Vector2;\r\n}\r\n\r\nexport function cubicBezierCurve(\r\n  startX: number,\r\n  startY: number,\r\n  p1x: number,\r\n  p1y: number,\r\n  p2x: number,\r\n  p2y: number,\r\n  endx: number,\r\n  endy: number\r\n): CubicBezierCurve {\r\n  return {\r\n    start: { x: startX, y: startY },\r\n    p1: { x: p1x, y: p1y },\r\n    p2: { x: p2x, y: p2y },\r\n    end: { x: endx, y: endy },\r\n  };\r\n}\r\n\r\nexport function getCurvePoint(curve: CubicBezierCurve, t: number): Vector2 {\r\n  if (t < 0 || t > 1) {\r\n    throw new Error(\"getPoint: t must be between 0 and 1\");\r\n  }\r\n\r\n  const b1 = (1 - t) * (1 - t) * (1 - t);\r\n  const b2 = 3 * t * (1 - t) * (1 - t);\r\n  const b3 = 3 * t * t * (1 - t);\r\n  const b4 = t * t * t;\r\n\r\n  return {\r\n    x:\r\n      b1 * curve.start.x + b2 * curve.p1.x + b3 * curve.p2.x + b4 * curve.end.x,\r\n    y:\r\n      b1 * curve.start.y + b2 * curve.p1.y + b3 * curve.p2.y + b4 * curve.end.y,\r\n  };\r\n}\r\n\r\nconst curveLengthCache = new Map<CubicBezierCurve, number>();\r\nexport function getCurveLength(\r\n  curve: CubicBezierCurve\r\n  // resolution: number = BEZIER_CURVE_LENGTH_RESOLUTION\r\n): number {\r\n  const resolution = BEZIER_CURVE_LENGTH_RESOLUTION;\r\n  const cached = curveLengthCache.get(curve);\r\n  if (cached !== undefined) {\r\n    return cached;\r\n  }\r\n\r\n  let length = 0.0;\r\n\r\n  let previousPoint = getCurvePoint(curve, 0);\r\n\r\n  for (let index = 1; index <= resolution; index++) {\r\n    const point = getCurvePoint(curve, index / resolution);\r\n    const vector2_2 = vec2Subtract(point, previousPoint);\r\n    length += vec2Magnitude(vector2_2);\r\n    previousPoint = point;\r\n  }\r\n\r\n  curveLengthCache.set(curve, length);\r\n\r\n  return length;\r\n}\r\n\r\nconst curvePointsCache = new Map<CubicBezierCurve, readonly Vector2[]>();\r\nexport function curveToPoints(\r\n  curve: CubicBezierCurve\r\n  // spacing: number = PATH_SPACING_PHYSICS,\r\n  // resolution: number = 1\r\n): readonly Vector2[] {\r\n  const spacing: number = PATH_SPACING_PHYSICS;\r\n  const resolution: number = 1;\r\n\r\n  // if (spacing <= Number.EPSILON) {\r\n  //   throw new Error(\"curveToPoints: spacing must be greater than 0\");\r\n  // }\r\n  // if (resolution <= 0) {\r\n  //   throw new Error(\"curveToPoints: resolution must be greater than 0\");\r\n  // }\r\n\r\n  const cached = curvePointsCache.get(curve);\r\n  if (cached !== undefined) {\r\n    return cached;\r\n  }\r\n\r\n  const points: Vector2[] = [];\r\n\r\n  let remainingDistance = 0;\r\n  let previousPoint: Vector2 = curve.start;\r\n\r\n  points.push(previousPoint);\r\n\r\n  const samplePointCount = Math.ceil(getCurveLength(curve) * resolution * 10.0);\r\n  for (let index = 0; index <= samplePointCount; index++) {\r\n    const t = index / samplePointCount;\r\n    const point = getCurvePoint(curve, t);\r\n    remainingDistance += vec2Distance(previousPoint, point);\r\n    while (remainingDistance >= spacing) {\r\n      remainingDistance = remainingDistance - spacing;\r\n      const splitPoint = vec2Add(\r\n        point,\r\n        vec2Scale(\r\n          vec2Normalize(vec2Subtract(previousPoint, point)),\r\n          remainingDistance\r\n        )\r\n      );\r\n      points.push(splitPoint);\r\n      previousPoint = splitPoint;\r\n    }\r\n    previousPoint = point;\r\n  }\r\n\r\n  if (remainingDistance > 0) {\r\n    points.push(getCurvePoint(curve, 1));\r\n  }\r\n\r\n  Object.freeze(points);\r\n  for (const p of points) {\r\n    Object.freeze(p);\r\n  }\r\n  curvePointsCache.set(curve, points);\r\n\r\n  return points;\r\n}\r\n","export const PATH_SPACING_PHYSICS = 0.05;\r\nexport const BEZIER_CURVE_LENGTH_RESOLUTION = 200;\r\nexport const MAP_EXTENT_RADIUS = 60;\r\nexport const POTION_RADIUS = 0.79;\r\nexport const MAX_INGREDIENT_EXTENT = 10;\r\nexport const DANGER_LENGTH_LETHAL = 2.5;\r\n","import * as React from \"react\";\r\n\r\ninterface UseComponentBounds {\r\n  left: number;\r\n  top: number;\r\n  right: number;\r\n  bottom: number;\r\n  width: number;\r\n  height: number;\r\n}\r\nexport function useComponentBounds(ref: React.RefObject<HTMLElement | null>) {\r\n  const [size, setSize] = React.useState<UseComponentBounds>({\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  React.useLayoutEffect(() => {\r\n    if (!ref.current) {\r\n      return;\r\n    }\r\n\r\n    const observer = new ResizeObserver(() => {\r\n      const el = ref.current;\r\n      if (!el) {\r\n        return;\r\n      }\r\n      const b = el.getBoundingClientRect();\r\n      setSize({\r\n        top: b.top,\r\n        left: b.left,\r\n        right: b.right,\r\n        bottom: b.bottom,\r\n        width: b.width,\r\n        height: b.height,\r\n      });\r\n    });\r\n\r\n    observer.observe(ref.current);\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [ref]);\r\n\r\n  return size;\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport function useNativeEvent<\r\n  T extends GlobalEventHandlers,\r\n  K extends keyof GlobalEventHandlersEventMap\r\n>(\r\n  ref: React.RefObject<T | null>,\r\n  type: K,\r\n  listener: (\r\n    this: GlobalEventHandlers,\r\n    ev: GlobalEventHandlersEventMap[K]\r\n  ) => any,\r\n  options?: boolean | AddEventListenerOptions\r\n) {\r\n  React.useEffect(() => {\r\n    if (!ref.current) {\r\n      return;\r\n    }\r\n\r\n    // De-reference the target so we remove from the right element.\r\n    const listenTarget = ref.current;\r\n\r\n    listenTarget.addEventListener(type, listener, options);\r\n    return () => {\r\n      listenTarget.removeEventListener(type, listener, options);\r\n    };\r\n  }, [type, listener, ref, options]);\r\n}\r\n","import React from \"react\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport interface UseObservationOpts {\r\n  useTransition?: boolean;\r\n  onError?: (err: Error) => void;\r\n}\r\nexport function useObservation<T>(\r\n  observable: Observable<T> | T | null | undefined,\r\n  { useTransition, onError }: UseObservationOpts = {}\r\n): T | undefined {\r\n  const [val, setVal] = React.useState<T | undefined>(undefined);\r\n\r\n  React.useEffect(() => {\r\n    if (observable) {\r\n      if (observable instanceof Observable) {\r\n        const subscription = observable.subscribe({\r\n          next: (val) => {\r\n            if (useTransition) {\r\n              React.startTransition(() => setVal(val));\r\n            } else {\r\n              setVal(val);\r\n            }\r\n          },\r\n          error: onError,\r\n        });\r\n        return () => subscription.unsubscribe();\r\n      } else {\r\n        setVal(observable);\r\n      }\r\n    }\r\n  }, [observable, onError, useTransition]);\r\n\r\n  return val;\r\n}\r\n","import \"@/style.css\";\r\n\r\nimport \"./console\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\n\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\n\r\nimport { ContainerProvider } from \"./container\";\r\nimport ThemeProvider from \"./theme\";\r\n\r\nimport AppRouter from \"@/services/history/AppRouter\";\r\nimport AppRoutes from \"./routes\";\r\n\r\nconst rootEl = document.getElementById(\"root\");\r\nconst root = ReactDOM.createRoot(rootEl!);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <ContainerProvider>\r\n      <AppRouter>\r\n        <ThemeProvider>\r\n          <CssBaseline />\r\n          <AppRoutes />\r\n        </ThemeProvider>\r\n      </AppRouter>\r\n    </ContainerProvider>\r\n  </React.StrictMode>\r\n);\r\n","import { keyboardModifierUseMeta } from \"./runtime-env\";\r\n\r\nexport const MODIFIER_KEYS_NONE = Object.freeze<ModifierKeys>({});\r\n\r\nexport interface ModifierKeys {\r\n  ctrlMetaKey?: boolean;\r\n  shiftKey?: boolean;\r\n  altKey?: boolean;\r\n}\r\n\r\nexport interface MouseEventModifierKeys {\r\n  ctrlKey: boolean;\r\n  altKey: boolean;\r\n  shiftKey: boolean;\r\n  metaKey: boolean;\r\n}\r\nexport function getModifiers(e: MouseEventModifierKeys): ModifierKeys {\r\n  const { ctrlKey, altKey, shiftKey, metaKey } = e;\r\n  return {\r\n    // Mac reserves ctrl for system use, apps use meta.\r\n    ctrlMetaKey: keyboardModifierUseMeta ? metaKey : ctrlKey,\r\n    altKey,\r\n    shiftKey,\r\n  };\r\n}\r\n\r\nexport function isModifierPressed(event: React.MouseEvent<any>) {\r\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\r\n}\r\n","import React from \"react\";\r\nimport { styled, Typography, Card, CardContent } from \"@mui/material\";\r\n\r\nimport { useDICreate } from \"@/container\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { PlotBuilderItem } from \"@/services/plotter/builder\";\r\n\r\nimport PlotBuilderItemsList from \"@/components/PlotBuilderItemsList\";\r\nimport Overlay from \"@/components/Overlay\";\r\nimport PlotBuilderView from \"@/components/PlotBuilderView\";\r\n\r\nimport { ChallengePageViewModel } from \"./ChallengePageViewModel\";\r\nimport { sum } from \"lodash\";\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  \"& .builder-view-container\": {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"relative\",\r\n  },\r\n  \"& .divider\": {\r\n    width: \"2px\",\r\n    height: \"100%\",\r\n    background: \"grey\",\r\n  },\r\n  \"& .plot-items\": {\r\n    width: \"400px\",\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nconst ChallengePage = () => {\r\n  const viewModel = useDICreate(ChallengePageViewModel);\r\n\r\n  const builder = viewModel.builder;\r\n\r\n  const highlightItem = useObservation(viewModel.mouseOverBuilderItem$) ?? null;\r\n  const results = useObservation(viewModel.results$) ?? null;\r\n\r\n  const onBuildItemMouseOver = React.useCallback(\r\n    (item: PlotBuilderItem) => {\r\n      viewModel.onMouseOverBuilderItem(item);\r\n    },\r\n    [viewModel]\r\n  );\r\n\r\n  const onBuildItemMouseOut = React.useCallback(() => {\r\n    viewModel.onMouseOverBuilderItem(null);\r\n  }, [viewModel]);\r\n\r\n  return (\r\n    <Root>\r\n      <div className=\"builder-view-container\">\r\n        <PlotBuilderView viewModel={viewModel} />\r\n        <Overlay position=\"top\">\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" textAlign=\"center\">\r\n                Daily Challenge\r\n              </Typography>\r\n              <Typography variant=\"body1\" textAlign=\"center\">\r\n                {viewModel.description}\r\n              </Typography>\r\n              {results && (\r\n                <table>\r\n                  <tbody>\r\n                    {Object.keys(results).map((key) => (\r\n                      <tr>\r\n                        <td>{key}</td>\r\n                        <td>{results[key].value}</td>\r\n                        <td>{results[key].score}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              )}\r\n              {results && (\r\n                <Typography variant=\"overline\">\r\n                  Total Score:{\" \"}\r\n                  {sum(Object.keys(results).map((k) => results[k].score))}\r\n                </Typography>\r\n              )}\r\n              {results && (\r\n                <Typography>\r\n                  Keep tweaking your path to increase your score!\r\n                </Typography>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Overlay>\r\n      </div>\r\n      <div className=\"divider\" />\r\n      <PlotBuilderItemsList\r\n        className=\"plot-items\"\r\n        plotBuilderItemCollection={builder}\r\n        highlightItem={highlightItem}\r\n        onMouseOver={onBuildItemMouseOver}\r\n        onMouseOut={onBuildItemMouseOut}\r\n      />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default ChallengePage;\r\n","import { inject } from \"microinject\";\r\nimport { Observable, map } from \"rxjs\";\r\n\r\nimport { PlotBuilder } from \"@/services/plotter/builder\";\r\nimport { ChallengeResults, IChallenge } from \"@/services/challenge/Challenge\";\r\nimport { ChallengeFactory } from \"@/services/challenge/ChallengeFactory\";\r\n\r\nimport { PlotBuilderViewModel } from \"@/components/PlotBuilderView/PlotBuilderViewModel\";\r\n\r\nexport class ChallengePageViewModel extends PlotBuilderViewModel {\r\n  private readonly _challenge: IChallenge;\r\n\r\n  private readonly _results$: Observable<ChallengeResults | null>;\r\n\r\n  constructor(\r\n    @inject(ChallengeFactory) challengeFactory: ChallengeFactory,\r\n    @inject(PlotBuilder) plotBuilder: PlotBuilder\r\n  ) {\r\n    super(plotBuilder);\r\n    this._challenge = challengeFactory.createDailyChallenge();\r\n    console.log(\"Got challenge\", this._challenge);\r\n    plotBuilder.setMap(this._challenge.map);\r\n    this._results$ = plotBuilder.plotItems$.pipe(\r\n      map((plotItems) => this._challenge.getScore(plotItems))\r\n    );\r\n  }\r\n\r\n  get description(): string {\r\n    return this._challenge.description;\r\n  }\r\n\r\n  get results$(): Observable<ChallengeResults | null> {\r\n    return this._results$;\r\n  }\r\n}\r\n","import ChallengePage from \"./ChallengePage\";\r\nexport default ChallengePage;\r\n","import React from \"react\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\nimport { History } from \"@/services/history/History\";\r\n\r\nconst IndexPage = () => {\r\n  const history = useDIDependency(History);\r\n  React.useEffect(() => {\r\n    // HashBrowser keeps its own search inside the hash.  The outer hash may remain and confuse things.\r\n    // Grab whatever hash we can, and normalize into our history.\r\n    const hLoc = history.location;\r\n    const wLoc = window.location;\r\n    const search = hLoc.search.length > 0 ? hLoc.search : wLoc.search;\r\n\r\n    // Clear out the root search query.\r\n    // Use replaceState to avoid refreshing the page\r\n    if (window.location.search != \"\") {\r\n      const url = new URL(window.location.href);\r\n      url.search = \"\";\r\n      window.history.replaceState({}, \"\", url.toString());\r\n    }\r\n    history.replace({ pathname: \"/plotter\", search });\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport default IndexPage;\r\n","import React from \"react\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { useDICreate, useDIDependency } from \"@/container\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { PlotBuilderItem } from \"@/services/plotter/builder\";\r\nimport { History } from \"@/services/history/History\";\r\n\r\nimport PlotBuilderItemsList from \"@/components/PlotBuilderItemsList\";\r\n\r\nimport PlotBuilderView from \"@/components/PlotBuilderView\";\r\n\r\nimport { PlotterPageViewModel } from \"./PlotterPageViewModel\";\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  \"& .divider\": {\r\n    width: \"2px\",\r\n    height: \"100%\",\r\n    background: \"grey\",\r\n  },\r\n  \"& .plot-items\": {\r\n    width: \"400px\",\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nconst PlotterPage = () => {\r\n  const history = useDIDependency(History);\r\n  const viewModel = useDICreate(PlotterPageViewModel);\r\n\r\n  const builder = viewModel.builder;\r\n\r\n  const highlightItem = useObservation(viewModel.mouseOverBuilderItem$) ?? null;\r\n  const outputShareString =\r\n    useObservation(viewModel.shareString$, { useTransition: true }) ?? null;\r\n\r\n  React.useEffect(() => {\r\n    const query = new URLSearchParams(history.location.search);\r\n    if (query.has(\"data\")) {\r\n      const data = query.get(\"data\")!;\r\n      viewModel.loadFromShareString(data);\r\n    }\r\n  }, [history]);\r\n\r\n  React.useEffect(() => {\r\n    if (!outputShareString) {\r\n      return;\r\n    }\r\n    const query = new URLSearchParams(history.location.search);\r\n    query.set(\"data\", outputShareString);\r\n    history.replace({\r\n      search: query.toString(),\r\n    });\r\n  }, [history, outputShareString]);\r\n\r\n  const onBuildItemMouseOver = React.useCallback(\r\n    (item: PlotBuilderItem) => {\r\n      viewModel.onMouseOverBuilderItem(item);\r\n    },\r\n    [viewModel]\r\n  );\r\n\r\n  const onBuildItemMouseOut = React.useCallback(() => {\r\n    viewModel.onMouseOverBuilderItem(null);\r\n  }, [viewModel]);\r\n\r\n  return (\r\n    <Root>\r\n      <PlotBuilderView viewModel={viewModel} />\r\n      <div className=\"divider\" />\r\n      <PlotBuilderItemsList\r\n        className=\"plot-items\"\r\n        plotBuilderItemCollection={builder}\r\n        highlightItem={highlightItem}\r\n        enableCheats\r\n        onMouseOver={onBuildItemMouseOver}\r\n        onMouseOut={onBuildItemMouseOut}\r\n      />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PlotterPage;\r\n","import { map, Observable, debounceTime } from \"rxjs\";\r\nimport pako from \"pako\";\r\nimport {\r\n  encode as encodeBase64,\r\n  decode as decodeBase64,\r\n} from \"base64-arraybuffer\";\r\nimport { inject } from \"microinject\";\r\n\r\nimport { PlotBuilder } from \"@/services/plotter/builder/PlotBuilder\";\r\nimport { PotionBaseRegistry } from \"@/services/potion-bases/PotionBaseRegistry\";\r\nimport { PotionBaseId } from \"@/services/potion-bases/types\";\r\n\r\nimport { PlotBuilderViewModel } from \"@/components/PlotBuilderView/PlotBuilderViewModel\";\r\n\r\nexport class PlotterPageViewModel extends PlotBuilderViewModel {\r\n  private readonly _shareString$: Observable<string>;\r\n\r\n  constructor(\r\n    @inject(PlotBuilder) builder: PlotBuilder,\r\n    @inject(PotionBaseRegistry) potionBaseRegistry: PotionBaseRegistry\r\n  ) {\r\n    super(builder);\r\n\r\n    const waterMap = potionBaseRegistry.getPotionBaseById(\r\n      \"water\" as PotionBaseId\r\n    )!.map;\r\n    builder.setMap(waterMap);\r\n\r\n    this._shareString$ = builder.plotItems$.pipe(debounceTime(1000)).pipe(\r\n      map((items) => {\r\n        const encoded = pako.deflate(JSON.stringify(items));\r\n        const data = new Uint8Array(1 + encoded.length);\r\n        data.set(encoded, 1);\r\n        new DataView(data.buffer).setUint8(0, 0);\r\n        return encodeBase64(data);\r\n      })\r\n    );\r\n  }\r\n\r\n  get shareString$(): Observable<string> {\r\n    return this._shareString$;\r\n  }\r\n\r\n  loadFromShareString(dataStr: string) {\r\n    const array = decodeBase64(dataStr);\r\n    const dv = new DataView(array);\r\n    const version = dv.getUint8(0);\r\n    const data = array.slice(1);\r\n    if (version === 0) {\r\n      const decoded = JSON.parse(pako.inflate(data, { to: \"string\" })) as any[];\r\n      this.builder.clear();\r\n      this.builder.loadPlotItems(decoded);\r\n    }\r\n  }\r\n}\r\n","import PlotterPage from \"./PlotterPage\";\r\nexport default PlotterPage;\r\n","import { first, sum } from \"lodash\";\r\nimport { PATH_SPACING_PHYSICS } from \"./game-settings\";\r\n\r\nimport {\r\n  vec2Lerp,\r\n  Vector2,\r\n  vec2Add,\r\n  vec2Distance,\r\n  vec2Magnitude,\r\n  vec2Scale,\r\n  vec2Subtract,\r\n  Vec2Zero,\r\n} from \"./vector2\";\r\n\r\nexport type PointArray = Vector2[];\r\nexport type ReadOnlyPointArray = readonly Vector2[];\r\n\r\nexport function pointArrayLength(pointArray: ReadOnlyPointArray): number {\r\n  if (pointArray.length <= 1) {\r\n    return 0;\r\n  }\r\n\r\n  let length = 0;\r\n  let previousPoint = pointArray[0];\r\n  for (let i = 1; i < pointArray.length; i++) {\r\n    length += vec2Distance(previousPoint, pointArray[i]);\r\n    previousPoint = pointArray[i];\r\n  }\r\n\r\n  return length;\r\n}\r\n\r\nconst pointArrayLengthCache = new Map<ReadOnlyPointArray, number>();\r\nexport function pointArrayLengthCached(pointArray: ReadOnlyPointArray): number {\r\n  if (pointArray.length <= 1) {\r\n    return 0;\r\n  }\r\n\r\n  let length = pointArrayLengthCache.get(pointArray);\r\n  if (length !== undefined) {\r\n    return length;\r\n  }\r\n\r\n  length = pointArrayLength(pointArray);\r\n  pointArrayLengthCache.set(pointArray, length);\r\n\r\n  return length;\r\n}\r\n\r\nexport function pointArrayLineFromDistance(\r\n  start: Vector2,\r\n  direction: Vector2,\r\n  distance: number,\r\n  spacing: number = PATH_SPACING_PHYSICS\r\n) {\r\n  const pointArray: PointArray = [];\r\n  if (vec2Magnitude(direction) === 0) {\r\n    throw new Error(\"direction must be valid.\");\r\n  }\r\n\r\n  if (distance <= 0) {\r\n    return [];\r\n  }\r\n\r\n  let previousPoint = start;\r\n  pointArray.push(previousPoint);\r\n  let remainingDistance = distance;\r\n  while (remainingDistance >= spacing) {\r\n    const point = vec2Add(previousPoint, vec2Scale(direction, spacing));\r\n    pointArray.push(point);\r\n    remainingDistance -= spacing;\r\n    previousPoint = point;\r\n  }\r\n\r\n  if (remainingDistance > 0) {\r\n    pointArray.push(\r\n      vec2Add(previousPoint, vec2Scale(direction, remainingDistance))\r\n    );\r\n  }\r\n\r\n  return pointArray;\r\n}\r\n\r\nexport function pointArrayOffset(\r\n  pointArray: PointArray,\r\n  offset: Vector2\r\n): PointArray {\r\n  return pointArray.map((point) => vec2Add(point, offset));\r\n}\r\n\r\nexport function takePointArrayByDistance<T extends Vector2>(\r\n  array: T[],\r\n  takeLength: number\r\n): [taken: T[], remainder: T[]] {\r\n  const totalLength = pointArrayLength(array);\r\n\r\n  if (array.length <= 1 || totalLength <= takeLength) {\r\n    return [array, [] as T[]];\r\n  }\r\n\r\n  const taken: T[] = [array[0]];\r\n  const remainder: T[] = [];\r\n\r\n  let takenLength = 0;\r\n  let previousPoint = array[0];\r\n  for (let i = 1; i < array.length; i++) {\r\n    const p = array[i];\r\n    const length = vec2Distance(p, previousPoint);\r\n    if (takenLength + length >= takeLength) {\r\n      const remainingLength = takeLength - takenLength;\r\n      const splitPoint = vec2Lerp(previousPoint, p, remainingLength / length);\r\n      taken.push(\r\n        Object.assign({}, previousPoint, { x: splitPoint.x, y: splitPoint.y })\r\n      );\r\n      remainder.push(\r\n        Object.assign({}, p, { x: splitPoint.x, y: splitPoint.y }),\r\n        ...array.slice(i)\r\n      );\r\n      break;\r\n    } else {\r\n      takenLength += length;\r\n      taken.push(p);\r\n      previousPoint = p;\r\n    }\r\n  }\r\n\r\n  return [taken, remainder];\r\n}\r\n\r\nexport function removePointArrayDistanceFromEnd<T extends Vector2>(\r\n  array: T[],\r\n  takeLength: number\r\n): T[] {\r\n  // Do it the simple way for now.\r\n  // This should be made more efficient\r\n  const length = pointArrayLength(array);\r\n  if (length <= takeLength) {\r\n    const pFirst = first(array);\r\n    return pFirst ? [pFirst] : [];\r\n  }\r\n  const [taken] = takePointArrayByDistance(array, length - takeLength);\r\n  return taken;\r\n}\r\n","import {\r\n  Vector2,\r\n  vec2Add,\r\n  Vec2Zero,\r\n  vec2Magnitude,\r\n  vec2Subtract,\r\n} from \"./vector2\";\r\nimport { Size } from \"./size\";\r\n\r\nexport interface Rectangle {\r\n  p1: Vector2;\r\n  p2: Vector2;\r\n}\r\n\r\nexport const RectZero: Readonly<Rectangle> = Object.freeze({\r\n  p1: Vec2Zero,\r\n  p2: Vec2Zero,\r\n}) as any;\r\n\r\nexport function rectangle(x: number, y: number, w: number, h: number) {\r\n  return {\r\n    p1: { x, y },\r\n    p2: { x: x + w, y: y + h },\r\n  };\r\n}\r\n\r\nexport function rectFromCircle(p: Vector2, radius: number) {\r\n  return {\r\n    p1: {\r\n      x: p.x - radius,\r\n      y: p.y - radius,\r\n    },\r\n    p2: {\r\n      x: p.x + radius,\r\n      y: p.y + radius,\r\n    },\r\n  };\r\n}\r\n\r\nexport function rectOffset(r: Rectangle, offset: Vector2) {\r\n  return {\r\n    p1: vec2Add(r.p1, offset),\r\n    p2: vec2Add(r.p2, offset),\r\n  };\r\n}\r\n\r\nexport function normalizeRectangle(p1: Vector2, p2: Vector2): Rectangle;\r\nexport function normalizeRectangle(r: Rectangle): Rectangle;\r\nexport function normalizeRectangle(...args: any[]): Rectangle {\r\n  let p1: Vector2;\r\n  let p2: Vector2;\r\n  if (args.length === 1) {\r\n    const r = args[0] as Rectangle;\r\n    p1 = r.p1;\r\n    p2 = r.p2;\r\n  } else {\r\n    p1 = args[0] as Vector2;\r\n    p2 = args[1] as Vector2;\r\n  }\r\n  return {\r\n    p1: {\r\n      x: Math.min(p1.x, p2.x),\r\n      y: Math.min(p1.y, p2.y),\r\n    },\r\n    p2: {\r\n      x: Math.max(p1.x, p2.x),\r\n      y: Math.max(p1.y, p2.y),\r\n    },\r\n  };\r\n}\r\n\r\nexport function addPointToRect(r: Rectangle, p: Vector2): Rectangle {\r\n  return {\r\n    p1: {\r\n      x: Math.min(r.p1.x, p.x),\r\n      y: Math.min(r.p1.y, p.y),\r\n    },\r\n    p2: {\r\n      x: Math.max(r.p2.x, p.x),\r\n      y: Math.max(r.p2.y, p.y),\r\n    },\r\n  };\r\n}\r\n\r\nexport function pointIntersectsRect(p: Vector2, r: Rectangle): boolean {\r\n  r = normalizeRectangle(r);\r\n\r\n  if (r.p1.x > p.x || r.p2.x < p.x) {\r\n    return false;\r\n  }\r\n\r\n  if (r.p1.y > p.y || r.p2.y < p.y) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function rectSize(r: Rectangle): Size {\r\n  r = normalizeRectangle(r);\r\n  return {\r\n    width: r.p2.x - r.p1.x,\r\n    height: r.p2.y - r.p1.y,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Route, Routes } from \"react-router\";\r\n\r\nimport IndexPage from \"./pages/Index\";\r\nimport PlotterPage from \"./pages/Plotter\";\r\nimport ChallengePage from \"./pages/Challenge\";\r\n\r\nconst AppRoutes = () => (\r\n  <Routes>\r\n    {/* TODO: If we hit the index with a ?data=, redirect to plotter?data= */}\r\n    <Route index element={<IndexPage />} />\r\n    <Route path=\"/plotter\" element={<PlotterPage />} />\r\n    <Route path=\"/daily-challenge\" element={<ChallengePage />} />\r\n  </Routes>\r\n);\r\n\r\nexport default AppRoutes;\r\n","import platform from \"platform\";\r\n\r\nconst OS_WINDOWS = /windows/i;\r\nconst OS_MAC = /Mac|iOS|(OS\\ X)/;\r\nconst OS_LINUX = /linux/i;\r\n\r\nexport type OSType = \"windows\" | \"mac\" | \"linux\" | \"unknown\";\r\n\r\nconst osPlatform = (platform.os && platform.os.family) || \"unknown\";\r\nexport const OSType: OSType = OS_WINDOWS.test(osPlatform)\r\n  ? \"windows\"\r\n  : OS_MAC.test(osPlatform)\r\n  ? \"mac\"\r\n  : OS_LINUX.test(osPlatform)\r\n  ? \"linux\"\r\n  : \"unknown\";\r\n\r\nexport const isProd: boolean = process.env.NODE_ENV === \"production\";\r\n\r\nexport const keyboardModifierUseMeta = osPlatform === \"mac\";\r\n","import { inject, injectable, singleton } from \"microinject\";\r\nimport { create as createRandom, RandomSeed } from \"random-seed\";\r\n\r\nimport { MAP_EXTENT_RADIUS, POTION_RADIUS } from \"@/game-settings\";\r\nimport { vec2Distance, Vec2Zero, Vector2 } from \"@/vector2\";\r\n\r\nimport { PotionBaseRegistry } from \"../potion-bases/PotionBaseRegistry\";\r\nimport { PotionMap } from \"../potion-maps/PotionMap\";\r\n\r\nimport { BrewEffectAtPointChallengeFactory } from \"./challenge-types/BrewEffectAtPointChallenge\";\r\n\r\nimport { IChallenge } from \"./Challenge\";\r\n\r\nconst CHALLENGE_MIN_RADIUS = 15;\r\n\r\n@injectable()\r\n@singleton()\r\nexport class ChallengeFactory {\r\n  constructor(\r\n    @inject(PotionBaseRegistry)\r\n    private readonly _potionBaseRegistry: PotionBaseRegistry,\r\n    @inject(BrewEffectAtPointChallengeFactory)\r\n    private readonly _brewEffectAtPointChallengeFactory: BrewEffectAtPointChallengeFactory\r\n  ) {}\r\n\r\n  createDailyChallenge(): IChallenge {\r\n    const todayDate = new Date().toISOString().split(\"T\")[0];\r\n    const random = createRandom(`daily-challenge-${todayDate}`);\r\n\r\n    const waterMap = this._potionBaseRegistry.getPotionBaseById(\r\n      \"water\" as any\r\n    )!.map;\r\n    const challengeMap = this._createChallengeMap(waterMap);\r\n    const effectPosition = this._getFreeEffectPosition(\r\n      challengeMap,\r\n      CHALLENGE_MIN_RADIUS,\r\n      random\r\n    );\r\n\r\n    const challenge = this._brewEffectAtPointChallengeFactory({\r\n      baseMap: challengeMap,\r\n      targetPosition: effectPosition,\r\n    });\r\n\r\n    return challenge;\r\n  }\r\n\r\n  private _createChallengeMap(base: PotionMap): PotionMap {\r\n    return new PotionMap(\r\n      base.entities.filter(\r\n        (x) =>\r\n          x.entityType !== \"PotionEffect\" && x.entityType !== \"ExperienceBonus\"\r\n      )\r\n    );\r\n  }\r\n\r\n  private _getFreeEffectPosition(\r\n    map: PotionMap,\r\n    minRadius: number,\r\n    random: RandomSeed\r\n  ): Vector2 {\r\n    for (let i = 0; i < 50; i++) {\r\n      // We need to extend the radius out to reach the corners, so we do not cut them out of the map.\r\n      const radius = random.floatBetween(\r\n        minRadius,\r\n        vec2Distance(Vec2Zero, { x: MAP_EXTENT_RADIUS, y: MAP_EXTENT_RADIUS })\r\n      );\r\n      const angle = random.floatBetween(0, 2 * Math.PI);\r\n      const p: Vector2 = {\r\n        x: Number((radius * Math.cos(angle)).toFixed(2)),\r\n        y: Number((radius * Math.sin(angle)).toFixed(2)),\r\n      };\r\n\r\n      if (\r\n        p.x - POTION_RADIUS < -MAP_EXTENT_RADIUS ||\r\n        p.x + POTION_RADIUS > MAP_EXTENT_RADIUS ||\r\n        p.y - POTION_RADIUS < -MAP_EXTENT_RADIUS ||\r\n        p.y + POTION_RADIUS > MAP_EXTENT_RADIUS\r\n      ) {\r\n        // Make sure its within the rectangular map.\r\n        continue;\r\n      }\r\n\r\n      // Area must be free.  This means we also cant stomp on top of vortexes.\r\n      const hit = map.hitTest(p, POTION_RADIUS);\r\n      if (hit.length > 0) {\r\n        continue;\r\n      }\r\n\r\n      return p;\r\n    }\r\n    throw new Error(\"Failed to find effect position after 50 tries\");\r\n  }\r\n}\r\n","import { Identifier, ServiceLocator } from \"microinject\";\r\nimport { clamp, last, sum, uniq } from \"lodash\";\r\n\r\nimport { vec2Distance, Vec2Zero, Vector2 } from \"@/vector2\";\r\nimport { pointArrayLength } from \"@/point-array\";\r\n\r\nimport { AddIngredientPlotItem, PlotItem } from \"@/services/plotter/types\";\r\n\r\nimport { Plotter } from \"../../plotter/Plotter\";\r\nimport { getEffectTier, longestDangerLength } from \"../../plotter/utils\";\r\n\r\nimport { PotionMap } from \"../../potion-maps/PotionMap\";\r\n\r\nimport { ChallengeResults, ChallengeScoreItem, IChallenge } from \"../Challenge\";\r\nimport { DANGER_LENGTH_LETHAL } from \"@/game-settings\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\n\r\nexport interface BrewEffectAtPointChallengeOptions {\r\n  baseMap: PotionMap;\r\n  targetPosition: Vector2;\r\n}\r\n\r\nexport const BrewEffectAtPointChallengeFactory: Identifier<BrewEffectAtPointChallengeFactory> =\r\n  \"BrewEffectAtPointChallengeFactory\";\r\nexport type BrewEffectAtPointChallengeFactory = (\r\n  options: BrewEffectAtPointChallengeOptions\r\n) => IChallenge;\r\n\r\nexport function brewEffectAtPointChallengeFactoryFactory(\r\n  serviceLocator: ServiceLocator\r\n) {\r\n  return (options: BrewEffectAtPointChallengeOptions) => {\r\n    const plotter = serviceLocator.get(Plotter);\r\n    const ingredientRegistry = serviceLocator.get(IngredientRegistry);\r\n    return new BrewEffectAtPointChallenge(\r\n      options.baseMap,\r\n      options.targetPosition,\r\n      plotter,\r\n      ingredientRegistry\r\n    );\r\n  };\r\n}\r\nclass BrewEffectAtPointChallenge implements IChallenge {\r\n  private readonly _map: PotionMap;\r\n\r\n  constructor(\r\n    baseMap: PotionMap,\r\n    private readonly _targetPosition: Vector2,\r\n    private readonly _plotter: Plotter,\r\n    private readonly _ingredientRegistry: IngredientRegistry\r\n  ) {\r\n    this._map = new PotionMap([\r\n      ...baseMap.entities.filter((x) => x.entityType !== \"PotionEffect\"),\r\n      {\r\n        entityType: \"PotionEffect\",\r\n        // TODO: Should probably make a \"Challenge\" effect internal to us.\r\n        effect: \"Lightning\",\r\n        ..._targetPosition,\r\n      },\r\n    ]);\r\n  }\r\n\r\n  get map(): PotionMap {\r\n    return this._map;\r\n  }\r\n\r\n  get description(): string {\r\n    return `Brew the effect at (${this._targetPosition.x}, ${this._targetPosition.y})`;\r\n  }\r\n\r\n  getScore(plotItems: readonly PlotItem[]): ChallengeResults | null {\r\n    // Disallow cheats/utilities.\r\n    if (plotItems.some((x) => x.type === \"set-position\")) {\r\n      return null;\r\n    }\r\n\r\n    const results: ChallengeResults = {};\r\n\r\n    // Reward multiplied by the teir of the effect.\r\n    const TIER_REWARD = 1000;\r\n\r\n    const WATERLESS_REWARD = 500;\r\n    const VORTEXLESS_REWARD = 200;\r\n\r\n    // Penalty for distance scaled by the actual distance divided by linear distance.  Twice as long will subtract 100 points.\r\n    const DISTANCE_PENALTY = -100;\r\n\r\n    // Penalty for stress.  Penalty applies to any stress value over 1.\r\n    const STRESS_PENALTY = -100;\r\n\r\n    // Each unit of cost subtracts this from the score.\r\n    const COST_PENALTY = -5;\r\n\r\n    const { committedPoints } = this._plotter.plotItems(plotItems, this._map);\r\n    const lastPoint = last(committedPoints) ?? Vec2Zero;\r\n    const tier = getEffectTier(\r\n      vec2Distance(lastPoint, this._targetPosition),\r\n      0\r\n    );\r\n\r\n    const isComplete = tier > 0;\r\n    if (!isComplete) {\r\n      return null;\r\n    }\r\n\r\n    let totalScore = 0;\r\n\r\n    const tierScore = TIER_REWARD * tier;\r\n    totalScore += tierScore;\r\n    results[\"tier\"] = {\r\n      value: `Tier ${tier}`,\r\n      score: tierScore,\r\n    };\r\n\r\n    if (plotItems.every((x) => x.type !== \"pour-solvent\")) {\r\n      totalScore += WATERLESS_REWARD;\r\n      results[\"waterless\"] = {\r\n        value: \"Waterless\",\r\n        score: WATERLESS_REWARD,\r\n      };\r\n    }\r\n\r\n    if (plotItems.every((x) => x.type !== \"heat-vortex\")) {\r\n      totalScore += VORTEXLESS_REWARD;\r\n      results[\"vortexless\"] = {\r\n        value: \"Vortexless\",\r\n        score: VORTEXLESS_REWARD,\r\n      };\r\n    }\r\n\r\n    // Grade based on the distance they took to get there compared to the 'perfect' distance of a straight line.\r\n    const pathDistance = pointArrayLength(committedPoints);\r\n    const linearDistance = vec2Distance(Vec2Zero, this._targetPosition);\r\n    const distanceFraction = pathDistance / linearDistance;\r\n    const distanceScore = Math.round(DISTANCE_PENALTY * distanceFraction);\r\n    totalScore += distanceScore;\r\n    results[\"distance\"] = {\r\n      value: `${pathDistance.toFixed(2)} / ${linearDistance.toFixed(2)}`,\r\n      score: distanceScore,\r\n    };\r\n\r\n    const ingredients = plotItems\r\n      .filter(isAddIngredientPlotItem)\r\n      .map((x) => x.ingredientId);\r\n\r\n    let baseCost = 0;\r\n    let ingredientTypeCounts: Record<string, number> = {};\r\n    for (const ingredientId of ingredients) {\r\n      const ingredient =\r\n        this._ingredientRegistry.getIngredientById(ingredientId);\r\n      if (!ingredient) {\r\n        continue;\r\n      }\r\n      baseCost += ingredient.price;\r\n      ingredientTypeCounts[ingredient.id] =\r\n        (ingredientTypeCounts[ingredient.id] ?? 0) + 1;\r\n    }\r\n\r\n    const stress = Math.sqrt(\r\n      sum(\r\n        Object.keys(ingredientTypeCounts).map((key) =>\r\n          Math.pow(ingredientTypeCounts[key], 2)\r\n        )\r\n      )\r\n    );\r\n\r\n    const potentialHighlanderStress = Math.sqrt(\r\n      Object.keys(ingredientTypeCounts).length\r\n    );\r\n    const stressScore = Math.round(\r\n      STRESS_PENALTY * Math.max(stress - potentialHighlanderStress, 0)\r\n    );\r\n    if (stressScore < 0) {\r\n      totalScore += stressScore;\r\n      results[\"stress\"] = {\r\n        value: `${stress.toFixed(2)} / ${potentialHighlanderStress.toFixed(2)}`,\r\n        score: stressScore,\r\n      };\r\n    }\r\n\r\n    const costScore = Math.round(COST_PENALTY * baseCost);\r\n    totalScore += costScore;\r\n    results[\"cost\"] = {\r\n      value: `${baseCost.toFixed(2)}`,\r\n      score: costScore,\r\n    };\r\n\r\n    const dangerLength = longestDangerLength(committedPoints);\r\n    if (dangerLength > DANGER_LENGTH_LETHAL) {\r\n      // TODO: Charge for life salt for bones.\r\n      // Each unit of life salt costs (8736 / 5000) to produce.  Check how much life it regens and use that to find the cost\r\n      // to escape EACH danger segment.\r\n      results[\"bones\"] = {\r\n        value: \"Bone penalty (-25%)\",\r\n        score: -Math.round(totalScore * 0.25),\r\n      };\r\n    }\r\n\r\n    return results;\r\n  }\r\n}\r\n\r\nfunction isAddIngredientPlotItem(\r\n  item: PlotItem\r\n): item is AddIngredientPlotItem {\r\n  return item.type === \"add-ingredient\";\r\n}\r\n","import { ContainerModule } from \"microinject\";\r\n\r\nimport {\r\n  BrewEffectAtPointChallengeFactory,\r\n  brewEffectAtPointChallengeFactoryFactory,\r\n} from \"./challenge-types/BrewEffectAtPointChallenge\";\r\n\r\nimport { ChallengeFactory } from \"./ChallengeFactory\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(BrewEffectAtPointChallengeFactory)\r\n    .toFactory(brewEffectAtPointChallengeFactoryFactory)\r\n    .inSingletonScope();\r\n  bind(ChallengeFactory);\r\n});\r\n","import React from \"react\";\r\nimport { Router } from \"react-router\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\n\r\nimport { History } from \"./History\";\r\n\r\nexport interface AppRouterProps {\r\n  children: React.ReactNode;\r\n}\r\nconst AppRouter = ({ children }: AppRouterProps) => {\r\n  const history = useDIDependency(History);\r\n  let [state, setState] = React.useState({\r\n    action: history.action,\r\n    location: history.location,\r\n  });\r\n\r\n  React.useLayoutEffect(() => history.listen(setState), [history]);\r\n\r\n  return (\r\n    <Router\r\n      children={children}\r\n      location={state.location}\r\n      navigationType={state.action}\r\n      navigator={history}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import {\r\n  type History as HistoryType,\r\n  createHashHistory,\r\n  createBrowserHistory,\r\n} from \"history\";\r\nimport { Identifier } from \"microinject\";\r\n\r\nexport const History: Identifier<HistoryType> = \"history\";\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- Merged DI identifier.\r\nexport type History = HistoryType;\r\nexport function historyFactory() {\r\n  // if (process.env.NODE_ENV === \"production\") {\r\n  //   return createBrowserHistory();\r\n  // } else {\r\n  return createHashHistory();\r\n  // }\r\n}\r\n","import { ContainerModule } from \"microinject\";\r\nimport { History, historyFactory } from \"./History\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(History).toFactory(historyFactory).inSingletonScope();\r\n});\r\n","import { injectable, singleton } from \"microinject\";\r\n\r\nimport { ingredients } from \"./ingredients\";\r\nimport { IngredientDescriptor, IngredientId } from \"./types\";\r\n\r\n@injectable()\r\n@singleton()\r\nexport class IngredientRegistry {\r\n  getIngredients(): readonly IngredientDescriptor[] {\r\n    return ingredients;\r\n  }\r\n\r\n  getIngredientById(id: IngredientId): IngredientDescriptor | null {\r\n    return ingredients.find((x) => x.id === id) ?? null;\r\n  }\r\n}\r\n","import { cubicBezierCurve } from \"@/curves\";\r\nimport { IngredientDescriptor, ingredientId } from \"./types\";\r\n\r\nexport const ingredients: IngredientDescriptor[] = [\r\n  {\r\n    id: ingredientId(\"BloodRuby\"),\r\n    name: \"Blood Ruby\",\r\n    color: \"#C24647\",\r\n    price: 90,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3, -3, -3, -3),\r\n      cubicBezierCurve(-3, -3, -3, -3, -3, 3, -3, 3),\r\n      cubicBezierCurve(-3, 3, -3, 3, -5.9999, 0, -6, 0),\r\n    ],\r\n    preGrindPercent: 0.1465,\r\n    teleports: true,\r\n  },\r\n  {\r\n    id: ingredientId(\"BloodyRoot\"),\r\n    name: \"Bloodthorn\",\r\n    color: \"#AC4937\",\r\n    price: 14,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0.0001001358, -2, 0, -2),\r\n      cubicBezierCurve(0, -2, -0.0001001358, -2, -1.7499, 1, -1.75, 1),\r\n      cubicBezierCurve(-1.75, 1, -1.7501, 1, -1.7501, -3, -1.75, -3),\r\n      cubicBezierCurve(-1.75, -3, -1.7499, -3, -4.0001, 2, -4, 2),\r\n      cubicBezierCurve(-4, 2, -3.9999, 2, -3.9999, -4, -4, -4),\r\n      cubicBezierCurve(-4, -4, -4.0001, -4, -5.9999, 0, -6, 0),\r\n    ],\r\n    preGrindPercent: 0.435,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"CliffFungus\"),\r\n    name: \"Brown Mushroom\",\r\n    color: \"#957C64\",\r\n    price: 6,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, -1, 0, -1, -1, -1),\r\n      cubicBezierCurve(-1, -1, -2, -1, -2, -1, -2, -2),\r\n      cubicBezierCurve(-2, -2, -2, -3, -2, -3, 0, -3),\r\n      cubicBezierCurve(0, -3, 2, -3, 2, -3, 2, -4),\r\n      cubicBezierCurve(2, -4, 2, -5, 2, -5, 0.5, -5),\r\n      cubicBezierCurve(0.5, -5, 0, -5, 0, -5, 0, -6),\r\n    ],\r\n    preGrindPercent: 0.5,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Crystal\"),\r\n    name: \"Cloud Crystal\",\r\n    color: \"#ADADAD\",\r\n    price: 60,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 0, -0.75, 1, 0, 1.5),\r\n      cubicBezierCurve(0, 1.5, 0.7499999, 2, 1, 2, 1, 2.75),\r\n      cubicBezierCurve(1, 2.75, 0.9999999, 3.75, -0.9999999, 3.25, -1, 4.25),\r\n      cubicBezierCurve(-1, 4.25, -1, 5, -0.75, 5, 0, 5.5),\r\n      cubicBezierCurve(0, 5.5, 0.7499999, 6, 0.0001, 7, 0, 7),\r\n    ],\r\n    preGrindPercent: 0.177,\r\n    teleports: true,\r\n  },\r\n  {\r\n    id: ingredientId(\"DryadMushroom\"),\r\n    name: \"Dryad's Saddle\",\r\n    color: \"#9C785A\",\r\n    price: 5.5,\r\n    path: [\r\n      cubicBezierCurve(0, 0, -0.25, 0, -1.33541, -0.3291796, -1, -1),\r\n      cubicBezierCurve(-1, -1, -0.5, -2, 2, -0.5, 2, -2),\r\n      cubicBezierCurve(2, -2, 2, -3.5, -2, -1.25, -2, -3),\r\n      cubicBezierCurve(-2, -3, -2, -3.75, 0.0001, -3.75, 0, -3.75),\r\n    ],\r\n    preGrindPercent: 0.53,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"EarthCrystal\"),\r\n    name: \"Earth Pyrite\",\r\n    color: \"#93806A\",\r\n    price: 30,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0, -1.5, 0, -1.5),\r\n      cubicBezierCurve(0, -1.5, 0, -1.5, -1, -1.5, -1, -1.5),\r\n      cubicBezierCurve(-1, -1.5, -1, -1.5, -1, -3.5, -1, -3.5),\r\n      cubicBezierCurve(-1, -3.5, -1, -3.5, 1, -3.5, 1, -3.5),\r\n      cubicBezierCurve(1, -3.5, 1, -3.5, 1, -5.5, 1, -5.5),\r\n      cubicBezierCurve(1, -5.5, 1, -5.5, 0, -5.5, 0, -5.5),\r\n      cubicBezierCurve(0, -5.5, 0, -5.5, 0.0001, -7, 0, -7),\r\n    ],\r\n    preGrindPercent: 0.1364,\r\n    teleports: true,\r\n  },\r\n  {\r\n    id: ingredientId(\"Firebell\"),\r\n    name: \"Firebell\",\r\n    color: \"#D1810D\",\r\n    price: 5,\r\n    path: [\r\n      cubicBezierCurve(0, 0, -1.25, 1, -1.2501, 1, -1.25, 1),\r\n      cubicBezierCurve(-1.25, 1, -1.2499, 1, -2.5001, 0, -2.5, 0),\r\n      cubicBezierCurve(-2.5, 0, -2.4999, 0, -3.7501, 1, -3.75, 1),\r\n      cubicBezierCurve(-3.75, 1, -3.7499, 1, -3.75, 1, -5, 0),\r\n    ],\r\n    preGrindPercent: 0.5,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"FireCitrine\"),\r\n    name: \"Fire Citrine\",\r\n    color: \"#CD7C19\",\r\n    price: 50,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -0.75, -1.5, -1.5, 0),\r\n      cubicBezierCurve(-1.5, 0, -2.5, 2, -2.75, -0.7499999, -3.5, -0.75),\r\n      cubicBezierCurve(-3.5, -0.75, -4.25, -0.75, -4.5, 2, -5.5, 0),\r\n      cubicBezierCurve(-5.5, 0, -6.25, -1.5, -6.9999, 0, -7, 0),\r\n    ],\r\n    preGrindPercent: 0.202,\r\n    teleports: true,\r\n  },\r\n  {\r\n    id: ingredientId(\"FrostSapphire\"),\r\n    name: \"Frost Sapphire\",\r\n    color: \"#7399BF\",\r\n    price: 40,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 0, 0.25, 0.5, 0.25, 0.5),\r\n      cubicBezierCurve(0.25, 0.5, 0.25, 0.5, 1, -1, 1, -1),\r\n      cubicBezierCurve(1, -1, 1, -1, 2, 1, 2, 1),\r\n      cubicBezierCurve(2, 1, 2, 1, 3, -1, 3, -1),\r\n      cubicBezierCurve(3, -1, 3, -1, 4, 1, 4, 1),\r\n      cubicBezierCurve(4, 1, 4, 1, 5, -1, 5, -1),\r\n      cubicBezierCurve(5, -1, 5, -1, 6, 1, 6, 1),\r\n      cubicBezierCurve(6, 1, 6, 1, 6.75, -0.5, 6.75, -0.5),\r\n      cubicBezierCurve(6.75, -0.5, 6.75, -0.5, 7.0001, 0, 7, 0),\r\n    ],\r\n    preGrindPercent: 0.2139,\r\n    teleports: true,\r\n  },\r\n  {\r\n    id: ingredientId(\"GoblinMushroom\"),\r\n    name: \"Goblin Shroom\",\r\n    color: \"#928A5E\",\r\n    price: 5,\r\n    path: [cubicBezierCurve(0, 0, 3, 0, 3, -5, 0, -5)],\r\n    preGrindPercent: 0.663,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Goldthorn\"),\r\n    name: \"Goldthorn\",\r\n    color: \"#96714E\",\r\n    price: 12.5,\r\n    path: [\r\n      cubicBezierCurve(0, 0, -0.25, 0, -0.5, 0.25, -0.5, 0.5),\r\n      cubicBezierCurve(-0.5, 0.5, -0.5, 0.75, -0.25, 1, 0, 1),\r\n      cubicBezierCurve(0, 1, 1, 1, 1, 0.5, 1, 0),\r\n      cubicBezierCurve(1, 0, 1, -0.5, 0.5, -0.9999999, 0, -1),\r\n      cubicBezierCurve(0, -1, -0.75, -1, -1.5, -0.25, -1.5, 0.25),\r\n      cubicBezierCurve(-1.5, 0.25, -1.5, 1.75, -0.75, 2, 0, 2),\r\n      cubicBezierCurve(0, 2, 1.25, 2, 2, 1.25, 2, 0),\r\n      cubicBezierCurve(2, 0, 2, -1, 1, -2, 0, -2),\r\n    ],\r\n    preGrindPercent: 0.3013,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"GraveTruffle\"),\r\n    name: \"Grave Truffle\",\r\n    color: \"#908B7F\",\r\n    price: 10,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3.0001, -2, -3, -2),\r\n      cubicBezierCurve(-3, -2, -2.9999, -2, -0.7501, -7, -0.75, -7),\r\n      cubicBezierCurve(-0.75, -7, -0.7499, -7, 0.7499, -7, 0.75, -7),\r\n      cubicBezierCurve(0.75, -7, 0.7501, -7, 3, -2, 3, -2),\r\n      cubicBezierCurve(3, -2, 3, -2, -0.0001, -1.25, 0, -1.25),\r\n      cubicBezierCurve(0, -1.25, 0.0001, -1.25, 0.0001, -5, 0, -5),\r\n    ],\r\n    preGrindPercent: 0.2535,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"GreenMushroom\"),\r\n    name: \"Green Mushroom\",\r\n    color: \"#A5A24F\",\r\n    price: 9,\r\n    path: [\r\n      cubicBezierCurve(\r\n        0,\r\n        0,\r\n        3.02107,\r\n        1.020414,\r\n        0.5508628,\r\n        -1.518064,\r\n        1.527383,\r\n        -2.506451\r\n      ),\r\n      cubicBezierCurve(\r\n        1.527383,\r\n        -2.506451,\r\n        2.500548,\r\n        -3.491441,\r\n        5.012281,\r\n        -0.9910625,\r\n        3.996144,\r\n        -3.978157\r\n      ),\r\n    ],\r\n    preGrindPercent: 0.5,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"GreyChanterelle\"),\r\n    name: \"Shadow Chanterelle\",\r\n    color: \"#887C77\",\r\n    price: 10,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 3, 0, -2.384186e-7, 5, 3, 5),\r\n      cubicBezierCurve(3, 5, 4, 5, 4.5, 4, 4.5, 3),\r\n    ],\r\n    preGrindPercent: 0.512,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"IceDragonfruit\"),\r\n    name: \"Ice Fruit\",\r\n    color: \"#5D8089\",\r\n    price: 9,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0.9999, 2, 1, 2),\r\n      cubicBezierCurve(1, 2, 1.0001, 2, 3, -2, 3, -2),\r\n      cubicBezierCurve(3, -2, 3, -2, 4.9999, 2, 5, 2),\r\n      cubicBezierCurve(5, 2, 5.0001, 2, 6.0001, 0, 6, 0),\r\n    ],\r\n    preGrindPercent: 0.333,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"LavaRoot\"),\r\n    name: \"Lava Root\",\r\n    color: \"#C86B41\",\r\n    price: 11.5,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 1.5, -2.5, 1.5, -2.5, 0),\r\n      cubicBezierCurve(-2.5, 0, -2.5, -1.5, -5, -1.5, -5, 0),\r\n      cubicBezierCurve(-5, 0, -5, 1.5, -7.5, 1.5, -7.5, 0),\r\n      cubicBezierCurve(-7.5, 0, -7.5, -0.75, -6.25, -0.75, -6.25, 0),\r\n    ],\r\n    preGrindPercent: 0.4289,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Leaf\"),\r\n    name: \"Terraria\",\r\n    color: \"#749064\",\r\n    price: 3,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -0.25, -0.75, 0, -1),\r\n      cubicBezierCurve(0, -1, 0.25, -1.25, 0.5, -1, 0.75, -1.25),\r\n      cubicBezierCurve(0.75, -1.25, 1, -1.5, 1, -2.25, 0.75, -2.5),\r\n      cubicBezierCurve(0.75, -2.5, 0.5, -2.75, -0.5, -2.25, -0.75, -2.5),\r\n      cubicBezierCurve(-0.75, -2.5, -1, -2.75, -1, -3.5, -0.75, -3.75),\r\n      cubicBezierCurve(-0.75, -3.75, -0.5, -4, -0.1767767, -3.823223, 0, -4),\r\n      cubicBezierCurve(0, -4, 0.25, -4.25, 0.0001, -5, 0, -5),\r\n    ],\r\n    preGrindPercent: 0.5,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"LumpyBeet\"),\r\n    name: \"Lumpy Beet\",\r\n    color: \"#A36674\",\r\n    price: 9,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 2, 3, 1, 3, 3),\r\n      cubicBezierCurve(3, 3, 3, 4, 1, 4, 1, 3),\r\n      cubicBezierCurve(1, 3, 1, 2, 1, 1, 1, 0),\r\n      cubicBezierCurve(1, 0, 1, -1, 3, -1, 3, 0),\r\n      cubicBezierCurve(3, 0, 3, 1, 3, 2, 4, 2),\r\n    ],\r\n    preGrindPercent: 0.1805,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Marshrooms\"),\r\n    name: \"Marshroom\",\r\n    color: \"#837956\",\r\n    price: 7,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 2, -2, 1, -4, 3, -4),\r\n      cubicBezierCurve(3, -4, 3.5, -4, 5, -4, 5, -3),\r\n    ],\r\n    preGrindPercent: 0.423,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"RedMushroom\"),\r\n    name: \"Red Mushroom\",\r\n    color: \"#A76C3F\",\r\n    price: 9.5,\r\n    path: [cubicBezierCurve(0, 0, -4, 4, -4, -4, -8, 0)],\r\n    preGrindPercent: 0.5,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Refruit\"),\r\n    name: \"Hairy Banana\",\r\n    color: \"#C5B13E\",\r\n    price: 12.5,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3, -3, -4, -3),\r\n      cubicBezierCurve(-4, -3, -5, -3, -8.000098, -2.453497e-5, -8, 0),\r\n      cubicBezierCurve(-8, 0, -7, 0.25, -5, -1.25, -4, -1),\r\n    ],\r\n    preGrindPercent: 0.3375,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"SulphurShelf\"),\r\n    name: \"Sulphur Shelf\",\r\n    color: \"#D77838\",\r\n    price: 11,\r\n    path: [\r\n      cubicBezierCurve(0, 0, -2, 0, -3.5, 0, -3.5, 0.75),\r\n      cubicBezierCurve(-3.5, 0.75, -3.5, 1.5, -2.75, 1.5, -2.25, 1.5),\r\n      cubicBezierCurve(-2.25, 1.5, -1.75, 1.5, -1, 1.5, -1, 2.25),\r\n      cubicBezierCurve(-1, 2.25, -1, 3, -2.5, 3, -4.5, 3),\r\n    ],\r\n    preGrindPercent: 0.5,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Tangleweeds\"),\r\n    name: \"Tangleweed\",\r\n    color: \"#759786\",\r\n    price: 8.5,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, -1, 3, -1, 3, 0),\r\n      cubicBezierCurve(3, 0, 3, 1, 1.5, 1, 1.5, 0),\r\n      cubicBezierCurve(1.5, 0, 1.5, -1, 3, -2, 4, 0),\r\n      cubicBezierCurve(4, 0, 5, 2, 6.5, 1, 6.5, 0),\r\n      cubicBezierCurve(6.5, 0, 6.5, -1, 5, -1, 5, 0),\r\n      cubicBezierCurve(5, 0, 5, 1, 8, 1, 8, 0),\r\n    ],\r\n    preGrindPercent: 0.5005,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Thistle\"),\r\n    name: \"Thunder Thistle\",\r\n    color: \"#9E5874\",\r\n    price: 9,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 1.9999, 3.5, 2, 3.5),\r\n      cubicBezierCurve(2, 3.5, 2.0001, 3.5, -0.9999, 2.5, -1, 2.5),\r\n      cubicBezierCurve(-1, 2.5, -1.0001, 2.5, 1.0001, 6, 1, 6),\r\n    ],\r\n    preGrindPercent: 0.353,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Thornstick\"),\r\n    name: \"Thornstick\",\r\n    color: \"#818C4D\",\r\n    price: 8,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3.9999, -6, -4, -6),\r\n      cubicBezierCurve(-4, -6, -4.0001, -6, -1.9999, -5, -2, -5),\r\n    ],\r\n    preGrindPercent: 0.319,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Waterbloom\"),\r\n    name: \"Waterbloom\",\r\n    color: \"#539278\",\r\n    price: 4,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.25, -0.5, 1, -0.5, 1.25, 0),\r\n      cubicBezierCurve(1.25, 0, 1.5, 0.4999999, 2.25, 0.5, 2.5, 0),\r\n      cubicBezierCurve(2.5, 0, 2.75, -0.5, 3.5, -0.5, 3.75, 0),\r\n      cubicBezierCurve(3.75, 0, 4, 0.4999999, 4.75, 0.5, 5, 0),\r\n    ],\r\n    preGrindPercent: 0.5,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Wierdshroom\"),\r\n    name: \"Weirdshroom\",\r\n    color: \"#B88A51\",\r\n    price: 8.5,\r\n    path: [\r\n      cubicBezierCurve(0, 0, -2, 0, -2, -6, -1, -6),\r\n      cubicBezierCurve(-1, -6, 0.25, -6, 1.353553, -6.207107, 1, -5.5),\r\n      cubicBezierCurve(1, -5.5, 0.5, -4.5, -0.25, -3.75, 0, -3),\r\n    ],\r\n    preGrindPercent: 0.3045,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Windbloom\"),\r\n    name: \"Windbloom\",\r\n    color: \"#ADABA2\",\r\n    price: 6,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0, 0, 0.5, 1.25),\r\n      cubicBezierCurve(0.5, 1.25, 0.9999999, 2.5, 0.9999, 2.5, 1, 2.5),\r\n      cubicBezierCurve(1, 2.5, 1.0001, 2.5, -1.0001, 2.5, -1, 2.5),\r\n      cubicBezierCurve(-1, 2.5, -0.9999, 2.5, -1, 2.5, -0.5, 3.75),\r\n      cubicBezierCurve(-0.5, 3.75, -2.086163e-7, 5, 0.0001, 5, 0, 5),\r\n    ],\r\n    preGrindPercent: 0.5,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"WitchMushroom\"),\r\n    name: \"Witch Mushroom\",\r\n    color: \"#92777C\",\r\n    price: 13,\r\n    path: [cubicBezierCurve(0, 0, 0, 4, 5, 1, 5, 5)],\r\n    preGrindPercent: 0.5,\r\n    teleports: false,\r\n  },\r\n];\r\n","import { ContainerModule } from \"microinject\";\r\n\r\nimport { IngredientRegistry } from \"./IngredientRegistry\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(IngredientRegistry);\r\n});\r\n","import { CubicBezierCurve } from \"@/curves\";\r\nimport { Opaque } from \"type-fest\";\r\n\r\nexport type IngredientId = Opaque<string, \"IngredientName\">;\r\nexport function ingredientId(id: string): IngredientId {\r\n  return id as IngredientId;\r\n}\r\n\r\nexport interface IngredientDescriptor {\r\n  readonly id: IngredientId;\r\n  readonly name: string;\r\n  readonly color: string;\r\n  readonly price: number;\r\n  readonly path: CubicBezierCurve[];\r\n  readonly preGrindPercent: number;\r\n  readonly teleports: boolean;\r\n}\r\n","import { composeModules } from \"microinject\";\r\n\r\nimport challengeModule from \"./challenge/module\";\r\nimport historyModule from \"./history/module\";\r\nimport ingredientsModule from \"./ingredients/module\";\r\nimport plotterModule from \"./plotter/module\";\r\nimport potionBasesModule from \"./potion-bases/module\";\r\n\r\nexport default composeModules(\r\n  challengeModule,\r\n  historyModule,\r\n  ingredientsModule,\r\n  plotterModule,\r\n  potionBasesModule\r\n);\r\n","import { last } from \"lodash\";\r\nimport { inject, injectable, singleton } from \"microinject\";\r\n\r\nimport { POTION_RADIUS } from \"@/game-settings\";\r\nimport { degreesToRadians } from \"@/utils\";\r\nimport { curveToPoints } from \"@/curves\";\r\nimport {\r\n  PointArray,\r\n  pointArrayLengthCached,\r\n  pointArrayLineFromDistance,\r\n  removePointArrayDistanceFromEnd,\r\n  takePointArrayByDistance,\r\n} from \"@/point-array\";\r\nimport {\r\n  Vector2,\r\n  vec2Add,\r\n  vec2Distance,\r\n  vec2Equals,\r\n  vec2Magnitude,\r\n  vec2MoveTowards,\r\n  vec2Normalize,\r\n  vec2Rotate,\r\n  vec2Scale,\r\n  pointSignedAngleDegrees180,\r\n  vec2Subtract,\r\n  Vec2Zero,\r\n} from \"@/vector2\";\r\n\r\nimport { IngredientRegistry } from \"../ingredients/IngredientRegistry\";\r\nimport { PotionMap } from \"../potion-maps/PotionMap\";\r\n\r\nimport {\r\n  AddIngredientPlotItem,\r\n  HeatVortexPlotItem,\r\n  PlotItem,\r\n  PlotResult,\r\n  PourSolventPlotItem,\r\n  SetPositionPlotItem,\r\n  StirCauldronPlotItem,\r\n  VoidSaltPlotItem,\r\n} from \"./types\";\r\n\r\n@injectable()\r\n@singleton()\r\nexport class Plotter {\r\n  constructor(\r\n    @inject(IngredientRegistry) private ingredientRegistry: IngredientRegistry\r\n  ) {}\r\n\r\n  plotItems(items: readonly PlotItem[], map: PotionMap): PlotResult {\r\n    let result: PlotResult = {\r\n      committedPoints: [],\r\n      pendingPoints: [],\r\n    };\r\n\r\n    const now = Date.now();\r\n\r\n    for (const item of items) {\r\n      result = this._plotItem(item, result, map);\r\n    }\r\n\r\n    for (const point of result.committedPoints.concat(result.pendingPoints)) {\r\n      const entities = map.hitTest(point, POTION_RADIUS);\r\n      point.entities = entities as any;\r\n    }\r\n\r\n    console.log(\"plotting took\", Date.now() - now);\r\n\r\n    return result;\r\n  }\r\n\r\n  private _plotItem(\r\n    item: PlotItem,\r\n    result: PlotResult,\r\n    map: PotionMap\r\n  ): PlotResult {\r\n    switch (item.type) {\r\n      case \"set-position\":\r\n        return this._plotSetPosition(item, result);\r\n      case \"add-ingredient\":\r\n        return this._plotAddIngredient(item, result);\r\n      case \"pour-solvent\":\r\n        return this._plotPourSolvent(item, result);\r\n      case \"stir-cauldron\":\r\n        return this._plotStirCauldron(item, result);\r\n      case \"heat-vortex\":\r\n        return this._plotHeatVortex(item, result, map);\r\n      case \"void-salt\":\r\n        return this._plotVoidSalt(item, result);\r\n      default:\r\n        throw new Error(`Unknown plot item type: ${(item as any).type}`);\r\n    }\r\n  }\r\n\r\n  private _plotSetPosition(\r\n    item: SetPositionPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const { position } = item;\r\n\r\n    return commitPlotPoints([position], item, result);\r\n  }\r\n\r\n  private _plotAddIngredient(\r\n    item: AddIngredientPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const { ingredientId, grindPercent } = item;\r\n\r\n    const addPosition =\r\n      last(result.pendingPoints) ?? last(result.committedPoints) ?? Vec2Zero;\r\n\r\n    const ingredient = this.ingredientRegistry.getIngredientById(ingredientId);\r\n    if (!ingredient) {\r\n      throw new Error(`Unknown ingredient: ${ingredientId}`);\r\n    }\r\n\r\n    const ingredientPoints: PointArray = [];\r\n    let ingredientLength = 0;\r\n    for (const curve of ingredient.path) {\r\n      const points = curveToPoints(curve);\r\n      ingredientPoints.push(...points);\r\n      // Use the cached length, as curveToPoints is cached and will return consistent array references.\r\n      // Note, this produces a very slightly incorrect length. A difference of around e-15 when compared to getting\r\n      // the length of the final ingredientPoints array.\r\n      ingredientLength += pointArrayLengthCached(points);\r\n    }\r\n\r\n    const takePercent =\r\n      ingredient.preGrindPercent +\r\n      grindPercent * (1 - ingredient.preGrindPercent);\r\n\r\n    const [addedPoints] = takePointArrayByDistance(\r\n      ingredientPoints,\r\n      takePercent * ingredientLength\r\n    );\r\n\r\n    const appendPendingPoints = addedPoints.map((point) =>\r\n      vec2Add(addPosition, point)\r\n    );\r\n\r\n    return appendPendingPlotPoints(appendPendingPoints, item, result);\r\n  }\r\n\r\n  private _plotPourSolvent(\r\n    item: PourSolventPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const currentPoint =\r\n      result.committedPoints[result.committedPoints.length - 1] ?? Vec2Zero;\r\n    if (vec2Equals(currentPoint, Vec2Zero)) {\r\n      return result;\r\n    }\r\n\r\n    let { distance } = item;\r\n\r\n    const distanceToOrigin = vec2Distance(currentPoint, Vec2Zero);\r\n    if (distance > distanceToOrigin) {\r\n      distance = distanceToOrigin;\r\n    }\r\n\r\n    const newPoints = pointArrayLineFromDistance(\r\n      currentPoint,\r\n      vec2Normalize(vec2Subtract(Vec2Zero, currentPoint)),\r\n      distance\r\n    );\r\n\r\n    return commitPlotPoints(newPoints, item, result);\r\n  }\r\n\r\n  private _plotStirCauldron(\r\n    item: StirCauldronPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const { distance } = item;\r\n\r\n    const [addedPoints, remainderPlotPoints] = takePointArrayByDistance(\r\n      result.pendingPoints,\r\n      distance\r\n    );\r\n\r\n    return {\r\n      committedPoints: result.committedPoints.concat(addedPoints),\r\n      pendingPoints: remainderPlotPoints,\r\n    };\r\n  }\r\n\r\n  private _plotHeatVortex(\r\n    item: HeatVortexPlotItem,\r\n    result: PlotResult,\r\n    map: PotionMap\r\n  ): PlotResult {\r\n    const indicatorPosition = last(result.committedPoints) ?? Vec2Zero;\r\n    const vortex = map\r\n      .hitTest(indicatorPosition, POTION_RADIUS)\r\n      .find((x) => x.entityType === \"Vortex\");\r\n\r\n    if (!vortex) {\r\n      return result;\r\n    }\r\n\r\n    const { distance } = item;\r\n\r\n    /* RecipeMapManager.MoveIndicatorTowardsVortex()\r\n    float maxDistanceDelta = this.vortexSettings.vortexMovementFromHeatDependence.Evaluate(Managers.Ingredient.coals.Heat) * this.vortexSettings.vortexMovementSpeed * Time.deltaTime;\r\n    Vector2 localPosition1 = (Vector2) this.currentVortexMapItem.thisTransform.localPosition;\r\n    Vector2 localPosition2 = (Vector2) this.recipeMapObject.indicatorContainer.localPosition;\r\n    Vector2 to = localPosition2 - localPosition1;\r\n    float magnitude = to.magnitude;\r\n    float f1 = Mathf.Sign(this.vortexSettings.vortexSpiralThetaPower) * this.vortexSettings.vortexSpiralStep;\r\n    float f2 = Mathf.Pow((float) ((double) magnitude * 2.0 * 3.14159274101257) / f1, 1f / this.vortexSettings.vortexSpiralThetaPower);\r\n    float b = f2 - maxDistanceDelta * (float) ((int) Mathf.Sign(this.vortexSettings.vortexSpiralThetaPower) * (int) Mathf.Sign(f1));\r\n    float f3 = f2.Is(0.0f) ? 0.0f : ((double) f2 < 0.0 ? Mathf.Min(0.0f, b) : Mathf.Max(0.0f, b));\r\n    double num = (double) f1 * 0.5 / 3.14159274101257 * (double) Mathf.Pow(f3, this.vortexSettings.vortexSpiralThetaPower);\r\n    Vector2 from = magnitude * new Vector2(Mathf.Cos(f2), Mathf.Sin(f2));\r\n    Vector2 vector2_1 = new Vector2(Mathf.Cos(f3), Mathf.Sin(f3));\r\n    Vector2 vector2_2 = ((float) num * vector2_1).Rotate(Vector2.SignedAngle(from, to));\r\n    Vector2 vector2_3 = Vector2.MoveTowards(localPosition2, localPosition1 + vector2_2, maxDistanceDelta);\r\n    this.indicator.targetPosition += vector2_3 - localPosition2;\r\n    this.recipeMapObject.indicatorContainer.localPosition = (Vector3) vector2_3;\r\n    */\r\n\r\n    // VortexSettings\r\n    const vortexMovementFromHeatDependence10Percent = 0.19;\r\n    const vortexMovementSpeed = 2.5;\r\n    const vortexSpiralStep = 1;\r\n    const vortexSpiralThetaPower = 1;\r\n\r\n    // Calculate the step as if we were running at 10% heat at 60 frames a second.\r\n    const step =\r\n      vortexMovementFromHeatDependence10Percent *\r\n      vortexMovementSpeed *\r\n      (1 / 60);\r\n\r\n    let remainingDistance = distance;\r\n    let currentPosition = indicatorPosition;\r\n    const pointsToAdd: Vector2[] = [indicatorPosition];\r\n    while (remainingDistance > 0) {\r\n      const to = vec2Subtract(currentPosition, vortex);\r\n      const magnitude = vec2Magnitude(to);\r\n      const f1 = Math.sign(vortexSpiralThetaPower) * vortexSpiralStep;\r\n      const f2 = Math.pow(\r\n        (magnitude * 2.0 * Math.PI) / f1,\r\n        1 / vortexSpiralThetaPower\r\n      );\r\n      const b = f2 - step * (Math.sign(vortexSpiralThetaPower) * Math.sign(f1));\r\n      const f3 =\r\n        Math.abs(f2) < Number.EPSILON\r\n          ? 0\r\n          : f2 < 0.0\r\n          ? Math.min(0.0, b)\r\n          : Math.max(0.0, b);\r\n      const num = ((f1 * 0.5) / Math.PI) * Math.pow(f3, vortexSpiralThetaPower);\r\n      const from = vec2Scale({ x: Math.cos(f2), y: Math.sin(f2) }, magnitude);\r\n      const vector2_1 = { x: Math.cos(f3), y: Math.sin(f3) };\r\n\r\n      const rotation = degreesToRadians(pointSignedAngleDegrees180(from, to));\r\n      const vector2_2 = vec2Rotate(vec2Scale(vector2_1, num), rotation);\r\n      const vector2_3 = vec2MoveTowards(\r\n        currentPosition,\r\n        vec2Add(vortex, vector2_2),\r\n        step\r\n      );\r\n\r\n      currentPosition = vector2_3;\r\n      pointsToAdd.push(currentPosition);\r\n\r\n      remainingDistance = Math.max(0, remainingDistance - step);\r\n    }\r\n\r\n    return commitPlotPoints(pointsToAdd, item, result);\r\n  }\r\n\r\n  private _plotVoidSalt(\r\n    item: VoidSaltPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const { grains } = item;\r\n    // SaltVoid.OnCauldronDissolve\r\n    // Note: While the assembly sets this value to 0.1, the actual prefab deserializes it to 0.01, and the difference can be seen in gameplay.\r\n    const DISTANCE_PER_GRAIN = 0.01;\r\n\r\n    const points = removePointArrayDistanceFromEnd(\r\n      result.pendingPoints,\r\n      grains * DISTANCE_PER_GRAIN\r\n    );\r\n\r\n    return {\r\n      committedPoints: result.committedPoints,\r\n      pendingPoints: points,\r\n    };\r\n  }\r\n}\r\n\r\nfunction appendPendingPlotPoints(\r\n  points: Vector2[],\r\n  source: PlotItem,\r\n  result: PlotResult\r\n): PlotResult {\r\n  if (source == null) {\r\n    throw new Error(\"source is null\");\r\n  }\r\n\r\n  if (points.length === 0) {\r\n    return result;\r\n  }\r\n\r\n  return Object.assign({}, result, {\r\n    pendingPoints: result.pendingPoints.concat(\r\n      points.map((point) => ({\r\n        x: point.x,\r\n        y: point.y,\r\n        source,\r\n        entities: [],\r\n      }))\r\n    ),\r\n  });\r\n}\r\n\r\nfunction commitPlotPoints(\r\n  points: Vector2[],\r\n  source: PlotItem,\r\n  result: PlotResult\r\n): PlotResult {\r\n  if (source == null) {\r\n    throw new Error(\"source is null\");\r\n  }\r\n\r\n  if (points.length === 0) {\r\n    return result;\r\n  }\r\n\r\n  const difference = vec2Subtract(\r\n    last(points)!,\r\n    last(result.committedPoints) ?? Vec2Zero\r\n  );\r\n\r\n  return Object.assign({}, result, {\r\n    committedPoints: result.committedPoints.concat(\r\n      points.map((point) => ({\r\n        x: point.x,\r\n        y: point.y,\r\n        source,\r\n        entities: [],\r\n      }))\r\n    ),\r\n    pendingPoints: result.pendingPoints.map((point) => ({\r\n      x: point.x + difference.x,\r\n      y: point.y + difference.y,\r\n      source: point.source,\r\n    })),\r\n  });\r\n}\r\n","import { BehaviorSubject, combineLatest, Observable, map } from \"rxjs\";\r\n\r\nimport { IngredientId } from \"@/services/ingredients/types\";\r\n\r\nimport { PlotItem } from \"../types\";\r\n\r\nimport { PlotBuilderItem } from \"./PlotBuilderItem\";\r\n\r\nexport class AddIngredientPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _ingredientId$ = new BehaviorSubject<IngredientId | null>(\r\n    null\r\n  );\r\n  private readonly _grindPercent$ = new BehaviorSubject<number>(1);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([\r\n      this._ingredientId$,\r\n      this._grindPercent$,\r\n    ]).pipe(map(() => this.isValid));\r\n\r\n    combineLatest([this._ingredientId$, this._grindPercent$]).subscribe(\r\n      ([ingredientId, grindPercent]) => {\r\n        if (!this.isValid) {\r\n          this._plotItem$.next(null);\r\n          return;\r\n        }\r\n\r\n        this._plotItem$.next({\r\n          type: \"add-ingredient\",\r\n          ingredientId: ingredientId as IngredientId,\r\n          grindPercent,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    // TODO: Check if ingredientId is valid\r\n    const grindPercent = this._grindPercent$.value;\r\n    return (\r\n      this._ingredientId$.value != null &&\r\n      grindPercent >= 0 &&\r\n      grindPercent <= 1\r\n    );\r\n  }\r\n\r\n  get ingredientId$(): Observable<IngredientId | null> {\r\n    return this._ingredientId$;\r\n  }\r\n\r\n  get ingredientId(): IngredientId | null {\r\n    return this._ingredientId$.value;\r\n  }\r\n\r\n  get grindPercent$(): Observable<number> {\r\n    return this._grindPercent$;\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  setIngredient(ingredientId: IngredientId | null) {\r\n    if (ingredientId === this._ingredientId$.value) {\r\n      return;\r\n    }\r\n\r\n    this._ingredientId$.next(ingredientId);\r\n  }\r\n\r\n  setGrindPercent(percent: number) {\r\n    if (percent === this._grindPercent$.value) {\r\n      return;\r\n    }\r\n\r\n    this._grindPercent$.next(percent);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n","import { BehaviorSubject, combineLatest, Observable, map } from \"rxjs\";\r\n\r\nimport { PlotItem } from \"../types\";\r\n\r\nimport { PlotBuilderItem } from \"./PlotBuilderItem\";\r\n\r\nexport class HeatVortexPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _distance$ = new BehaviorSubject<number | null>(null);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([this._distance$]).pipe(\r\n      map(() => this.isValid)\r\n    );\r\n\r\n    combineLatest([this._distance$]).subscribe(([distace]) => {\r\n      if (!this.isValid) {\r\n        this._plotItem$.next(null);\r\n        return;\r\n      }\r\n\r\n      this._plotItem$.next({\r\n        type: \"heat-vortex\",\r\n        distance: distace!,\r\n      });\r\n    });\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    const distance = this._distance$.value;\r\n    return distance != null && distance >= 0;\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  get distance$(): Observable<number | null> {\r\n    return this._distance$;\r\n  }\r\n\r\n  setDistance(distance: number | null) {\r\n    this._distance$.next(distance);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n","import { inject, injectable } from \"microinject\";\r\nimport { BehaviorSubject, combineLatest, map, Observable } from \"rxjs\";\r\n\r\nimport { isNotNull } from \"@/utils\";\r\n\r\nimport { PotionMap } from \"../../potion-maps/PotionMap\";\r\n\r\nimport { Plotter } from \"../Plotter\";\r\nimport { PlotResult } from \"../types\";\r\n\r\nimport { PlotBuilderItemCollection } from \"./PlotBuilderItemCollection\";\r\n\r\n@injectable()\r\nexport class PlotBuilder extends PlotBuilderItemCollection {\r\n  private readonly _map$ = new BehaviorSubject<PotionMap | null>(null);\r\n  private readonly _plot$: Observable<Readonly<PlotResult> | null>;\r\n\r\n  constructor(@inject(Plotter) plotter: Plotter) {\r\n    super();\r\n    this._plot$ = combineLatest([this._map$, this.plotItems$]).pipe(\r\n      map(([map, plotItems]) => {\r\n        if (map == null) {\r\n          return null;\r\n        }\r\n        return plotter.plotItems(plotItems.filter(isNotNull), map);\r\n      })\r\n    );\r\n  }\r\n\r\n  get map$(): Observable<PotionMap | null> {\r\n    return this._map$;\r\n  }\r\n\r\n  get plot$(): Observable<Readonly<PlotResult> | null> {\r\n    return this._plot$;\r\n  }\r\n\r\n  setMap(map: PotionMap) {\r\n    this._map$.next(map);\r\n  }\r\n}\r\n","import { Observable } from \"rxjs\";\r\nimport { PlotItem } from \"../types\";\r\n\r\nexport abstract class PlotBuilderItem {\r\n  abstract readonly isValid$: Observable<boolean>;\r\n  abstract readonly isValid: boolean;\r\n\r\n  abstract readonly plotItem$: Observable<PlotItem | null>;\r\n  abstract readonly plotItem: PlotItem | null;\r\n\r\n  abstract delete(): void;\r\n}\r\n","import { BehaviorSubject, combineLatest, Observable, Subscription } from \"rxjs\";\r\n\r\nimport { isNotNull } from \"@/utils\";\r\n\r\nimport {\r\n  AddIngredientPlotItem,\r\n  HeatVortexPlotItem,\r\n  PlotItem,\r\n  PourSolventPlotItem,\r\n  SetPositionPlotItem,\r\n  StirCauldronPlotItem,\r\n  VoidSaltPlotItem,\r\n} from \"../types\";\r\n\r\nimport { PlotBuilderItem } from \"./PlotBuilderItem\";\r\n\r\nimport { AddIngredientPlotBuilderItem } from \"./AddIngredientPlotBuilderItem\";\r\nimport { HeatVortexPlotBuilderItem } from \"./HeatVortexPlotBuilderItem\";\r\nimport { PourSolventPlotBuilderItem } from \"./PourSolventPlotBuilderItem\";\r\nimport { StirCauldronPlotBuilderItem } from \"./StirCauldronPlotBuilderItem\";\r\nimport { VoidSaltPlotBuilderItem } from \"./VoidSaltPlotBuilderItem\";\r\nimport { SetPositionPlotBuilderItem } from \"./SetPositionPlotBuilderItem\";\r\n\r\nexport interface IPlotBuilderItemCollection {\r\n  readonly items$: Observable<readonly PlotBuilderItem[]>;\r\n\r\n  builderItemFor(item: PlotItem): PlotBuilderItem | null;\r\n\r\n  moveItem(item: PlotBuilderItem, index: number): void;\r\n\r\n  addIngredient(plotItem?: AddIngredientPlotItem): AddIngredientPlotBuilderItem;\r\n  addStirCauldron(plotItem?: StirCauldronPlotItem): StirCauldronPlotBuilderItem;\r\n  addPourSolvent(plotItem?: PourSolventPlotItem): PourSolventPlotBuilderItem;\r\n  addHeatVortex(plotItem?: HeatVortexPlotItem): HeatVortexPlotBuilderItem;\r\n  addVoidSalt(plotItem?: VoidSaltPlotItem): VoidSaltPlotBuilderItem;\r\n}\r\n\r\nexport class PlotBuilderItemCollection extends Observable<\r\n  readonly PlotBuilderItem[]\r\n> {\r\n  private readonly _items$ = new BehaviorSubject<readonly PlotBuilderItem[]>(\r\n    []\r\n  );\r\n\r\n  private _itemSubscription: Subscription | null = null;\r\n  private readonly _plotItems$ = new BehaviorSubject<readonly PlotItem[]>([]);\r\n\r\n  constructor() {\r\n    super((observer) => this._items$.subscribe(observer));\r\n    this.plotBuilderItems$.subscribe((builderItems) => {\r\n      if (this._itemSubscription) {\r\n        this._itemSubscription.unsubscribe();\r\n      }\r\n\r\n      if (builderItems.length === 0) {\r\n        this._plotItems$.next([]);\r\n        return;\r\n      }\r\n\r\n      this._itemSubscription = combineLatest(\r\n        builderItems.map((x) => x.plotItem$)\r\n      ).subscribe((plotItems) => {\r\n        this._plotItems$.next(plotItems.filter(isNotNull));\r\n      });\r\n    });\r\n  }\r\n\r\n  get plotBuilderItems$(): Observable<readonly PlotBuilderItem[]> {\r\n    return this._items$;\r\n  }\r\n\r\n  get plotBuilderItems(): readonly PlotBuilderItem[] {\r\n    return this._items$.value;\r\n  }\r\n\r\n  get plotItems$(): Observable<readonly PlotItem[]> {\r\n    return this._plotItems$;\r\n  }\r\n\r\n  clear(): void {\r\n    this._items$.next([]);\r\n  }\r\n\r\n  loadPlotItems(items: PlotItem[]) {\r\n    for (const item of items) {\r\n      switch (item.type) {\r\n        case \"set-position\":\r\n          this.addSetPosition(item);\r\n          break;\r\n        case \"add-ingredient\":\r\n          this.addIngredient(item);\r\n          break;\r\n        case \"stir-cauldron\":\r\n          this.addStirCauldron(item);\r\n          break;\r\n        case \"pour-solvent\":\r\n          this.addPourSolvent(item);\r\n          break;\r\n        case \"heat-vortex\":\r\n          this.addHeatVortex(item);\r\n          break;\r\n        case \"void-salt\":\r\n          this.addVoidSalt(item);\r\n          break;\r\n        default:\r\n          throw new Error(`Unknown item type: ${(item as any).type}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  moveItem(item: PlotBuilderItem, index: number) {\r\n    if (index < 0 || index > this._items$.value.length) {\r\n      return;\r\n    }\r\n\r\n    const sourceIndex = this._items$.value.indexOf(item);\r\n    if (sourceIndex === -1) {\r\n      return;\r\n    }\r\n\r\n    const items = [...this._items$.value];\r\n    items.splice(sourceIndex, 1);\r\n    if (sourceIndex < index) {\r\n      index--;\r\n    }\r\n    items.splice(index, 0, item);\r\n    this._items$.next(items);\r\n  }\r\n\r\n  addSetPosition(plotItem?: SetPositionPlotItem): SetPositionPlotBuilderItem {\r\n    const item = new SetPositionPlotBuilderItem((item) =>\r\n      this._deleteItem(item)\r\n    );\r\n    if (plotItem) {\r\n      item.setX(plotItem.position.x);\r\n      item.setY(plotItem.position.y);\r\n    }\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  addIngredient(\r\n    plotItem?: AddIngredientPlotItem\r\n  ): AddIngredientPlotBuilderItem {\r\n    const item = new AddIngredientPlotBuilderItem((item) =>\r\n      this._deleteItem(item)\r\n    );\r\n    if (plotItem) {\r\n      item.setIngredient(plotItem.ingredientId);\r\n      item.setGrindPercent(plotItem.grindPercent);\r\n    }\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  addStirCauldron(\r\n    plotItem?: StirCauldronPlotItem\r\n  ): StirCauldronPlotBuilderItem {\r\n    const item = new StirCauldronPlotBuilderItem((item) =>\r\n      this._deleteItem(item)\r\n    );\r\n    if (plotItem) {\r\n      item.setDistance(plotItem.distance);\r\n    }\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  addPourSolvent(plotItem?: PourSolventPlotItem): PourSolventPlotBuilderItem {\r\n    const item = new PourSolventPlotBuilderItem((item) =>\r\n      this._deleteItem(item)\r\n    );\r\n    if (plotItem) {\r\n      item.setDistance(plotItem.distance);\r\n    }\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  addHeatVortex(plotItem?: HeatVortexPlotItem): HeatVortexPlotBuilderItem {\r\n    const item = new HeatVortexPlotBuilderItem((item) =>\r\n      this._deleteItem(item)\r\n    );\r\n    if (plotItem) {\r\n      item.setDistance(plotItem.distance);\r\n    }\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  addVoidSalt(plotItem?: VoidSaltPlotItem): VoidSaltPlotBuilderItem {\r\n    const item = new VoidSaltPlotBuilderItem((item) => this._deleteItem(item));\r\n    if (plotItem) {\r\n      item.setGrains(plotItem.grains);\r\n    }\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  builderItemFor(item: PlotItem): PlotBuilderItem | null {\r\n    const result = this._items$.value.find((x) => x.plotItem === item) || null;\r\n    return result;\r\n  }\r\n\r\n  private _deleteItem(item: PlotBuilderItem) {\r\n    this._items$.next(this._items$.value.filter((x) => x !== item));\r\n  }\r\n}\r\n","import { BehaviorSubject, combineLatest, Observable, map } from \"rxjs\";\r\n\r\nimport { PlotItem } from \"../types\";\r\n\r\nimport { PlotBuilderItem } from \"./PlotBuilderItem\";\r\n\r\nexport class PourSolventPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _distance$ = new BehaviorSubject<number | null>(null);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([this._distance$]).pipe(\r\n      map(() => this.isValid)\r\n    );\r\n\r\n    combineLatest([this._distance$]).subscribe(([distance]) => {\r\n      if (!this.isValid) {\r\n        this._plotItem$.next(null);\r\n        return;\r\n      }\r\n\r\n      this._plotItem$.next({\r\n        type: \"pour-solvent\",\r\n        distance: distance!,\r\n      });\r\n    });\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    const distance = this._distance$.value;\r\n    return distance != null && distance >= 0;\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  get distance$(): Observable<number | null> {\r\n    return this._distance$;\r\n  }\r\n\r\n  setDistance(distance: number | null) {\r\n    this._distance$.next(distance);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n","import { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\nimport { BehaviorSubject, combineLatest, Observable, map } from \"rxjs\";\r\n\r\nimport { PlotItem } from \"../types\";\r\n\r\nimport { PlotBuilderItem } from \"./PlotBuilderItem\";\r\n\r\nexport class SetPositionPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _x$ = new BehaviorSubject<number | null>(null);\r\n  private readonly _y$ = new BehaviorSubject<number | null>(null);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([this._x$, this._y$]).pipe(\r\n      map(() => this.isValid)\r\n    );\r\n\r\n    combineLatest([this._x$, this._y$]).subscribe(([x, y]) => {\r\n      if (!this.isValid) {\r\n        this._plotItem$.next(null);\r\n        return;\r\n      }\r\n\r\n      this._plotItem$.next({\r\n        type: \"set-position\",\r\n        position: { x: x!, y: y! },\r\n      });\r\n    });\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    const x = this._x$.value;\r\n    const y = this._y$.value;\r\n    if (x == null || x < -MAP_EXTENT_RADIUS || x > MAP_EXTENT_RADIUS) {\r\n      return false;\r\n    }\r\n    if (y == null || y < -MAP_EXTENT_RADIUS || y > MAP_EXTENT_RADIUS) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  get x$(): Observable<number | null> {\r\n    return this._x$;\r\n  }\r\n\r\n  get y$(): Observable<number | null> {\r\n    return this._y$;\r\n  }\r\n\r\n  setX(x: number | null) {\r\n    this._x$.next(x);\r\n  }\r\n\r\n  setY(y: number | null) {\r\n    this._y$.next(y);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n","import { BehaviorSubject, combineLatest, Observable, map } from \"rxjs\";\r\n\r\nimport { PlotItem } from \"../types\";\r\n\r\nimport { PlotBuilderItem } from \"./PlotBuilderItem\";\r\n\r\nexport class StirCauldronPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _distance$ = new BehaviorSubject<number | null>(null);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([this._distance$]).pipe(\r\n      map(() => this.isValid)\r\n    );\r\n\r\n    combineLatest([this._distance$]).subscribe(([stirDistance]) => {\r\n      if (!this.isValid) {\r\n        this._plotItem$.next(null);\r\n        return;\r\n      }\r\n\r\n      this._plotItem$.next({\r\n        type: \"stir-cauldron\",\r\n        distance: stirDistance!,\r\n      });\r\n    });\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    const stirDistance = this._distance$.value;\r\n    return stirDistance != null && stirDistance >= 0;\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  get distance$(): Observable<number | null> {\r\n    return this._distance$;\r\n  }\r\n\r\n  setDistance(distance: number | null) {\r\n    this._distance$.next(distance);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n","import { BehaviorSubject, combineLatest, Observable, map } from \"rxjs\";\r\n\r\nimport { PlotItem } from \"../types\";\r\n\r\nimport { PlotBuilderItem } from \"./PlotBuilderItem\";\r\n\r\nexport class VoidSaltPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _grains$ = new BehaviorSubject<number | null>(null);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([this._grains$]).pipe(\r\n      map(() => this.isValid)\r\n    );\r\n\r\n    combineLatest([this._grains$]).subscribe(([grains]) => {\r\n      if (!this.isValid) {\r\n        this._plotItem$.next(null);\r\n        return;\r\n      }\r\n\r\n      this._plotItem$.next({\r\n        type: \"void-salt\",\r\n        grains: grains!,\r\n      });\r\n    });\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    const grains = this._grains$.value;\r\n    return grains != null && grains >= 0 && grains === Math.round(grains);\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  get grains$(): Observable<number | null> {\r\n    return this._grains$;\r\n  }\r\n\r\n  setGrains(grains: number | null) {\r\n    this._grains$.next(grains);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n","export { AddIngredientPlotBuilderItem } from \"./AddIngredientPlotBuilderItem\";\r\nexport { HeatVortexPlotBuilderItem } from \"./HeatVortexPlotBuilderItem\";\r\nexport { PlotBuilder } from \"./PlotBuilder\";\r\nexport { PlotBuilderItem } from \"./PlotBuilderItem\";\r\nexport { PlotBuilderItemCollection } from \"./PlotBuilderItemCollection\";\r\nexport { PourSolventPlotBuilderItem } from \"./PourSolventPlotBuilderItem\";\r\nexport { SetPositionPlotBuilderItem } from \"./SetPositionPlotBuilderItem\";\r\nexport { StirCauldronPlotBuilderItem } from \"./StirCauldronPlotBuilderItem\";\r\nexport { VoidSaltPlotBuilderItem } from \"./VoidSaltPlotBuilderItem\";\r\n","import { ContainerModule } from \"microinject\";\r\n\r\nimport { PlotBuilder } from \"./builder/PlotBuilder\";\r\nimport { Plotter } from \"./Plotter\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(PlotBuilder);\r\n  bind(Plotter);\r\n});\r\n","import { Vector2 } from \"@/vector2\";\r\n\r\nimport { IngredientId } from \"../ingredients/types\";\r\nimport { MapEntity } from \"../potion-maps/types\";\r\n\r\nexport type PlotItem =\r\n  | SetPositionPlotItem\r\n  | AddIngredientPlotItem\r\n  | PourSolventPlotItem\r\n  | StirCauldronPlotItem\r\n  | HeatVortexPlotItem\r\n  | VoidSaltPlotItem;\r\n\r\nexport interface SetPositionPlotItem {\r\n  type: \"set-position\";\r\n  position: Vector2;\r\n}\r\n\r\nexport interface AddIngredientPlotItem {\r\n  type: \"add-ingredient\";\r\n  ingredientId: IngredientId;\r\n  grindPercent: number;\r\n}\r\n\r\nexport interface PourSolventPlotItem {\r\n  type: \"pour-solvent\";\r\n  distance: number;\r\n}\r\n\r\nexport interface StirCauldronPlotItem {\r\n  type: \"stir-cauldron\";\r\n  distance: number;\r\n}\r\n\r\nexport interface HeatVortexPlotItem {\r\n  type: \"heat-vortex\";\r\n  distance: number;\r\n}\r\n\r\nexport interface VoidSaltPlotItem {\r\n  type: \"void-salt\";\r\n  grains: number;\r\n}\r\n\r\nexport interface PlotPoint extends Vector2 {\r\n  source: PlotItem;\r\n  entities: Readonly<MapEntity>[];\r\n}\r\n\r\nexport interface PlotResult {\r\n  committedPoints: PlotPoint[];\r\n  pendingPoints: PlotPoint[];\r\n}\r\n\r\nexport const EmptyPlotResult: Readonly<PlotResult> = Object.freeze({\r\n  committedPoints: [],\r\n  pendingPoints: [],\r\n}) as any;\r\n","import { POTION_RADIUS } from \"@/game-settings\";\r\nimport { vec2Magnitude, vec2Subtract } from \"@/vector2\";\r\nimport { clamp } from \"lodash\";\r\nimport { PlotPoint } from \"./types\";\r\n\r\nexport function getEffectTier(\r\n  distance: number,\r\n  angleDegreesDelta: number\r\n): number {\r\n  // Bottle and effect both have radius of POTION_RADIUS, and they must touch\r\n  // to achieve the first tier.\r\n  if (distance >= POTION_RADIUS * 2) {\r\n    return 0;\r\n  }\r\n\r\n  // From RecipeMapManager.GetEffectTier()\r\n  const middleEffectPowerPosition = 0.9;\r\n  const effectPowerDistanceDependence = (value: number) => {\r\n    return -0.36 * value + 0.72;\r\n  };\r\n  const effectPowerAngleDependence = (value: number) => {\r\n    // TODO: angle\r\n    // We know its 0.3 at the perfect angle.\r\n    return 0.3;\r\n  };\r\n\r\n  const value = clamp(\r\n    effectPowerDistanceDependence(distance) +\r\n      effectPowerAngleDependence(angleDegreesDelta),\r\n    0,\r\n    1\r\n  );\r\n  if (value < middleEffectPowerPosition) {\r\n    return 1;\r\n  }\r\n  return !(Math.abs(value - 1) < Number.EPSILON) ? 2 : 3;\r\n}\r\n\r\nexport function longestDangerLength(items: PlotPoint[]): number {\r\n  let longestLength = 0;\r\n  let currentLength = 0;\r\n  let prevItem = items[0];\r\n  for (let i = 1; i < items.length; i++) {\r\n    const item = items[i];\r\n    if (item.entities.some((x) => x.entityType === \"DangerZonePart\")) {\r\n      currentLength += vec2Magnitude(vec2Subtract(item, prevItem));\r\n    } else {\r\n      longestLength = Math.max(longestLength, currentLength);\r\n      currentLength = 0;\r\n    }\r\n    prevItem = item;\r\n  }\r\n\r\n  return Math.max(longestLength, currentLength);\r\n}\r\n","import { injectable, singleton } from \"microinject\";\r\n\r\nimport { typedKeys } from \"@/utils\";\r\n\r\nimport { PotionBaseMaps } from \"../potion-maps/maps\";\r\nimport { PotionMap } from \"../potion-maps/PotionMap\";\r\nimport { PotionBaseId, PotionBase } from \"./types\";\r\n\r\n@injectable()\r\n@singleton()\r\nexport class PotionBaseRegistry {\r\n  private readonly _potionBasesById: Record<PotionBaseId, PotionBase> = {};\r\n\r\n  constructor() {\r\n    for (const key of typedKeys(PotionBaseMaps)) {\r\n      const id = key as PotionBaseId;\r\n      const base: PotionBase = {\r\n        id,\r\n        map: new PotionMap(PotionBaseMaps[key]),\r\n      };\r\n      this._potionBasesById[id] = base;\r\n    }\r\n  }\r\n\r\n  getPotionBaseById(id: PotionBaseId): PotionBase | null {\r\n    return this._potionBasesById[id] ?? null;\r\n  }\r\n}\r\n","import { ContainerModule } from \"microinject\";\r\nimport { PotionBaseRegistry } from \"./PotionBaseRegistry\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(PotionBaseRegistry);\r\n});\r\n","import { uniq } from \"lodash\";\r\n\r\nimport { Vector2 } from \"@/vector2\";\r\nimport { rectFromCircle } from \"@/rectangles\";\r\n\r\nimport {\r\n  getRegionIndexesFromRect,\r\n  getRegionIndexFromPoint,\r\n  REGION_COUNT,\r\n} from \"./regions\";\r\nimport { MapEntity } from \"./types\";\r\nimport { EntityDefs } from \"./entity-defs\";\r\n\r\nexport class PotionMap {\r\n  private _entityRegions: MapEntity[][] | null = null;\r\n\r\n  constructor(private _entities: readonly Readonly<MapEntity>[]) {}\r\n\r\n  get entities(): readonly Readonly<MapEntity>[] {\r\n    return this._entities;\r\n  }\r\n\r\n  hitTest(p: Vector2, radius = 0): readonly Readonly<MapEntity>[] {\r\n    const regions = this._getEntityRegions();\r\n\r\n    const indexes =\r\n      radius <= 0\r\n        ? [getRegionIndexFromPoint(p)]\r\n        : getRegionIndexesFromRect(rectFromCircle(p, radius));\r\n\r\n    const entities = uniq(\r\n      ([] as MapEntity[]).concat(...indexes.map((index) => regions[index]))\r\n    );\r\n\r\n    const result: MapEntity[] = [];\r\n    for (const entity of entities) {\r\n      const entityDef = EntityDefs[entity.entityType];\r\n      if (!entityDef) {\r\n        continue;\r\n      }\r\n\r\n      if (entityDef.hitTest(p, entity, radius)) {\r\n        result.push(entity);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private _getEntityRegions(): MapEntity[][] {\r\n    if (this._entityRegions) {\r\n      return this._entityRegions;\r\n    }\r\n\r\n    this._entityRegions = new Array(REGION_COUNT);\r\n    for (let i = 0; i < REGION_COUNT; i++) {\r\n      this._entityRegions[i] = [];\r\n    }\r\n\r\n    for (const entity of this._entities) {\r\n      const entityDef = EntityDefs[entity.entityType];\r\n      if (!entityDef) {\r\n        continue;\r\n      }\r\n      const bounds = entityDef.getBounds(entity);\r\n      const indexes = getRegionIndexesFromRect(bounds);\r\n      for (const index of indexes) {\r\n        this._entityRegions[index].push(entity);\r\n      }\r\n    }\r\n\r\n    return this._entityRegions;\r\n  }\r\n}\r\n","import { POTION_RADIUS } from \"@/game-settings\";\r\nimport { Vector2, vec2Magnitude, vec2Rotate, vec2Subtract } from \"@/vector2\";\r\nimport {\r\n  rectangle,\r\n  Rectangle,\r\n  rectFromCircle,\r\n  rectOffset,\r\n  rectSize,\r\n} from \"@/rectangles\";\r\nimport { degreesToRadians } from \"@/utils\";\r\n\r\nimport { MapEntity } from \"./types\";\r\n\r\nexport interface EntityDefinition {\r\n  readonly entityType: MapEntity[\"entityType\"];\r\n  getFriendlyName(entity: MapEntity): string;\r\n  getBounds(entity: MapEntity): Rectangle;\r\n  hitTest(p: Vector2, entity: MapEntity, radius?: number): boolean;\r\n}\r\n\r\nconst VortexRadii = {\r\n  Large: 1.65,\r\n  Medium: 1.25,\r\n} as const;\r\n\r\nexport const EntityDefs: Record<MapEntity[\"entityType\"], EntityDefinition> = {\r\n  PotionEffect: {\r\n    entityType: \"PotionEffect\",\r\n    getFriendlyName(entity: MapEntity) {\r\n      const effectEntity = assertEntity(entity, \"PotionEffect\");\r\n      return effectEntity.effect;\r\n    },\r\n    getBounds(entity: MapEntity) {\r\n      return rectFromCircle(entity, POTION_RADIUS);\r\n    },\r\n    hitTest(p: Vector2, entity: MapEntity, radius = 0) {\r\n      return vec2Magnitude(vec2Subtract(p, entity)) - radius <= POTION_RADIUS;\r\n    },\r\n  },\r\n  // NOTE: This should be replaced by something that knows the different hitboxes of each type.\r\n  // This would be complicated, as many of them are rects and rotation needs to be taken into account.\r\n  DangerZonePart: {\r\n    entityType: \"DangerZonePart\",\r\n    getFriendlyName(entity: MapEntity) {\r\n      const boneEntity = assertEntity(entity, \"DangerZonePart\");\r\n      // return boneEntity.prefab;\r\n      return \"Bone\";\r\n    },\r\n    getBounds(entity: MapEntity) {\r\n      const bone = assertEntity(entity, \"DangerZonePart\");\r\n      switch (bone.prefab) {\r\n        case \"Fang1\":\r\n          // Need to cover all rotations, so use the largest axis for both.\r\n          return rectOffset(rectangle(-0.06, -0.06, 0.12, 0.12), entity);\r\n        case \"Fang2\":\r\n          // Need to cover all rotations, so use the largest axis for both.\r\n          return rectOffset(rectangle(-0.12, -0.12, 0.24, 0.24), entity);\r\n        case \"Bone1\":\r\n          // Need to cover all rotations, so use the largest axis for both.\r\n          return rectOffset(rectangle(-0.345, -0.345, 0.69, 0.69), entity);\r\n        case \"Bone2\":\r\n          // Need to cover all rotations, so use the largest axis for both.\r\n          return rectOffset(rectangle(-0.32, -0.32, 0.72, 0.72), entity);\r\n        case \"Skull1\":\r\n        default:\r\n          return rectFromCircle(entity, 0.24);\r\n      }\r\n    },\r\n    hitTest(p: Vector2, entity: MapEntity, radius = 0) {\r\n      const bone = assertEntity(entity, \"DangerZonePart\");\r\n      if (bone.prefab === \"Skull1\") {\r\n        return vec2Magnitude(vec2Subtract(p, entity)) - radius <= 0.24;\r\n      }\r\n\r\n      let r: Rectangle;\r\n      switch (bone.prefab) {\r\n        case \"Fang1\":\r\n          r = rectangle(-0.06, -0.02, 0.12, 0.4);\r\n          break;\r\n        case \"Fang2\":\r\n          r = rectangle(-0.065, -0.12, 0.13, 0.24);\r\n          break;\r\n        case \"Bone1\":\r\n          r = rectangle(-0.06, -0.345, 0.12, 0.69);\r\n          break;\r\n        case \"Bone2\":\r\n          r = rectangle(-0.07, -0.36, 0.14, 0.72);\r\n          break;\r\n        default:\r\n          return false;\r\n      }\r\n\r\n      const boneAngle = degreesToRadians(bone.angle);\r\n\r\n      // get it aligned with the axis aligned hitbox of the bone\r\n      p = vec2Subtract(p, entity);\r\n      p = vec2Rotate(p, -boneAngle);\r\n\r\n      const rc = {\r\n        x: r.p1.x + (r.p2.x - r.p1.x) / 2,\r\n        y: r.p1.y + (r.p2.y - r.p1.y) / 2,\r\n      };\r\n      const rsize = rectSize(r);\r\n\r\n      const distx = Math.abs(p.x - rc.x);\r\n      const disty = Math.abs(p.y - rc.y);\r\n\r\n      const dx = distx - rsize.width / 2;\r\n      const dy = disty - rsize.height / 2;\r\n      if (\r\n        distx > rsize.width / 2 + radius ||\r\n        disty > rsize.height / 2 + radius\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      if (\r\n        dx * dx + dy * dy > radius * radius &&\r\n        distx > rsize.width / 2 &&\r\n        disty > rsize.height / 2\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    },\r\n  },\r\n  ExperienceBonus: {\r\n    entityType: \"ExperienceBonus\",\r\n    getFriendlyName(entity: MapEntity) {\r\n      const expEntity = assertEntity(entity, \"ExperienceBonus\");\r\n      return `${expEntity.prefab} XP Bonus`;\r\n    },\r\n    getBounds: (entity: MapEntity): Rectangle => {\r\n      // FIXME: Arent these different sizes?\r\n      return rectFromCircle(entity, 0.3);\r\n    },\r\n    hitTest: (p: Vector2, entity: MapEntity, radius = 0): boolean => {\r\n      return vec2Magnitude(vec2Subtract(p, entity)) - radius <= 0.3;\r\n    },\r\n  },\r\n  Vortex: {\r\n    entityType: \"Vortex\",\r\n    getFriendlyName(entity: MapEntity) {\r\n      return \"Vortex\";\r\n    },\r\n    getBounds: (entity: MapEntity): Rectangle => {\r\n      const vortex = assertEntity(entity, \"Vortex\");\r\n      const radius = VortexRadii[vortex.prefab];\r\n      return rectFromCircle(entity, radius);\r\n    },\r\n    hitTest: (p: Vector2, entity: MapEntity, radius = 0): boolean => {\r\n      const vortex = assertEntity(entity, \"Vortex\");\r\n      const vortexRadius = VortexRadii[vortex.prefab];\r\n      return vec2Magnitude(vec2Subtract(p, entity)) - radius <= vortexRadius;\r\n    },\r\n  },\r\n};\r\n\r\nfunction assertEntity<T extends MapEntity[\"entityType\"]>(\r\n  entity: MapEntity,\r\n  type: T\r\n): MapEntity & { entityType: T } {\r\n  if (entity.entityType === type) {\r\n    return entity as any;\r\n  }\r\n  throw new Error(`Expected entity to be of type ${type}`);\r\n}\r\n","import { MapEntity } from \"../types\";\r\n\r\nconst water = Object.freeze(require(\"./water.json\")) as MapEntity[];\r\n\r\nexport const PotionBaseMaps = {\r\n  water,\r\n};\r\n","import { first } from \"lodash\";\r\n\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\nimport { Vector2, vec2Add } from \"@/vector2\";\r\nimport { Rectangle } from \"@/rectangles\";\r\n\r\nconst MAP_WIDTH = MAP_EXTENT_RADIUS * 2;\r\nconst MAP_HEIGHT = MAP_EXTENT_RADIUS * 2;\r\nconst REGION_WIDTH = 0.5;\r\nconst REGION_HEIGHT = 0.5;\r\n\r\nconst ORIGIN_OFFSET: Vector2 = { x: MAP_EXTENT_RADIUS, y: MAP_EXTENT_RADIUS };\r\n\r\nexport const REGION_COUNT =\r\n  (MAP_WIDTH / REGION_WIDTH) * (MAP_HEIGHT / REGION_HEIGHT) + 1;\r\nexport const FALLBACK_REGION = REGION_COUNT - 1;\r\n\r\nexport function getRegionIndexFromPoint(p: Vector2): number {\r\n  return first(getRegionIndexesFromRect({ p1: p, p2: p }))!;\r\n}\r\n\r\nexport function getRegionIndexesFromRect(r: Rectangle): number[] {\r\n  let { p1, p2 } = r;\r\n  p1 = vec2Add(p1, ORIGIN_OFFSET);\r\n  p2 = vec2Add(p2, ORIGIN_OFFSET);\r\n\r\n  let x1 = Math.floor(p1.x / REGION_WIDTH);\r\n  let y1 = Math.floor(p1.y / REGION_HEIGHT);\r\n  let x2 = Math.ceil(p2.x / REGION_WIDTH);\r\n  let y2 = Math.ceil(p2.y / REGION_HEIGHT);\r\n\r\n  const indexes = [];\r\n\r\n  let addedOOB = false;\r\n  const addOOB = () => {\r\n    if (addedOOB) {\r\n      return;\r\n    }\r\n    indexes.push(FALLBACK_REGION);\r\n    addedOOB = true;\r\n  };\r\n\r\n  if (x1 < 0) {\r\n    x1 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (x2 < 0) {\r\n    x2 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (x1 >= MAP_WIDTH / REGION_WIDTH) {\r\n    x1 = MAP_WIDTH / REGION_WIDTH - 1;\r\n    addOOB();\r\n  }\r\n\r\n  if (x2 >= MAP_WIDTH / REGION_WIDTH) {\r\n    x2 = MAP_WIDTH / REGION_WIDTH - 1;\r\n    addOOB();\r\n  }\r\n\r\n  if (y1 < 0) {\r\n    y1 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (y2 < 0) {\r\n    y2 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (y1 >= MAP_HEIGHT / REGION_HEIGHT) {\r\n    y1 = MAP_HEIGHT / REGION_HEIGHT - 1;\r\n    addOOB();\r\n  }\r\n\r\n  if (y2 >= MAP_HEIGHT / REGION_HEIGHT) {\r\n    y2 = MAP_HEIGHT / REGION_HEIGHT - 1;\r\n    addOOB();\r\n  }\r\n\r\n  for (let x = x1; x <= x2; x++) {\r\n    for (let y = y1; y <= y2; y++) {\r\n      indexes.push(x + y * (MAP_WIDTH / REGION_WIDTH));\r\n    }\r\n  }\r\n\r\n  return indexes;\r\n}\r\n","export interface Size {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport const SizeZero = Object.freeze({ width: 0, height: 0 }) as any;\r\n","import { ThemeProvider } from \"@emotion/react\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\nimport React from \"react\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: \"light\",\r\n  },\r\n});\r\n\r\nexport interface AppThemeProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst AppThemeProvider = ({ children }: AppThemeProviderProps) => (\r\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n);\r\n\r\nexport default AppThemeProvider;\r\n","import { Value } from \"classnames\";\r\n\r\nexport function windowArray<T>(array: T[], count: number): T[][] {\r\n  const a = [...array];\r\n\r\n  let result: T[][] = [];\r\n  let window: T[] = [];\r\n\r\n  while (a.length > 0) {\r\n    window.push(a.pop()!);\r\n    if (window.length === count) {\r\n      result.push(window);\r\n      window = [];\r\n    }\r\n  }\r\n\r\n  if (window.length > 0) {\r\n    result.push(window);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function keepEveryK<T>(array: T[], k: number, keepLast = false) {\r\n  if (array.length === 0) {\r\n    return array;\r\n  }\r\n\r\n  const a = [];\r\n  for (let i = 0; i < array.length; i += k) {\r\n    a.push(array[i]);\r\n  }\r\n  if (keepLast && (array.length - 1) % k !== 0) {\r\n    a.push(array[array.length - 1]);\r\n  }\r\n  return a;\r\n}\r\n\r\nexport function isNotNull<T>(x: T | null | undefined): x is T {\r\n  return x != null;\r\n}\r\n\r\nexport function typedKeys<T>(obj: T): (keyof T)[] {\r\n  return Object.keys(obj) as any;\r\n}\r\n\r\nexport function degreesToRadians(degress: number): number {\r\n  return (degress * Math.PI) / 180;\r\n}\r\n","import { clamp } from \"lodash\";\r\n\r\nexport interface Vector2 {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport const Vec2Zero: Readonly<Vector2> = Object.freeze({ x: 0, y: 0 });\r\n\r\nexport function vec2Equals(a: Vector2, b: Vector2): boolean {\r\n  return (\r\n    Math.abs(a.x - b.x) < Number.EPSILON && Math.abs(a.y - b.y) < Number.EPSILON\r\n  );\r\n}\r\n\r\nexport function vec2Scale(p: Vector2, factor: number): Vector2 {\r\n  return {\r\n    x: p.x * factor,\r\n    y: p.y * factor,\r\n  };\r\n}\r\n\r\nexport function vec2Magnitude(p: Vector2): number {\r\n  return Math.sqrt(p.x * p.x + p.y * p.y);\r\n}\r\n\r\nexport function vec2AngleRadians(from: Vector2, to: Vector2): number {\r\n  return Math.atan2(to.y - from.y, to.x - from.x);\r\n}\r\n\r\nexport function vec2MoveTowards(\r\n  current: Vector2,\r\n  target: Vector2,\r\n  maxDistanceDelta: number\r\n): Vector2 {\r\n  const mt1 = target.x - current.x;\r\n  const mt2 = target.y - current.y;\r\n  const mt3 = mt1 * mt1 + mt2 * mt2;\r\n  if (\r\n    mt3 == 0.0 ||\r\n    (maxDistanceDelta >= 0.0 && mt3 <= maxDistanceDelta * maxDistanceDelta)\r\n  )\r\n    return target;\r\n  const mt4 = Math.sqrt(mt3);\r\n  return {\r\n    x: current.x + (mt1 / mt4) * maxDistanceDelta,\r\n    y: current.y + (mt2 / mt4) * maxDistanceDelta,\r\n  };\r\n}\r\n\r\n/**\r\n * Gets the smallest angle in degrees between two points.\r\n */\r\nexport function vec2AngleDegrees180(from: Vector2, to: Vector2) {\r\n  const num = Math.sqrt(\r\n    (from.x * from.x + from.y * from.y) * (to.x * to.x + to.y * to.y)\r\n  );\r\n  if (num < Number.EPSILON) {\r\n    return 0;\r\n  }\r\n  return Math.acos(clamp(vec2Dot(from, to) / num, -1, 1)) * 57.29578;\r\n}\r\n\r\n/**\r\n * Gets the smallest angle between to points.  Value will be negative if the angle if to is counterclockwise of from.\r\n */\r\nexport function pointSignedAngleDegrees180(from: Vector2, to: Vector2) {\r\n  const a = vec2AngleDegrees180(from, to);\r\n  const sign = Math.sign(from.x * to.y - from.y * to.x);\r\n  const sa = sign * a;\r\n  return sa;\r\n}\r\n\r\nexport function vec2Rotate(p: Vector2, angleInRadians: number): Vector2 {\r\n  const x = p.x * Math.cos(angleInRadians) - p.y * Math.sin(angleInRadians);\r\n  const y = p.x * Math.sin(angleInRadians) + p.y * Math.cos(angleInRadians);\r\n  return { x, y };\r\n}\r\n\r\nexport function vec2Dot(a: Vector2, b: Vector2): number {\r\n  return a.x * b.x + a.y * b.y;\r\n}\r\n\r\nexport function vec2Distance(p1: Vector2, p2: Vector2) {\r\n  const dx = p1.x - p2.x;\r\n  const dy = p1.y - p2.y;\r\n  return Math.sqrt(dx * dx + dy * dy);\r\n}\r\n\r\nexport function vec2Add(a: Vector2, b: Vector2) {\r\n  return {\r\n    x: a.x + b.x,\r\n    y: a.y + b.y,\r\n  };\r\n}\r\n\r\nexport function vec2Subtract(a: Vector2, b: Vector2) {\r\n  return {\r\n    x: a.x - b.x,\r\n    y: a.y - b.y,\r\n  };\r\n}\r\n\r\nexport function vec2Normalize(p: Vector2): Vector2 {\r\n  const magnitude = vec2Magnitude(p);\r\n  if (magnitude === 0) {\r\n    return Vec2Zero;\r\n  }\r\n\r\n  return {\r\n    x: p.x / magnitude,\r\n    y: p.y / magnitude,\r\n  };\r\n}\r\n\r\nexport function vec2Lerp(start: Vector2, end: Vector2, lerp: number): Vector2 {\r\n  return {\r\n    x: start.x + (end.x - start.x) * lerp,\r\n    y: start.y + (end.y - start.y) * lerp,\r\n  };\r\n}\r\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","values","primaryAxis","secondaryAxis","dropIndicator","onReorder","children","childrenBoundsRef","useRef","useState","dragIndex","setDragIndex","dropIndex","setDropIndex","onBoundsChanged","useCallback","valueIndex","bounds","current","onDragStart","onDragMove","e","index","x","y","groups","currentGroup","lastPrimaryPosition","i","length","bound","itemPrimaryPosition","left","right","top","bottom","axisIsFlipped","items","itemIndex","Math","min","max","forEach","group","reverse","getGroups","targetGroup","horizontalSecondary","axisIsHorizontal","primaryPosition","item","itemPrimaryMin","itemPrimaryMax","getInsertionIndex","filter","isNotNull","clientX","clientY","onDragEnd","newValues","newValueIndex","draggedValue","splice","fromIndex","toIndex","map","value","Fragment","key","DragReorderableItem","isDragging","capturedPointerId","setCapturedPointerId","onPointerDown","defaultPrevented","currentTarget","setPointerCapture","pointerId","preventDefault","onPointerMove","onPointerUp","releasePointerCapture","onBoundsRef","valueIndexRef","useEffect","observerRef","disconnect","refCallback","ref","observer","MutationObserver","getBoundingClientRect","observe","attributes","characterData","childList","subtree","isDropBefore","isDropAfter","additionalProps","axis","content","entity","className","entityType","PotionEffectMapEntityDetails","VortexMapEntityDetails","Card","variant","CardContent","effect","rate","onChange","onChangeCommitted","delta","setDelta","token","setInterval","clearInterval","Slider","step","v","StyledTooltip","styled","Tooltip","tooltipPlacementLeft","margin","allowEmpty","onMouseOverItem","onMouseOutItem","props","ingredients","useDIDependency","IngredientRegistry","getIngredients","sortedIngredients","sortBy","ingredient","name","onSelectChange","target","Select","MenuItem","onMouseOver","onMouseOut","placement","title","width","height","viewBox","MAX_INGREDIENT_EXTENT","transform","cx","cy","r","POTION_RADIUS","fill","d","path","reduce","curve","start","p1","p2","end","stroke","strokeWidth","ListItemText","Root","backgroundColor","overflow","imgCache","Map","makeImg","src","has","get","img","Image","onerror","console","error","bind","set","MapSlotSrc","renderEntity","ctx","save","translate","rotate","degreesToRadians","angle","DangerZoneImageSrces","prefab","w","h","scale","drawImage","restore","renderDangerZonePart","grad","createLinearGradient","addColorStop","strokeStyle","lineWidth","beginPath","moveTo","lineTo","container","EffectSlotSrc","containerW","containerH","PotionEffectImageSrces","renderPotionEffectEntity","ExperienceBonusImagesSrc","renderExperienceBonusEntity","VortexImagesSrc","renderVortexEntity","viewModel","useObservation","viewportSize$","SizeZero","offset","viewOffset$","Vec2Zero","viewScale$","canvasRef","setCanvasRef","entities","requestAnimationFrame","getContext","clearRect","zoomFactor","offsetX","offsetY","handler","MAP_EXTENT_RADIUS","transformToMap","mapSlotW","mapSlotH","cancelAnimationFrame","Bone1","Bone2","Fang1","Fang2","Skull1","Acid","Berserker","Bounce","Charm","Crop","Explosion","Fire","Fly","Frost","Growth","Hallucinations","Healing","Invisibility","Libido","Light","Lightning","Mana","Necromancy","Poison","SharpVision","Sleep","SlowDown","StoneSkin","Little","Medium","Large","theme","position","spacing","display","flexDirection","alignItems","_initialSize","_originOffset","_unitScale","_viewportSize$","BehaviorSubject","_viewOffset$","_viewScale$","_mouseClientPosition$","this","next","_mouseWorldPosition$","combineLatest","pipe","clientPos","clientToWorld","zoom","on","prevWorld","world","vec2Subtract","vec2Add","setZoom","pan","dx","dy","applyZoom","z","onMouseMove","onViewportResized","prevSize","scaleFactor","p","worldToClient","CoordinateMappingViewportViewModel","ZOOM_FACTOR","PAN_FACTOR","containerRef","React","containerBounds","useComponentBounds","dragPointer","setDragPointer","mouseLastPos","setMouseLastPos","useLayoutEffect","onWheel","modifiers","getModifiers","ctrlMetaKey","deltaY","stopPropagation","shiftKey","useNativeEvent","passive","boxSixing","listStyle","paddingLeft","paddingRight","marginBottom","paddingTop","borderBottom","alignSelf","plotBuilderItemCollection","highlightItem","enableCheats","plotBuilderItems$","_","moveItem","params","getRootProps","getDragHandleProps","PlotListItem","highlight","DragHandle","Button","color","onClick","addIngredient","Add","addStirCauldron","addPourSolvent","addHeatVortex","addVoidSalt","addSetPosition","memo","forwardRef","AddIngredientPlotBuilderItem","AddIngredientPlotListItem","StirCauldronPlotBuilderItem","StirCauldronPlotListItem","PourSolventPlotBuilderItem","PourSolventPlotListItem","HeatVortexPlotBuilderItem","HeatVortexPlotListItem","VoidSaltPlotBuilderItem","AddVoidSaltPlotListItem","SetPositionPlotBuilderItem","SetPositionPlotListItem","constructor","PlotListItemCard","valid","isValid$","onCardMouseOver","onDeleteClick","delete","style","IconButton","size","Delete","savedIngredientRef","isPreviewing","setIsPreviewing","isPreviewingRef","localGrind","setLocalGrind","inputGrindPercent","setInputGrindPercent","ingredientId","ingredientId$","grindPercent","grindPercent$","onIngredientSelectorOpen","onIngredientSelectorMouseOverItem","setIngredient","onIngredientSelectorChange","onIngredientSelectorClose","onGrindPercentTextChange","asNumber","Number","isNaN","setGrindPercent","onGrindPercentBlur","onSliderChange","onSliderChangeCommitted","displayIngredientId","Typography","fullWidth","onOpen","onClose","Grid","TextField","label","onBlur","distance","distance$","inputDistance","setInputDistance","onTextFieldChange","setDistance","onTextFieldBlur","onDistanceChange","toFixed","grains","grains$","inputGrains","setInputGrains","sliderGrains","setSliderGrains","setGrains","onGrainsChange","round","xInput","setXInput","yInput","setYInput","x$","y$","onXChange","setX","onYChange","setY","onXBlur","onYBlur","map$","plot","plot$","mouseOverPlotPoint","mouseOverPlotItem","mouseOverPlotItem$","mouseOverEntity","mouseOverEntity$","mouseWorld","mouseWorldPosition$","EmptyPlotResult","point","_builder","_mouseOverPlotItem$","_mouseOverBuilderItem$","_mouseOverEntity$","worldPos","hitTest","first","_mouseOverPlotPoint$","plotItem","plotItemPoints","committedPoints","concat","pendingPoints","source","closestPlotItem","vec2Distance","onMouseOverPlotItem","builderItemFor","onMouseOverBuilderItem","PlotBuilderViewModel","isIngredientPoint","type","itemIsEffect","ingredientRegistry","endsAt","last","useMemo","allPoints","uniq","effects","result","find","vec2Magnitude","tier","getEffectTier","getEffects","baseCost","ingredientTypeCounts","getIngredientById","price","pointArrayLength","sqrt","sum","Object","keys","pow","longestDangerLength","totalIngredients","totalUniqueIngredients","stress","longestDanger","dangerIsDeath","DANGER_LENGTH_LETHAL","join","pointerEvents","PlotLine","line","pending","registry","points","evenOdd","onPathMouseOver","onPathMouseOut","lighten","hex","str","strokeDashArray","teleports","strokeDasharray","mouseOverItem","mouseOverPoint","lastCommitPoint","onLineMouseOver","onLineMouseOut","committed","trim","currentLine","sourceCounter","commitedLines","pendingLines","lastSource","keepEveryK","resultToPlotLines","committedLines","opacity","touchedItems","EntityDefs","getFriendlyName","AddIngredientRoot","justifyContent","AddIngredient","window","enableTk","tk","vector2","curves","pointArray","plotter","Plotter","potionBases","PotionBaseRegistry","PotionMap","modules","composeModules","ContainerContext","createContext","Container","useDIContainer","useContext","toConstantValue","load","ContainerProvider","Provider","identifier","parameters","valRef","create","getCurvePoint","t","Error","b1","b2","b3","b4","startX","startY","p1x","p1y","p2x","p2y","endx","endy","curveLengthCache","getCurveLength","resolution","BEZIER_CURVE_LENGTH_RESOLUTION","cached","previousPoint","vector2_2","curvePointsCache","PATH_SPACING_PHYSICS","remainingDistance","samplePointCount","ceil","splitPoint","vec2Scale","vec2Normalize","freeze","setSize","ResizeObserver","el","b","listener","listenTarget","addEventListener","removeEventListener","observable","useTransition","onError","val","setVal","Observable","subscribe","startTransition","unsubscribe","rootEl","document","getElementById","createRoot","render","StrictMode","MODIFIER_KEYS_NONE","ctrlKey","altKey","metaKey","keyboardModifierUseMeta","event","background","useDICreate","ChallengePageViewModel","builder","mouseOverBuilderItem$","results","results$","onBuildItemMouseOver","onBuildItemMouseOut","textAlign","description","score","k","challengeFactory","plotBuilder","_challenge","createDailyChallenge","log","setMap","_results$","plotItems$","plotItems","getScore","inject","ChallengeFactory","PlotBuilder","history","History","hLoc","location","wLoc","search","url","URL","href","replaceState","toString","replace","pathname","PlotterPageViewModel","outputShareString","shareString$","query","URLSearchParams","data","loadFromShareString","potionBaseRegistry","waterMap","getPotionBaseById","_shareString$","debounceTime","encoded","deflate","JSON","stringify","Uint8Array","DataView","buffer","setUint8","encode","dataStr","array","decode","version","getUint8","slice","decoded","parse","inflate","to","clear","loadPlotItems","pointArrayLengthCache","takePointArrayByDistance","takeLength","totalLength","taken","remainder","takenLength","remainingLength","vec2Lerp","assign","direction","pFirst","normalizeRectangle","args","RectZero","radius","Routes","Route","element","osPlatform","os","family","OSType","test","isProd","_potionBaseRegistry","_brewEffectAtPointChallengeFactory","todayDate","Date","toISOString","split","random","challengeMap","_createChallengeMap","effectPosition","_getFreeEffectPosition","baseMap","targetPosition","base","minRadius","floatBetween","PI","cos","sin","injectable","singleton","BrewEffectAtPointChallengeFactory","serviceLocator","BrewEffectAtPointChallenge","_targetPosition","_plotter","_ingredientRegistry","_map","some","lastPoint","totalScore","tierScore","every","pathDistance","linearDistance","distanceFraction","distanceScore","isAddIngredientPlotItem","potentialHighlanderStress","stressScore","costScore","ContainerModule","toFactory","brewEffectAtPointChallengeFactoryFactory","inSingletonScope","action","state","setState","listen","Router","navigationType","navigator","createHashHistory","historyFactory","cubicBezierCurve","preGrindPercent","now","_plotItem","_plotSetPosition","_plotAddIngredient","_plotPourSolvent","_plotStirCauldron","_plotHeatVortex","_plotVoidSalt","commitPlotPoints","addPosition","ingredientPoints","ingredientLength","curveToPoints","pointArrayLengthCached","takePercent","appendPendingPlotPoints","currentPoint","vec2Equals","distanceToOrigin","pointArrayLineFromDistance","addedPoints","remainderPlotPoints","indicatorPosition","vortex","vortexMovementFromHeatDependence10Percent","currentPosition","pointsToAdd","magnitude","f1","sign","f2","f3","abs","EPSILON","num","from","vector2_1","rotation","pointSignedAngleDegrees180","vec2Rotate","vec2MoveTowards","removePointArrayDistanceFromEnd","difference","_delete","_ingredientId$","_grindPercent$","_plotItem$","_isValid$","isValid","percent","PlotBuilderItem","_distance$","distace","_map$","_plot$","PlotBuilderItemCollection","_items$","_itemSubscription","_plotItems$","builderItems","plotItem$","sourceIndex","indexOf","_deleteItem","_x$","_y$","stirDistance","_grains$","angleDegreesDelta","clamp","effectPowerDistanceDependence","longestLength","currentLength","prevItem","_potionBasesById","typedKeys","PotionBaseMaps","_entities","_entityRegions","regions","_getEntityRegions","indexes","getRegionIndexFromPoint","getRegionIndexesFromRect","rectFromCircle","entityDef","Array","REGION_COUNT","getBounds","VortexRadii","assertEntity","PotionEffect","DangerZonePart","rectOffset","rectangle","bone","boneAngle","rc","rsize","rectSize","distx","disty","ExperienceBonus","expEntity","Vortex","vortexRadius","water","MAP_WIDTH","MAP_HEIGHT","REGION_WIDTH","REGION_HEIGHT","ORIGIN_OFFSET","x1","floor","y1","x2","y2","addedOOB","addOOB","FALLBACK_REGION","createTheme","palette","mode","ThemeProvider","count","a","pop","keepLast","obj","degress","vec2AngleDegrees180","acos","vec2Dot","factor","atan2","maxDistanceDelta","mt1","mt2","mt3","mt4","angleInRadians","lerp"],"sourceRoot":""}
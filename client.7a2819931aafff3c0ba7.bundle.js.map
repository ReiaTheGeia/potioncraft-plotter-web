{"version":3,"file":"client.7a2819931aafff3c0ba7.bundle.js","mappings":"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","sources":["webpack://potioncraft-plotter/./src/style.css","webpack://potioncraft-plotter/./src/style.css?7163","webpack://potioncraft-plotter/./src/components/App.tsx","webpack://potioncraft-plotter/./src/components/DragReorderable.tsx","webpack://potioncraft-plotter/./src/components/IncDecSlider.tsx","webpack://potioncraft-plotter/./src/components/IngredientSelector.tsx","webpack://potioncraft-plotter/./src/components/Map/Map.tsx","webpack://potioncraft-plotter/./src/components/Map/index.ts","webpack://potioncraft-plotter/./src/components/PanZoomViewport/PanZoomViewport.tsx","webpack://potioncraft-plotter/./src/components/PanZoomViewport/index.ts","webpack://potioncraft-plotter/./src/components/PlotBuilderItemsList.tsx","webpack://potioncraft-plotter/./src/components/PlotEditor/PlotEditor.tsx","webpack://potioncraft-plotter/./src/components/PlotEditor/PlotEditorViewModel.ts","webpack://potioncraft-plotter/./src/components/PlotEditor/components/EntityDetails.tsx","webpack://potioncraft-plotter/./src/components/PlotEditor/components/PlotDetails.tsx","webpack://potioncraft-plotter/./src/components/PlotEditor/components/PointDetails.tsx","webpack://potioncraft-plotter/./src/components/PlotEditor/components/StepDetails.tsx","webpack://potioncraft-plotter/./src/components/PlotEditor/index.ts","webpack://potioncraft-plotter/./src/components/Plot/Plot.tsx","webpack://potioncraft-plotter/./src/components/Plot/PlotViewModel.ts","webpack://potioncraft-plotter/./src/components/Plot/index.ts","webpack://potioncraft-plotter/./src/container.tsx","webpack://potioncraft-plotter/./src/curves.ts","webpack://potioncraft-plotter/./src/game-settings.ts","webpack://potioncraft-plotter/./src/hooks/component-bounds.ts","webpack://potioncraft-plotter/./src/hooks/native-event.ts","webpack://potioncraft-plotter/./src/hooks/observe.ts","webpack://potioncraft-plotter/./src/index.tsx","webpack://potioncraft-plotter/./src/modifier-keys.ts","webpack://potioncraft-plotter/./src/point-array.ts","webpack://potioncraft-plotter/./src/points.ts","webpack://potioncraft-plotter/./src/rectangles.ts","webpack://potioncraft-plotter/./src/runtime-env.ts","webpack://potioncraft-plotter/./src/services/ingredients/IngredientRegistry.ts","webpack://potioncraft-plotter/./src/services/ingredients/ingredients.ts","webpack://potioncraft-plotter/./src/services/ingredients/module.ts","webpack://potioncraft-plotter/./src/services/ingredients/types.ts","webpack://potioncraft-plotter/./src/services/module.ts","webpack://potioncraft-plotter/./src/services/plotter/PlotBuilder.ts","webpack://potioncraft-plotter/./src/services/plotter/Plotter.ts","webpack://potioncraft-plotter/./src/services/plotter/module.ts","webpack://potioncraft-plotter/./src/services/plotter/types.ts","webpack://potioncraft-plotter/./src/services/potion-bases/PotionBaseRegistry.ts","webpack://potioncraft-plotter/./src/services/potion-bases/module.ts","webpack://potioncraft-plotter/./src/services/potion-maps/PotionMap.ts","webpack://potioncraft-plotter/./src/services/potion-maps/entity-defs.ts","webpack://potioncraft-plotter/./src/services/potion-maps/maps/index.ts","webpack://potioncraft-plotter/./src/services/potion-maps/regions.ts","webpack://potioncraft-plotter/./src/size.ts","webpack://potioncraft-plotter/./src/theme.tsx","webpack://potioncraft-plotter/./src/utils.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\r\\nThis should be kept minimal and only provide globals\\r\\nor non-react component styles.\\r\\n*/\\r\\n\\r\\nhtml, body, #root {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  margin: 0;\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;;;CAGC;;AAED;EACE,WAAW;EACX,YAAY;EACZ,SAAS;AACX\",\"sourcesContent\":[\"/*\\r\\nThis should be kept minimal and only provide globals\\r\\nor non-react component styles.\\r\\n*/\\r\\n\\r\\nhtml, body, #root {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  margin: 0;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import * as React from \"react\";\r\n\r\nimport PlotEditor from \"./PlotEditor\";\r\n\r\nconst App: React.FC = () => {\r\n  return <PlotEditor />;\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport forkRef from \"react-fork-ref\";\r\n\r\nexport type PrimaryDragReorderableAxis =\r\n  | \"left-to-right\"\r\n  | \"right-to-left\"\r\n  | \"top-to-bottom\"\r\n  | \"bottom-to-top\";\r\nexport type SecondaryDragReorderableAxis = \"none\" | PrimaryDragReorderableAxis;\r\n\r\nexport interface DragReorderEventParams {\r\n  /**\r\n   * The index of the value being reordered.\r\n   */\r\n  fromIndex: number;\r\n\r\n  /**\r\n   * The index the value is being reordered to.\r\n   */\r\n  toIndex: number;\r\n}\r\n\r\nexport interface DragReorderableItemParams {\r\n  /**\r\n   * Whether the element for this value is being dragged.\r\n   */\r\n  isDragging: boolean;\r\n\r\n  /**\r\n   * Whether the dragged value is going to be dropped before this element.\r\n   */\r\n  isDropBefore: boolean;\r\n\r\n  /**\r\n   * Whether the dragged value is going to be dropped after this element.\r\n   */\r\n  isDropAfter: boolean;\r\n}\r\n\r\nexport type DragReorderableRenderFunc<TValue = any> = (\r\n  /**\r\n   * The value this element is for.\r\n   */\r\n  value: TValue,\r\n  /**\r\n   * Parameters describing the drag or drop condition of this element.\r\n   */\r\n  params: DragReorderableItemParams,\r\n\r\n  /**\r\n   * A function to get the properties that should be applied to the root element.\r\n   */\r\n  getRootProps: <T extends React.HTMLProps<HTMLElement>>(\r\n    props?: T & { ref?: React.Ref<HTMLElement> }\r\n  ) => {\r\n    ref: React.Ref<HTMLElement | null>;\r\n  } & T,\r\n\r\n  /***\r\n   * A function to get the properties that should be applied to the draggable handle of this element.\r\n   */\r\n  getDragHandleProps: <T extends React.HTMLProps<HTMLElement>>(\r\n    props?: T\r\n  ) => {\r\n    onPointerDown: React.PointerEventHandler<HTMLElement>;\r\n    onPointerMove: React.PointerEventHandler<HTMLElement>;\r\n    onPointerUp: React.PointerEventHandler<HTMLElement>;\r\n  }\r\n) => React.ReactElement;\r\n\r\nexport interface DragReorderableProps<TValue = any> {\r\n  /**\r\n   * The values representing draggable items.  The order of the values controls the order of the value components in the list.\r\n   */\r\n  values: readonly TValue[];\r\n\r\n  /**\r\n   * The primary direction of the reorderable.\r\n   * This controls how this component will determine the relative order between elements during drag operations.\r\n   */\r\n  primaryAxis: PrimaryDragReorderableAxis;\r\n\r\n  /**\r\n   * The secondary direction of the reorderable.\r\n   * This controls how this component will determine the relative order between elements during drag operations.\r\n   */\r\n  secondaryAxis?: SecondaryDragReorderableAxis;\r\n\r\n  /**\r\n   * An optional drop indicator to render between the items where a drop is currently being hovered.\r\n   */\r\n  dropIndicator?: JSX.Element;\r\n\r\n  /**\r\n   * An event raised when a reorder event occurs.\r\n   * @param values The values in the new order.\r\n   * @param params Parameters describing the reorder event.\r\n   */\r\n  onReorder(values: TValue[], params: DragReorderEventParams): void;\r\n\r\n  /**\r\n   * The render function for each reorderable component.\r\n   */\r\n  children: DragReorderableRenderFunc<TValue>;\r\n}\r\n\r\ninterface ElementBounds {\r\n  left: number;\r\n  top: number;\r\n  right: number;\r\n  bottom: number;\r\n}\r\n\r\nconst DragReoderable = <TValue,>({\r\n  values,\r\n  primaryAxis,\r\n  secondaryAxis = \"none\",\r\n  dropIndicator,\r\n  onReorder,\r\n  children,\r\n}: DragReorderableProps<TValue>) => {\r\n  /**\r\n   * The bounds of each child element matched to the index of the value it represents.\r\n   */\r\n  const childrenBoundsRef = React.useRef<(ElementBounds | null)[]>([]);\r\n\r\n  const [dragIndex, setDragIndex] = React.useState(-1);\r\n  const [dropIndex, setDropIndex] = React.useState(-1);\r\n\r\n  const onBoundsChanged = React.useCallback(\r\n    (valueIndex: number, bounds: ElementBounds | null) => {\r\n      childrenBoundsRef.current[valueIndex] = bounds;\r\n    },\r\n    []\r\n  );\r\n\r\n  const onDragStart = React.useCallback(\r\n    (valueIndex: number) => {\r\n      if (dragIndex !== -1) {\r\n        return;\r\n      }\r\n      setDragIndex(valueIndex);\r\n    },\r\n    [dragIndex]\r\n  );\r\n\r\n  const onDragMove = React.useCallback(\r\n    (valueIndex: number, e: React.PointerEvent) => {\r\n      // valueIndex should remain the dragIndex, as that element will have captured the pointer for the duration of the drag.\r\n\r\n      if (dragIndex === -1) {\r\n        return;\r\n      }\r\n\r\n      const index = getInsertionIndex(\r\n        childrenBoundsRef.current.filter(isNotNull),\r\n        primaryAxis,\r\n        secondaryAxis,\r\n        e.clientX,\r\n        e.clientY\r\n      );\r\n\r\n      setDropIndex(index);\r\n    },\r\n    [dragIndex]\r\n  );\r\n\r\n  const onDragEnd = React.useCallback(\r\n    (valueIndex: number) => {\r\n      if (\r\n        dragIndex === -1 ||\r\n        dropIndex === -1 ||\r\n        dragIndex === dropIndex ||\r\n        // If we remove the item to place it in the place of the next item, the items will collapse back into their same positions.\r\n        dragIndex + 1 === dropIndex\r\n      ) {\r\n        setDragIndex(-1);\r\n        setDropIndex(-1);\r\n        return;\r\n      }\r\n\r\n      const newValues = [...values];\r\n\r\n      let newValueIndex = dropIndex;\r\n\r\n      // Remove the item being dragged from the list.\r\n      const draggedValue = values[dragIndex];\r\n      newValues.splice(dragIndex, 1);\r\n\r\n      if (dragIndex < newValueIndex) {\r\n        // If the item we removed was before where we are dropping, decrement the drop index\r\n        // to compensate for its removal.\r\n        newValueIndex--;\r\n      }\r\n\r\n      newValues.splice(newValueIndex, 0, draggedValue);\r\n      onReorder(newValues, { fromIndex: dragIndex, toIndex: dropIndex });\r\n\r\n      setDragIndex(-1);\r\n      setDropIndex(-1);\r\n    },\r\n    [dragIndex, dropIndex, values, onReorder]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {values.map((value, index) => (\r\n        <React.Fragment key={index}>\r\n          {dropIndex === index && dropIndicator}\r\n          <DragReorderableItem\r\n            valueIndex={index}\r\n            dropIndex={dropIndex}\r\n            value={value}\r\n            isDragging={dragIndex === index}\r\n            onBoundsChanged={onBoundsChanged}\r\n            onDragStart={onDragStart}\r\n            onDragMove={onDragMove}\r\n            onDragEnd={onDragEnd}\r\n          >\r\n            {children}\r\n          </DragReorderableItem>\r\n        </React.Fragment>\r\n      ))}\r\n      {dropIndex === values.length && dropIndicator}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragReoderable;\r\n\r\ninterface DragReorderableItemProps {\r\n  valueIndex: number;\r\n  dropIndex: number;\r\n  value: any;\r\n  isDragging: boolean;\r\n  onBoundsChanged(valueIndex: number, bounds: ElementBounds | null): void;\r\n  onDragStart(valueIndex: number): void;\r\n  onDragMove(valueIndex: number, e: React.PointerEvent): void;\r\n  onDragEnd(valueIndex: number, e: React.PointerEvent): void;\r\n  children: DragReorderableRenderFunc;\r\n}\r\n\r\nconst DragReorderableItem = ({\r\n  valueIndex,\r\n  dropIndex,\r\n  value,\r\n  isDragging,\r\n  onBoundsChanged,\r\n  onDragStart,\r\n  onDragMove,\r\n  onDragEnd,\r\n  children,\r\n}: DragReorderableItemProps) => {\r\n  const [capturedPointerId, setCapturedPointerId] = React.useState<\r\n    number | null\r\n  >(null);\r\n\r\n  const onPointerDown = React.useCallback(\r\n    (e: React.PointerEvent<HTMLElement>) => {\r\n      if (capturedPointerId !== null) {\r\n        // Already captured one.\r\n        return;\r\n      }\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.currentTarget.setPointerCapture(e.pointerId);\r\n      setCapturedPointerId(e.pointerId);\r\n      e.preventDefault();\r\n      onDragStart(valueIndex);\r\n    },\r\n    [onDragStart, capturedPointerId, valueIndex]\r\n  );\r\n\r\n  const onPointerMove = React.useCallback(\r\n    (e: React.PointerEvent<HTMLElement>) => {\r\n      if (capturedPointerId !== e.pointerId) {\r\n        return;\r\n      }\r\n\r\n      onDragMove(valueIndex, e);\r\n    },\r\n    [onDragMove, capturedPointerId, valueIndex]\r\n  );\r\n\r\n  const onPointerUp = React.useCallback(\r\n    (e: React.PointerEvent<HTMLElement>) => {\r\n      if (capturedPointerId !== e.pointerId) {\r\n        return;\r\n      }\r\n\r\n      e.currentTarget.releasePointerCapture(e.pointerId);\r\n      setCapturedPointerId(null);\r\n      onDragEnd(valueIndex, e);\r\n    },\r\n    [onDragEnd, capturedPointerId, valueIndex]\r\n  );\r\n\r\n  // Keep these synced to a ref so we can access them inside the mutation observer without having\r\n  // to rebuild the observer on every change.\r\n  const onBoundsRef = React.useRef(onBoundsChanged);\r\n  const valueIndexRef = React.useRef(valueIndex);\r\n  React.useEffect(() => {\r\n    onBoundsRef.current = onBoundsChanged;\r\n    valueIndexRef.current = valueIndex;\r\n  }, [onBoundsChanged, valueIndex]);\r\n\r\n  const observerRef = React.useRef<MutationObserver | null>(null);\r\n  // Clean up the observer on unmount.\r\n  React.useEffect(() => {\r\n    return () => observerRef.current?.disconnect();\r\n  }, []);\r\n\r\n  // Build the mutation observer when the ref changes.\r\n  const refCallback = (ref: HTMLElement | null) => {\r\n    if (observerRef.current) {\r\n      observerRef.current.disconnect();\r\n      observerRef.current = null;\r\n    }\r\n\r\n    if (!ref) {\r\n      onBoundsChanged(valueIndex, null);\r\n      return;\r\n    }\r\n\r\n    const observer = new MutationObserver(() => {\r\n      const { left, top, right, bottom } = ref.getBoundingClientRect();\r\n      onBoundsChanged(valueIndexRef.current, { left, top, right, bottom });\r\n    });\r\n\r\n    observer.observe(ref, {\r\n      attributes: true,\r\n      characterData: true,\r\n      childList: true,\r\n      subtree: true,\r\n    });\r\n\r\n    observerRef.current = observer;\r\n\r\n    const { left, top, right, bottom } = ref.getBoundingClientRect();\r\n    onBoundsChanged(valueIndexRef.current, { left, top, right, bottom });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {children(\r\n        value,\r\n        {\r\n          isDragging,\r\n          isDropBefore: dropIndex === valueIndex,\r\n          isDropAfter: dropIndex + 1 === valueIndex,\r\n        },\r\n        (additionalProps = {} as any) => ({\r\n          ...additionalProps,\r\n          ref: forkRef(refCallback, additionalProps.ref ?? (() => {})),\r\n        }),\r\n        (additionalProps = {} as any) => ({\r\n          ...additionalProps,\r\n          onPointerDown,\r\n          onPointerMove,\r\n          onPointerUp,\r\n        })\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ntype IndexedBounds = ElementBounds & { itemIndex: number };\r\n\r\n/**\r\n * A group of children and their bounds along one span of an axis.\r\n */\r\ninterface ChildGroup {\r\n  /**\r\n   * The leftmost extent of every child in this group.\r\n   */\r\n  left: number;\r\n\r\n  /**\r\n   * The rightmost extent of every child in this group.\r\n   */\r\n  right: number;\r\n\r\n  /**\r\n   * The topmost extent of every child in this group.\r\n   */\r\n  top: number;\r\n\r\n  /**\r\n   * The bottommost extent of every child in this group.\r\n   */\r\n  bottom: number;\r\n\r\n  /**\r\n   * The bounds and index of every child in this group.\r\n   */\r\n  items: IndexedBounds[];\r\n}\r\n\r\n/**\r\n * Break the elements up into groups based on the primary and secondary axis.\r\n */\r\nfunction getGroups(\r\n  bounds: ElementBounds[],\r\n  primaryAxis: PrimaryDragReorderableAxis,\r\n  secondaryAxis: SecondaryDragReorderableAxis\r\n): ChildGroup[] {\r\n  let currentGroup: ChildGroup | null = null;\r\n  const groups: ChildGroup[] = [];\r\n\r\n  let lastPrimaryPosition: number | null = null;\r\n  for (let i = 0; i < bounds.length; i++) {\r\n    const bound = bounds[i];\r\n\r\n    // Get the position of the element along the primary axis.\r\n    let itemPrimaryPosition: number;\r\n    switch (primaryAxis) {\r\n      case \"left-to-right\":\r\n        itemPrimaryPosition = bound.left;\r\n        break;\r\n      case \"right-to-left\":\r\n        itemPrimaryPosition = bound.right;\r\n        break;\r\n      case \"top-to-bottom\":\r\n        itemPrimaryPosition = bound.top;\r\n        break;\r\n      case \"bottom-to-top\":\r\n        itemPrimaryPosition = bound.bottom;\r\n        break;\r\n    }\r\n\r\n    if (\r\n      // Start a group if we have not yet created one.\r\n      !currentGroup ||\r\n      // Check to see if we have started a new row due to wraparound onto the secondary axis.\r\n      (secondaryAxis !== \"none\" &&\r\n        lastPrimaryPosition != null &&\r\n        // If we are ordering in reverse, then we need to start a new primary axis group\r\n        // if the next item ends up less further along than the previous one.\r\n        (axisIsFlipped(primaryAxis)\r\n          ? itemPrimaryPosition > lastPrimaryPosition\r\n          : itemPrimaryPosition < lastPrimaryPosition))\r\n    ) {\r\n      currentGroup = {\r\n        left: bound.left,\r\n        right: bound.right,\r\n        top: bound.top,\r\n        bottom: bound.bottom,\r\n        items: [\r\n          {\r\n            ...bound,\r\n            itemIndex: i,\r\n          },\r\n        ],\r\n      };\r\n      groups.push(currentGroup);\r\n    } else {\r\n      // The item is still within the current group.  Update the group to include it.\r\n      currentGroup.left = Math.min(currentGroup.left, bound.left);\r\n      currentGroup.right = Math.max(currentGroup.right, bound.right);\r\n      currentGroup.top = Math.min(currentGroup.top, bound.top);\r\n      currentGroup.bottom = Math.max(currentGroup.bottom, bound.bottom);\r\n      currentGroup.items.push({\r\n        ...bound,\r\n        itemIndex: i,\r\n      });\r\n    }\r\n\r\n    lastPrimaryPosition = itemPrimaryPosition;\r\n  }\r\n\r\n  if (axisIsFlipped(primaryAxis)) {\r\n    groups.forEach((group) => group.items.reverse());\r\n  }\r\n\r\n  if (secondaryAxis !== \"none\" && axisIsFlipped(secondaryAxis)) {\r\n    groups.reverse();\r\n  }\r\n\r\n  return groups;\r\n}\r\n\r\n/**\r\n * Determine the insertion point for the given mouse coords based on the bounds of all elements and the sort axes.\r\n */\r\nfunction getInsertionIndex(\r\n  bounds: ElementBounds[],\r\n  primaryAxis: PrimaryDragReorderableAxis,\r\n  secondaryAxis: SecondaryDragReorderableAxis,\r\n  x: number,\r\n  y: number\r\n): number {\r\n  const groups = getGroups(bounds, primaryAxis, secondaryAxis);\r\n  if (groups.length === 0) {\r\n    return -1;\r\n  }\r\n\r\n  // Find the target group along the secondary axis\r\n  let targetGroup: ChildGroup | null = null;\r\n  if (secondaryAxis === \"none\") {\r\n    targetGroup = groups[0];\r\n  } else {\r\n    // Secondary axis is active, so we need to find which secondary axis group the mouse is over.\r\n    const horizontalSecondary = axisIsHorizontal(secondaryAxis);\r\n    for (const group of groups) {\r\n      if (horizontalSecondary) {\r\n        if (x < group.left || x > group.right) {\r\n          continue;\r\n        }\r\n      } else {\r\n        if (y < group.top || y > group.bottom) {\r\n          continue;\r\n        }\r\n      }\r\n\r\n      targetGroup = group;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (!targetGroup || !targetGroup.items.length) {\r\n    return -1;\r\n  }\r\n\r\n  let primaryPosition = axisIsHorizontal(primaryAxis) ? x : y;\r\n  for (let i = 0; i < targetGroup.items.length; i++) {\r\n    const item = targetGroup.items[i];\r\n\r\n    let itemPrimaryMin: number;\r\n    let itemPrimaryMax: number;\r\n\r\n    if (axisIsHorizontal(primaryAxis)) {\r\n      itemPrimaryMin = item.left;\r\n      itemPrimaryMax = item.right;\r\n    } else {\r\n      itemPrimaryMin = item.top;\r\n      itemPrimaryMax = item.bottom;\r\n    }\r\n\r\n    if (primaryPosition < itemPrimaryMin) {\r\n      // Mouse is past the previous item, not not yet at this item.\r\n      // Use this item's index\r\n      // TODO: Return which of the two the mouse is closer to.\r\n      return item.itemIndex;\r\n    }\r\n\r\n    if (primaryPosition < itemPrimaryMax) {\r\n      // Mouse is on this item\r\n      const center = itemPrimaryMin + (itemPrimaryMax - itemPrimaryMin) / 2;\r\n      if (primaryPosition < center) {\r\n        // Mouse is closer to the start of this item, so return the item index to place the drop before us.\r\n        return item.itemIndex;\r\n      } else {\r\n        // Mouse is closer to the end of this item, so return one after this index to place the drop after us.\r\n        return item.itemIndex + 1;\r\n      }\r\n    }\r\n\r\n    // Position was past this item, loop and search the next.\r\n  }\r\n\r\n  // If we didn't find an item by now, consider us past the last item on this axis.\r\n  return targetGroup.items[targetGroup.items.length - 1].itemIndex + 1;\r\n}\r\n\r\nfunction axisIsHorizontal(axis: PrimaryDragReorderableAxis) {\r\n  return axis === \"left-to-right\" || axis === \"right-to-left\";\r\n}\r\n\r\nfunction axisIsFlipped(axis: PrimaryDragReorderableAxis) {\r\n  return axis === \"right-to-left\" || axis === \"bottom-to-top\";\r\n}\r\n\r\nfunction isNotNull<T>(x: T | null | undefined): x is T {\r\n  return x != null;\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Slider } from \"@mui/material\";\r\n\r\nexport interface IncDecSliderProps {\r\n  className?: string;\r\n  value: number;\r\n  /**\r\n   * The rate of change at maximum deflection in units per second.\r\n   */\r\n  rate: number;\r\n  onChange(value: number): void;\r\n  onChangeCommitted?(): void;\r\n}\r\n\r\nconst IncDecSlider = ({\r\n  className,\r\n  value,\r\n  rate,\r\n  onChange,\r\n  onChangeCommitted,\r\n}: IncDecSliderProps) => {\r\n  const [delta, setDelta] = React.useState(0);\r\n  React.useEffect(() => {\r\n    const token = setInterval(() => {\r\n      if (delta === 0) {\r\n        return;\r\n      }\r\n\r\n      const newValue = value + delta * rate * (1 / 10);\r\n      onChange(newValue);\r\n    }, 10);\r\n    return () => clearInterval(token);\r\n  }, [value, delta, rate]);\r\n\r\n  return (\r\n    <Slider\r\n      className={className}\r\n      min={-1}\r\n      max={1}\r\n      step={0.01}\r\n      value={delta}\r\n      onChange={(e, v) => {\r\n        setDelta(v as number);\r\n      }}\r\n      onChangeCommitted={() => {\r\n        setDelta(0);\r\n        if (onChangeCommitted) {\r\n          onChangeCommitted();\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default IncDecSlider;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  MenuItem,\r\n  Select,\r\n  SelectProps,\r\n  SelectChangeEvent,\r\n  ListItemText,\r\n  Tooltip,\r\n  styled,\r\n} from \"@mui/material\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\n\r\nimport {\r\n  IngredientDescriptor,\r\n  IngredientId,\r\n} from \"@/services/ingredients/types\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\nimport { MAX_INGREDIENT_EXTENT, POTION_RADIUS } from \"@/game-settings\";\r\n\r\nexport interface IngredientSelectorProps\r\n  extends Omit<SelectProps<IngredientId | \"\">, \"value\" | \"onChange\"> {\r\n  value: IngredientId | null;\r\n  allowEmpty?: boolean;\r\n  onChange(value: IngredientId | null): void;\r\n  onMouseOverItem?(value: IngredientId | null): void;\r\n  onMouseOutItem?(): void;\r\n}\r\n\r\nconst StyledTooltip = styled(Tooltip)({\r\n  tooltipPlacementLeft: {\r\n    margin: \"10px 0\",\r\n  },\r\n});\r\n\r\nconst IngredientSelector = ({\r\n  value,\r\n  onChange,\r\n  allowEmpty = false,\r\n  onMouseOverItem,\r\n  onMouseOutItem,\r\n  ...props\r\n}: IngredientSelectorProps) => {\r\n  const registry = useDIDependency(IngredientRegistry);\r\n\r\n  const onSelectChange = React.useCallback(\r\n    (e: SelectChangeEvent<IngredientId | \"\">) => {\r\n      const value = e.target.value;\r\n      if (value === \"\") {\r\n        onChange(null);\r\n      } else {\r\n        onChange(value as any);\r\n      }\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <Select<IngredientId | \"\">\r\n      {...props}\r\n      value={value ?? \"\"}\r\n      onChange={onSelectChange}\r\n    >\r\n      {allowEmpty && <MenuItem value=\"\"></MenuItem>}\r\n      {registry.getIngredients().map((ingredient) => (\r\n        <MenuItem\r\n          key={ingredient.id}\r\n          value={ingredient.id}\r\n          onMouseOver={\r\n            onMouseOverItem ? () => onMouseOverItem(ingredient.id) : undefined\r\n          }\r\n          onMouseOut={onMouseOutItem}\r\n        >\r\n          <StyledTooltip\r\n            placement=\"left\"\r\n            title={\r\n              <svg\r\n                width=\"100px\"\r\n                height=\"100px\"\r\n                viewBox={`-${MAX_INGREDIENT_EXTENT} -${MAX_INGREDIENT_EXTENT} ${\r\n                  MAX_INGREDIENT_EXTENT * 2\r\n                } ${MAX_INGREDIENT_EXTENT * 2}`}\r\n                transform=\"scale(1, -1)\"\r\n              >\r\n                <circle cx={0} cy={0} r={POTION_RADIUS} fill=\"blue\" />\r\n                <path\r\n                  d={ingredient.path.reduce(\r\n                    (path, curve) =>\r\n                      path +\r\n                      `M ${curve.start.x} ${curve.start.y} C ${curve.p1.x},${curve.p1.y} ${curve.p2.x},${curve.p2.y} ${curve.end.x},${curve.end.y}`,\r\n                    \"M 0 0 \"\r\n                  )}\r\n                  stroke=\"black\"\r\n                  strokeWidth={0.2}\r\n                  fill=\"none\"\r\n                />\r\n              </svg>\r\n            }\r\n          >\r\n            <ListItemText>{ingredient.name}</ListItemText>\r\n          </StyledTooltip>\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default IngredientSelector;\r\n","import React from \"react\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { Vec2Zero } from \"@/points\";\r\nimport { degreesToRadians } from \"@/utils\";\r\nimport { SizeZero } from \"@/size\";\r\n\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { PotionMap } from \"@/services/potion-maps/PotionMap\";\r\nimport {\r\n  DangerZonePartMapEntity,\r\n  ExperienceBonusMapEntity,\r\n  MapEntity,\r\n  PotionEffectMapEntity,\r\n  VortexMapEntity,\r\n} from \"@/services/potion-maps/types\";\r\n\r\nimport { IMapViewModel } from \"./MapViewModel\";\r\n\r\nexport interface MapProps {\r\n  className?: string;\r\n  map: PotionMap;\r\n  viewModel: IMapViewModel;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  backgroundColor: \"#DABE99\",\r\n  overflow: \"hidden\",\r\n}));\r\n\r\nconst imgCache = new Map<string, HTMLImageElement>();\r\nfunction makeImg(src: string): HTMLImageElement {\r\n  if (imgCache.has(src)) {\r\n    return imgCache.get(src)!;\r\n  }\r\n\r\n  const img = new Image();\r\n  img.onerror = console.error.bind(console);\r\n  img.src = src;\r\n  imgCache.set(src, img);\r\n  return img;\r\n}\r\n\r\nconst MapSlotSrc = require(\"@/assets/MapSlot.png\");\r\n\r\nconst PotionMapComponent = ({ className, map, viewModel }: MapProps) => {\r\n  const { width, height } = useObservation(viewModel.viewportSize$) ?? SizeZero;\r\n  const offset = useObservation(viewModel.viewOffset$) ?? Vec2Zero;\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n\r\n  const [canvasRef, setCanvasRef] = React.useState<HTMLCanvasElement | null>(\r\n    null\r\n  );\r\n\r\n  const entities = map.entities;\r\n\r\n  React.useEffect(() => {\r\n    if (!canvasRef) {\r\n      return;\r\n    }\r\n\r\n    const id = requestAnimationFrame(() => {\r\n      const ctx = canvasRef.getContext(\"2d\")!;\r\n\r\n      ctx.clearRect(0, 0, width, height);\r\n\r\n      transformToMap(ctx, scale, offset.x, offset.y, () => {\r\n        // Map border\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = \"red\";\r\n        ctx.lineWidth = 0.2;\r\n        ctx.moveTo(-60, -60);\r\n        ctx.lineTo(-60, 60);\r\n        ctx.lineTo(60, 60);\r\n        ctx.lineTo(60, -60);\r\n        ctx.lineTo(-60, -60);\r\n        ctx.stroke();\r\n\r\n        // ctx.beginPath();\r\n        // ctx.fillStyle = \"blue\";\r\n        // ctx.arc(0, 0, POTION_RADIUS, 0, 2 * Math.PI);\r\n        // ctx.fill();\r\n\r\n        ctx.save();\r\n        const img = makeImg(MapSlotSrc);\r\n        const mapSlotW = img.width / 100;\r\n        const mapSlotH = img.height / 100;\r\n        ctx.scale(1, -1);\r\n        ctx.translate(-mapSlotW / 2, -mapSlotH / 2 - 0.19);\r\n        ctx.drawImage(img, 0, 0, mapSlotW, mapSlotH);\r\n        ctx.restore();\r\n\r\n        for (const entity of entities) {\r\n          renderEntity(ctx, entity);\r\n        }\r\n      });\r\n    });\r\n\r\n    return () => cancelAnimationFrame(id);\r\n  }, [canvasRef, entities, width, height, offset.x, offset.y, scale]);\r\n\r\n  return (\r\n    <Root className={className}>\r\n      <canvas ref={(ref) => setCanvasRef(ref)} width={width} height={height} />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PotionMapComponent;\r\n\r\nfunction transformToMap(\r\n  ctx: CanvasRenderingContext2D,\r\n  zoomFactor: number,\r\n  offsetX: number,\r\n  offsetY: number,\r\n  handler: () => void\r\n) {\r\n  ctx.save();\r\n  ctx.scale(zoomFactor, zoomFactor);\r\n\r\n  ctx.translate(MAP_EXTENT_RADIUS, MAP_EXTENT_RADIUS);\r\n\r\n  ctx.scale(1, -1);\r\n\r\n  // Offset is in map units, so apply after the inversion of y.\r\n  ctx.translate(offsetX, offsetY);\r\n\r\n  handler();\r\n  ctx.restore();\r\n}\r\n\r\nfunction renderEntity(ctx: CanvasRenderingContext2D, entity: MapEntity) {\r\n  switch (entity.entityType) {\r\n    case \"DangerZonePart\":\r\n      renderDangerZonePart(ctx, entity);\r\n      return;\r\n    case \"PotionEffect\":\r\n      renderPotionEffectEntity(ctx, entity);\r\n      return;\r\n    case \"ExperienceBonus\":\r\n      renderExperienceBonusEntity(ctx, entity);\r\n      return;\r\n    case \"Vortex\":\r\n      renderVortexEntity(ctx, entity);\r\n      return;\r\n  }\r\n}\r\n\r\nconst DangerZoneImageSrces: Record<string, string> = {\r\n  Bone1: require(\"@/assets/danger-zone-parts/Bone1.png\"),\r\n  Bone2: require(\"@/assets/danger-zone-parts/Bone2.png\"),\r\n  Fang1: require(\"@/assets/danger-zone-parts/Fang1.png\"),\r\n  Fang2: require(\"@/assets/danger-zone-parts/Fang2.png\"),\r\n  Skull1: require(\"@/assets/danger-zone-parts/Skull1.png\"),\r\n};\r\n\r\nfunction renderDangerZonePart(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: DangerZonePartMapEntity\r\n) {\r\n  ctx.save();\r\n\r\n  ctx.translate(entity.x, entity.y);\r\n  ctx.rotate(degreesToRadians(entity.angle));\r\n\r\n  // switch (entity.prefab) {\r\n  //   case \"Fang1\":\r\n  //     // 0.1226418, 0.400135\r\n  //     ctx.fillRect(-0.06, -0.02, 0.12, 0.4);\r\n  //     break;\r\n  //   case \"Fang2\":\r\n  //     // 0.1371522, 0.2445218\r\n  //     ctx.fillRect(-0.065, -0.12, 0.13, 0.24);\r\n  //     break;\r\n  //   case \"Bone1\":\r\n  //     // 0.1287996, 0.6983229\r\n  //     ctx.fillRect(-0.06, -0.345, 0.12, 0.69);\r\n  //     break;\r\n  //   case \"Bone2\":\r\n  //     // 0.1529365, 0.7249526\r\n  //     ctx.fillRect(-0.07, -0.36, 0.14, 0.72);\r\n  //     break;\r\n  //   case \"Skull1\":\r\n  //   default:\r\n  //     ctx.beginPath();\r\n  //     ctx.arc(0, 0, 0.24, 0, 2 * Math.PI);\r\n  //     ctx.fill();\r\n  //     break;\r\n  // }\r\n\r\n  const src = DangerZoneImageSrces[entity.prefab];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 130;\r\n    const h = img.height / 130;\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n\r\nconst PotionEffectImageSrces: Record<string, string> = {\r\n  Acid: require(\"@/assets/potion-effects/Acid.webp\"),\r\n  Berserker: require(\"@/assets/potion-effects/Berserker.webp\"),\r\n  Bounce: require(\"@/assets/potion-effects/Bounce.webp\"),\r\n  Charm: require(\"@/assets/potion-effects/Charm.webp\"),\r\n  Crop: require(\"@/assets/potion-effects/Crop.webp\"),\r\n  Explosion: require(\"@/assets/potion-effects/Explosion.webp\"),\r\n  Fire: require(\"@/assets/potion-effects/Fire.webp\"),\r\n  Fly: require(\"@/assets/potion-effects/Fly.webp\"),\r\n  Frost: require(\"@/assets/potion-effects/Frost.webp\"),\r\n  Growth: require(\"@/assets/potion-effects/Growth.webp\"),\r\n  Hallucinations: require(\"@/assets/potion-effects/Hallucinations.webp\"),\r\n  Healing: require(\"@/assets/potion-effects/Healing.webp\"),\r\n  Invisibility: require(\"@/assets/potion-effects/Invisibility.webp\"),\r\n  Libido: require(\"@/assets/potion-effects/Libido.webp\"),\r\n  Light: require(\"@/assets/potion-effects/Light.webp\"),\r\n  Lightning: require(\"@/assets/potion-effects/Lightning.webp\"),\r\n  Mana: require(\"@/assets/potion-effects/Mana.webp\"),\r\n  Necromancy: require(\"@/assets/potion-effects/Necromancy.webp\"),\r\n  Poison: require(\"@/assets/potion-effects/Poison.webp\"),\r\n  SharpVision: require(\"@/assets/potion-effects/SharpVision.webp\"),\r\n  Sleep: require(\"@/assets/potion-effects/Sleep.webp\"),\r\n  SlowDown: require(\"@/assets/potion-effects/SlowDown.webp\"),\r\n  StoneSkin: require(\"@/assets/potion-effects/StoneSkin.webp\"),\r\n};\r\n\r\nconst EffectSlotSrc = require(\"@/assets/EffectSlot.png\");\r\nfunction renderPotionEffectEntity(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: PotionEffectMapEntity\r\n) {\r\n  // Line from effect to origin\r\n  ctx.save();\r\n  var grad = ctx.createLinearGradient(entity.x, entity.y, 0, 0);\r\n  grad.addColorStop(0, \"#D2AA7B\");\r\n  grad.addColorStop(1, \"transparent\");\r\n  ctx.strokeStyle = grad;\r\n  ctx.lineWidth = 0.05;\r\n  ctx.beginPath();\r\n  ctx.moveTo(entity.x, entity.y);\r\n  ctx.lineTo(0, 0);\r\n  ctx.stroke();\r\n  ctx.restore();\r\n\r\n  // Effect artwork\r\n  ctx.save();\r\n\r\n  ctx.translate(entity.x, entity.y);\r\n\r\n  // ctx.beginPath();\r\n  // ctx.fillStyle = \"red\";\r\n  // ctx.arc(0, 0, POTION_RADIUS, 0, 2 * Math.PI);\r\n  // ctx.fill();\r\n\r\n  const container = makeImg(EffectSlotSrc);\r\n  const containerW = container.width / 100;\r\n  const containerH = container.height / 100;\r\n  ctx.save();\r\n  ctx.scale(1, -1);\r\n  ctx.translate(-containerW / 2, -containerH / 2 - 0.2);\r\n  ctx.drawImage(container, 0, 0, containerW, containerH);\r\n  ctx.restore();\r\n\r\n  const src = PotionEffectImageSrces[entity.effect];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 40;\r\n    const h = img.height / 40;\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n\r\nconst ExperienceBonusImagesSrc: Record<string, string> = {\r\n  Little: require(\"@/assets/experience-bonus/xp-small.png\"),\r\n  Medium: require(\"@/assets/experience-bonus/xp-medium.png\"),\r\n  Large: require(\"@/assets/experience-bonus/xp-large.png\"),\r\n};\r\n\r\nfunction renderExperienceBonusEntity(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: ExperienceBonusMapEntity\r\n) {\r\n  ctx.save();\r\n  ctx.translate(entity.x, entity.y);\r\n\r\n  const src = ExperienceBonusImagesSrc[entity.prefab];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 200;\r\n    const h = img.height / 200;\r\n    ctx.save();\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n    ctx.restore();\r\n  }\r\n\r\n  // ctx.beginPath();\r\n  // ctx.fillStyle = \"green\";\r\n  // ctx.arc(0, 0, 0.3, 0, 2 * Math.PI);\r\n  // ctx.fill();\r\n\r\n  ctx.restore();\r\n}\r\n\r\nconst VortexImagesSrc: Record<string, string> = {\r\n  Large: require(\"@/assets/vortexes/Vortex Large Idle.png\"),\r\n  Medium: require(\"@/assets/vortexes/Vortex Medium Idle.png\"),\r\n};\r\n\r\nfunction renderVortexEntity(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: VortexMapEntity\r\n) {\r\n  ctx.save();\r\n  ctx.translate(entity.x, entity.y);\r\n\r\n  // let radius = 0;\r\n  // switch (entity.prefab) {\r\n  //   case \"Large\":\r\n  //     radius = 1.65;\r\n  //     break;\r\n  //   case \"Medium\":\r\n  //     radius = 1.25;\r\n  //     break;\r\n  // }\r\n\r\n  // if (radius > 0) {\r\n  //   ctx.beginPath();\r\n  //   ctx.fillStyle = \"purple\";\r\n  //   ctx.arc(0, 0, radius, 0, 2 * Math.PI);\r\n  //   ctx.fill();\r\n  // }\r\n\r\n  // const backgroundSrc = VortexBackgroundImagesSrc[entity.prefab];\r\n  // if (backgroundSrc) {\r\n  //   const img = makeImg(backgroundSrc);\r\n  //   const w = img.width / 150;\r\n  //   const h = img.height / 150;\r\n  //   ctx.save();\r\n  //   ctx.scale(1, -1);\r\n  //   ctx.translate(-w / 2, -h / 2);\r\n  //   ctx.drawImage(img, 0, 0, w, h);\r\n  //   ctx.restore();\r\n  // }\r\n\r\n  const src = VortexImagesSrc[entity.prefab];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 100;\r\n    const h = img.height / 100;\r\n    ctx.save();\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n    ctx.restore();\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n","import PotionMap from \"./Map\";\r\nexport default PotionMap;\r\n","import * as React from \"react\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { getModifiers } from \"@/modifier-keys\";\r\n\r\nimport { useComponentBounds } from \"@/hooks/component-bounds\";\r\nimport { useNativeEvent } from \"@/hooks/native-event\";\r\n\r\nimport { IPanZoomViewportViewModel } from \"./PanZoomViewportViewModel\";\r\nimport { Vector2, vec2Subtract, Vec2Zero } from \"@/points\";\r\n\r\nexport interface PanZoomHandlerProps {\r\n  className?: string;\r\n  viewModel: IPanZoomViewportViewModel;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ZOOM_FACTOR = 1.15;\r\nexport const PAN_FACTOR = 0.15;\r\n\r\nconst Root = styled(\"div\")({\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n});\r\n\r\nconst PanZoomViewport = ({\r\n  className,\r\n  viewModel,\r\n  children,\r\n}: PanZoomHandlerProps) => {\r\n  const containerRef = React.useRef<HTMLDivElement | null>(null);\r\n  const containerBounds = useComponentBounds(containerRef);\r\n  const [dragPointer, setDragPointer] = React.useState<number | null>(null);\r\n  const [mouseLastPos, setMouseLastPos] = React.useState<Vector2>(Vec2Zero);\r\n\r\n  React.useLayoutEffect(() => {\r\n    viewModel.onViewportResized(containerBounds.width, containerBounds.height);\r\n  }, [containerBounds.width, containerBounds.height]);\r\n\r\n  const onWheel = React.useCallback((e: WheelEvent) => {\r\n    const target = containerRef.current;\r\n    if (!target || e.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const modifiers = getModifiers(e);\r\n\r\n    if (modifiers.ctrlMetaKey) {\r\n      viewModel.zoom(e.deltaY < 0 ? ZOOM_FACTOR : 1 / ZOOM_FACTOR, {\r\n        x: e.clientX,\r\n        y: e.clientY,\r\n      });\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else if (modifiers.shiftKey) {\r\n      viewModel.pan(-e.deltaY * PAN_FACTOR, 0, true);\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else {\r\n      viewModel.pan(0, e.deltaY * PAN_FACTOR, true);\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }, []);\r\n\r\n  const onPointerDown = React.useCallback(\r\n    (e: React.PointerEvent<HTMLDivElement>) => {\r\n      if (dragPointer != null) {\r\n        return;\r\n      }\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n      setDragPointer(e.pointerId);\r\n      e.currentTarget.setPointerCapture(e.pointerId);\r\n      setMouseLastPos({ x: e.clientX, y: e.clientY });\r\n    },\r\n    [dragPointer]\r\n  );\r\n\r\n  const onPointerMove = React.useCallback(\r\n    (e: React.PointerEvent<HTMLDivElement>) => {\r\n      if (dragPointer == null) {\r\n        return;\r\n      }\r\n      const p = { x: e.clientX, y: e.clientY };\r\n      const delta = vec2Subtract(p, mouseLastPos);\r\n      setMouseLastPos(p);\r\n      // FIXME: Panning is miscalculated.  Mouse drifts from grab position.\r\n      viewModel.pan(delta.x, -delta.y, true);\r\n    },\r\n    [mouseLastPos, viewModel]\r\n  );\r\n\r\n  const onPointerUp = React.useCallback(\r\n    (e: React.PointerEvent) => {\r\n      if (e.pointerId != dragPointer) {\r\n        return;\r\n      }\r\n      setDragPointer(null);\r\n      setMouseLastPos(Vec2Zero);\r\n      e.currentTarget.releasePointerCapture(e.pointerId);\r\n    },\r\n    [dragPointer]\r\n  );\r\n\r\n  const onMouseOut = React.useCallback(\r\n    () => viewModel.onMouseOut(),\r\n    [viewModel]\r\n  );\r\n\r\n  // React listens to the root listener for all events,\r\n  //  and chrome assumes the root event listener for mouse events\r\n  //  never wants to preventDefault.\r\n  // We need to take a local event listener and mark it as not passive.\r\n  // https://github.com/facebook/react/issues/14856\r\n  useNativeEvent(containerRef, \"wheel\", onWheel, { passive: false });\r\n\r\n  return (\r\n    <Root\r\n      className={className}\r\n      ref={containerRef}\r\n      onMouseMove={(e) => viewModel.onMouseMove(e.clientX, e.clientY)}\r\n      onPointerDown={onPointerDown}\r\n      onPointerMove={onPointerMove}\r\n      onPointerUp={onPointerUp}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      {children}\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PanZoomViewport;\r\n","import PanZoomViewport from \"./PanZoomViewport\";\r\nexport default PanZoomViewport;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  styled,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Slider,\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  CardProps,\r\n} from \"@mui/material\";\r\nimport { DragHandle } from \"@mui/icons-material\";\r\nimport { Add as AddIcon, Delete as DeleteIcon } from \"@mui/icons-material\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport {\r\n  AddIngredientPlotBuilderItem,\r\n  PlotBuilder,\r\n  PlotBuilderItem,\r\n  PourSolventPlotBuilderItem,\r\n  StirCauldronPlotBuilderItem,\r\n  HeatVortexPlotBuilderItem,\r\n} from \"@/services/plotter/PlotBuilder\";\r\nimport { IngredientId } from \"@/services/ingredients/types\";\r\n\r\nimport DragReoderable from \"./DragReorderable\";\r\nimport IngredientSelector from \"./IngredientSelector\";\r\nimport IncDecSlider from \"./IncDecSlider\";\r\n\r\nexport interface PlotBuilderItemsListProps {\r\n  className?: string;\r\n  builder: PlotBuilder;\r\n  highlightItem?: PlotBuilderItem | null;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  overflow: \"auto\",\r\n  boxSixing: \"border-box\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  \"& .list\": {\r\n    listStyle: \"none\",\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  \"& .list-item-container\": {\r\n    position: \"relative\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  \"& .list-item-drag-handle\": {\r\n    position: \"absolute\",\r\n    top: theme.spacing(1),\r\n    left: theme.spacing(1),\r\n  },\r\n  \"& .list-item\": {\r\n    position: \"relative\",\r\n  },\r\n  \"& .list-item-content\": {\r\n    paddingTop: theme.spacing(4),\r\n  },\r\n  \"& .list-item .delete-button\": {\r\n    position: \"absolute\",\r\n    top: \"5px\",\r\n    right: \"15px\",\r\n  },\r\n  \"& .drop-indicator\": {\r\n    width: \"100%\",\r\n    height: 0,\r\n    borderBottom: \"4px solid black\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  \"& .buttons\": {\r\n    alignSelf: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst PlotBuilderItemsList = ({\r\n  className,\r\n  builder,\r\n  highlightItem,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotBuilderItemsListProps) => {\r\n  const items = useObservation(builder.items$) ?? [];\r\n  return (\r\n    <Root className={className}>\r\n      <ul className=\"list\">\r\n        <DragReoderable\r\n          values={items}\r\n          primaryAxis=\"top-to-bottom\"\r\n          dropIndicator={<div className=\"drop-indicator\" />}\r\n          onReorder={(_, p) => {\r\n            builder.reposition(items[p.fromIndex], p.toIndex);\r\n          }}\r\n        >\r\n          {(value, params, getRootProps, getDragHandleProps) => (\r\n            <div {...getRootProps()} className=\"list-item-container\">\r\n              <PlotListItem\r\n                item={value}\r\n                highlight={value === highlightItem}\r\n                onMouseOver={onMouseOver}\r\n                onMouseOut={onMouseOut}\r\n              />\r\n              <div className=\"list-item-drag-handle\" {...getDragHandleProps()}>\r\n                <DragHandle />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </DragReoderable>\r\n      </ul>\r\n      <div className=\"buttons\">\r\n        <Button color=\"primary\" onClick={() => builder.addIngredient()}>\r\n          <AddIcon /> Add Ingredient\r\n        </Button>\r\n        <Button color=\"primary\" onClick={() => builder.addStirCauldron()}>\r\n          <AddIcon /> Stir Cauldron\r\n        </Button>\r\n        <Button color=\"primary\" onClick={() => builder.addPourSolvent()}>\r\n          <AddIcon /> Pour Solvent\r\n        </Button>\r\n        <Button color=\"primary\" onClick={() => builder.addHeatVortex()}>\r\n          <AddIcon /> Heat Vortex\r\n        </Button>\r\n      </div>\r\n    </Root>\r\n  );\r\n};\r\n\r\ninterface PlotListItemProps {\r\n  item: PlotBuilderItem;\r\n  cardProps?: CardProps;\r\n  highlight?: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst PlotListItem = React.memo(\r\n  React.forwardRef<HTMLDivElement, PlotListItemProps>(\r\n    ({ item, cardProps, highlight = false, onMouseOver, onMouseOut }, ref) => {\r\n      if (item instanceof AddIngredientPlotBuilderItem) {\r\n        return (\r\n          <AddIngredientPlotListItem\r\n            ref={ref}\r\n            item={item}\r\n            cardProps={cardProps}\r\n            highlight={highlight}\r\n            onMouseOver={onMouseOver}\r\n            onMouseOut={onMouseOut}\r\n          />\r\n        );\r\n      } else if (item instanceof StirCauldronPlotBuilderItem) {\r\n        return (\r\n          <StirCauldronPlotListItem\r\n            ref={ref}\r\n            item={item}\r\n            cardProps={cardProps}\r\n            highlight={highlight}\r\n            onMouseOver={onMouseOver}\r\n            onMouseOut={onMouseOut}\r\n          />\r\n        );\r\n      } else if (item instanceof PourSolventPlotBuilderItem) {\r\n        return (\r\n          <PourSolventPlotListItem\r\n            ref={ref}\r\n            item={item}\r\n            cardProps={cardProps}\r\n            highlight={highlight}\r\n            onMouseOver={onMouseOver}\r\n            onMouseOut={onMouseOut}\r\n          />\r\n        );\r\n      } else if (item instanceof HeatVortexPlotBuilderItem) {\r\n        return (\r\n          <HeatVortexPlotListItem\r\n            ref={ref}\r\n            item={item}\r\n            cardProps={cardProps}\r\n            highlight={highlight}\r\n            onMouseOver={onMouseOver}\r\n            onMouseOut={onMouseOut}\r\n          />\r\n        );\r\n      }\r\n      return <div ref={ref}>Unknown PlotItem {item.constructor.name}</div>;\r\n    }\r\n  )\r\n);\r\n\r\ninterface PlotListItemCardProps {\r\n  item: PlotBuilderItem;\r\n  highlight: boolean;\r\n  cardProps?: CardProps;\r\n  children: React.ReactNode;\r\n  onMouseOver?(item: PlotBuilderItem): void;\r\n  onMouseOut?(): void;\r\n}\r\n\r\nconst PlotListItemCard = React.forwardRef<\r\n  HTMLDivElement,\r\n  PlotListItemCardProps\r\n>(({ item, highlight, cardProps, children, onMouseOver, onMouseOut }, ref) => {\r\n  const valid = useObservation(item.isValid$) ?? false;\r\n  const onCardMouseOver = React.useCallback(() => {\r\n    if (onMouseOver) {\r\n      onMouseOver(item);\r\n    }\r\n  }, [onMouseOver, item]);\r\n  const onDeleteClick = React.useCallback(() => item.delete(), [item]);\r\n  return (\r\n    <Card\r\n      ref={ref}\r\n      className=\"list-item\"\r\n      style={{\r\n        backgroundColor:\r\n          (!valid && \"salmon\") || (highlight && \"lightblue\") || undefined,\r\n      }}\r\n      onMouseOver={onCardMouseOver}\r\n      onMouseOut={onMouseOut}\r\n      {...cardProps}\r\n    >\r\n      <IconButton\r\n        size=\"small\"\r\n        className=\"delete-button\"\r\n        onClick={onDeleteClick}\r\n      >\r\n        <DeleteIcon />\r\n      </IconButton>\r\n      <CardContent className=\"list-item-content\">{children}</CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\ninterface AddIngredientPlotListItemProps {\r\n  item: AddIngredientPlotBuilderItem;\r\n  highlight: boolean;\r\n  cardProps?: CardProps;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst AddIngredientPlotListItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  AddIngredientPlotListItemProps\r\n>(({ item, highlight, cardProps, onMouseOver, onMouseOut }, ref) => {\r\n  const savedIngredientRef = React.useRef<IngredientId | null>(null);\r\n\r\n  // Need both state (for rerender on change) and ref (to check it in a callback)\r\n  const [isPreviewing, setIsPreviewing] = React.useState<boolean>(false);\r\n  const isPreviewingRef = React.useRef(false);\r\n\r\n  // Note: This is from when a transition was used to show the preview, we wanted\r\n  // the slider to update live while the preview was not.  However, we no longer use\r\n  // transitions as the system is now fast enough to deal without it.\r\n  const [localGrind, setLocalGrind] = React.useState<number | null>(null);\r\n\r\n  const [inputGrindPercent, setInputGrindPercent] = React.useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const ingredientId = useObservation(item.ingredientId$) ?? null;\r\n  const grindPercent = useObservation(item.grindPercent$) ?? 0;\r\n\r\n  const onIngredientSelectorOpen = React.useCallback(() => {\r\n    savedIngredientRef.current = item.ingredientId;\r\n    setIsPreviewing(true);\r\n    isPreviewingRef.current = true;\r\n  }, []);\r\n\r\n  const onIngredientSelectorMouseOverItem = React.useCallback(\r\n    (value: IngredientId) => {\r\n      if (!isPreviewing) {\r\n        return;\r\n      }\r\n      item.setIngredient(value);\r\n    },\r\n    [item]\r\n  );\r\n\r\n  const onIngredientSelectorChange = React.useCallback(\r\n    (value: IngredientId | null) => {\r\n      setIsPreviewing(false);\r\n      isPreviewingRef.current = false;\r\n      item.setIngredient(value);\r\n    },\r\n    [item]\r\n  );\r\n\r\n  const onIngredientSelectorClose = React.useCallback(() => {\r\n    if (isPreviewingRef.current) {\r\n      item.setIngredient(savedIngredientRef.current);\r\n      setIsPreviewing(false);\r\n      isPreviewingRef.current = false;\r\n    }\r\n    savedIngredientRef.current = null;\r\n  }, [item]);\r\n\r\n  const onGrindPercentTextChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let asNumber: number | null = Number(e.target.value) / 100;\r\n      if (isNaN(asNumber) || asNumber < 0 || asNumber > 1) {\r\n        asNumber = null;\r\n      }\r\n\r\n      setInputGrindPercent(e.target.value);\r\n      item.setGrindPercent(asNumber ?? 0);\r\n    },\r\n    [item]\r\n  );\r\n\r\n  const onGrindPercentBlur = React.useCallback(() => {\r\n    setInputGrindPercent(null);\r\n  }, []);\r\n\r\n  const onSliderChange = React.useCallback(\r\n    (_: any, value: number | number[]) => {\r\n      item.setGrindPercent(value as number);\r\n      setLocalGrind(value as number);\r\n    },\r\n    [item]\r\n  );\r\n\r\n  const onSliderChangeCommitted = React.useCallback(\r\n    (_: any, value: number | number[]) => {\r\n      item.setGrindPercent(value as number);\r\n      setLocalGrind(null);\r\n    },\r\n    [item]\r\n  );\r\n\r\n  // We change the ingredientId during mouse over for live feedback, but this changes the ingredient id we wish to display.\r\n  // We need to pin the previously selected id so that IngredientSelector works properly during the selection process.\r\n  const displayIngredientId = isPreviewing\r\n    ? savedIngredientRef.current\r\n    : ingredientId;\r\n  return (\r\n    <PlotListItemCard\r\n      ref={ref}\r\n      item={item}\r\n      cardProps={cardProps}\r\n      highlight={highlight}\r\n      onMouseOver={localGrind != null ? undefined : onMouseOver}\r\n      onMouseOut={localGrind != null ? undefined : onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Ingredient</Typography>\r\n      </div>\r\n      <IngredientSelector\r\n        fullWidth\r\n        value={displayIngredientId}\r\n        allowEmpty={displayIngredientId == null}\r\n        // Store the last ingredient when we open, so we can return to it after closing without making a selection.\r\n        onOpen={onIngredientSelectorOpen}\r\n        // Change the ingredient id with the mouse for a live preview.\r\n        onMouseOverItem={onIngredientSelectorMouseOverItem}\r\n        // Change our saved ingredient when the input is committed.  We will restore it when the input closes after the change.\r\n        onChange={onIngredientSelectorChange}\r\n        onClose={onIngredientSelectorClose}\r\n      />\r\n      <Grid paddingTop={1}>\r\n        <TextField\r\n          label=\"Grind Percent\"\r\n          value={inputGrindPercent ?? grindPercent * 100}\r\n          onChange={onGrindPercentTextChange}\r\n          onBlur={onGrindPercentBlur}\r\n        />\r\n        <Slider\r\n          value={localGrind ?? grindPercent}\r\n          onChange={onSliderChange}\r\n          onChangeCommitted={onSliderChangeCommitted}\r\n          min={0}\r\n          max={1}\r\n          step={0.001}\r\n        />\r\n      </Grid>\r\n    </PlotListItemCard>\r\n  );\r\n});\r\n\r\ninterface StirCauldronPlotListItemProps {\r\n  item: StirCauldronPlotBuilderItem;\r\n  highlight: boolean;\r\n  cardProps?: CardProps;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\n\r\nconst StirCauldronPlotListItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  StirCauldronPlotListItemProps\r\n>(({ item, highlight, cardProps, onMouseOver, onMouseOut }, ref) => {\r\n  const distance = useObservation(item.distance$);\r\n  const [inputDistance, setInputDistance] = React.useState<string | null>(null);\r\n\r\n  const onTextFieldChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let asNumber: number | null = Number(e.target.value);\r\n      if (isNaN(asNumber)) {\r\n        asNumber = null;\r\n      }\r\n\r\n      setInputDistance(e.target.value);\r\n      item.setDistance(asNumber);\r\n    },\r\n    [item]\r\n  );\r\n  const onTextFieldBlur = React.useCallback(() => {\r\n    setInputDistance(null);\r\n  }, []);\r\n  const onDistanceChange = React.useCallback(\r\n    (value: number) => {\r\n      item.setDistance(Math.max(0, Number(value.toFixed(3))));\r\n    },\r\n    [item]\r\n  );\r\n\r\n  return (\r\n    <PlotListItemCard\r\n      item={item}\r\n      highlight={highlight}\r\n      cardProps={cardProps}\r\n      onMouseOver={onMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Stir Cauldron</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"Distance\"\r\n        value={inputDistance ?? distance ?? \"\"}\r\n        onChange={onTextFieldChange}\r\n        onBlur={onTextFieldBlur}\r\n      />\r\n      <IncDecSlider\r\n        value={distance ?? 0}\r\n        rate={10}\r\n        onChange={onDistanceChange}\r\n      />\r\n    </PlotListItemCard>\r\n  );\r\n});\r\n\r\ninterface PourSolventPlotListItemProps {\r\n  item: PourSolventPlotBuilderItem;\r\n  highlight: boolean;\r\n  cardProps?: CardProps;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst PourSolventPlotListItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  PourSolventPlotListItemProps\r\n>(({ item, highlight, cardProps, onMouseOver, onMouseOut }, ref) => {\r\n  const distance = useObservation(item.distance$);\r\n  const [inputDistance, setInputDistance] = React.useState<string | null>(null);\r\n\r\n  const onTextFieldChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let asNumber: number | null = Number(e.target.value);\r\n      if (isNaN(asNumber)) {\r\n        asNumber = null;\r\n      }\r\n\r\n      setInputDistance(e.target.value);\r\n      item.setDistance(asNumber);\r\n    },\r\n    [item]\r\n  );\r\n  const onTextFieldBlur = React.useCallback(() => {\r\n    setInputDistance(null);\r\n  }, []);\r\n  const onDistanceChange = React.useCallback(\r\n    (value: number) => {\r\n      item.setDistance(Math.max(0, Number(value.toFixed(3))));\r\n    },\r\n    [item]\r\n  );\r\n\r\n  return (\r\n    <PlotListItemCard\r\n      ref={ref}\r\n      item={item}\r\n      cardProps={cardProps}\r\n      highlight={highlight}\r\n      onMouseOver={onMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Pour Solvent</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"Distance\"\r\n        value={inputDistance ?? distance ?? \"\"}\r\n        onChange={onTextFieldChange}\r\n        onBlur={onTextFieldBlur}\r\n      />\r\n      <IncDecSlider\r\n        value={distance ?? 0}\r\n        rate={10}\r\n        onChange={onDistanceChange}\r\n      />\r\n    </PlotListItemCard>\r\n  );\r\n});\r\n\r\ninterface HeatVortexPlotListItemProps {\r\n  item: HeatVortexPlotBuilderItem;\r\n  highlight: boolean;\r\n  cardProps?: CardProps;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst HeatVortexPlotListItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  HeatVortexPlotListItemProps\r\n>(({ item, highlight, cardProps, onMouseOver, onMouseOut }, ref) => {\r\n  const distance = useObservation(item.distance$);\r\n  const [inputDistance, setInputDistance] = React.useState<string | null>(null);\r\n\r\n  const onTextFieldChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let asNumber: number | null = Number(e.target.value);\r\n      if (isNaN(asNumber)) {\r\n        asNumber = null;\r\n      }\r\n\r\n      setInputDistance(e.target.value);\r\n      item.setDistance(asNumber);\r\n    },\r\n    [item]\r\n  );\r\n  const onTextFieldBlur = React.useCallback(() => {\r\n    setInputDistance(null);\r\n  }, []);\r\n  const onDistanceChange = React.useCallback(\r\n    (value: number) => {\r\n      item.setDistance(Math.max(0, Number(value.toFixed(3))));\r\n    },\r\n    [item]\r\n  );\r\n\r\n  return (\r\n    <PlotListItemCard\r\n      item={item}\r\n      highlight={highlight}\r\n      cardProps={cardProps}\r\n      onMouseOver={onMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Heat Vortex</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"Distance\"\r\n        value={inputDistance ?? distance ?? \"\"}\r\n        onChange={onTextFieldChange}\r\n        onBlur={onTextFieldBlur}\r\n      />\r\n      <IncDecSlider\r\n        value={distance ?? 0}\r\n        rate={10}\r\n        onChange={onDistanceChange}\r\n      />\r\n    </PlotListItemCard>\r\n  );\r\n});\r\n\r\nexport default PlotBuilderItemsList;\r\n","import React from \"react\";\r\nimport { styled, Card, CardContent, Typography } from \"@mui/material\";\r\n\r\nimport { useDICreate, useDIDependency } from \"@/container\";\r\nimport { Vec2Zero } from \"@/points\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { EmptyPlotResult } from \"@/services/plotter/types\";\r\nimport { PotionBaseRegistry } from \"@/services/potion-bases/PotionBaseRegistry\";\r\n\r\nimport Plot from \"../Plot\";\r\nimport PlotBuilderItemsList from \"../PlotBuilderItemsList\";\r\nimport PotionMap from \"../Map\";\r\nimport PanZoomViewport from \"../PanZoomViewport\";\r\nimport IncDecSlider from \"../IncDecSlider\";\r\n\r\nimport { PlotEditorViewModel } from \"./PlotEditorViewModel\";\r\n\r\nimport PointDetails from \"./components/PointDetails\";\r\nimport StepDetails from \"./components/StepDetails\";\r\nimport PlotDetails from \"./components/PlotDetails\";\r\nimport EntityDetails from \"./components/EntityDetails\";\r\nimport { PlotBuilderItem } from \"@/services/plotter/PlotBuilder\";\r\nimport { MAP_EXTENT_RADIUS, POTION_RADIUS } from \"@/game-settings\";\r\nimport { SizeZero } from \"@/size\";\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  \"& .outer-container\": {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .plot-container\": {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .map\": {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .plot\": {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .plot-details\": {\r\n    position: \"absolute\",\r\n    top: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  \"& .inspect-stack\": {\r\n    position: \"absolute\",\r\n    top: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  \"& .inspect-stack > *\": {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  \"& .mouse-coords\": {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  \"& .zoom\": {\r\n    position: \"absolute\",\r\n    width: \"200px\",\r\n    bottom: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n  },\r\n  \"& .divider\": {\r\n    width: \"2px\",\r\n    height: \"100%\",\r\n    background: \"grey\",\r\n  },\r\n  \"& .plot-items\": {\r\n    width: \"400px\",\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nconst PlotEditor = () => {\r\n  const viewModel = useDICreate(PlotEditorViewModel);\r\n  const baseRegistry = useDIDependency(PotionBaseRegistry);\r\n  const map = baseRegistry.getPotionBaseById(\"water\" as any)?.map;\r\n  const inspectPoint = useObservation(viewModel.bottlePreviewPoint$) ?? null;\r\n  const inspectSource = useObservation(viewModel.mouseOverPlotItem$) ?? null;\r\n  const inspectEntity = useObservation(viewModel.mouseOverEntity$) ?? null;\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n\r\n  const { width, height } = useObservation(viewModel.viewportSize$) ?? SizeZero;\r\n  const offset = useObservation(viewModel.viewOffset$) ?? Vec2Zero;\r\n\r\n  const builder = viewModel.builder;\r\n\r\n  const plot = useObservation(builder.plot$, { useTransition: false }) ?? null;\r\n\r\n  const highlightItem = useObservation(viewModel.mouseOverBuilderItem$) ?? null;\r\n  const outputShareString =\r\n    useObservation(viewModel.shareString$, { useTransition: true }) ?? null;\r\n\r\n  const mouseWorld = useObservation(viewModel.mouseWorldPosition$) ?? null;\r\n\r\n  React.useEffect(() => {\r\n    const query = new URLSearchParams(window.location.search);\r\n    if (query.has(\"data\")) {\r\n      const data = query.get(\"data\")!;\r\n      builder.loadFromShareString(data);\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (!outputShareString) {\r\n      return;\r\n    }\r\n    const query = new URLSearchParams(window.location.search);\r\n    query.set(\"data\", outputShareString);\r\n    window.history.replaceState({}, \"\", `?${query.toString()}`);\r\n  }, [outputShareString]);\r\n\r\n  const onBuildItemMouseOver = React.useCallback(\r\n    (item: PlotBuilderItem) => {\r\n      viewModel.onMouseOverBuilderItem(item);\r\n    },\r\n    [viewModel]\r\n  );\r\n\r\n  const onBuildItemMouseOut = React.useCallback(() => {\r\n    viewModel.onMouseOverBuilderItem(null);\r\n  }, [viewModel]);\r\n\r\n  return (\r\n    <Root>\r\n      <div className=\"outer-container\">\r\n        <PanZoomViewport className=\"plot-container\" viewModel={viewModel}>\r\n          {map && <PotionMap className=\"map\" map={map} viewModel={viewModel} />}\r\n          <Plot\r\n            className=\"plot\"\r\n            plot={plot ?? EmptyPlotResult}\r\n            viewModel={viewModel}\r\n          />\r\n          {/* <svg\r\n            className=\"plot\"\r\n            width={width}\r\n            height={height}\r\n            viewBox={`0 0 ${width} ${height}`}\r\n          >\r\n            <g transform={`scale(${scale})`}>\r\n              <g\r\n                transform={`translate(${MAP_EXTENT_RADIUS}, ${MAP_EXTENT_RADIUS})`}\r\n              >\r\n                <g transform=\"scale(1, -1)\">\r\n                  <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n                    {mouseWorld && (\r\n                      <circle\r\n                        style={{ pointerEvents: \"none\" }}\r\n                        cx={mouseWorld.x}\r\n                        cy={mouseWorld.y}\r\n                        r={POTION_RADIUS}\r\n                        color=\"blue\"\r\n                        opacity={0.2}\r\n                      />\r\n                    )}\r\n                  </g>\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg> */}\r\n        </PanZoomViewport>\r\n        <div className=\"inspect-stack\">\r\n          {inspectPoint && <PointDetails point={inspectPoint} />}\r\n          {inspectSource && <StepDetails step={inspectSource} />}\r\n          {!inspectSource && inspectEntity && (\r\n            <EntityDetails entity={inspectEntity} />\r\n          )}\r\n        </div>\r\n        {plot && <PlotDetails className=\"plot-details\" plot={plot} />}\r\n        {mouseWorld && (\r\n          <Card className=\"mouse-coords\">\r\n            <CardContent>\r\n              <Typography variant=\"overline\">\r\n                ({mouseWorld.x.toFixed(2)}, {mouseWorld.y.toFixed(2)})\r\n              </Typography>\r\n              {/* <Typography variant=\"overline\">\r\n                {map\r\n                  ?.hitTest(mouseWorld, POTION_RADIUS)\r\n                  .map((hit) => hit.entityType)\r\n                  .join(\", \")}\r\n              </Typography> */}\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n        <IncDecSlider\r\n          className=\"zoom\"\r\n          value={scale}\r\n          rate={14}\r\n          onChange={(value) => viewModel.setZoom(value)}\r\n        />\r\n      </div>\r\n      <div className=\"divider\" />\r\n      <PlotBuilderItemsList\r\n        className=\"plot-items\"\r\n        builder={builder}\r\n        highlightItem={highlightItem}\r\n        onMouseOver={onBuildItemMouseOver}\r\n        onMouseOut={onBuildItemMouseOut}\r\n      />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PlotEditor;\r\n","import {\r\n  BehaviorSubject,\r\n  map,\r\n  Observable,\r\n  combineLatest,\r\n  debounceTime,\r\n} from \"rxjs\";\r\nimport { first } from \"lodash\";\r\n\r\nimport { inject } from \"microinject\";\r\n\r\nimport {\r\n  Vector2,\r\n  vec2Add,\r\n  vec2Distance,\r\n  vec2Subtract,\r\n  Vec2Zero,\r\n} from \"@/points\";\r\nimport { Size, SizeZero } from \"@/size\";\r\n\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\n\r\nimport { PlotBuilder, PlotBuilderItem } from \"@/services/plotter/PlotBuilder\";\r\nimport { PlotItem, PlotPoint } from \"@/services/plotter/types\";\r\nimport { MapEntity } from \"@/services/potion-maps/types\";\r\n\r\nimport { IPlotViewModel } from \"../Plot/PlotViewModel\";\r\nimport { IPanZoomViewportViewModel } from \"../PanZoomViewport/PanZoomViewportViewModel\";\r\n\r\nexport class PlotEditorViewModel\r\n  implements IPlotViewModel, IPanZoomViewportViewModel\r\n{\r\n  private readonly _viewportSize$ = new BehaviorSubject<Size>(SizeZero);\r\n\r\n  /**\r\n   * The offset of the map on the viewport, in map units, unscaled.\r\n   */\r\n  private readonly _viewOffset$ = new BehaviorSubject<Vector2>(Vec2Zero);\r\n  private readonly _viewScale$ = new BehaviorSubject<number>(1);\r\n\r\n  private readonly _shareString$: Observable<string>;\r\n\r\n  private readonly _mouseClientPosition$ = new BehaviorSubject<Vector2 | null>(\r\n    null\r\n  );\r\n  private readonly _mouseWorldPosition$: Observable<Vector2 | null>;\r\n  private readonly _mouseOverPlotItem$ = new BehaviorSubject<PlotItem | null>(\r\n    null\r\n  );\r\n  private readonly _mouseOverBuilderItem$ =\r\n    new BehaviorSubject<PlotBuilderItem | null>(null);\r\n  private readonly _mouseOverEntity$: Observable<MapEntity | null>;\r\n\r\n  private readonly _bottlePreviewPoint$: Observable<PlotPoint | null>;\r\n\r\n  constructor(@inject(PlotBuilder) private readonly _builder: PlotBuilder) {\r\n    this._shareString$ = this._builder.plot$\r\n      .pipe(debounceTime(1000))\r\n      .pipe(map((x) => _builder.getShareString()));\r\n\r\n    this._mouseWorldPosition$ = combineLatest([\r\n      this._mouseClientPosition$,\r\n      this._viewOffset$,\r\n      this._viewScale$,\r\n    ]).pipe(\r\n      map(([clientPos]) => (clientPos ? this._clientToWorld(clientPos) : null))\r\n    );\r\n\r\n    this._mouseOverEntity$ = combineLatest([\r\n      this._mouseWorldPosition$,\r\n      _builder.map$,\r\n    ]).pipe(\r\n      map(([worldPos, map]) => {\r\n        if (!worldPos || !map) {\r\n          return null;\r\n        }\r\n\r\n        const entities = map.hitTest(worldPos) ?? [];\r\n        const entity = first(entities);\r\n        return entity ?? null;\r\n      })\r\n    );\r\n\r\n    this._bottlePreviewPoint$ = combineLatest([\r\n      this._mouseWorldPosition$,\r\n      this._mouseOverPlotItem$,\r\n      this._builder.plot$,\r\n    ]).pipe(\r\n      map(([worldPos, plotItem, plot]) => {\r\n        if (!worldPos || !plotItem || !plot) {\r\n          return null;\r\n        }\r\n\r\n        const plotPoints = plot.committedPoints.concat(plot.pendingPoints);\r\n        const plotItemPoints = plotPoints.filter((x) => x.source === plotItem);\r\n\r\n        let closestPlotItem = first(plotItemPoints);\r\n        if (!closestPlotItem) {\r\n          return null;\r\n        }\r\n\r\n        for (let i = 1; i < plotItemPoints.length; i++) {\r\n          const point = plotItemPoints[i];\r\n          if (\r\n            vec2Distance(worldPos, point) <\r\n            vec2Distance(worldPos, closestPlotItem)\r\n          ) {\r\n            closestPlotItem = point;\r\n          }\r\n        }\r\n\r\n        return closestPlotItem;\r\n      })\r\n    );\r\n  }\r\n\r\n  get builder(): PlotBuilder {\r\n    return this._builder;\r\n  }\r\n\r\n  get shareString$(): Observable<string> {\r\n    return this._shareString$;\r\n  }\r\n\r\n  get viewportSize$(): Observable<Size> {\r\n    return this._viewportSize$;\r\n  }\r\n\r\n  get viewOffset$(): Observable<Vector2> {\r\n    return this._viewOffset$;\r\n  }\r\n  get viewScale$(): Observable<number> {\r\n    return this._viewScale$;\r\n  }\r\n\r\n  get mouseWorldPosition$(): Observable<Vector2 | null> {\r\n    return this._mouseWorldPosition$;\r\n  }\r\n\r\n  get mouseOverPlotItem$(): Observable<PlotItem | null> {\r\n    return this._mouseOverPlotItem$;\r\n  }\r\n\r\n  get mouseOverBuilderItem$(): Observable<PlotBuilderItem | null> {\r\n    return this._mouseOverBuilderItem$;\r\n  }\r\n\r\n  get mouseOverEntity$(): Observable<MapEntity | null> {\r\n    return this._mouseOverEntity$;\r\n  }\r\n\r\n  get bottlePreviewPoint$(): Observable<PlotPoint | null> {\r\n    return this._bottlePreviewPoint$;\r\n  }\r\n\r\n  zoom(delta: number, on: Vector2 | null = null) {\r\n    const prevWorld = on ? this._clientToWorld(on) : Vec2Zero;\r\n    const pzoom = this._viewScale$.value;\r\n    const zoom = pzoom * delta;\r\n    this._viewScale$.next(zoom);\r\n    if (on) {\r\n      const world = this._clientToWorld(on);\r\n      const delta = vec2Subtract(world, prevWorld);\r\n      this._viewOffset$.next(vec2Add(this._viewOffset$.value, delta));\r\n    }\r\n  }\r\n\r\n  setZoom(zoom: number) {\r\n    const delta = zoom / this._viewScale$.value;\r\n    const { width, height } = this._viewportSize$.value;\r\n    this.zoom(delta, { x: width / 2, y: height / 2 });\r\n  }\r\n\r\n  pan(dx: number, dy: number, applyZoom = false) {\r\n    const z = applyZoom ? 1 / this._viewScale$.value : 1;\r\n    this._viewOffset$.next(\r\n      vec2Add(this._viewOffset$.value, { x: dx * z, y: dy * z })\r\n    );\r\n  }\r\n\r\n  onMouseMove(clientX: number, clientY: number): void {\r\n    this._mouseClientPosition$.next({ x: clientX, y: clientY });\r\n  }\r\n\r\n  onMouseOut() {\r\n    this._mouseClientPosition$.next(null);\r\n  }\r\n\r\n  onViewportResized(width: number, height: number): void {\r\n    let prevSize = this._viewportSize$.value;\r\n    if (prevSize.width === 0 || prevSize.height === 0) {\r\n      prevSize = {\r\n        width: MAP_EXTENT_RADIUS * 2,\r\n        height: MAP_EXTENT_RADIUS * 2,\r\n      };\r\n    }\r\n\r\n    this._viewportSize$.next({ width, height });\r\n\r\n    if (width === 0 || height === 0) {\r\n      return;\r\n    }\r\n\r\n    let scaleFactor = 1;\r\n    if (width < height) {\r\n      scaleFactor = width / prevSize.width;\r\n    } else {\r\n      scaleFactor = height / prevSize.height;\r\n    }\r\n\r\n    // TODO: Keep the view centered.\r\n    // const offset: Point = {\r\n    //   x: (prevSize.width - width) / 2 / this._viewScale$.value,\r\n    //   y: (prevSize.height - height) / 2 / this._viewScale$.value,\r\n    // };\r\n    this._viewScale$.next(this._viewScale$.value * scaleFactor);\r\n    // this._viewOffset$.next(pointAdd(this._viewOffset$.value, offset));\r\n  }\r\n\r\n  onMouseOverPlotItem(item: PlotItem | null): void {\r\n    this._mouseOverPlotItem$.next(item);\r\n    this._mouseOverBuilderItem$.next(\r\n      item ? this._builder.builderItemFor(item) : null\r\n    );\r\n  }\r\n\r\n  onMouseOverBuilderItem(item: PlotBuilderItem | null): void {\r\n    this._mouseOverBuilderItem$.next(item);\r\n    this._mouseOverPlotItem$.next(item ? item.plotItem : null);\r\n  }\r\n\r\n  private _clientToWorld(p: Vector2): Vector2 {\r\n    const zoomFactor = this._viewScale$.value;\r\n    const { x: offsetX, y: offsetY } = this._viewOffset$.value;\r\n\r\n    // offset is in world coords.\r\n    // We need to add offsetY instead of subtract as y is flipped in world coords when compared to screen.\r\n    return {\r\n      x: p.x / zoomFactor - MAP_EXTENT_RADIUS - offsetX,\r\n      y: (p.y / zoomFactor - MAP_EXTENT_RADIUS + offsetY) * -1,\r\n    };\r\n  }\r\n\r\n  private _worldToClient(p: Vector2): Vector2 {\r\n    const zoomFactor = this._viewScale$.value;\r\n    const { x: offsetX, y: offsetY } = this._viewOffset$.value;\r\n\r\n    // Why the hell is this opposite of crucible-web even with the same client to world coord function?\r\n    return {\r\n      x: (p.x + MAP_EXTENT_RADIUS + offsetX) * zoomFactor,\r\n      y: (-p.y + MAP_EXTENT_RADIUS + offsetY) * zoomFactor,\r\n    };\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Card, CardContent } from \"@mui/material\";\r\n\r\nimport {\r\n  MapEntity,\r\n  PotionEffectMapEntity,\r\n  VortexMapEntity,\r\n} from \"@/services/potion-maps/types\";\r\n\r\nexport interface StepDetailsProps {\r\n  className?: string;\r\n  entity: MapEntity;\r\n}\r\n\r\nconst EntityDetails = ({ entity, className }: StepDetailsProps) => {\r\n  let content: React.ReactNode;\r\n  switch (entity.entityType) {\r\n    case \"PotionEffect\":\r\n      content = <PotionEffectMapEntityDetails entity={entity} />;\r\n      break;\r\n    case \"Vortex\":\r\n      content = <VortexMapEntityDetails entity={entity} />;\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  return (\r\n    <Card className={className} variant=\"outlined\">\r\n      <CardContent>{content}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EntityDetails;\r\n\r\nconst PotionEffectMapEntityDetails = ({\r\n  entity,\r\n}: {\r\n  entity: PotionEffectMapEntity;\r\n}) => {\r\n  return (\r\n    <div>\r\n      {entity.effect} ({entity.x}, {entity.y})\r\n    </div>\r\n  );\r\n};\r\n\r\nconst VortexMapEntityDetails = ({ entity }: { entity: VortexMapEntity }) => {\r\n  return (\r\n    <div>\r\n      Vortex ({entity.x}, {entity.y})\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { uniq, sum, clamp, last } from \"lodash\";\r\n\r\nimport { Card, CardContent, Typography } from \"@mui/material\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\nimport { pointArrayLength } from \"@/point-array\";\r\nimport { vec2Magnitude, vec2Subtract, Vec2Zero } from \"@/points\";\r\n\r\nimport {\r\n  AddIngredientPlotItem,\r\n  PlotItem,\r\n  PlotPoint,\r\n  PlotResult,\r\n} from \"@/services/plotter/types\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\nimport { MapEntity, PotionEffectMapEntity } from \"@/services/potion-maps/types\";\r\n\r\nexport interface PlotDetailsProps {\r\n  className?: string;\r\n  plot: PlotResult;\r\n}\r\n\r\nconst PlotDetails = ({ className, plot }: PlotDetailsProps) => {\r\n  const ingredientRegistry = useDIDependency(IngredientRegistry);\r\n\r\n  const endsAt = last(plot.committedPoints) ?? Vec2Zero;\r\n\r\n  const [\r\n    effects,\r\n    baseCost,\r\n    length,\r\n    totalIngredients,\r\n    totalUniqueIngredients,\r\n    stress,\r\n    longestDanger,\r\n  ] = React.useMemo(() => {\r\n    const allPoints = plot.committedPoints.concat(plot.pendingPoints);\r\n    const sources = uniq(allPoints.map((point) => point.source));\r\n    const ingredients = sources.filter(isIngredientPoint);\r\n\r\n    const effects = getEffects(plot.committedPoints);\r\n\r\n    let baseCost = 0;\r\n    let ingredientTypeCounts: Record<string, number> = {};\r\n    for (const { ingredientId } of ingredients) {\r\n      const ingredient = ingredientRegistry.getIngredientById(ingredientId);\r\n      if (!ingredient) {\r\n        continue;\r\n      }\r\n      baseCost += ingredient.price;\r\n      ingredientTypeCounts[ingredient.id] =\r\n        (ingredientTypeCounts[ingredient.id] ?? 0) + 1;\r\n    }\r\n\r\n    const length = pointArrayLength(plot.committedPoints);\r\n\r\n    const totalIngredients = ingredients.length;\r\n    const totalUniqueIngredients = uniq(\r\n      ingredients.map((x) => x.ingredientId)\r\n    ).length;\r\n\r\n    const stress = Math.sqrt(\r\n      sum(\r\n        Object.keys(ingredientTypeCounts).map((key) =>\r\n          Math.pow(ingredientTypeCounts[key], 2)\r\n        )\r\n      )\r\n    );\r\n\r\n    const longestDanger = longestDangerLength(plot.committedPoints);\r\n\r\n    return [\r\n      effects,\r\n      baseCost,\r\n      length,\r\n      totalIngredients,\r\n      totalUniqueIngredients,\r\n      stress,\r\n      longestDanger,\r\n    ];\r\n  }, [plot, IngredientRegistry]);\r\n\r\n  // PotionCraft subtract .4 health each unit of distance against a max of 1.\r\n  const dangerIsDeath = longestDanger >= 2.5;\r\n\r\n  return (\r\n    <Card className={className} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h6\">Details</Typography>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <Typography>Possible Effects on Path:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography variant=\"overline\">\r\n                  {Object.keys(effects)\r\n                    .map((effect) => `${effect} (${effects[effect]})`)\r\n                    .join(\", \")}\r\n                </Typography>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Typography>Ingredient count:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography variant=\"overline\">\r\n                  {totalIngredients} ({totalUniqueIngredients} unique)\r\n                </Typography>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Typography>Ingredient stress:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography variant=\"overline\">{stress.toFixed(2)}</Typography>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Typography>Base Cost:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography variant=\"overline\">{baseCost}</Typography>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Typography>Committed length:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography variant=\"overline\">{length.toFixed(2)}</Typography>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Typography>Ends at:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography variant=\"overline\">\r\n                  {endsAt.x.toFixed(2)}, {endsAt.y.toFixed(2)}\r\n                </Typography>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Typography>Longest length in bones:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography\r\n                  variant=\"overline\"\r\n                  color={dangerIsDeath ? \"error\" : \"textPrimary\"}\r\n                >\r\n                  {longestDanger.toFixed(2)} / 2.5\r\n                </Typography>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PlotDetails;\r\n\r\nexport function isIngredientPoint(\r\n  point: PlotItem\r\n): point is AddIngredientPlotItem {\r\n  return point.type === \"add-ingredient\";\r\n}\r\n\r\nfunction longestDangerLength(items: PlotPoint[]): number {\r\n  let longestLength = 0;\r\n  let currentLength = 0;\r\n  let prevItem = items[0];\r\n  for (let i = 1; i < items.length; i++) {\r\n    const item = items[i];\r\n    if (item.entities.some((x) => x.entityType === \"DangerZonePart\")) {\r\n      currentLength += vec2Magnitude(vec2Subtract(item, prevItem));\r\n    } else {\r\n      longestLength = Math.max(longestLength, currentLength);\r\n      currentLength = 0;\r\n    }\r\n    prevItem = item;\r\n  }\r\n\r\n  return Math.max(longestLength, currentLength);\r\n}\r\n\r\nfunction getEffects(items: PlotPoint[]): Record<string, number> {\r\n  const result: Record<string, number> = {};\r\n  for (const item of items) {\r\n    const effect = item.entities.find(itemIsEffect);\r\n    if (!effect) {\r\n      continue;\r\n    }\r\n\r\n    const distance = vec2Magnitude(vec2Subtract(item, effect));\r\n    const tier = getEffectTier(distance, 0);\r\n    result[effect.effect] = Math.max(result[effect.effect] ?? 0, tier);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction itemIsEffect(item: MapEntity): item is PotionEffectMapEntity {\r\n  return item.entityType === \"PotionEffect\";\r\n}\r\n\r\nfunction getEffectTier(distance: number, angleDegreesDelta: number): number {\r\n  // From RecipeMapManager.GetEffectTier()\r\n  const middleEffectPowerPosition = 0.9;\r\n  const effectPowerDistanceDependence = (value: number) => {\r\n    return -0.36 * value + 0.72;\r\n  };\r\n  const effectPowerAngleDependence = (value: number) => {\r\n    // TODO: angle\r\n    // We know its 0.3 at the perfect angle.\r\n    return 0.3;\r\n  };\r\n\r\n  const value = clamp(\r\n    effectPowerDistanceDependence(distance) +\r\n      effectPowerAngleDependence(angleDegreesDelta),\r\n    0,\r\n    1\r\n  );\r\n  if (value < middleEffectPowerPosition) {\r\n    return 1;\r\n  }\r\n  return !(Math.abs(value - 1) < Number.EPSILON) ? 2 : 3;\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Card, CardContent, Typography } from \"@mui/material\";\r\n\r\nimport { uniq } from \"lodash\";\r\n\r\nimport { EntityDefs } from \"@/services/potion-maps/entity-defs\";\r\n\r\nimport { PlotPoint } from \"@/services/plotter/types\";\r\n\r\nexport interface PointDetailsProps {\r\n  point: PlotPoint;\r\n}\r\n\r\nconst PointDetails = ({ point }: PointDetailsProps) => {\r\n  const touchedItems = uniq(\r\n    point.entities.map((x) => EntityDefs[x.entityType].getFriendlyName(x))\r\n  );\r\n  return (\r\n    <Card variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h6\">Point at mouse</Typography>\r\n        <Typography variant=\"overline\">\r\n          {point.x.toFixed(2)}, {point.y.toFixed(2)}\r\n        </Typography>\r\n        {touchedItems.length > 0 && (\r\n          <>\r\n            <Typography>Bottle touches:</Typography>\r\n            <Typography variant=\"overline\">\r\n              {touchedItems.join(\", \")}\r\n            </Typography>\r\n          </>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PointDetails;\r\n","import React from \"react\";\r\n\r\nimport { Card, CardContent, Typography, styled } from \"@mui/material\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\n\r\nimport { CubicBezierCurve } from \"@/curves\";\r\nimport { MAX_INGREDIENT_EXTENT, POTION_RADIUS } from \"@/game-settings\";\r\n\r\nimport { AddIngredientPlotItem, PlotItem } from \"@/services/plotter/types\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\n\r\nexport interface StepDetailsProps {\r\n  className?: string;\r\n  step: PlotItem;\r\n}\r\n\r\nconst StepDetails = ({ step, className }: StepDetailsProps) => {\r\n  let content: React.ReactNode;\r\n  switch (step.type) {\r\n    case \"add-ingredient\":\r\n      content = <AddIngredient step={step} />;\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  return (\r\n    <Card className={className} variant=\"outlined\">\r\n      <CardContent>{content}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\ninterface AddIngredientStepProps {\r\n  step: AddIngredientPlotItem;\r\n}\r\n\r\nconst AddIngredientRoot = styled(\"div\")({\r\n  \"& .svg-container\": {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\nconst AddIngredient = ({ step }: AddIngredientStepProps) => {\r\n  const ingredientRegistry = useDIDependency(IngredientRegistry);\r\n  const ingredient = ingredientRegistry.getIngredientById(\r\n    step.ingredientId\r\n  ) ?? {\r\n    name: \"Unknown\",\r\n    path: [] as CubicBezierCurve[],\r\n  };\r\n\r\n  const path = ingredient.path.reduce(\r\n    (path, curve) =>\r\n      path +\r\n      `M ${curve.start.x} ${curve.start.y} C ${curve.p1.x},${curve.p1.y} ${curve.p2.x},${curve.p2.y} ${curve.end.x},${curve.end.y}`,\r\n    \"M 0 0 \"\r\n  );\r\n  return (\r\n    <AddIngredientRoot>\r\n      <Typography variant=\"h6\">Ingredient</Typography>\r\n      <Typography variant=\"overline\">{ingredient.name}</Typography>\r\n      <div>\r\n        <Typography>Grind Percentage</Typography>\r\n        <Typography variant=\"overline\">{step.grindPercent}</Typography>\r\n      </div>\r\n      <div className=\"svg-container\">\r\n        <svg\r\n          width=\"100px\"\r\n          height=\"100px\"\r\n          viewBox={`-${MAX_INGREDIENT_EXTENT} -${MAX_INGREDIENT_EXTENT} ${\r\n            MAX_INGREDIENT_EXTENT * 2\r\n          } ${MAX_INGREDIENT_EXTENT * 2}`}\r\n          transform=\"scale(1, -1)\"\r\n        >\r\n          <circle cx={0} cy={0} r={POTION_RADIUS} fill=\"blue\" />\r\n          <path d={path} stroke=\"black\" strokeWidth={0.2} fill=\"none\" />\r\n        </svg>\r\n      </div>\r\n    </AddIngredientRoot>\r\n  );\r\n};\r\n\r\nexport default StepDetails;\r\n","import PlotEditor from \"./PlotEditor\";\r\nexport default PlotEditor;\r\n","import React from \"react\";\r\nimport Color from \"color\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\nimport { Vec2Zero } from \"@/points\";\r\nimport { MAP_EXTENT_RADIUS, POTION_RADIUS } from \"@/game-settings\";\r\nimport { PointArray } from \"@/point-array\";\r\nimport { keepEveryK } from \"@/utils\";\r\n\r\nimport { PlotItem, PlotPoint, PlotResult } from \"@/services/plotter/types\";\r\nimport {\r\n  IPlotViewModel,\r\n  PlotViewModelContext,\r\n  usePlotViewModel,\r\n} from \"./PlotViewModel\";\r\n\r\nimport { SizeZero } from \"@/size\";\r\nimport { last } from \"lodash\";\r\n\r\nexport interface PlotProps {\r\n  className?: string;\r\n  plot: PlotResult;\r\n  viewModel: IPlotViewModel;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  overflow: \"hidden\",\r\n  position: \"relative\",\r\n  \"& .plot-svg\": {\r\n    display: \"block\",\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n  },\r\n  \"& .bottle-preview\": {\r\n    pointerEvents: \"none\",\r\n  },\r\n}));\r\n\r\nconst Plot = ({ className, plot, viewModel }: PlotProps) => {\r\n  const { width, height } = useObservation(viewModel.viewportSize$) ?? SizeZero;\r\n  const offset = useObservation(viewModel.viewOffset$) ?? Vec2Zero;\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n  const inspectSource = useObservation(viewModel.mouseOverPlotItem$) ?? null;\r\n  const bottlePreviewPoint =\r\n    useObservation(viewModel.bottlePreviewPoint$) ?? null;\r\n\r\n  const lastCommitPoint = last(plot.committedPoints) ?? null;\r\n\r\n  const onLineMouseOver = React.useCallback(\r\n    (line: PlotLine) => {\r\n      viewModel.onMouseOverPlotItem(line.source);\r\n    },\r\n    [viewModel]\r\n  );\r\n\r\n  const onLineMouseOut = React.useCallback(() => {\r\n    viewModel.onMouseOverPlotItem(null);\r\n  }, [viewModel]);\r\n\r\n  const [committedLines, pendingLines] = resultToPlotLines(\r\n    plot.committedPoints,\r\n    plot.pendingPoints\r\n  );\r\n\r\n  return (\r\n    <Root className={className}>\r\n      <PlotViewModelContext.Provider value={viewModel}>\r\n        <svg\r\n          className=\"plot-svg\"\r\n          width={width}\r\n          height={height}\r\n          viewBox={`0 0 ${width} ${height}`}\r\n        >\r\n          {/* In theory all these transforms can be done in one go, but neither order seems to work when combining them */}\r\n          <g transform={`scale(${scale})`}>\r\n            <g\r\n              transform={`translate(${MAP_EXTENT_RADIUS}, ${MAP_EXTENT_RADIUS})`}\r\n            >\r\n              <g transform=\"scale(1, -1)\">\r\n                <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n                  {committedLines.map((line, i) => (\r\n                    <PlotLine\r\n                      key={i}\r\n                      line={line}\r\n                      pending={false}\r\n                      highlight={line.source === inspectSource}\r\n                      onMouseOver={onLineMouseOver}\r\n                      onMouseOut={onLineMouseOut}\r\n                    />\r\n                  ))}\r\n                  {pendingLines.map((line, i) => (\r\n                    <PlotLine\r\n                      key={i}\r\n                      line={line}\r\n                      pending={true}\r\n                      highlight={line.source === inspectSource}\r\n                      onMouseOver={onLineMouseOver}\r\n                      onMouseOut={onLineMouseOut}\r\n                    />\r\n                  ))}\r\n                  {lastCommitPoint && (\r\n                    <circle\r\n                      className=\"bottle-preview\"\r\n                      cx={lastCommitPoint.x}\r\n                      cy={lastCommitPoint.y}\r\n                      r={POTION_RADIUS}\r\n                      fill=\"blue\"\r\n                      opacity={0.2}\r\n                    />\r\n                  )}\r\n                  {bottlePreviewPoint && (\r\n                    <circle\r\n                      className=\"bottle-preview\"\r\n                      cx={bottlePreviewPoint.x}\r\n                      cy={bottlePreviewPoint.y}\r\n                      r={POTION_RADIUS}\r\n                      fill=\"blue\"\r\n                      opacity={0.2}\r\n                    />\r\n                  )}\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </g>\r\n        </svg>\r\n      </PlotViewModelContext.Provider>\r\n    </Root>\r\n  );\r\n};\r\n\r\ninterface PlotLineProps {\r\n  line: PlotLine;\r\n  pending: boolean;\r\n  highlight: boolean;\r\n  onMouseOver(line: PlotLine): void;\r\n  onMouseOut(): void;\r\n}\r\nconst PlotLine = ({\r\n  line,\r\n  pending,\r\n  highlight,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotLineProps) => {\r\n  const viewModel = usePlotViewModel();\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n  const { points, source, evenOdd } = line;\r\n\r\n  const onPathMouseOver = React.useCallback(() => {\r\n    onMouseOver(line);\r\n  }, [line, onMouseOver]);\r\n\r\n  const onPathMouseOut = React.useCallback(() => {\r\n    onMouseOut();\r\n  }, [onMouseOut]);\r\n\r\n  if (points.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  let color = \"black\";\r\n  switch (source.type) {\r\n    case \"add-ingredient\":\r\n      color = evenOdd ? \"red\" : \"green\";\r\n      break;\r\n    case \"pour-solvent\":\r\n      color = \"blue\";\r\n      break;\r\n    case \"heat-vortex\":\r\n      color = \"purple\";\r\n      break;\r\n  }\r\n\r\n  if (pending) {\r\n    color = Color(color).lighten(0.6).hex();\r\n  }\r\n\r\n  const path = line.points.reduce(\r\n    (str, p) => `${str} L${p.x},${p.y}`,\r\n    `M ${points[0].x} ${points[0].y} `\r\n  );\r\n\r\n  return (\r\n    <path\r\n      d={path}\r\n      stroke={color}\r\n      strokeWidth={(highlight ? 6 : 3) / scale}\r\n      fill=\"none\"\r\n      onMouseOver={onPathMouseOver}\r\n      onMouseOut={onPathMouseOut}\r\n    />\r\n  );\r\n};\r\n\r\ninterface PlotLine {\r\n  points: PointArray;\r\n  source: PlotItem;\r\n  evenOdd: boolean;\r\n}\r\n\r\nfunction resultToPlotLines(\r\n  committed: PlotPoint[],\r\n  pending: PlotPoint[],\r\n  trim = 4\r\n) {\r\n  let currentLine: PlotLine | null = null;\r\n  let sourceCounter = 0;\r\n\r\n  const commitedLines: PlotLine[] = [];\r\n  const pendingLines: PlotLine[] = [];\r\n\r\n  let lastSource: PlotItem | null = null;\r\n\r\n  for (const point of committed) {\r\n    if (currentLine == null || currentLine.source != point.source) {\r\n      if (lastSource == null || lastSource !== point.source) {\r\n        sourceCounter++;\r\n        lastSource = point.source;\r\n      }\r\n      currentLine = {\r\n        points: [],\r\n        source: point.source,\r\n        evenOdd: sourceCounter % 2 === 1,\r\n      };\r\n      commitedLines.push(currentLine);\r\n    }\r\n\r\n    currentLine.points.push(point);\r\n  }\r\n\r\n  currentLine = null;\r\n\r\n  for (const point of pending) {\r\n    if (currentLine == null || currentLine.source != point.source) {\r\n      if (lastSource == null || lastSource !== point.source) {\r\n        sourceCounter++;\r\n        lastSource = point.source;\r\n      }\r\n      currentLine = {\r\n        points: [],\r\n        source: point.source,\r\n        evenOdd: sourceCounter % 2 === 1,\r\n      };\r\n      pendingLines.push(currentLine);\r\n    }\r\n\r\n    currentLine.points.push(point);\r\n  }\r\n\r\n  if (trim > 1) {\r\n    for (const line of commitedLines) {\r\n      line.points = keepEveryK(line.points, trim, true);\r\n    }\r\n    for (const line of pendingLines) {\r\n      line.points = keepEveryK(line.points, trim, true);\r\n    }\r\n  }\r\n\r\n  return [commitedLines, pendingLines];\r\n}\r\n\r\nexport default Plot;\r\n","import React from \"react\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\n\r\nimport { Vector2, vec2Add, vec2Scale, vec2Subtract, Vec2Zero } from \"@/points\";\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\nimport { PlotItem, PlotPoint } from \"@/services/plotter/types\";\r\nimport { Size } from \"@/size\";\r\n\r\nexport const PlotViewModelContext = React.createContext<IPlotViewModel | null>(\r\n  null\r\n);\r\n\r\nexport function usePlotViewModel(): IPlotViewModel {\r\n  const plotViewModel = React.useContext(PlotViewModelContext);\r\n  if (!plotViewModel) {\r\n    throw new Error(\"PlotViewModelContext not found\");\r\n  }\r\n  return plotViewModel;\r\n}\r\n\r\nexport interface IPlotViewModel {\r\n  readonly viewportSize$: Observable<Size>;\r\n  readonly viewOffset$: Observable<Vector2>;\r\n  readonly viewScale$: Observable<number>;\r\n  readonly mouseOverPlotItem$: Observable<PlotItem | null>;\r\n  readonly bottlePreviewPoint$: Observable<PlotPoint | null>;\r\n\r\n  onMouseOverPlotItem(item: PlotItem | null): void;\r\n}\r\n","import Plot from \"./Plot\";\r\nexport default Plot;\r\n","import React from \"react\";\r\nimport {\r\n  composeModules,\r\n  Container,\r\n  Identifier,\r\n  Newable,\r\n  ParameterRecord,\r\n} from \"microinject\";\r\n\r\nimport servicesModule from \"./services/module\";\r\n\r\nconst modules = composeModules(servicesModule);\r\n\r\nconst ContainerContext = React.createContext<Container>(new Container());\r\n\r\nconst container = new Container();\r\ncontainer.bind(Container).toConstantValue(container);\r\ncontainer.load(modules);\r\n\r\nexport default container;\r\n\r\nexport interface ContainerProviderProps {\r\n  children: React.ReactNode;\r\n}\r\nexport const ContainerProvider = ({ children }: ContainerProviderProps) => {\r\n  return (\r\n    <ContainerContext.Provider value={container}>\r\n      {children}\r\n    </ContainerContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useDIContainer(): Container {\r\n  return React.useContext(ContainerContext);\r\n}\r\n\r\nexport function useDIDependency<T>(identifier: Identifier<T>): T {\r\n  const container = useDIContainer();\r\n  return container.get(identifier);\r\n}\r\n\r\nexport function useDICreate<T>(\r\n  identifier: Newable<T>,\r\n  parameters?: ParameterRecord\r\n): T {\r\n  const container = useDIContainer();\r\n  const valRef = React.useRef<T>();\r\n  if (valRef.current == null) {\r\n    valRef.current = container.create(identifier, parameters);\r\n  }\r\n  return valRef.current;\r\n}\r\n","import {\r\n  BEZIER_CURVE_LENGTH_RESOLUTION,\r\n  PATH_SPACING_PHYSICS,\r\n} from \"./game-settings\";\r\n\r\nimport {\r\n  Vector2,\r\n  vec2Add,\r\n  vec2Distance,\r\n  vec2Magnitude,\r\n  vec2Normalize,\r\n  vec2Scale,\r\n  vec2Subtract,\r\n  Vec2Zero,\r\n} from \"./points\";\r\n\r\nexport interface CubicBezierCurve {\r\n  start: Vector2;\r\n  p1: Vector2;\r\n  p2: Vector2;\r\n  end: Vector2;\r\n}\r\n\r\nexport function cubicBezierCurve(\r\n  startX: number,\r\n  startY: number,\r\n  p1x: number,\r\n  p1y: number,\r\n  p2x: number,\r\n  p2y: number,\r\n  endx: number,\r\n  endy: number\r\n): CubicBezierCurve {\r\n  return {\r\n    start: { x: startX, y: startY },\r\n    p1: { x: p1x, y: p1y },\r\n    p2: { x: p2x, y: p2y },\r\n    end: { x: endx, y: endy },\r\n  };\r\n}\r\n\r\nexport function getCurvePoint(curve: CubicBezierCurve, t: number): Vector2 {\r\n  if (t < 0 || t > 1) {\r\n    throw new Error(\"getPoint: t must be between 0 and 1\");\r\n  }\r\n\r\n  const b1 = (1 - t) * (1 - t) * (1 - t);\r\n  const b2 = 3 * t * (1 - t) * (1 - t);\r\n  const b3 = 3 * t * t * (1 - t);\r\n  const b4 = t * t * t;\r\n\r\n  return {\r\n    x:\r\n      b1 * curve.start.x + b2 * curve.p1.x + b3 * curve.p2.x + b4 * curve.end.x,\r\n    y:\r\n      b1 * curve.start.y + b2 * curve.p1.y + b3 * curve.p2.y + b4 * curve.end.y,\r\n  };\r\n}\r\n\r\nconst curveLengthCache = new Map<CubicBezierCurve, number>();\r\nexport function getCurveLength(\r\n  curve: CubicBezierCurve\r\n  // resolution: number = BEZIER_CURVE_LENGTH_RESOLUTION\r\n): number {\r\n  const resolution = BEZIER_CURVE_LENGTH_RESOLUTION;\r\n  const cached = curveLengthCache.get(curve);\r\n  if (cached !== undefined) {\r\n    return cached;\r\n  }\r\n\r\n  let length = 0.0;\r\n\r\n  let previousPoint = getCurvePoint(curve, 0);\r\n\r\n  for (let index = 1; index <= resolution; index++) {\r\n    const point = getCurvePoint(curve, index / resolution);\r\n    const vector2_2 = vec2Subtract(point, previousPoint);\r\n    length += vec2Magnitude(vector2_2);\r\n    previousPoint = point;\r\n  }\r\n\r\n  curveLengthCache.set(curve, length);\r\n\r\n  return length;\r\n}\r\n\r\nconst curvePointsCache = new Map<CubicBezierCurve, readonly Vector2[]>();\r\nexport function curveToPoints(\r\n  curve: CubicBezierCurve\r\n  // spacing: number = PATH_SPACING_PHYSICS,\r\n  // resolution: number = 1\r\n): readonly Vector2[] {\r\n  const spacing: number = PATH_SPACING_PHYSICS;\r\n  const resolution: number = 1;\r\n\r\n  // if (spacing <= Number.EPSILON) {\r\n  //   throw new Error(\"curveToPoints: spacing must be greater than 0\");\r\n  // }\r\n  // if (resolution <= 0) {\r\n  //   throw new Error(\"curveToPoints: resolution must be greater than 0\");\r\n  // }\r\n\r\n  const cached = curvePointsCache.get(curve);\r\n  if (cached !== undefined) {\r\n    return cached;\r\n  }\r\n\r\n  const points: Vector2[] = [];\r\n\r\n  let remainingDistance = 0;\r\n  let previousPoint: Vector2 = curve.start;\r\n\r\n  points.push(previousPoint);\r\n\r\n  const samplePointCount = Math.ceil(getCurveLength(curve) * resolution * 10.0);\r\n  for (let index = 0; index <= samplePointCount; index++) {\r\n    const t = index / samplePointCount;\r\n    const point = getCurvePoint(curve, t);\r\n    remainingDistance += vec2Distance(previousPoint, point);\r\n    while (remainingDistance >= spacing) {\r\n      remainingDistance = remainingDistance - spacing;\r\n      const splitPoint = vec2Add(\r\n        point,\r\n        vec2Scale(\r\n          vec2Normalize(vec2Subtract(previousPoint, point)),\r\n          remainingDistance\r\n        )\r\n      );\r\n      points.push(splitPoint);\r\n      previousPoint = splitPoint;\r\n    }\r\n    previousPoint = point;\r\n  }\r\n\r\n  if (remainingDistance > 0) {\r\n    points.push(getCurvePoint(curve, 1));\r\n  }\r\n\r\n  Object.freeze(points);\r\n  for (const p of points) {\r\n    Object.freeze(p);\r\n  }\r\n  curvePointsCache.set(curve, points);\r\n\r\n  return points;\r\n}\r\n","export const PATH_SPACING_PHYSICS = 0.05;\r\nexport const BEZIER_CURVE_LENGTH_RESOLUTION = 200;\r\nexport const MAP_EXTENT_RADIUS = 60;\r\nexport const POTION_RADIUS = 0.79;\r\nexport const MAX_INGREDIENT_EXTENT = 10;\r\n","import * as React from \"react\";\r\n\r\ninterface UseComponentBounds {\r\n  left: number;\r\n  top: number;\r\n  right: number;\r\n  bottom: number;\r\n  width: number;\r\n  height: number;\r\n}\r\nexport function useComponentBounds(ref: React.RefObject<HTMLElement | null>) {\r\n  const [size, setSize] = React.useState<UseComponentBounds>({\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  React.useLayoutEffect(() => {\r\n    if (!ref.current) {\r\n      return;\r\n    }\r\n\r\n    const observer = new ResizeObserver(() => {\r\n      const el = ref.current;\r\n      if (!el) {\r\n        return;\r\n      }\r\n      const b = el.getBoundingClientRect();\r\n      setSize({\r\n        top: b.top,\r\n        left: b.left,\r\n        right: b.right,\r\n        bottom: b.bottom,\r\n        width: b.width,\r\n        height: b.height,\r\n      });\r\n    });\r\n\r\n    observer.observe(ref.current);\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [ref]);\r\n\r\n  return size;\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport function useNativeEvent<\r\n  T extends GlobalEventHandlers,\r\n  K extends keyof GlobalEventHandlersEventMap\r\n>(\r\n  ref: React.RefObject<T | null>,\r\n  type: K,\r\n  listener: (\r\n    this: GlobalEventHandlers,\r\n    ev: GlobalEventHandlersEventMap[K]\r\n  ) => any,\r\n  options?: boolean | AddEventListenerOptions\r\n) {\r\n  React.useEffect(() => {\r\n    if (!ref.current) {\r\n      return;\r\n    }\r\n\r\n    // De-reference the target so we remove from the right element.\r\n    const listenTarget = ref.current;\r\n\r\n    listenTarget.addEventListener(type, listener, options);\r\n    return () => {\r\n      listenTarget.removeEventListener(type, listener, options);\r\n    };\r\n  }, [type, listener, ref, options]);\r\n}\r\n","import React from \"react\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport interface UseObservationOpts {\r\n  useTransition?: boolean;\r\n  onError?: (err: Error) => void;\r\n}\r\nexport function useObservation<T>(\r\n  observable: Observable<T> | T | null | undefined,\r\n  { useTransition, onError }: UseObservationOpts = {}\r\n): T | undefined {\r\n  const [val, setVal] = React.useState<T | undefined>(undefined);\r\n\r\n  React.useEffect(() => {\r\n    if (observable) {\r\n      if (observable instanceof Observable) {\r\n        const subscription = observable.subscribe({\r\n          next: (val) => {\r\n            if (useTransition) {\r\n              React.startTransition(() => setVal(val));\r\n            } else {\r\n              setVal(val);\r\n            }\r\n          },\r\n          error: onError,\r\n        });\r\n        return () => subscription.unsubscribe();\r\n      } else {\r\n        setVal(observable);\r\n      }\r\n    }\r\n  }, [observable, onError, useTransition]);\r\n\r\n  return val;\r\n}\r\n","import \"@/style.css\";\r\n\r\nimport * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom/client\";\r\n\r\nimport { ContainerProvider } from \"./container\";\r\nimport ThemeProvider from \"./theme\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nconst rootEl = document.getElementById(\"root\");\r\nconst root = ReactDOM.createRoot(rootEl!);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <ContainerProvider>\r\n      <ThemeProvider>\r\n        <App />\r\n      </ThemeProvider>\r\n    </ContainerProvider>\r\n  </React.StrictMode>\r\n);\r\n","import { keyboardModifierUseMeta } from \"./runtime-env\";\r\n\r\nexport const MODIFIER_KEYS_NONE = Object.freeze<ModifierKeys>({});\r\n\r\nexport interface ModifierKeys {\r\n  ctrlMetaKey?: boolean;\r\n  shiftKey?: boolean;\r\n  altKey?: boolean;\r\n}\r\n\r\nexport interface MouseEventModifierKeys {\r\n  ctrlKey: boolean;\r\n  altKey: boolean;\r\n  shiftKey: boolean;\r\n  metaKey: boolean;\r\n}\r\nexport function getModifiers(e: MouseEventModifierKeys): ModifierKeys {\r\n  const { ctrlKey, altKey, shiftKey, metaKey } = e;\r\n  return {\r\n    // Mac reserves ctrl for system use, apps use meta.\r\n    ctrlMetaKey: keyboardModifierUseMeta ? metaKey : ctrlKey,\r\n    altKey,\r\n    shiftKey,\r\n  };\r\n}\r\n\r\nexport function isModifierPressed(event: React.MouseEvent<any>) {\r\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\r\n}\r\n","import { sum } from \"lodash\";\r\nimport { PATH_SPACING_PHYSICS } from \"./game-settings\";\r\n\r\nimport {\r\n  vec2Lerp,\r\n  Vector2,\r\n  vec2Add,\r\n  vec2Distance,\r\n  vec2Magnitude,\r\n  vec2Scale,\r\n  vec2Subtract,\r\n  Vec2Zero,\r\n} from \"./points\";\r\n\r\nexport type PointArray = Vector2[];\r\nexport type ReadOnlyPointArray = readonly Vector2[];\r\n\r\nexport function pointArrayLength(pointArray: ReadOnlyPointArray): number {\r\n  if (pointArray.length <= 1) {\r\n    return 0;\r\n  }\r\n\r\n  let length = 0;\r\n  let previousPoint = pointArray[0];\r\n  for (let i = 1; i < pointArray.length; i++) {\r\n    length += vec2Distance(previousPoint, pointArray[i]);\r\n    previousPoint = pointArray[i];\r\n  }\r\n\r\n  return length;\r\n}\r\n\r\nconst pointArrayLengthCache = new Map<ReadOnlyPointArray, number>();\r\nexport function pointArrayLengthCached(pointArray: ReadOnlyPointArray): number {\r\n  if (pointArray.length <= 1) {\r\n    return 0;\r\n  }\r\n\r\n  let length = pointArrayLengthCache.get(pointArray);\r\n  if (length !== undefined) {\r\n    return length;\r\n  }\r\n\r\n  length = pointArrayLength(pointArray);\r\n  pointArrayLengthCache.set(pointArray, length);\r\n\r\n  return length;\r\n}\r\n\r\nexport function pointArrayLineFromDistance(\r\n  start: Vector2,\r\n  direction: Vector2,\r\n  distance: number,\r\n  spacing: number = PATH_SPACING_PHYSICS\r\n) {\r\n  const pointArray: PointArray = [];\r\n  if (vec2Magnitude(direction) === 0) {\r\n    throw new Error(\"direction must be valid.\");\r\n  }\r\n\r\n  if (distance <= 0) {\r\n    return [];\r\n  }\r\n\r\n  let previousPoint = start;\r\n  pointArray.push(previousPoint);\r\n  let remainingDistance = distance;\r\n  while (remainingDistance >= spacing) {\r\n    const point = vec2Add(previousPoint, vec2Scale(direction, spacing));\r\n    pointArray.push(point);\r\n    remainingDistance -= spacing;\r\n    previousPoint = point;\r\n  }\r\n\r\n  if (remainingDistance > 0) {\r\n    pointArray.push(\r\n      vec2Add(previousPoint, vec2Scale(direction, remainingDistance))\r\n    );\r\n  }\r\n\r\n  return pointArray;\r\n}\r\n\r\nexport function pointArrayOffset(\r\n  pointArray: PointArray,\r\n  offset: Vector2\r\n): PointArray {\r\n  return pointArray.map((point) => vec2Add(point, offset));\r\n}\r\n\r\nexport function takePointArrayByDistance<T extends Vector2>(\r\n  array: T[],\r\n  takeLength: number\r\n): [taken: T[], remainder: T[]] {\r\n  const totalLength = pointArrayLength(array);\r\n\r\n  if (array.length <= 1 || totalLength <= takeLength) {\r\n    return [array, [] as T[]];\r\n  }\r\n\r\n  const taken: T[] = [array[0]];\r\n  const remainder: T[] = [];\r\n\r\n  let takenLength = 0;\r\n  let previousPoint = array[0];\r\n  for (let i = 1; i < array.length; i++) {\r\n    const p = array[i];\r\n    const length = vec2Distance(p, previousPoint);\r\n    if (takenLength + length >= takeLength) {\r\n      const remainingLength = takeLength - takenLength;\r\n      const splitPoint = vec2Lerp(previousPoint, p, remainingLength / length);\r\n      taken.push(\r\n        Object.assign({}, previousPoint, { x: splitPoint.x, y: splitPoint.y })\r\n      );\r\n      remainder.push(\r\n        Object.assign({}, p, { x: splitPoint.x, y: splitPoint.y }),\r\n        ...array.slice(i)\r\n      );\r\n      break;\r\n    } else {\r\n      takenLength += length;\r\n      taken.push(p);\r\n      previousPoint = p;\r\n    }\r\n  }\r\n\r\n  return [taken, remainder];\r\n}\r\n","import { clamp } from \"lodash\";\r\n\r\nexport interface Vector2 {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport const Vec2Zero: Readonly<Vector2> = Object.freeze({ x: 0, y: 0 });\r\n\r\nexport function vec2Equals(a: Vector2, b: Vector2): boolean {\r\n  return (\r\n    Math.abs(a.x - b.x) < Number.EPSILON && Math.abs(a.y - b.y) < Number.EPSILON\r\n  );\r\n}\r\n\r\nexport function vec2Scale(p: Vector2, factor: number): Vector2 {\r\n  return {\r\n    x: p.x * factor,\r\n    y: p.y * factor,\r\n  };\r\n}\r\n\r\nexport function vec2Magnitude(p: Vector2): number {\r\n  return Math.sqrt(p.x * p.x + p.y * p.y);\r\n}\r\n\r\nexport function vec2AngleRadians(from: Vector2, to: Vector2): number {\r\n  return Math.atan2(to.y - from.y, to.x - from.x);\r\n}\r\n\r\nexport function vec2MoveTowards(\r\n  current: Vector2,\r\n  target: Vector2,\r\n  maxDistanceDelta: number\r\n): Vector2 {\r\n  const mt1 = target.x - current.x;\r\n  const mt2 = target.y - current.y;\r\n  const mt3 = mt1 * mt1 + mt2 * mt2;\r\n  if (\r\n    mt3 == 0.0 ||\r\n    (maxDistanceDelta >= 0.0 && mt3 <= maxDistanceDelta * maxDistanceDelta)\r\n  )\r\n    return target;\r\n  const mt4 = Math.sqrt(mt3);\r\n  return {\r\n    x: current.x + (mt1 / mt4) * maxDistanceDelta,\r\n    y: current.y + (mt2 / mt4) * maxDistanceDelta,\r\n  };\r\n}\r\n\r\n/**\r\n * Gets the smallest angle in degrees between two points.\r\n */\r\nexport function vec2AngleDegrees180(from: Vector2, to: Vector2) {\r\n  const num = Math.sqrt(\r\n    (from.x * from.x + from.y * from.y) * (to.x * to.x + to.y * to.y)\r\n  );\r\n  if (num < Number.EPSILON) {\r\n    return 0;\r\n  }\r\n  return Math.acos(clamp(vec2Dot(from, to) / num, -1, 1)) * 57.29578;\r\n}\r\n\r\n/**\r\n * Gets the smallest angle between to points.  Value will be negative if the angle if to is counterclockwise of from.\r\n */\r\nexport function pointSignedAngleDegrees180(from: Vector2, to: Vector2) {\r\n  const a = vec2AngleDegrees180(from, to);\r\n  const sign = Math.sign(from.x * to.y - from.y * to.x);\r\n  const sa = sign * a;\r\n  return sa;\r\n}\r\n\r\nexport function vec2Rotate(p: Vector2, angleInRadians: number): Vector2 {\r\n  const x = p.x * Math.cos(angleInRadians) - p.y * Math.sin(angleInRadians);\r\n  const y = p.x * Math.sin(angleInRadians) + p.y * Math.cos(angleInRadians);\r\n  return { x, y };\r\n}\r\n\r\nexport function vec2Dot(a: Vector2, b: Vector2): number {\r\n  return a.x * b.x + a.y * b.y;\r\n}\r\n\r\nexport function vec2Distance(p1: Vector2, p2: Vector2) {\r\n  const dx = p1.x - p2.x;\r\n  const dy = p1.y - p2.y;\r\n  return Math.sqrt(dx * dx + dy * dy);\r\n}\r\n\r\nexport function vec2Add(a: Vector2, b: Vector2) {\r\n  return {\r\n    x: a.x + b.x,\r\n    y: a.y + b.y,\r\n  };\r\n}\r\n\r\nexport function vec2Subtract(a: Vector2, b: Vector2) {\r\n  return {\r\n    x: a.x - b.x,\r\n    y: a.y - b.y,\r\n  };\r\n}\r\n\r\nexport function vec2Normalize(p: Vector2): Vector2 {\r\n  const magnitude = vec2Magnitude(p);\r\n  if (magnitude === 0) {\r\n    return Vec2Zero;\r\n  }\r\n\r\n  return {\r\n    x: p.x / magnitude,\r\n    y: p.y / magnitude,\r\n  };\r\n}\r\n\r\nexport function vec2Lerp(start: Vector2, end: Vector2, lerp: number): Vector2 {\r\n  return {\r\n    x: start.x + (end.x - start.x) * lerp,\r\n    y: start.y + (end.y - start.y) * lerp,\r\n  };\r\n}\r\n","import {\r\n  Vector2,\r\n  vec2Add,\r\n  Vec2Zero,\r\n  vec2Magnitude,\r\n  vec2Subtract,\r\n} from \"./points\";\r\nimport { Size } from \"./size\";\r\n\r\nexport interface Rectangle {\r\n  p1: Vector2;\r\n  p2: Vector2;\r\n}\r\n\r\nexport const RectZero: Readonly<Rectangle> = Object.freeze({\r\n  p1: Vec2Zero,\r\n  p2: Vec2Zero,\r\n}) as any;\r\n\r\nexport function rectangle(x: number, y: number, w: number, h: number) {\r\n  return {\r\n    p1: { x, y },\r\n    p2: { x: x + w, y: y + h },\r\n  };\r\n}\r\n\r\nexport function rectFromCircle(p: Vector2, radius: number) {\r\n  return {\r\n    p1: {\r\n      x: p.x - radius,\r\n      y: p.y - radius,\r\n    },\r\n    p2: {\r\n      x: p.x + radius,\r\n      y: p.y + radius,\r\n    },\r\n  };\r\n}\r\n\r\nexport function rectOffset(r: Rectangle, offset: Vector2) {\r\n  return {\r\n    p1: vec2Add(r.p1, offset),\r\n    p2: vec2Add(r.p2, offset),\r\n  };\r\n}\r\n\r\nexport function normalizeRectangle(p1: Vector2, p2: Vector2): Rectangle;\r\nexport function normalizeRectangle(r: Rectangle): Rectangle;\r\nexport function normalizeRectangle(...args: any[]): Rectangle {\r\n  let p1: Vector2;\r\n  let p2: Vector2;\r\n  if (args.length === 1) {\r\n    const r = args[0] as Rectangle;\r\n    p1 = r.p1;\r\n    p2 = r.p2;\r\n  } else {\r\n    p1 = args[0] as Vector2;\r\n    p2 = args[1] as Vector2;\r\n  }\r\n  return {\r\n    p1: {\r\n      x: Math.min(p1.x, p2.x),\r\n      y: Math.min(p1.y, p2.y),\r\n    },\r\n    p2: {\r\n      x: Math.max(p1.x, p2.x),\r\n      y: Math.max(p1.y, p2.y),\r\n    },\r\n  };\r\n}\r\n\r\nexport function addPointToRect(r: Rectangle, p: Vector2): Rectangle {\r\n  return {\r\n    p1: {\r\n      x: Math.min(r.p1.x, p.x),\r\n      y: Math.min(r.p1.y, p.y),\r\n    },\r\n    p2: {\r\n      x: Math.max(r.p2.x, p.x),\r\n      y: Math.max(r.p2.y, p.y),\r\n    },\r\n  };\r\n}\r\n\r\nexport function pointIntersectsRect(p: Vector2, r: Rectangle): boolean {\r\n  r = normalizeRectangle(r);\r\n\r\n  if (r.p1.x > p.x || r.p2.x < p.x) {\r\n    return false;\r\n  }\r\n\r\n  if (r.p1.y > p.y || r.p2.y < p.y) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function rectSize(r: Rectangle): Size {\r\n  r = normalizeRectangle(r);\r\n  return {\r\n    width: r.p2.x - r.p1.x,\r\n    height: r.p2.y - r.p1.y,\r\n  };\r\n}\r\n","import platform from \"platform\";\r\n\r\nconst OS_WINDOWS = /windows/i;\r\nconst OS_MAC = /Mac|iOS|(OS\\ X)/;\r\nconst OS_LINUX = /linux/i;\r\n\r\nexport type OSType = \"windows\" | \"mac\" | \"linux\" | \"unknown\";\r\n\r\nconst osPlatform = (platform.os && platform.os.family) || \"unknown\";\r\nexport const OSType: OSType = OS_WINDOWS.test(osPlatform)\r\n  ? \"windows\"\r\n  : OS_MAC.test(osPlatform)\r\n  ? \"mac\"\r\n  : OS_LINUX.test(osPlatform)\r\n  ? \"linux\"\r\n  : \"unknown\";\r\n\r\nexport const isProd: boolean = process.env.NODE_ENV === \"production\";\r\n\r\nexport const keyboardModifierUseMeta = osPlatform === \"mac\";\r\n","import { injectable, singleton } from \"microinject\";\r\n\r\nimport { ingredients } from \"./ingredients\";\r\nimport { IngredientDescriptor, IngredientId } from \"./types\";\r\n\r\n@injectable()\r\n@singleton()\r\nexport class IngredientRegistry {\r\n  getIngredients(): readonly IngredientDescriptor[] {\r\n    return ingredients;\r\n  }\r\n\r\n  getIngredientById(id: IngredientId): IngredientDescriptor | null {\r\n    return ingredients.find((x) => x.id === id) ?? null;\r\n  }\r\n}\r\n","import { cubicBezierCurve } from \"@/curves\";\r\nimport { IngredientDescriptor, ingredientId } from \"./types\";\r\n\r\nexport const ingredients: IngredientDescriptor[] = [\r\n  {\r\n    id: ingredientId(\"BloodRuby\"),\r\n\r\n    name: \"Blood Ruby\",\r\n\r\n    color: \"#C24647\",\r\n\r\n    price: 90,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3, -3, -3, -3),\r\n\r\n      cubicBezierCurve(-3, -3, -3, -3, -3, 3, -3, 3),\r\n\r\n      cubicBezierCurve(-3, 3, -3, 3, -5.9999, 0, -6, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.1465,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"BloodyRoot\"),\r\n\r\n    name: \"Bloodthorn\",\r\n\r\n    color: \"#AC4937\",\r\n\r\n    price: 14,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0.0001001358, -2, 0, -2),\r\n\r\n      cubicBezierCurve(0, -2, -0.0001001358, -2, -1.7499, 1, -1.75, 1),\r\n\r\n      cubicBezierCurve(-1.75, 1, -1.7501, 1, -1.7501, -3, -1.75, -3),\r\n\r\n      cubicBezierCurve(-1.75, -3, -1.7499, -3, -4.0001, 2, -4, 2),\r\n\r\n      cubicBezierCurve(-4, 2, -3.9999, 2, -3.9999, -4, -4, -4),\r\n\r\n      cubicBezierCurve(-4, -4, -4.0001, -4, -5.9999, 0, -6, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.435,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"CliffFungus\"),\r\n\r\n    name: \"Brown Mushroom\",\r\n\r\n    color: \"#957C64\",\r\n\r\n    price: 6,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, -1, 0, -1, -1, -1),\r\n\r\n      cubicBezierCurve(-1, -1, -2, -1, -2, -1, -2, -2),\r\n\r\n      cubicBezierCurve(-2, -2, -2, -3, -2, -3, 0, -3),\r\n\r\n      cubicBezierCurve(0, -3, 2, -3, 2, -3, 2, -4),\r\n\r\n      cubicBezierCurve(2, -4, 2, -5, 2, -5, 0.5, -5),\r\n\r\n      cubicBezierCurve(0.5, -5, 0, -5, 0, -5, 0, -6),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Crystal\"),\r\n\r\n    name: \"Cloud Crystal\",\r\n\r\n    color: \"#ADADAD\",\r\n\r\n    price: 60,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 0, -0.75, 1, 0, 1.5),\r\n\r\n      cubicBezierCurve(0, 1.5, 0.7499999, 2, 1, 2, 1, 2.75),\r\n\r\n      cubicBezierCurve(1, 2.75, 0.9999999, 3.75, -0.9999999, 3.25, -1, 4.25),\r\n\r\n      cubicBezierCurve(-1, 4.25, -1, 5, -0.75, 5, 0, 5.5),\r\n\r\n      cubicBezierCurve(0, 5.5, 0.7499999, 6, 0.0001, 7, 0, 7),\r\n    ],\r\n\r\n    preGrindPercent: 0.177,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"DryadMushroom\"),\r\n\r\n    name: \"Dryad's Saddle\",\r\n\r\n    color: \"#9C785A\",\r\n\r\n    price: 5.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -0.25, 0, -1.33541, -0.3291796, -1, -1),\r\n\r\n      cubicBezierCurve(-1, -1, -0.5, -2, 2, -0.5, 2, -2),\r\n\r\n      cubicBezierCurve(2, -2, 2, -3.5, -2, -1.25, -2, -3),\r\n\r\n      cubicBezierCurve(-2, -3, -2, -3.75, 0.0001, -3.75, 0, -3.75),\r\n    ],\r\n\r\n    preGrindPercent: 0.53,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"EarthCrystal\"),\r\n\r\n    name: \"Earth Pyrite\",\r\n\r\n    color: \"#93806A\",\r\n\r\n    price: 30,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0, -1.5, 0, -1.5),\r\n\r\n      cubicBezierCurve(0, -1.5, 0, -1.5, -1, -1.5, -1, -1.5),\r\n\r\n      cubicBezierCurve(-1, -1.5, -1, -1.5, -1, -3.5, -1, -3.5),\r\n\r\n      cubicBezierCurve(-1, -3.5, -1, -3.5, 1, -3.5, 1, -3.5),\r\n\r\n      cubicBezierCurve(1, -3.5, 1, -3.5, 1, -5.5, 1, -5.5),\r\n\r\n      cubicBezierCurve(1, -5.5, 1, -5.5, 0, -5.5, 0, -5.5),\r\n\r\n      cubicBezierCurve(0, -5.5, 0, -5.5, 0.0001, -7, 0, -7),\r\n    ],\r\n\r\n    preGrindPercent: 0.1364,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Firebell\"),\r\n\r\n    name: \"Firebell\",\r\n\r\n    color: \"#D1810D\",\r\n\r\n    price: 5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -1.25, 1, -1.2501, 1, -1.25, 1),\r\n\r\n      cubicBezierCurve(-1.25, 1, -1.2499, 1, -2.5001, 0, -2.5, 0),\r\n\r\n      cubicBezierCurve(-2.5, 0, -2.4999, 0, -3.7501, 1, -3.75, 1),\r\n\r\n      cubicBezierCurve(-3.75, 1, -3.7499, 1, -3.75, 1, -5, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"FireCitrine\"),\r\n\r\n    name: \"Fire Citrine\",\r\n\r\n    color: \"#CD7C19\",\r\n\r\n    price: 50,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -0.75, -1.5, -1.5, 0),\r\n\r\n      cubicBezierCurve(-1.5, 0, -2.5, 2, -2.75, -0.7499999, -3.5, -0.75),\r\n\r\n      cubicBezierCurve(-3.5, -0.75, -4.25, -0.75, -4.5, 2, -5.5, 0),\r\n\r\n      cubicBezierCurve(-5.5, 0, -6.25, -1.5, -6.9999, 0, -7, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.202,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"FrostSapphire\"),\r\n\r\n    name: \"Frost Sapphire\",\r\n\r\n    color: \"#7399BF\",\r\n\r\n    price: 40,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 0, 0.25, 0.5, 0.25, 0.5),\r\n\r\n      cubicBezierCurve(0.25, 0.5, 0.25, 0.5, 1, -1, 1, -1),\r\n\r\n      cubicBezierCurve(1, -1, 1, -1, 2, 1, 2, 1),\r\n\r\n      cubicBezierCurve(2, 1, 2, 1, 3, -1, 3, -1),\r\n\r\n      cubicBezierCurve(3, -1, 3, -1, 4, 1, 4, 1),\r\n\r\n      cubicBezierCurve(4, 1, 4, 1, 5, -1, 5, -1),\r\n\r\n      cubicBezierCurve(5, -1, 5, -1, 6, 1, 6, 1),\r\n\r\n      cubicBezierCurve(6, 1, 6, 1, 6.75, -0.5, 6.75, -0.5),\r\n\r\n      cubicBezierCurve(6.75, -0.5, 6.75, -0.5, 7.0001, 0, 7, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.2139,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"GoblinMushroom\"),\r\n\r\n    name: \"Goblin Shroom\",\r\n\r\n    color: \"#928A5E\",\r\n\r\n    price: 5,\r\n\r\n    path: [cubicBezierCurve(0, 0, 3, 0, 3, -5, 0, -5)],\r\n\r\n    preGrindPercent: 0.663,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Goldthorn\"),\r\n\r\n    name: \"Goldthorn\",\r\n\r\n    color: \"#96714E\",\r\n\r\n    price: 12.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -0.25, 0, -0.5, 0.25, -0.5, 0.5),\r\n\r\n      cubicBezierCurve(-0.5, 0.5, -0.5, 0.75, -0.25, 1, 0, 1),\r\n\r\n      cubicBezierCurve(0, 1, 1, 1, 1, 0.5, 1, 0),\r\n\r\n      cubicBezierCurve(1, 0, 1, -0.5, 0.5, -0.9999999, 0, -1),\r\n\r\n      cubicBezierCurve(0, -1, -0.75, -1, -1.5, -0.25, -1.5, 0.25),\r\n\r\n      cubicBezierCurve(-1.5, 0.25, -1.5, 1.75, -0.75, 2, 0, 2),\r\n\r\n      cubicBezierCurve(0, 2, 1.25, 2, 2, 1.25, 2, 0),\r\n\r\n      cubicBezierCurve(2, 0, 2, -1, 1, -2, 0, -2),\r\n    ],\r\n\r\n    preGrindPercent: 0.3013,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"GraveTruffle\"),\r\n\r\n    name: \"Grave Truffle\",\r\n\r\n    color: \"#908B7F\",\r\n\r\n    price: 10,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3.0001, -2, -3, -2),\r\n\r\n      cubicBezierCurve(-3, -2, -2.9999, -2, -0.7501, -7, -0.75, -7),\r\n\r\n      cubicBezierCurve(-0.75, -7, -0.7499, -7, 0.7499, -7, 0.75, -7),\r\n\r\n      cubicBezierCurve(0.75, -7, 0.7501, -7, 3, -2, 3, -2),\r\n\r\n      cubicBezierCurve(3, -2, 3, -2, -0.0001, -1.25, 0, -1.25),\r\n\r\n      cubicBezierCurve(0, -1.25, 0.0001, -1.25, 0.0001, -5, 0, -5),\r\n    ],\r\n\r\n    preGrindPercent: 0.2535,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"GreenMushroom\"),\r\n\r\n    name: \"Green Mushroom\",\r\n\r\n    color: \"#A5A24F\",\r\n\r\n    price: 9,\r\n\r\n    path: [\r\n      cubicBezierCurve(\r\n        0,\r\n        0,\r\n        3.02107,\r\n        1.020414,\r\n        0.5508628,\r\n        -1.518064,\r\n        1.527383,\r\n        -2.506451\r\n      ),\r\n\r\n      cubicBezierCurve(\r\n        1.527383,\r\n        -2.506451,\r\n        2.500548,\r\n        -3.491441,\r\n        5.012281,\r\n        -0.9910625,\r\n        3.996144,\r\n        -3.978157\r\n      ),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"GreyChanterelle\"),\r\n\r\n    name: \"Shadow Chanterelle\",\r\n\r\n    color: \"#887C77\",\r\n\r\n    price: 10,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 3, 0, -2.384186e-7, 5, 3, 5),\r\n\r\n      cubicBezierCurve(3, 5, 4, 5, 4.5, 4, 4.5, 3),\r\n    ],\r\n\r\n    preGrindPercent: 0.512,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"IceDragonfruit\"),\r\n\r\n    name: \"Ice Fruit\",\r\n\r\n    color: \"#5D8089\",\r\n\r\n    price: 9,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0.9999, 2, 1, 2),\r\n\r\n      cubicBezierCurve(1, 2, 1.0001, 2, 3, -2, 3, -2),\r\n\r\n      cubicBezierCurve(3, -2, 3, -2, 4.9999, 2, 5, 2),\r\n\r\n      cubicBezierCurve(5, 2, 5.0001, 2, 6.0001, 0, 6, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.333,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"LavaRoot\"),\r\n\r\n    name: \"Lava Root\",\r\n\r\n    color: \"#C86B41\",\r\n\r\n    price: 11.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 1.5, -2.5, 1.5, -2.5, 0),\r\n\r\n      cubicBezierCurve(-2.5, 0, -2.5, -1.5, -5, -1.5, -5, 0),\r\n\r\n      cubicBezierCurve(-5, 0, -5, 1.5, -7.5, 1.5, -7.5, 0),\r\n\r\n      cubicBezierCurve(-7.5, 0, -7.5, -0.75, -6.25, -0.75, -6.25, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.4289,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Leaf\"),\r\n\r\n    name: \"Terraria\",\r\n\r\n    color: \"#749064\",\r\n\r\n    price: 3,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -0.25, -0.75, 0, -1),\r\n\r\n      cubicBezierCurve(0, -1, 0.25, -1.25, 0.5, -1, 0.75, -1.25),\r\n\r\n      cubicBezierCurve(0.75, -1.25, 1, -1.5, 1, -2.25, 0.75, -2.5),\r\n\r\n      cubicBezierCurve(0.75, -2.5, 0.5, -2.75, -0.5, -2.25, -0.75, -2.5),\r\n\r\n      cubicBezierCurve(-0.75, -2.5, -1, -2.75, -1, -3.5, -0.75, -3.75),\r\n\r\n      cubicBezierCurve(-0.75, -3.75, -0.5, -4, -0.1767767, -3.823223, 0, -4),\r\n\r\n      cubicBezierCurve(0, -4, 0.25, -4.25, 0.0001, -5, 0, -5),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"LumpyBeet\"),\r\n\r\n    name: \"Lumpy Beet\",\r\n\r\n    color: \"#A36674\",\r\n\r\n    price: 9,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 2, 3, 1, 3, 3),\r\n\r\n      cubicBezierCurve(3, 3, 3, 4, 1, 4, 1, 3),\r\n\r\n      cubicBezierCurve(1, 3, 1, 2, 1, 1, 1, 0),\r\n\r\n      cubicBezierCurve(1, 0, 1, -1, 3, -1, 3, 0),\r\n\r\n      cubicBezierCurve(3, 0, 3, 1, 3, 2, 4, 2),\r\n    ],\r\n\r\n    preGrindPercent: 0.1805,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Marshrooms\"),\r\n\r\n    name: \"Marshroom\",\r\n\r\n    color: \"#837956\",\r\n\r\n    price: 7,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 2, -2, 1, -4, 3, -4),\r\n\r\n      cubicBezierCurve(3, -4, 3.5, -4, 5, -4, 5, -3),\r\n    ],\r\n\r\n    preGrindPercent: 0.423,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"RedMushroom\"),\r\n\r\n    name: \"Red Mushroom\",\r\n\r\n    color: \"#A76C3F\",\r\n\r\n    price: 9.5,\r\n\r\n    path: [cubicBezierCurve(0, 0, -4, 4, -4, -4, -8, 0)],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Refruit\"),\r\n\r\n    name: \"Hairy Banana\",\r\n\r\n    color: \"#C5B13E\",\r\n\r\n    price: 12.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3, -3, -4, -3),\r\n\r\n      cubicBezierCurve(-4, -3, -5, -3, -8.000098, -2.453497e-5, -8, 0),\r\n\r\n      cubicBezierCurve(-8, 0, -7, 0.25, -5, -1.25, -4, -1),\r\n    ],\r\n\r\n    preGrindPercent: 0.3375,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"SulphurShelf\"),\r\n\r\n    name: \"Sulphur Shelf\",\r\n\r\n    color: \"#D77838\",\r\n\r\n    price: 11,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -2, 0, -3.5, 0, -3.5, 0.75),\r\n\r\n      cubicBezierCurve(-3.5, 0.75, -3.5, 1.5, -2.75, 1.5, -2.25, 1.5),\r\n\r\n      cubicBezierCurve(-2.25, 1.5, -1.75, 1.5, -1, 1.5, -1, 2.25),\r\n\r\n      cubicBezierCurve(-1, 2.25, -1, 3, -2.5, 3, -4.5, 3),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Tangleweeds\"),\r\n\r\n    name: \"Tangleweed\",\r\n\r\n    color: \"#759786\",\r\n\r\n    price: 8.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, -1, 3, -1, 3, 0),\r\n\r\n      cubicBezierCurve(3, 0, 3, 1, 1.5, 1, 1.5, 0),\r\n\r\n      cubicBezierCurve(1.5, 0, 1.5, -1, 3, -2, 4, 0),\r\n\r\n      cubicBezierCurve(4, 0, 5, 2, 6.5, 1, 6.5, 0),\r\n\r\n      cubicBezierCurve(6.5, 0, 6.5, -1, 5, -1, 5, 0),\r\n\r\n      cubicBezierCurve(5, 0, 5, 1, 8, 1, 8, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.5005,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Thistle\"),\r\n\r\n    name: \"Thunder Thistle\",\r\n\r\n    color: \"#9E5874\",\r\n\r\n    price: 9,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 1.9999, 3.5, 2, 3.5),\r\n\r\n      cubicBezierCurve(2, 3.5, 2.0001, 3.5, -0.9999, 2.5, -1, 2.5),\r\n\r\n      cubicBezierCurve(-1, 2.5, -1.0001, 2.5, 1.0001, 6, 1, 6),\r\n    ],\r\n\r\n    preGrindPercent: 0.353,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Thornstick\"),\r\n\r\n    name: \"Thornstick\",\r\n\r\n    color: \"#818C4D\",\r\n\r\n    price: 8,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3.9999, -6, -4, -6),\r\n\r\n      cubicBezierCurve(-4, -6, -4.0001, -6, -1.9999, -5, -2, -5),\r\n    ],\r\n\r\n    preGrindPercent: 0.319,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Waterbloom\"),\r\n\r\n    name: \"Waterbloom\",\r\n\r\n    color: \"#539278\",\r\n\r\n    price: 4,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.25, -0.5, 1, -0.5, 1.25, 0),\r\n\r\n      cubicBezierCurve(1.25, 0, 1.5, 0.4999999, 2.25, 0.5, 2.5, 0),\r\n\r\n      cubicBezierCurve(2.5, 0, 2.75, -0.5, 3.5, -0.5, 3.75, 0),\r\n\r\n      cubicBezierCurve(3.75, 0, 4, 0.4999999, 4.75, 0.5, 5, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Wierdshroom\"),\r\n\r\n    name: \"Weirdshroom\",\r\n\r\n    color: \"#B88A51\",\r\n\r\n    price: 8.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -2, 0, -2, -6, -1, -6),\r\n\r\n      cubicBezierCurve(-1, -6, 0.25, -6, 1.353553, -6.207107, 1, -5.5),\r\n\r\n      cubicBezierCurve(1, -5.5, 0.5, -4.5, -0.25, -3.75, 0, -3),\r\n    ],\r\n\r\n    preGrindPercent: 0.3045,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Windbloom\"),\r\n\r\n    name: \"Windbloom\",\r\n\r\n    color: \"#ADABA2\",\r\n\r\n    price: 6,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0, 0, 0.5, 1.25),\r\n\r\n      cubicBezierCurve(0.5, 1.25, 0.9999999, 2.5, 0.9999, 2.5, 1, 2.5),\r\n\r\n      cubicBezierCurve(1, 2.5, 1.0001, 2.5, -1.0001, 2.5, -1, 2.5),\r\n\r\n      cubicBezierCurve(-1, 2.5, -0.9999, 2.5, -1, 2.5, -0.5, 3.75),\r\n\r\n      cubicBezierCurve(-0.5, 3.75, -2.086163e-7, 5, 0.0001, 5, 0, 5),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"WitchMushroom\"),\r\n\r\n    name: \"Witch Mushroom\",\r\n\r\n    color: \"#92777C\",\r\n\r\n    price: 13,\r\n\r\n    path: [cubicBezierCurve(0, 0, 0, 4, 5, 1, 5, 5)],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n];\r\n","import { ContainerModule } from \"microinject\";\r\n\r\nimport { IngredientRegistry } from \"./IngredientRegistry\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(IngredientRegistry);\r\n});\r\n","import { CubicBezierCurve } from \"@/curves\";\r\nimport { Opaque } from \"type-fest\";\r\n\r\nexport type IngredientId = Opaque<string, \"IngredientName\">;\r\nexport function ingredientId(id: string): IngredientId {\r\n  return id as IngredientId;\r\n}\r\n\r\nexport interface IngredientDescriptor {\r\n  readonly id: IngredientId;\r\n  readonly name: string;\r\n  readonly color: string;\r\n  readonly price: number;\r\n  readonly path: CubicBezierCurve[];\r\n  readonly preGrindPercent: number;\r\n}\r\n","import { composeModules } from \"microinject\";\r\n\r\nimport ingredientsModule from \"./ingredients/module\";\r\nimport plotterModule from \"./plotter/module\";\r\nimport potionBasesModule from \"./potion-bases/module\";\r\n\r\nexport default composeModules(\r\n  ingredientsModule,\r\n  plotterModule,\r\n  potionBasesModule\r\n);\r\n","import { isNotNull } from \"@/utils\";\r\nimport { inject, injectable } from \"microinject\";\r\nimport {\r\n  BehaviorSubject,\r\n  combineLatest,\r\n  map,\r\n  Observable,\r\n  Subscription,\r\n} from \"rxjs\";\r\nimport pako from \"pako\";\r\nimport {\r\n  encode as encodeBase64,\r\n  decode as decodeBase64,\r\n} from \"base64-arraybuffer\";\r\n\r\nimport { IngredientId } from \"../ingredients/types\";\r\n\r\nimport { PotionMap } from \"../potion-maps/PotionMap\";\r\nimport { PotionBaseRegistry } from \"../potion-bases/PotionBaseRegistry\";\r\n\r\nimport { Plotter } from \"./Plotter\";\r\nimport { PlotItem, PlotResult } from \"./types\";\r\n\r\n@injectable()\r\nexport class PlotBuilder {\r\n  private readonly _map$ = new BehaviorSubject<PotionMap | null>(null);\r\n  private readonly _items$ = new BehaviorSubject<readonly PlotBuilderItem[]>(\r\n    []\r\n  );\r\n  private _itemSubscription: Subscription | null = null;\r\n  private readonly _plot$ = new BehaviorSubject<PlotResult | null>(null);\r\n\r\n  constructor(\r\n    @inject(PotionBaseRegistry) potionBaseRegistry: PotionBaseRegistry,\r\n    @inject(Plotter) plotter: Plotter\r\n  ) {\r\n    this._map$.next(potionBaseRegistry.getPotionBaseById(\"water\" as any)!.map);\r\n\r\n    // This is a little wonky, but subscribing to all observables in an observable array is something I could see wanting to do a lot.\r\n    // Should make a utility function to handle this use case, if one doesnt already exist in rxjs.\r\n    this._items$.subscribe((items) => {\r\n      if (this._itemSubscription) {\r\n        this._itemSubscription.unsubscribe();\r\n      }\r\n\r\n      if (items.length === 0) {\r\n        this._plot$.next(null);\r\n        return;\r\n      }\r\n\r\n      this._itemSubscription = combineLatest([\r\n        this._map$,\r\n        ...items.map((x) => x.plotItem$),\r\n      ]).subscribe(([map, ...plotItems]) => {\r\n        if (map == null) {\r\n          return null;\r\n        }\r\n        this._plot$.next(plotter.plotItems(plotItems.filter(isNotNull), map));\r\n      });\r\n    });\r\n  }\r\n\r\n  get map$() {\r\n    return this._map$;\r\n  }\r\n\r\n  get items$() {\r\n    return this._items$;\r\n  }\r\n\r\n  get items(): readonly PlotBuilderItem[] {\r\n    return this._items$.value;\r\n  }\r\n\r\n  get plot$() {\r\n    return this._plot$;\r\n  }\r\n\r\n  loadFromShareString(dataStr: string) {\r\n    const array = decodeBase64(dataStr);\r\n    const dv = new DataView(array);\r\n    const version = dv.getUint8(0);\r\n    const data = array.slice(1);\r\n    if (version === 0) {\r\n      const decoded = JSON.parse(pako.inflate(data, { to: \"string\" })) as any[];\r\n      const items = decoded.map((item) => {\r\n        switch (item.type) {\r\n          case \"add-ingredient\":\r\n            return AddIngredientPlotBuilderItem.fromJSON(item, (item) =>\r\n              this._deleteItem(item)\r\n            );\r\n          case \"stir-cauldron\":\r\n            return StirCauldronPlotBuilderItem.fromJSON(item, (item) =>\r\n              this._deleteItem(item)\r\n            );\r\n          case \"pour-solvent\":\r\n            return PourSolventPlotBuilderItem.fromJSON(item, (item) =>\r\n              this._deleteItem(item)\r\n            );\r\n          case \"heat-vortex\":\r\n            return HeatVortexPlotBuilderItem.fromJSON(item, (item) =>\r\n              this._deleteItem(item)\r\n            );\r\n          default:\r\n            throw new Error(`Unknown item type: ${item.type}`);\r\n        }\r\n      });\r\n      this._items$.next(items);\r\n    }\r\n  }\r\n\r\n  reposition(item: PlotBuilderItem, index: number) {\r\n    if (index < 0 || index > this.items.length) {\r\n      return;\r\n    }\r\n\r\n    const sourceIndex = this.items$.value.indexOf(item);\r\n    if (sourceIndex === -1) {\r\n      return;\r\n    }\r\n\r\n    const items = [...this.items$.value];\r\n    items.splice(sourceIndex, 1);\r\n    if (sourceIndex < index) {\r\n      index--;\r\n    }\r\n    items.splice(index, 0, item);\r\n    this._items$.next(items);\r\n  }\r\n\r\n  getShareString() {\r\n    const items = this._items$.value.map((x) => x.toJSON());\r\n    const encoded = pako.deflate(JSON.stringify(items));\r\n    const data = new Uint8Array(1 + encoded.length);\r\n    data.set(encoded, 1);\r\n    new DataView(data.buffer).setUint8(0, 0);\r\n    return encodeBase64(data);\r\n  }\r\n\r\n  addIngredient(): AddIngredientPlotBuilderItem {\r\n    const item = new AddIngredientPlotBuilderItem((item) =>\r\n      this._deleteItem(item)\r\n    );\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  addStirCauldron(): StirCauldronPlotBuilderItem {\r\n    const item = new StirCauldronPlotBuilderItem((item) =>\r\n      this._deleteItem(item)\r\n    );\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  addPourSolvent(): PourSolventPlotBuilderItem {\r\n    const item = new PourSolventPlotBuilderItem((item) =>\r\n      this._deleteItem(item)\r\n    );\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  addHeatVortex(): HeatVortexPlotBuilderItem {\r\n    const item = new HeatVortexPlotBuilderItem((item) =>\r\n      this._deleteItem(item)\r\n    );\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  builderItemFor(item: PlotItem): PlotBuilderItem | null {\r\n    const result = this._items$.value.find((x) => x.plotItem === item) || null;\r\n    return result;\r\n  }\r\n\r\n  private _deleteItem(item: PlotBuilderItem) {\r\n    this._items$.next(this._items$.value.filter((x) => x !== item));\r\n  }\r\n}\r\n\r\nexport abstract class PlotBuilderItem {\r\n  abstract readonly isValid$: Observable<boolean>;\r\n  abstract readonly isValid: boolean;\r\n\r\n  abstract readonly plotItem$: Observable<PlotItem | null>;\r\n  abstract readonly plotItem: PlotItem | null;\r\n\r\n  abstract delete(): void;\r\n\r\n  abstract toJSON(): any;\r\n}\r\n\r\nexport class AddIngredientPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _ingredientId$ = new BehaviorSubject<IngredientId | null>(\r\n    null\r\n  );\r\n  private readonly _grindPercent$ = new BehaviorSubject<number>(1);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([\r\n      this._ingredientId$,\r\n      this._grindPercent$,\r\n    ]).pipe(map(() => this.isValid));\r\n\r\n    combineLatest([this._ingredientId$, this._grindPercent$]).subscribe(\r\n      ([ingredientId, grindPercent]) => {\r\n        if (!this.isValid) {\r\n          this._plotItem$.next(null);\r\n          return;\r\n        }\r\n\r\n        this._plotItem$.next({\r\n          type: \"add-ingredient\",\r\n          ingredientId: ingredientId as IngredientId,\r\n          grindPercent,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  static fromJSON(\r\n    json: any,\r\n    del: (item: PlotBuilderItem) => void\r\n  ): AddIngredientPlotBuilderItem {\r\n    const item = new AddIngredientPlotBuilderItem(del);\r\n    item.setIngredient(json.ingredientId);\r\n    item.setGrindPercent(json.grindPercent);\r\n    return item;\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      type: \"add-ingredient\",\r\n      ingredientId: this._ingredientId$.value,\r\n      grindPercent: this._grindPercent$.value,\r\n    };\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    // TODO: Check if ingredientId is valid\r\n    const grindPercent = this._grindPercent$.value;\r\n    return (\r\n      this._ingredientId$.value != null &&\r\n      grindPercent >= 0 &&\r\n      grindPercent <= 1\r\n    );\r\n  }\r\n\r\n  get ingredientId$(): Observable<IngredientId | null> {\r\n    return this._ingredientId$;\r\n  }\r\n\r\n  get ingredientId(): IngredientId | null {\r\n    return this._ingredientId$.value;\r\n  }\r\n\r\n  get grindPercent$(): Observable<number> {\r\n    return this._grindPercent$;\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  setIngredient(ingredientId: IngredientId | null) {\r\n    if (ingredientId === this._ingredientId$.value) {\r\n      return;\r\n    }\r\n\r\n    this._ingredientId$.next(ingredientId);\r\n  }\r\n\r\n  setGrindPercent(percent: number) {\r\n    if (percent === this._grindPercent$.value) {\r\n      return;\r\n    }\r\n\r\n    this._grindPercent$.next(percent);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n\r\nexport class StirCauldronPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _distance$ = new BehaviorSubject<number | null>(null);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([this._distance$]).pipe(\r\n      map(() => this.isValid)\r\n    );\r\n\r\n    combineLatest([this._distance$]).subscribe(([stirDistance]) => {\r\n      if (!this.isValid) {\r\n        this._plotItem$.next(null);\r\n        return;\r\n      }\r\n\r\n      this._plotItem$.next({\r\n        type: \"stir-cauldron\",\r\n        distance: stirDistance!,\r\n      });\r\n    });\r\n  }\r\n\r\n  static fromJSON(\r\n    json: any,\r\n    del: (item: PlotBuilderItem) => void\r\n  ): StirCauldronPlotBuilderItem {\r\n    const item = new StirCauldronPlotBuilderItem(del);\r\n    item.setDistance(json.distance);\r\n    return item;\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      type: \"stir-cauldron\",\r\n      distance: this._distance$.value,\r\n    };\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    // TODO: Check if ingredientId is valid\r\n    const stirDistance = this._distance$.value;\r\n    return stirDistance != null && stirDistance >= 0;\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  get distance$(): Observable<number | null> {\r\n    return this._distance$;\r\n  }\r\n\r\n  setDistance(distance: number | null) {\r\n    this._distance$.next(distance);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n\r\nexport class PourSolventPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _distance$ = new BehaviorSubject<number | null>(null);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([this._distance$]).pipe(\r\n      map(() => this.isValid)\r\n    );\r\n\r\n    combineLatest([this._distance$]).subscribe(([distance]) => {\r\n      if (!this.isValid) {\r\n        this._plotItem$.next(null);\r\n        return;\r\n      }\r\n\r\n      this._plotItem$.next({\r\n        type: \"pour-solvent\",\r\n        distance: distance!,\r\n      });\r\n    });\r\n  }\r\n\r\n  static fromJSON(\r\n    json: any,\r\n    del: (item: PlotBuilderItem) => void\r\n  ): PourSolventPlotBuilderItem {\r\n    const item = new PourSolventPlotBuilderItem(del);\r\n    item.setDistance(json.distance);\r\n    return item;\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      type: \"pour-solvent\",\r\n      distance: this._distance$.value,\r\n    };\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    const distance = this._distance$.value;\r\n    return distance != null && distance >= 0;\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  get distance$(): Observable<number | null> {\r\n    return this._distance$;\r\n  }\r\n\r\n  setDistance(distance: number | null) {\r\n    this._distance$.next(distance);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n\r\nexport class HeatVortexPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _distance$ = new BehaviorSubject<number | null>(null);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([this._distance$]).pipe(\r\n      map(() => this.isValid)\r\n    );\r\n\r\n    combineLatest([this._distance$]).subscribe(([distace]) => {\r\n      if (!this.isValid) {\r\n        this._plotItem$.next(null);\r\n        return;\r\n      }\r\n\r\n      this._plotItem$.next({\r\n        type: \"heat-vortex\",\r\n        distance: distace!,\r\n      });\r\n    });\r\n  }\r\n\r\n  static fromJSON(\r\n    json: any,\r\n    del: (item: PlotBuilderItem) => void\r\n  ): HeatVortexPlotBuilderItem {\r\n    const item = new HeatVortexPlotBuilderItem(del);\r\n    item.setDistance(json.distance);\r\n    return item;\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      type: \"heat-vortex\",\r\n      distance: this._distance$.value,\r\n    };\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    const distance = this._distance$.value;\r\n    return distance != null && distance >= 0;\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  get distance$(): Observable<number | null> {\r\n    return this._distance$;\r\n  }\r\n\r\n  setDistance(distance: number | null) {\r\n    this._distance$.next(distance);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n","import { last } from \"lodash\";\r\nimport { inject, injectable, singleton } from \"microinject\";\r\n\r\nimport { POTION_RADIUS } from \"@/game-settings\";\r\nimport { curveToPoints } from \"@/curves\";\r\nimport {\r\n  PointArray,\r\n  pointArrayLengthCached,\r\n  pointArrayLineFromDistance,\r\n  takePointArrayByDistance,\r\n} from \"@/point-array\";\r\nimport {\r\n  Vector2,\r\n  vec2Add,\r\n  vec2AngleRadians,\r\n  vec2Distance,\r\n  vec2Equals,\r\n  vec2Magnitude,\r\n  vec2MoveTowards,\r\n  vec2Normalize,\r\n  vec2Rotate,\r\n  vec2Scale,\r\n  pointSignedAngleDegrees180,\r\n  vec2Subtract,\r\n  Vec2Zero,\r\n} from \"@/points\";\r\n\r\nimport { IngredientRegistry } from \"../ingredients/IngredientRegistry\";\r\nimport { PotionMap } from \"../potion-maps/PotionMap\";\r\n\r\nimport {\r\n  AddIngredientPlotItem,\r\n  HeatVortexPlotItem,\r\n  PlotItem,\r\n  PlotResult,\r\n  PourSolventPlotItem,\r\n  StirCauldronPlotItem,\r\n} from \"./types\";\r\nimport { degreesToRadians } from \"@/utils\";\r\n\r\n@injectable()\r\n@singleton()\r\nexport class Plotter {\r\n  constructor(\r\n    @inject(IngredientRegistry) private ingredientRegistry: IngredientRegistry\r\n  ) {}\r\n\r\n  plotItems(items: readonly PlotItem[], map: PotionMap): PlotResult {\r\n    let result: PlotResult = {\r\n      committedPoints: [],\r\n      pendingPoints: [],\r\n    };\r\n\r\n    // return result;\r\n\r\n    const now = Date.now();\r\n\r\n    for (const item of items) {\r\n      result = this._plotItem(item, result, map);\r\n    }\r\n\r\n    for (const point of result.committedPoints.concat(result.pendingPoints)) {\r\n      const entities = map.hitTest(point, POTION_RADIUS);\r\n      point.entities = entities as any;\r\n    }\r\n\r\n    console.log(\"plotting took\", Date.now() - now);\r\n\r\n    return result;\r\n  }\r\n\r\n  private _plotItem(\r\n    item: PlotItem,\r\n    result: PlotResult,\r\n    map: PotionMap\r\n  ): PlotResult {\r\n    switch (item.type) {\r\n      case \"add-ingredient\":\r\n        return this._plotAddIngredient(item, result);\r\n      case \"pour-solvent\":\r\n        return this._plotPourSolvent(item, result);\r\n      case \"stir-cauldron\":\r\n        return this._plotStirCauldron(item, result);\r\n      case \"heat-vortex\":\r\n        return this._plotHeatVortex(item, result, map);\r\n      default:\r\n        throw new Error(`Unknown plot item type: ${(item as any).type}`);\r\n    }\r\n  }\r\n\r\n  private _plotAddIngredient(\r\n    item: AddIngredientPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const { ingredientId, grindPercent } = item;\r\n\r\n    const addPosition =\r\n      last(result.pendingPoints) ?? last(result.committedPoints) ?? Vec2Zero;\r\n\r\n    const ingredient = this.ingredientRegistry.getIngredientById(ingredientId);\r\n    if (!ingredient) {\r\n      throw new Error(`Unknown ingredient: ${ingredientId}`);\r\n    }\r\n\r\n    const ingredientPoints: PointArray = [];\r\n    let ingredientLength = 0;\r\n    for (const curve of ingredient.path) {\r\n      const points = curveToPoints(curve);\r\n      ingredientPoints.push(...points);\r\n      // Use the cached length, as curveToPoints is cached and will return consistent array references.\r\n      // Note, this produces a very slightly incorrect length. A difference of around e-15 when compared to getting\r\n      // the length of the final ingredientPoints array.\r\n      ingredientLength += pointArrayLengthCached(points);\r\n    }\r\n\r\n    const takePercent =\r\n      ingredient.preGrindPercent +\r\n      grindPercent * (1 - ingredient.preGrindPercent);\r\n\r\n    const [addedPoints] = takePointArrayByDistance(\r\n      ingredientPoints,\r\n      takePercent * ingredientLength\r\n    );\r\n\r\n    const appendPendingPoints = addedPoints.map((point) =>\r\n      vec2Add(addPosition, point)\r\n    );\r\n\r\n    return appendPendingPlotPoints(appendPendingPoints, item, result);\r\n  }\r\n\r\n  private _plotPourSolvent(\r\n    item: PourSolventPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const currentPoint =\r\n      result.committedPoints[result.committedPoints.length - 1] ?? Vec2Zero;\r\n    if (vec2Equals(currentPoint, Vec2Zero)) {\r\n      return result;\r\n    }\r\n\r\n    let { distance } = item;\r\n\r\n    const distanceToOrigin = vec2Distance(currentPoint, Vec2Zero);\r\n    if (distance > distanceToOrigin) {\r\n      distance = distanceToOrigin;\r\n    }\r\n\r\n    const newPoints = pointArrayLineFromDistance(\r\n      currentPoint,\r\n      vec2Normalize(vec2Subtract(Vec2Zero, currentPoint)),\r\n      distance\r\n    );\r\n\r\n    return commitPlotPoints(newPoints, item, result);\r\n  }\r\n\r\n  private _plotStirCauldron(\r\n    item: StirCauldronPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const { distance } = item;\r\n\r\n    const [addedPoints, remainderPlotPoints] = takePointArrayByDistance(\r\n      result.pendingPoints,\r\n      distance\r\n    );\r\n\r\n    return {\r\n      committedPoints: result.committedPoints.concat(addedPoints),\r\n      pendingPoints: remainderPlotPoints,\r\n    };\r\n  }\r\n\r\n  private _plotHeatVortex(\r\n    item: HeatVortexPlotItem,\r\n    result: PlotResult,\r\n    map: PotionMap\r\n  ): PlotResult {\r\n    const indicatorPosition = last(result.committedPoints) ?? Vec2Zero;\r\n    const vortex = map\r\n      .hitTest(indicatorPosition, POTION_RADIUS)\r\n      .find((x) => x.entityType === \"Vortex\");\r\n\r\n    if (!vortex) {\r\n      return result;\r\n    }\r\n\r\n    const { distance } = item;\r\n\r\n    /* RecipeMapManager.MoveIndicatorTowardsVortex()\r\n    float maxDistanceDelta = this.vortexSettings.vortexMovementFromHeatDependence.Evaluate(Managers.Ingredient.coals.Heat) * this.vortexSettings.vortexMovementSpeed * Time.deltaTime;\r\n    Vector2 localPosition1 = (Vector2) this.currentVortexMapItem.thisTransform.localPosition;\r\n    Vector2 localPosition2 = (Vector2) this.recipeMapObject.indicatorContainer.localPosition;\r\n    Vector2 to = localPosition2 - localPosition1;\r\n    float magnitude = to.magnitude;\r\n    float f1 = Mathf.Sign(this.vortexSettings.vortexSpiralThetaPower) * this.vortexSettings.vortexSpiralStep;\r\n    float f2 = Mathf.Pow((float) ((double) magnitude * 2.0 * 3.14159274101257) / f1, 1f / this.vortexSettings.vortexSpiralThetaPower);\r\n    float b = f2 - maxDistanceDelta * (float) ((int) Mathf.Sign(this.vortexSettings.vortexSpiralThetaPower) * (int) Mathf.Sign(f1));\r\n    float f3 = f2.Is(0.0f) ? 0.0f : ((double) f2 < 0.0 ? Mathf.Min(0.0f, b) : Mathf.Max(0.0f, b));\r\n    double num = (double) f1 * 0.5 / 3.14159274101257 * (double) Mathf.Pow(f3, this.vortexSettings.vortexSpiralThetaPower);\r\n    Vector2 from = magnitude * new Vector2(Mathf.Cos(f2), Mathf.Sin(f2));\r\n    Vector2 vector2_1 = new Vector2(Mathf.Cos(f3), Mathf.Sin(f3));\r\n    Vector2 vector2_2 = ((float) num * vector2_1).Rotate(Vector2.SignedAngle(from, to));\r\n    Vector2 vector2_3 = Vector2.MoveTowards(localPosition2, localPosition1 + vector2_2, maxDistanceDelta);\r\n    this.indicator.targetPosition += vector2_3 - localPosition2;\r\n    this.recipeMapObject.indicatorContainer.localPosition = (Vector3) vector2_3;\r\n    */\r\n\r\n    // VortexSettings\r\n    const vortexMovementFromHeatDependence10Percent = 0.19;\r\n    const vortexMovementSpeed = 2.5;\r\n    const vortexSpiralStep = 1;\r\n    const vortexSpiralThetaPower = 1;\r\n\r\n    // Calculate the step as if we were running at 10% heat at 60 frames a second.\r\n    const step =\r\n      vortexMovementFromHeatDependence10Percent *\r\n      vortexMovementSpeed *\r\n      (1 / 60);\r\n\r\n    let remainingDistance = distance;\r\n    let currentPosition = indicatorPosition;\r\n    const pointsToAdd: Vector2[] = [indicatorPosition];\r\n    while (remainingDistance > 0) {\r\n      const to = vec2Subtract(currentPosition, vortex);\r\n      const magnitude = vec2Magnitude(to);\r\n      const f1 = Math.sign(vortexSpiralThetaPower) * vortexSpiralStep;\r\n      const f2 = Math.pow(\r\n        (magnitude * 2.0 * Math.PI) / f1,\r\n        1 / vortexSpiralThetaPower\r\n      );\r\n      const b = f2 - step * (Math.sign(vortexSpiralThetaPower) * Math.sign(f1));\r\n      const f3 =\r\n        Math.abs(f2) < Number.EPSILON\r\n          ? 0\r\n          : f2 < 0.0\r\n          ? Math.min(0.0, b)\r\n          : Math.max(0.0, b);\r\n      const num = ((f1 * 0.5) / Math.PI) * Math.pow(f3, vortexSpiralThetaPower);\r\n      const from = vec2Scale({ x: Math.cos(f2), y: Math.sin(f2) }, magnitude);\r\n      const vector2_1 = { x: Math.cos(f3), y: Math.sin(f3) };\r\n\r\n      const rotation = degreesToRadians(pointSignedAngleDegrees180(from, to));\r\n      const vector2_2 = vec2Rotate(vec2Scale(vector2_1, num), rotation);\r\n      const vector2_3 = vec2MoveTowards(\r\n        currentPosition,\r\n        vec2Add(vortex, vector2_2),\r\n        step\r\n      );\r\n\r\n      currentPosition = vector2_3;\r\n      pointsToAdd.push(currentPosition);\r\n\r\n      remainingDistance = Math.max(0, remainingDistance - step);\r\n    }\r\n\r\n    return commitPlotPoints(pointsToAdd, item, result);\r\n  }\r\n}\r\n\r\nfunction appendPendingPlotPoints(\r\n  points: Vector2[],\r\n  source: PlotItem,\r\n  result: PlotResult\r\n): PlotResult {\r\n  if (source == null) {\r\n    throw new Error(\"source is null\");\r\n  }\r\n\r\n  if (points.length === 0) {\r\n    return result;\r\n  }\r\n\r\n  return Object.assign({}, result, {\r\n    pendingPoints: result.pendingPoints.concat(\r\n      points.map((point) => ({\r\n        x: point.x,\r\n        y: point.y,\r\n        source,\r\n        entities: [],\r\n      }))\r\n    ),\r\n  });\r\n}\r\n\r\nfunction commitPlotPoints(\r\n  points: Vector2[],\r\n  source: PlotItem,\r\n  result: PlotResult\r\n): PlotResult {\r\n  if (source == null) {\r\n    throw new Error(\"source is null\");\r\n  }\r\n\r\n  if (points.length === 0) {\r\n    return result;\r\n  }\r\n\r\n  const difference = vec2Subtract(\r\n    last(points)!,\r\n    last(result.committedPoints) ?? Vec2Zero\r\n  );\r\n\r\n  return Object.assign({}, result, {\r\n    committedPoints: result.committedPoints.concat(\r\n      points.map((point) => ({\r\n        x: point.x,\r\n        y: point.y,\r\n        source,\r\n        entities: [],\r\n      }))\r\n    ),\r\n    pendingPoints: result.pendingPoints.map((point) => ({\r\n      x: point.x + difference.x,\r\n      y: point.y + difference.y,\r\n      source: point.source,\r\n    })),\r\n  });\r\n}\r\n","import { ContainerModule } from \"microinject\";\r\n\r\nimport { PlotBuilder } from \"./PlotBuilder\";\r\nimport { Plotter } from \"./Plotter\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(PlotBuilder);\r\n  bind(Plotter);\r\n});\r\n","import { Vector2 } from \"@/points\";\r\n\r\nimport { IngredientId } from \"../ingredients/types\";\r\nimport { MapEntity } from \"../potion-maps/types\";\r\n\r\nexport type PlotItem =\r\n  | AddIngredientPlotItem\r\n  | PourSolventPlotItem\r\n  | StirCauldronPlotItem\r\n  | HeatVortexPlotItem;\r\n\r\nexport interface AddIngredientPlotItem {\r\n  type: \"add-ingredient\";\r\n  ingredientId: IngredientId;\r\n  grindPercent: number;\r\n}\r\n\r\nexport interface PourSolventPlotItem {\r\n  type: \"pour-solvent\";\r\n  distance: number;\r\n}\r\n\r\nexport interface StirCauldronPlotItem {\r\n  type: \"stir-cauldron\";\r\n  distance: number;\r\n}\r\n\r\nexport interface HeatVortexPlotItem {\r\n  type: \"heat-vortex\";\r\n  distance: number;\r\n}\r\n\r\nexport interface PlotPoint extends Vector2 {\r\n  source: PlotItem;\r\n  entities: Readonly<MapEntity>[];\r\n}\r\n\r\nexport interface PlotResult {\r\n  committedPoints: PlotPoint[];\r\n  pendingPoints: PlotPoint[];\r\n}\r\n\r\nexport const EmptyPlotResult: Readonly<PlotResult> = Object.freeze({\r\n  committedPoints: [],\r\n  pendingPoints: [],\r\n}) as any;\r\n","import { injectable, singleton } from \"microinject\";\r\n\r\nimport { typedKeys } from \"@/utils\";\r\n\r\nimport { PotionBaseMaps } from \"../potion-maps/maps\";\r\nimport { PotionMap } from \"../potion-maps/PotionMap\";\r\nimport { PotionBaseId, PotionBase } from \"./types\";\r\n\r\n@injectable()\r\n@singleton()\r\nexport class PotionBaseRegistry {\r\n  private readonly _potionBasesById: Record<PotionBaseId, PotionBase> = {};\r\n\r\n  constructor() {\r\n    for (const key of typedKeys(PotionBaseMaps)) {\r\n      const id = key as PotionBaseId;\r\n      const base: PotionBase = {\r\n        id,\r\n        map: new PotionMap(PotionBaseMaps[key]),\r\n      };\r\n      this._potionBasesById[id] = base;\r\n    }\r\n  }\r\n\r\n  getPotionBaseById(id: PotionBaseId): PotionBase | null {\r\n    return this._potionBasesById[id] ?? null;\r\n  }\r\n}\r\n","import { ContainerModule } from \"microinject\";\r\nimport { PotionBaseRegistry } from \"./PotionBaseRegistry\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(PotionBaseRegistry);\r\n});\r\n","import { uniq } from \"lodash\";\r\n\r\nimport { Vector2 } from \"@/points\";\r\nimport { rectFromCircle } from \"@/rectangles\";\r\n\r\nimport {\r\n  getRegionIndexesFromRect,\r\n  getRegionIndexFromPoint,\r\n  REGION_COUNT,\r\n} from \"./regions\";\r\nimport { MapEntity } from \"./types\";\r\nimport { EntityDefs } from \"./entity-defs\";\r\n\r\nexport class PotionMap {\r\n  private _entityRegions: MapEntity[][] | null = null;\r\n\r\n  constructor(private _entities: readonly Readonly<MapEntity>[]) {}\r\n\r\n  get entities(): readonly Readonly<MapEntity>[] {\r\n    return this._entities;\r\n  }\r\n\r\n  hitTest(p: Vector2, radius = 0): readonly Readonly<MapEntity>[] {\r\n    const regions = this._getEntityRegions();\r\n\r\n    const indexes =\r\n      radius <= 0\r\n        ? [getRegionIndexFromPoint(p)]\r\n        : getRegionIndexesFromRect(rectFromCircle(p, radius));\r\n\r\n    const entities = uniq(\r\n      ([] as MapEntity[]).concat(...indexes.map((index) => regions[index]))\r\n    );\r\n\r\n    const result: MapEntity[] = [];\r\n    for (const entity of entities) {\r\n      const entityDef = EntityDefs[entity.entityType];\r\n      if (!entityDef) {\r\n        continue;\r\n      }\r\n\r\n      if (entityDef.hitTest(p, entity, radius)) {\r\n        result.push(entity);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private _getEntityRegions(): MapEntity[][] {\r\n    if (this._entityRegions) {\r\n      return this._entityRegions;\r\n    }\r\n\r\n    this._entityRegions = new Array(REGION_COUNT);\r\n    for (let i = 0; i < REGION_COUNT; i++) {\r\n      this._entityRegions[i] = [];\r\n    }\r\n\r\n    for (const entity of this._entities) {\r\n      const entityDef = EntityDefs[entity.entityType];\r\n      if (!entityDef) {\r\n        continue;\r\n      }\r\n      const bounds = entityDef.getBounds(entity);\r\n      const indexes = getRegionIndexesFromRect(bounds);\r\n      for (const index of indexes) {\r\n        this._entityRegions[index].push(entity);\r\n      }\r\n    }\r\n\r\n    return this._entityRegions;\r\n  }\r\n}\r\n","import { POTION_RADIUS } from \"@/game-settings\";\r\nimport { Vector2, vec2Magnitude, vec2Rotate, vec2Subtract } from \"@/points\";\r\nimport {\r\n  rectangle,\r\n  Rectangle,\r\n  rectFromCircle,\r\n  rectOffset,\r\n  rectSize,\r\n} from \"@/rectangles\";\r\nimport { degreesToRadians } from \"@/utils\";\r\n\r\nimport { MapEntity } from \"./types\";\r\n\r\nexport interface EntityDefinition {\r\n  readonly entityType: MapEntity[\"entityType\"];\r\n  getFriendlyName(entity: MapEntity): string;\r\n  getBounds(entity: MapEntity): Rectangle;\r\n  hitTest(p: Vector2, entity: MapEntity, radius?: number): boolean;\r\n}\r\n\r\nconst VortexRadii = {\r\n  Large: 1.65,\r\n  Medium: 1.25,\r\n} as const;\r\n\r\nexport const EntityDefs: Record<MapEntity[\"entityType\"], EntityDefinition> = {\r\n  PotionEffect: {\r\n    entityType: \"PotionEffect\",\r\n    getFriendlyName(entity: MapEntity) {\r\n      const effectEntity = assertEntity(entity, \"PotionEffect\");\r\n      return effectEntity.effect;\r\n    },\r\n    getBounds(entity: MapEntity) {\r\n      return rectFromCircle(entity, POTION_RADIUS);\r\n    },\r\n    hitTest(p: Vector2, entity: MapEntity, radius = 0) {\r\n      return vec2Magnitude(vec2Subtract(p, entity)) - radius <= POTION_RADIUS;\r\n    },\r\n  },\r\n  // NOTE: This should be replaced by something that knows the different hitboxes of each type.\r\n  // This would be complicated, as many of them are rects and rotation needs to be taken into account.\r\n  DangerZonePart: {\r\n    entityType: \"DangerZonePart\",\r\n    getFriendlyName(entity: MapEntity) {\r\n      const boneEntity = assertEntity(entity, \"DangerZonePart\");\r\n      // return boneEntity.prefab;\r\n      return \"Bone\";\r\n    },\r\n    getBounds(entity: MapEntity) {\r\n      const bone = assertEntity(entity, \"DangerZonePart\");\r\n      switch (bone.prefab) {\r\n        case \"Fang1\":\r\n          // Need to cover all rotations, so use the largest axis for both.\r\n          return rectOffset(rectangle(-0.06, -0.06, 0.12, 0.12), entity);\r\n        case \"Fang2\":\r\n          // Need to cover all rotations, so use the largest axis for both.\r\n          return rectOffset(rectangle(-0.12, -0.12, 0.24, 0.24), entity);\r\n        case \"Bone1\":\r\n          // Need to cover all rotations, so use the largest axis for both.\r\n          return rectOffset(rectangle(-0.345, -0.345, 0.69, 0.69), entity);\r\n        case \"Bone2\":\r\n          // Need to cover all rotations, so use the largest axis for both.\r\n          return rectOffset(rectangle(-0.32, -0.32, 0.72, 0.72), entity);\r\n        case \"Skull1\":\r\n        default:\r\n          return rectFromCircle(entity, 0.24);\r\n      }\r\n    },\r\n    hitTest(p: Vector2, entity: MapEntity, radius = 0) {\r\n      const bone = assertEntity(entity, \"DangerZonePart\");\r\n      if (bone.prefab === \"Skull1\") {\r\n        return vec2Magnitude(vec2Subtract(p, entity)) - radius <= 0.24;\r\n      }\r\n\r\n      let r: Rectangle;\r\n      switch (bone.prefab) {\r\n        case \"Fang1\":\r\n          r = rectangle(-0.06, -0.02, 0.12, 0.4);\r\n          break;\r\n        case \"Fang2\":\r\n          r = rectangle(-0.065, -0.12, 0.13, 0.24);\r\n          break;\r\n        case \"Bone1\":\r\n          r = rectangle(-0.06, -0.345, 0.12, 0.69);\r\n          break;\r\n        case \"Bone2\":\r\n          r = rectangle(-0.07, -0.36, 0.14, 0.72);\r\n          break;\r\n        default:\r\n          return false;\r\n      }\r\n\r\n      const boneAngle = degreesToRadians(bone.angle);\r\n\r\n      // get it aligned with the axis aligned hitbox of the bone\r\n      p = vec2Subtract(p, entity);\r\n      p = vec2Rotate(p, -boneAngle);\r\n\r\n      const rc = {\r\n        x: r.p1.x + (r.p2.x - r.p1.x) / 2,\r\n        y: r.p1.y + (r.p2.y - r.p1.y) / 2,\r\n      };\r\n      const rsize = rectSize(r);\r\n\r\n      const distx = Math.abs(p.x - rc.x);\r\n      const disty = Math.abs(p.y - rc.y);\r\n\r\n      const dx = distx - rsize.width / 2;\r\n      const dy = disty - rsize.height / 2;\r\n      if (\r\n        distx > rsize.width / 2 + radius ||\r\n        disty > rsize.height / 2 + radius\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      if (\r\n        dx * dx + dy * dy > radius * radius &&\r\n        distx > rsize.width / 2 &&\r\n        disty > rsize.height / 2\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    },\r\n  },\r\n  ExperienceBonus: {\r\n    entityType: \"ExperienceBonus\",\r\n    getFriendlyName(entity: MapEntity) {\r\n      const expEntity = assertEntity(entity, \"ExperienceBonus\");\r\n      return `${expEntity.prefab} XP Bonus`;\r\n    },\r\n    getBounds: (entity: MapEntity): Rectangle => {\r\n      // FIXME: Arent these different sizes?\r\n      return rectFromCircle(entity, 0.3);\r\n    },\r\n    hitTest: (p: Vector2, entity: MapEntity, radius = 0): boolean => {\r\n      return vec2Magnitude(vec2Subtract(p, entity)) - radius <= 0.3;\r\n    },\r\n  },\r\n  Vortex: {\r\n    entityType: \"Vortex\",\r\n    getFriendlyName(entity: MapEntity) {\r\n      return \"Vortex\";\r\n    },\r\n    getBounds: (entity: MapEntity): Rectangle => {\r\n      const vortex = assertEntity(entity, \"Vortex\");\r\n      const radius = VortexRadii[vortex.prefab];\r\n      return rectFromCircle(entity, radius);\r\n    },\r\n    hitTest: (p: Vector2, entity: MapEntity, radius = 0): boolean => {\r\n      const vortex = assertEntity(entity, \"Vortex\");\r\n      const vortexRadius = VortexRadii[vortex.prefab];\r\n      return vec2Magnitude(vec2Subtract(p, entity)) - radius <= vortexRadius;\r\n    },\r\n  },\r\n};\r\n\r\nfunction assertEntity<T extends MapEntity[\"entityType\"]>(\r\n  entity: MapEntity,\r\n  type: T\r\n): MapEntity & { entityType: T } {\r\n  if (entity.entityType === type) {\r\n    return entity as any;\r\n  }\r\n  throw new Error(`Expected entity to be of type ${type}`);\r\n}\r\n","import { MapEntity } from \"../types\";\r\n\r\nconst water = Object.freeze(require(\"./water.json\")) as MapEntity[];\r\n\r\nexport const PotionBaseMaps = {\r\n  water,\r\n};\r\n","import { first } from \"lodash\";\r\n\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\nimport { Vector2, vec2Add } from \"@/points\";\r\nimport { Rectangle } from \"@/rectangles\";\r\n\r\nconst MAP_WIDTH = MAP_EXTENT_RADIUS * 2;\r\nconst MAP_HEIGHT = MAP_EXTENT_RADIUS * 2;\r\nconst REGION_WIDTH = 0.5;\r\nconst REGION_HEIGHT = 0.5;\r\n\r\nconst ORIGIN_OFFSET: Vector2 = { x: MAP_EXTENT_RADIUS, y: MAP_EXTENT_RADIUS };\r\n\r\nexport const REGION_COUNT =\r\n  (MAP_WIDTH / REGION_WIDTH) * (MAP_HEIGHT / REGION_HEIGHT) + 1;\r\nexport const FALLBACK_REGION = REGION_COUNT - 1;\r\n\r\nexport function getRegionIndexFromPoint(p: Vector2): number {\r\n  return first(getRegionIndexesFromRect({ p1: p, p2: p }))!;\r\n}\r\n\r\nexport function getRegionIndexesFromRect(r: Rectangle): number[] {\r\n  let { p1, p2 } = r;\r\n  p1 = vec2Add(p1, ORIGIN_OFFSET);\r\n  p2 = vec2Add(p2, ORIGIN_OFFSET);\r\n\r\n  let x1 = Math.floor(p1.x / REGION_WIDTH);\r\n  let y1 = Math.floor(p1.y / REGION_HEIGHT);\r\n  let x2 = Math.ceil(p2.x / REGION_WIDTH);\r\n  let y2 = Math.ceil(p2.y / REGION_HEIGHT);\r\n\r\n  const indexes = [];\r\n\r\n  let addedOOB = false;\r\n  const addOOB = () => {\r\n    if (addedOOB) {\r\n      return;\r\n    }\r\n    indexes.push(FALLBACK_REGION);\r\n    addedOOB = true;\r\n  };\r\n\r\n  if (x1 < 0) {\r\n    x1 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (x2 < 0) {\r\n    x2 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (x1 >= MAP_WIDTH / REGION_WIDTH) {\r\n    x1 = MAP_WIDTH / REGION_WIDTH - 1;\r\n    addOOB();\r\n  }\r\n\r\n  if (x2 >= MAP_WIDTH / REGION_WIDTH) {\r\n    x2 = MAP_WIDTH / REGION_WIDTH - 1;\r\n    addOOB();\r\n  }\r\n\r\n  if (y1 < 0) {\r\n    y1 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (y2 < 0) {\r\n    y2 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (y1 >= MAP_HEIGHT / REGION_HEIGHT) {\r\n    y1 = MAP_HEIGHT / REGION_HEIGHT - 1;\r\n    addOOB();\r\n  }\r\n\r\n  if (y2 >= MAP_HEIGHT / REGION_HEIGHT) {\r\n    y2 = MAP_HEIGHT / REGION_HEIGHT - 1;\r\n    addOOB();\r\n  }\r\n\r\n  for (let x = x1; x <= x2; x++) {\r\n    for (let y = y1; y <= y2; y++) {\r\n      indexes.push(x + y * (MAP_WIDTH / REGION_WIDTH));\r\n    }\r\n  }\r\n\r\n  return indexes;\r\n}\r\n","export interface Size {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport const SizeZero = Object.freeze({ width: 0, height: 0 }) as any;\r\n","import { ThemeProvider } from \"@emotion/react\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\nimport React from \"react\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: \"light\",\r\n  },\r\n});\r\n\r\nexport interface AppThemeProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst AppThemeProvider = ({ children }: AppThemeProviderProps) => (\r\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n);\r\n\r\nexport default AppThemeProvider;\r\n","import { Value } from \"classnames\";\r\n\r\nexport function windowArray<T>(array: T[], count: number): T[][] {\r\n  const a = [...array];\r\n\r\n  let result: T[][] = [];\r\n  let window: T[] = [];\r\n\r\n  while (a.length > 0) {\r\n    window.push(a.pop()!);\r\n    if (window.length === count) {\r\n      result.push(window);\r\n      window = [];\r\n    }\r\n  }\r\n\r\n  if (window.length > 0) {\r\n    result.push(window);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function keepEveryK<T>(array: T[], k: number, keepLast = false) {\r\n  if (array.length === 0) {\r\n    return array;\r\n  }\r\n\r\n  const a = [];\r\n  for (let i = 0; i < array.length; i += k) {\r\n    a.push(array[i]);\r\n  }\r\n  if (keepLast && (array.length - 1) % k !== 0) {\r\n    a.push(array[array.length - 1]);\r\n  }\r\n  return a;\r\n}\r\n\r\nexport function isNotNull<T>(x: T | null | undefined): x is T {\r\n  return x != null;\r\n}\r\n\r\nexport function typedKeys<T>(obj: T): (keyof T)[] {\r\n  return Object.keys(obj) as any;\r\n}\r\n\r\nexport function degreesToRadians(degress: number): number {\r\n  return (degress * Math.PI) / 180;\r\n}\r\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","values","primaryAxis","secondaryAxis","dropIndicator","onReorder","children","childrenBoundsRef","useRef","useState","dragIndex","setDragIndex","dropIndex","setDropIndex","onBoundsChanged","useCallback","valueIndex","bounds","current","onDragStart","onDragMove","e","index","x","y","groups","currentGroup","lastPrimaryPosition","i","length","bound","itemPrimaryPosition","left","right","top","bottom","axisIsFlipped","items","itemIndex","Math","min","max","forEach","group","reverse","getGroups","targetGroup","horizontalSecondary","axisIsHorizontal","primaryPosition","item","itemPrimaryMin","itemPrimaryMax","getInsertionIndex","filter","isNotNull","clientX","clientY","onDragEnd","newValues","newValueIndex","draggedValue","splice","fromIndex","toIndex","map","value","Fragment","key","DragReorderableItem","isDragging","capturedPointerId","setCapturedPointerId","onPointerDown","defaultPrevented","currentTarget","setPointerCapture","pointerId","preventDefault","onPointerMove","onPointerUp","releasePointerCapture","onBoundsRef","valueIndexRef","useEffect","observerRef","disconnect","refCallback","ref","observer","MutationObserver","getBoundingClientRect","observe","attributes","characterData","childList","subtree","isDropBefore","isDropAfter","additionalProps","axis","className","rate","onChange","onChangeCommitted","delta","setDelta","token","setInterval","clearInterval","Slider","step","v","StyledTooltip","styled","Tooltip","tooltipPlacementLeft","margin","allowEmpty","onMouseOverItem","onMouseOutItem","props","registry","useDIDependency","IngredientRegistry","onSelectChange","target","Select","MenuItem","getIngredients","ingredient","onMouseOver","onMouseOut","placement","title","width","height","viewBox","MAX_INGREDIENT_EXTENT","transform","cx","cy","r","POTION_RADIUS","fill","d","path","reduce","curve","start","p1","p2","end","stroke","strokeWidth","ListItemText","name","Root","backgroundColor","overflow","imgCache","Map","makeImg","src","has","get","img","Image","onerror","console","error","bind","set","MapSlotSrc","renderEntity","ctx","entity","entityType","save","translate","rotate","degreesToRadians","angle","DangerZoneImageSrces","prefab","w","h","scale","drawImage","restore","renderDangerZonePart","grad","createLinearGradient","addColorStop","strokeStyle","lineWidth","beginPath","moveTo","lineTo","container","EffectSlotSrc","containerW","containerH","PotionEffectImageSrces","effect","renderPotionEffectEntity","ExperienceBonusImagesSrc","renderExperienceBonusEntity","VortexImagesSrc","renderVortexEntity","viewModel","useObservation","viewportSize$","SizeZero","offset","viewOffset$","Vec2Zero","viewScale$","canvasRef","setCanvasRef","entities","requestAnimationFrame","getContext","clearRect","zoomFactor","offsetX","offsetY","handler","MAP_EXTENT_RADIUS","transformToMap","mapSlotW","mapSlotH","cancelAnimationFrame","Bone1","Bone2","Fang1","Fang2","Skull1","Acid","Berserker","Bounce","Charm","Crop","Explosion","Fire","Fly","Frost","Growth","Hallucinations","Healing","Invisibility","Libido","Light","Lightning","Mana","Necromancy","Poison","SharpVision","Sleep","SlowDown","StoneSkin","Little","Medium","Large","ZOOM_FACTOR","PAN_FACTOR","containerRef","React","containerBounds","useComponentBounds","dragPointer","setDragPointer","mouseLastPos","setMouseLastPos","useLayoutEffect","onViewportResized","onWheel","modifiers","getModifiers","ctrlMetaKey","zoom","deltaY","stopPropagation","shiftKey","pan","p","vec2Subtract","useNativeEvent","passive","onMouseMove","theme","boxSixing","display","flexDirection","listStyle","paddingLeft","spacing","paddingRight","position","marginBottom","paddingTop","borderBottom","alignSelf","alignItems","PlotListItem","memo","forwardRef","cardProps","highlight","AddIngredientPlotBuilderItem","AddIngredientPlotListItem","StirCauldronPlotBuilderItem","StirCauldronPlotListItem","PourSolventPlotBuilderItem","PourSolventPlotListItem","HeatVortexPlotBuilderItem","HeatVortexPlotListItem","constructor","PlotListItemCard","valid","isValid$","onCardMouseOver","onDeleteClick","delete","Card","style","IconButton","size","onClick","Delete","CardContent","savedIngredientRef","isPreviewing","setIsPreviewing","isPreviewingRef","localGrind","setLocalGrind","inputGrindPercent","setInputGrindPercent","ingredientId","ingredientId$","grindPercent","grindPercent$","onIngredientSelectorOpen","onIngredientSelectorMouseOverItem","setIngredient","onIngredientSelectorChange","onIngredientSelectorClose","onGrindPercentTextChange","asNumber","Number","isNaN","setGrindPercent","onGrindPercentBlur","onSliderChange","_","onSliderChangeCommitted","displayIngredientId","Typography","variant","fullWidth","onOpen","onClose","Grid","TextField","label","onBlur","distance","distance$","inputDistance","setInputDistance","onTextFieldChange","setDistance","onTextFieldBlur","onDistanceChange","toFixed","builder","highlightItem","items$","reposition","params","getRootProps","getDragHandleProps","DragHandle","Button","color","addIngredient","Add","addStirCauldron","addPourSolvent","addHeatVortex","background","useDICreate","PlotEditorViewModel","PotionBaseRegistry","getPotionBaseById","inspectPoint","bottlePreviewPoint$","inspectSource","mouseOverPlotItem$","inspectEntity","mouseOverEntity$","plot","plot$","useTransition","mouseOverBuilderItem$","outputShareString","shareString$","mouseWorld","mouseWorldPosition$","query","URLSearchParams","window","location","search","data","loadFromShareString","history","replaceState","toString","onBuildItemMouseOver","onMouseOverBuilderItem","onBuildItemMouseOut","EmptyPlotResult","point","setZoom","_builder","_viewportSize$","BehaviorSubject","_viewOffset$","_viewScale$","_mouseClientPosition$","_mouseOverPlotItem$","_mouseOverBuilderItem$","this","_shareString$","pipe","debounceTime","getShareString","_mouseWorldPosition$","combineLatest","clientPos","_clientToWorld","_mouseOverEntity$","map$","worldPos","hitTest","first","_bottlePreviewPoint$","plotItem","plotItemPoints","committedPoints","concat","pendingPoints","source","closestPlotItem","vec2Distance","on","prevWorld","next","world","vec2Add","dx","dy","applyZoom","z","prevSize","scaleFactor","onMouseOverPlotItem","builderItemFor","_worldToClient","inject","PlotBuilder","content","PotionEffectMapEntityDetails","VortexMapEntityDetails","isIngredientPoint","type","itemIsEffect","ingredientRegistry","endsAt","last","useMemo","allPoints","ingredients","uniq","effects","result","find","tier","vec2Magnitude","clamp","effectPowerDistanceDependence","abs","EPSILON","getEffects","baseCost","ingredientTypeCounts","getIngredientById","price","pointArrayLength","sqrt","sum","Object","keys","pow","longestLength","currentLength","prevItem","some","longestDangerLength","totalIngredients","totalUniqueIngredients","stress","longestDanger","dangerIsDeath","join","touchedItems","EntityDefs","getFriendlyName","AddIngredientRoot","justifyContent","AddIngredient","pointerEvents","PlotLine","line","pending","usePlotViewModel","points","evenOdd","onPathMouseOver","onPathMouseOut","lighten","hex","str","bottlePreviewPoint","lastCommitPoint","onLineMouseOver","onLineMouseOut","committed","trim","currentLine","sourceCounter","commitedLines","pendingLines","lastSource","keepEveryK","resultToPlotLines","committedLines","PlotViewModelContext","Provider","opacity","createContext","plotViewModel","useContext","Error","modules","composeModules","ContainerContext","Container","useDIContainer","toConstantValue","load","ContainerProvider","identifier","parameters","valRef","create","getCurvePoint","t","b1","b2","b3","b4","startX","startY","p1x","p1y","p2x","p2y","endx","endy","curveLengthCache","getCurveLength","resolution","BEZIER_CURVE_LENGTH_RESOLUTION","cached","previousPoint","vector2_2","curvePointsCache","PATH_SPACING_PHYSICS","remainingDistance","samplePointCount","ceil","splitPoint","vec2Scale","vec2Normalize","freeze","setSize","ResizeObserver","el","b","listener","listenTarget","addEventListener","removeEventListener","observable","onError","val","setVal","Observable","subscribe","startTransition","unsubscribe","rootEl","document","getElementById","ReactDOM","createRoot","render","StrictMode","MODIFIER_KEYS_NONE","ctrlKey","altKey","metaKey","keyboardModifierUseMeta","event","pointArray","pointArrayLengthCache","direction","array","takeLength","totalLength","taken","remainder","takenLength","remainingLength","vec2Lerp","assign","slice","vec2AngleDegrees180","from","to","num","acos","vec2Dot","a","factor","atan2","maxDistanceDelta","mt1","mt2","mt3","mt4","sign","angleInRadians","cos","sin","magnitude","lerp","normalizeRectangle","args","RectZero","radius","osPlatform","os","family","OSType","test","isProd","injectable","singleton","cubicBezierCurve","preGrindPercent","ContainerModule","potionBaseRegistry","plotter","_map$","_items$","_itemSubscription","_plot$","plotItem$","plotItems","dataStr","decode","version","DataView","getUint8","JSON","parse","inflate","fromJSON","_deleteItem","sourceIndex","indexOf","toJSON","encoded","deflate","stringify","Uint8Array","buffer","setUint8","encode","Plotter","PlotBuilderItem","_delete","_ingredientId$","_grindPercent$","_plotItem$","_isValid$","isValid","json","del","percent","_distance$","stirDistance","distace","now","Date","_plotItem","log","_plotAddIngredient","_plotPourSolvent","_plotStirCauldron","_plotHeatVortex","addPosition","ingredientPoints","ingredientLength","curveToPoints","pointArrayLengthCached","takePercent","appendPendingPlotPoints","takePointArrayByDistance","currentPoint","vec2Equals","distanceToOrigin","commitPlotPoints","pointArrayLineFromDistance","addedPoints","remainderPlotPoints","indicatorPosition","vortex","vortexMovementFromHeatDependence10Percent","currentPosition","pointsToAdd","f1","f2","PI","f3","vector2_1","rotation","pointSignedAngleDegrees180","vec2Rotate","vec2MoveTowards","difference","_potionBasesById","typedKeys","PotionBaseMaps","base","PotionMap","_entities","_entityRegions","regions","_getEntityRegions","indexes","getRegionIndexFromPoint","getRegionIndexesFromRect","rectFromCircle","entityDef","Array","REGION_COUNT","getBounds","VortexRadii","assertEntity","PotionEffect","DangerZonePart","rectOffset","rectangle","bone","boneAngle","rc","rsize","rectSize","distx","disty","ExperienceBonus","expEntity","Vortex","vortexRadius","water","MAP_WIDTH","MAP_HEIGHT","REGION_WIDTH","REGION_HEIGHT","ORIGIN_OFFSET","x1","floor","y1","x2","y2","addedOOB","addOOB","FALLBACK_REGION","createTheme","palette","mode","ThemeProvider","count","pop","k","keepLast","obj","degress"],"sourceRoot":""}
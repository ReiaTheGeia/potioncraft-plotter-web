{"version":3,"file":"client.3319bc7e9ae4e839acc7.bundle.js","mappings":"0KAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,0LAA2L,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,6BAA6B,MAAQ,GAAG,SAAW,uDAAuD,eAAiB,CAAC,2LAA2L,WAAa,MAEnkB,W,4KCIIC,EAAU,GAEdA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKnB,QAAe,KAAW,WAAiB,gBAAiBM,G,4xBC1BnE,iBAEA,aAMA,UAJsB,WACpB,OAAO,gBAAC,UAAU,Q,8tBCLpB,iBAEA,UAUA,UAMA,UACA,UAWMC,GAAgB,IAAAC,QAAO,EAAAC,QAAP,CAAgB,CACpCC,qBAAsB,CACpBC,OAAQ,YA4EZ,UAxE2B,SAAC,GAC1B,IAAAC,EAAK,QACLC,EAAQ,WACR,IAAAC,WAAAA,OAAU,IAAG,GAAK,EAClBC,EAAe,kBACfC,EAAc,iBACXC,EAAK,IANkB,sEAQpBC,GAAW,IAAAC,iBAAgB,EAAAC,oBAE3BC,EAAiB,UAAMC,aAC3B,SAACC,GACC,IAAMX,EAAQW,EAAEC,OAAOZ,MAErBC,EADY,KAAVD,EACO,KAEAA,KAGb,CAACC,IAGH,OACE,wBAAC,EAAAY,OAAM,KACDR,EAAK,CACTL,MAAOA,QAAAA,EAAS,GAChBC,SAAUQ,IAETP,GAAc,wBAAC,EAAAY,SAAQ,CAACd,MAAM,KAC9BM,EAASS,iBAAiBC,KAAI,SAACC,GAAe,OAC7C,wBAAC,EAAAH,SAAQ,CACPI,IAAKD,EAAW9B,GAChBa,MAAOiB,EAAW9B,GAClBgC,YACEhB,EAAkB,WAAM,OAAAA,EAAgBc,EAAW9B,UAAMO,EAE3D0B,WAAYhB,GAEZ,wBAACT,EAAa,CACZ0B,UAAU,OACVC,MACE,+BACEC,MAAM,QACNC,OAAO,QACPC,QAAS,WAAI,EAAAC,sBAAqB,aAAK,EAAAA,sBAAqB,YAClC,EAAxB,EAAAA,sBAAyB,YACC,EAAxB,EAAAA,uBACJC,UAAU,gBAEV,kCAAQC,GAAI,EAAGC,GAAI,EAAGC,EAAG,EAAAC,cAAeC,KAAK,SAC7C,gCACEC,EAAGhB,EAAWiB,KAAKC,QACjB,SAACD,EAAME,GACL,OAAAF,EACA,YAAKE,EAAMC,MAAMC,EAAC,YAAIF,EAAMC,MAAME,EAAC,cAAMH,EAAMI,GAAGF,EAAC,YAAIF,EAAMI,GAAGD,EAAC,YAAIH,EAAMK,GAAGH,EAAC,YAAIF,EAAMK,GAAGF,EAAC,YAAIH,EAAMM,IAAIJ,EAAC,YAAIF,EAAMM,IAAIH,KAC5H,UAEFI,OAAO,QACPC,YAAa,GACbZ,KAAK,WAKX,wBAAC,EAAAa,aAAY,KAAE5B,EAAW6B,c,ucCpGtC,iBAEA,UAWA,UAEA,UAEA,UASA,aAUMC,GAAO,IAAAnD,QAAO,MAAP,EAAc,SAAC,G,IAAEoD,EAAK,QAAO,OACxCC,SAAU,OACVC,UAAW,aACXC,QAAS,OACTC,cAAe,SACf,UAAW,CACTC,UAAW,OACXC,YAAaN,EAAMO,QAAQ,GAC3BC,aAAcR,EAAMO,QAAQ,IAE9B,eAAgB,CACdE,SAAU,WACVC,aAAcV,EAAMO,QAAQ,IAE9B,8BAA+B,CAC7BE,SAAU,WACVE,IAAK,MACLC,MAAO,QAET,aAAc,CACZC,UAAW,SACXV,QAAS,OACTC,cAAe,SACfU,WAAY,cA8CVC,EAAe,SAAC,G,IACpBC,EAAI,OACJ,IAAAC,UAAAA,OAAS,IAAG,GAAK,EACjB9C,EAAW,cACXC,EAAU,aAEV,OAAI4C,aAAgB,EAAAE,6BAEhB,wBAACC,EAAyB,CACxBH,KAAMA,EACNC,UAAWA,EACX9C,YAAaA,EACbC,WAAYA,IAGP4C,aAAgB,EAAAI,4BAEvB,wBAACC,EAAwB,CACvBL,KAAMA,EACNC,UAAWA,EACX9C,YAAaA,EACbC,WAAYA,IAGP4C,aAAgB,EAAAM,2BAEvB,wBAACC,EAAuB,CACtBP,KAAMA,EACNC,UAAWA,EACX9C,YAAaA,EACbC,WAAYA,IAIX,mC,oBAAuB4C,EAAKQ,YAAY1B,OAW3C2B,EAAmB,SAAC,G,MACxBT,EAAI,OACJC,EAAS,YACTS,EAAQ,WACRvD,EAAW,cACXC,EAAU,aAEJuD,EAAqC,QAA7B,OAAAC,gBAAeZ,EAAKa,iBAAS,SAC3C,OACE,wBAAC,EAAAC,KAAI,CACHC,UAAU,YACVC,MAAO,CACLC,iBACIN,EAAuBV,GAAa,YAA3B,gBAA2CvE,GAE1DyB,YAAa,WAAM,OAAAA,EAAY6C,IAC/B5C,WAAYA,GAEZ,wBAAC,EAAA8D,WAAU,CACTC,KAAK,QACLJ,UAAU,gBACVK,QAAS,WAAM,OAAApB,EAAKqB,WAEpB,wBAAC,EAAAC,OAAU,OAEb,wBAAC,EAAAC,YAAW,KAAEb,KAWdP,EAA4B,SAAC,G,QACjCH,EAAI,OACJC,EAAS,YACT9C,EAAW,cACXC,EAAU,aAEJoE,EAAqB,UAAMC,OAA4B,MAGvD,IAAkC,UAAMC,UAAkB,GAAM,GAA/DC,EAAY,KAAEC,EAAe,KAC9BC,EAAkB,UAAMJ,QAAO,GAE/B,IAAwC,UAAMC,UAAS,GAAM,GAA5DI,EAAe,KAAEC,EAAkB,KACpCC,EAAiD,QAAlC,OAAApB,gBAAeZ,EAAKiC,sBAAc,QAAI,KACrDC,EAAiD,QAAlC,OAAAtB,gBAAeZ,EAAKmC,sBAAc,QAAI,EAIrDC,EAAsBT,EACxBH,EAAmBa,QACnBL,EACJ,OACE,wBAACvB,EAAgB,CACfT,KAAMA,EACNC,UAAWA,EACX9C,YAAa2E,EAAkB,aAAW3E,EAC1CC,WAAY0E,EAAkB,aAAW1E,GAEzC,mCACE,wBAAC,EAAAkF,WAAU,CAACC,QAAQ,YAAU,eAEhC,wBAAC,UAAkB,CACjBC,WAAS,EACTxG,MAAOoG,EACPlG,WAAmC,MAAvBkG,EAEZK,OAAQ,WACNjB,EAAmBa,QAAUrC,EAAKgC,aAClCJ,GAAgB,GAChBC,EAAgBQ,SAAU,GAG5BlG,gBAAiB,SAAChB,GACXwG,GAGL3B,EAAK0C,cAAcvH,IAGrBc,SAAU,SAACd,GACTyG,GAAgB,GAChBC,EAAgBQ,SAAU,EAC1BrC,EAAK0C,cAAcvH,IAErBwH,QAAS,WACHd,EAAgBQ,UAClBrC,EAAK0C,cAAclB,EAAmBa,SACtCT,GAAgB,GAChBC,EAAgBQ,SAAU,GAE5Bb,EAAmBa,QAAU,QAGjC,wBAAC,EAAAO,KAAI,CAACC,WAAY,GAChB,wBAAC,EAAAP,WAAU,CAACnH,GAAG,eAAa,iBAC5B,wBAAC,EAAA2H,OAAM,CACL9G,MAAOkG,EACPjG,SAAU,SAAC8G,EAAG/G,GACZ,UAAMgH,iBAAgB,WACpBhD,EAAKiD,gBAAgBjH,MAEvB+F,GAAmB,IAErBmB,kBAAmB,SAACH,EAAG/G,GACrBgE,EAAKiD,gBAAgBjH,GACrB+F,GAAmB,IACpB,kBACe,cAChBoB,IAAK,EACLC,IAAK,EACLC,KAAM,UAcVhD,EAA2B,SAAC,G,QAChCL,EAAI,OACJC,EAAS,YACT9C,EAAW,cACXC,EAAU,aAEJkG,EAAyC,QAA9B,OAAA1C,gBAAeZ,EAAKuD,kBAAU,QAAI,EAC7C,IAAoC,UAAM7B,SAAwB,MAAK,GAAtE8B,EAAa,KAAEC,EAAgB,KACtC,OACE,wBAAChD,EAAgB,CACfT,KAAMA,EACNC,UAAWA,EACX9C,YAAaA,EACbC,WAAYA,GAEZ,mCACE,wBAAC,EAAAkF,WAAU,CAACC,QAAQ,YAAU,kBAEhC,wBAAC,EAAAmB,UAAS,CACRC,MAAM,WACN3H,MAAgC,QAAzB,EAAAwH,QAAAA,EAAiBF,SAAQ,QAAI,GACpCrH,SAAU,SAACU,GACT,IAAIiH,EAA0BC,OAAOlH,EAAEC,OAAOZ,OAC1C8H,MAAMF,KACRA,EAAW,MAGbH,EAAiB9G,EAAEC,OAAOZ,OAC1BgE,EAAK+D,YAAYH,IAEnBI,OAAQ,WAAM,OAAAP,EAAiB,WAYjClD,EAA0B,SAAC,G,MAC/BP,EAAI,OACJC,EAAS,YACT9C,EAAW,cACXC,EAAU,aAEJkG,GAAW,IAAA1C,gBAAeZ,EAAKuD,WAC/B,IAAoC,UAAM7B,SAAwB,MAAK,GAAtE8B,EAAa,KAAEC,EAAgB,KACtC,OACE,wBAAChD,EAAgB,CACfT,KAAMA,EACNC,UAAWA,EACX9C,YAAaA,EACbC,WAAYA,GAEZ,mCACE,wBAAC,EAAAkF,WAAU,CAACC,QAAQ,YAAU,iBAEhC,wBAAC,EAAAmB,UAAS,CACRC,MAAM,WACN3H,MAAgC,QAAzB,EAAAwH,QAAAA,EAAiBF,SAAQ,QAAI,GACpCrH,SAAU,SAACU,GACT,IAAIiH,EAA0BC,OAAOlH,EAAEC,OAAOZ,OAC1C8H,MAAMF,KACRA,EAAW,MAGbH,EAAiB9G,EAAEC,OAAOZ,OAC1BgE,EAAK+D,YAAYH,IAEnBI,OAAQ,WAAM,OAAAP,EAAiB,WAMvC,UAvS6B,SAAC,G,MAC5B1C,EAAS,YACTkD,EAAO,UACPC,EAAa,gBACb/G,EAAW,cACXC,EAAU,aAEJ+G,EAAsC,QAA9B,OAAAvD,gBAAeqD,EAAQG,eAAO,QAAI,GAChD,OACE,wBAACrF,EAAI,CAACgC,UAAWA,GACf,8BAAIA,UAAU,QACXoD,EAAMnH,KAAI,SAACgD,EAAMqE,GAAM,OACtB,wBAACtE,EAAY,CACX7C,IAAKmH,EACLrE,KAAMA,EACNC,UAAWD,IAASkE,EACpB/G,YAAaA,EACbC,WAAYA,QAIlB,+BAAK2D,UAAU,WACb,wBAAC,EAAAuD,OAAM,CAACC,MAAM,UAAUnD,QAAS,WAAM,OAAA6C,EAAQO,kBAC7C,wBAAC,EAAAC,IAAO,M,eAEV,wBAAC,EAAAH,OAAM,CAACC,MAAM,UAAUnD,QAAS,WAAM,OAAA6C,EAAQS,oBAC7C,wBAAC,EAAAD,IAAO,M,kBAEV,wBAAC,EAAAH,OAAM,CAACC,MAAM,UAAUnD,QAAS,WAAM,OAAA6C,EAAQU,mBAC7C,wBAAC,EAAAF,IAAO,M,+KC5FlB,iBAEA,UAEA,UAEA,UAIA,aACA,aAEA,UACA,UAGM1F,GAAO,IAAAnD,QAAO,MAAP,CAAc,CACzB2B,MAAO,OACPC,OAAQ,OACR2B,QAAS,OACTC,cAAe,MACf,UAAW,CACT7B,MAAO,OACPC,OAAQ,QAEV,aAAc,CACZD,MAAO,MACPC,OAAQ,OACRoH,WAAY,QAEd,gBAAiB,CACfrH,MAAO,QACPC,OAAQ,UAiDZ,UA7CmB,W,UACXqH,GAAY,IAAAC,aAAY,EAAAC,qBACxBd,EAAUY,EAAUZ,QAEpBe,EAA4C,QAA7B,OAAApE,gBAAeqD,EAAQgB,cAAM,QAAI,KAChDC,EAAO,UAAMC,iBAAiBH,GAC9Bd,EAA+D,QAA/C,OAAAtD,gBAAeiE,EAAUO,8BAAsB,QAAI,KACnEC,EAA0D,QAAtC,OAAAzE,gBAAeiE,EAAUS,qBAAa,QAAI,KAmBpE,OAjBA,UAAMC,WAAU,WACd,IAAMC,EAAQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAClD,GAAIJ,EAAMK,IAAI,QAAS,CACrB,IAAMC,EAAON,EAAMO,IAAI,QACvB9B,EAAQ+B,oBAAoBF,MAE7B,IAEH,UAAMP,WAAU,WACd,GAAKF,EAAL,CAGA,IAAMG,EAAQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAClDJ,EAAMS,IAAI,OAAQZ,GAClBK,OAAOQ,QAAQC,aAAa,GAAI,GAAI,WAAIX,EAAMY,gBAC7C,CAACf,IAGF,wBAACtG,EAAI,KACH,wBAAC,UAAI,CACHgC,UAAU,OACVmE,KAAMA,QAAAA,EAAQ,EAAAmB,gBACdxB,UAAWA,IAEb,+BAAK9D,UAAU,YACf,wBAAC,UAAoB,CACnBA,UAAU,aACVkD,QAASA,EACTC,cAAeA,EACf/G,YAAa,SAAC6C,GAAS,OAAA6E,EAAUyB,uBAAuBtG,IACxD5C,WAAY,WAAM,OAAAyH,EAAUyB,uBAAuB,Y,wgBC5E3D,cAEA,SAIA,UAGA,UAEA,aAME,WAAkDC,GAAA,KAAAA,SAAAA,EALjC,KAAAC,eAAiB,IAAI,EAAAC,cACrB,KAAAC,uBACf,IAAI,EAAAC,gBAAwC,MAI5CC,KAAKC,cAAgBD,KAAKL,SAAStB,MAAM6B,MACvC,IAAA9J,MAAI,SAACsB,GAAM,OAAAiI,EAASQ,qBAkD1B,OA9CE,sBAAI,sBAAO,C,IAAX,WACE,OAAOH,KAAKL,U,gCAGd,sBAAI,2BAAY,C,IAAhB,WACE,OAAOK,KAAKC,e,gCAGd,sBAAI,0BAAW,C,IAAf,WACE,OAAOD,KAAKJ,eAAeQ,a,gCAE7B,sBAAI,yBAAU,C,IAAd,WACE,OAAOJ,KAAKJ,eAAeS,Y,gCAG7B,sBAAI,6BAAc,C,IAAlB,WACE,OAAOL,KAAKJ,eAAeU,gB,gCAG7B,sBAAI,oCAAqB,C,IAAzB,WACE,OAAON,KAAKF,wB,gCAGd,YAAAS,eAAA,SAAe5J,EAAeC,GAC5BoJ,KAAKJ,eAAeW,eAAe5J,EAAOC,IAG5C,YAAA4J,KAAA,SAAKC,EAAeC,GAClBV,KAAKJ,eAAeY,KAAKC,EAAOC,IAGlC,YAAAC,IAAA,SAAIC,EAAYC,GACdb,KAAKJ,eAAee,IAAIC,EAAIC,IAG9B,YAAAC,oBAAA,SAAoB1H,GAClB4G,KAAKJ,eAAekB,oBAAoB1H,GACxC4G,KAAKF,uBAAuBiB,KAC1B3H,EAAO4G,KAAKL,SAASqB,eAAe5H,GAAQ,OAIhD,YAAAsG,uBAAA,SAAuBtG,GACrB4G,KAAKF,uBAAuBiB,KAAK3H,GACjC4G,KAAKJ,eAAekB,oBAAoB1H,EAAOA,EAAK6H,SAAW,OAxDnC,GAMjB,SAAAC,QAAO,EAAAC,eANThD,GAAb,GAAa,EAAAA,oBAAAA,G,0JCXb,iBACA,UAAe,W,wwBCDf,iBACA,aACA,UAEA,UAEA,UACA,UACA,UAEA,UAGA,UAOA,aACA,aACA,aAQMhG,GAAO,IAAAnD,QAAO,MAAP,EAAc,SAAC,G,IAAEoD,EAAK,QAAO,OACxCiC,gBAAiB,UACjBhC,SAAU,OACVQ,SAAU,WACV,kBAAmB,CACjBA,SAAU,WACVE,IAAKX,EAAMO,QAAQ,GACnBK,MAAOZ,EAAMO,QAAQ,IAEvB,oBAAqB,CACnBE,SAAU,WACVE,IAAKX,EAAMO,QAAQ,GACnByI,KAAMhJ,EAAMO,QAAQ,IAEtB,cAAe,CACbJ,QAAS,aAwFP8I,EAAW,SAAC,G,MAChBC,EAAI,OACJC,EAAO,UACPlI,EAAS,YACT9C,EAAW,cACXC,EAAU,aAEJyH,GAAY,IAAAuD,oBACZC,EAA4C,QAApC,OAAAzH,gBAAeiE,EAAUoC,mBAAW,QAAI,EAC9CqB,EAA4BJ,EAAI,OAAxBK,EAAoBL,EAAI,OAAhBM,EAAYN,EAAI,QAElCO,EAAkB,UAAM/L,aAAY,WACxCS,EAAY+K,KACX,CAACA,EAAM/K,IAEV,GAAsB,IAAlBmL,EAAOI,OACT,OAAO,KAGT,IAAInE,EAAQ,QACZ,OAAQgE,EAAOI,MACb,IAAK,iBACHpE,EAAQiE,EAAU,MAAQ,QAC1B,MACF,IAAK,eACHjE,EAAQ,OAIR4D,IACF5D,GAAQ,aAAMA,GAAOqE,QAAQ,IAAKC,OAGpC,IAAM3K,EAAOgK,EAAKI,OAAOnK,QACvB,SAAC2K,EAAKC,GAAM,gBAAGD,EAAG,aAAKC,EAAEzK,EAAC,YAAIyK,EAAExK,KAChC,YAAK+J,EAAO,GAAGhK,EAAC,YAAIgK,EAAO,GAAG/J,EAAC,MAGjC,OACE,gCACEN,EAAGC,EACHS,OAAQ4F,EACR3F,aAAcqB,EAAY,GAAM,IAAOoI,EACvCrK,KAAK,OACLb,YAAasL,EACbrL,WAAYA,KAwElB,UAzMa,SAAC,G,UAAE2D,EAAS,YAAEmE,EAAI,OAAa8D,EAAiB,YACrDC,GAAoB,IAAAnE,aAAY,EAAA2B,eAChC5B,EAAYmE,QAAAA,EAAqBC,EAEjCC,EAA8C,QAArC,OAAAtI,gBAAeiE,EAAUmC,oBAAY,QAAI,EAAAmC,UAClDd,EAA4C,QAApC,OAAAzH,gBAAeiE,EAAUoC,mBAAW,QAAI,EAChDmC,EAAwD,QAAxC,OAAAxI,gBAAeiE,EAAUqC,uBAAe,QAAI,KAE5DmC,EAAkB,UAAM3M,aAC5B,SAACwL,GACCrD,EAAU6C,oBAAoBQ,EAAKK,UAErC,CAAC1D,IAGG,IA6HR,SACEyE,EACAnB,EACAoB,G,yBAAA,IAAAA,IAAAA,EAAA,GAEA,IAAIC,EAA+B,KAC/BC,EAAgB,EAEdC,EAA4B,GAC5BC,EAA2B,GAE7BC,EAA8B,K,IAElC,IAAoB,QAAAN,GAAS,8BAAE,CAA1B,IAAMO,EAAK,QACK,MAAfL,GAAuBA,EAAYjB,QAAUsB,EAAMtB,SACnC,MAAdqB,GAAsBA,IAAeC,EAAMtB,SAC7CkB,IACAG,EAAaC,EAAMtB,QAErBiB,EAAc,CACZlB,OAAQ,GACRC,OAAQsB,EAAMtB,OACdC,QAASiB,EAAgB,GAAM,GAEjCC,EAAczO,KAAKuO,IAGrBA,EAAYlB,OAAOrN,KAAK4O,I,iGAG1BL,EAAc,K,IAEd,IAAoB,QAAArB,GAAO,8BAAhB0B,EAAK,QACK,MAAfL,GAAuBA,EAAYjB,QAAUsB,EAAMtB,SACnC,MAAdqB,GAAsBA,IAAeC,EAAMtB,SAC7CkB,IACAG,EAAaC,EAAMtB,QAErBiB,EAAc,CACZlB,OAAQ,GACRC,OAAQsB,EAAMtB,OACdC,QAASiB,EAAgB,GAAM,GAEjCE,EAAa1O,KAAKuO,IAGpBA,EAAYlB,OAAOrN,KAAK4O,G,iGAG1B,GAAIN,EAAO,EAAG,C,IACZ,IAAmB,QAAAG,GAAa,+BAArBxB,EAAI,SACRI,QAAS,IAAAwB,YAAW5B,EAAKI,OAAQiB,GAAM,G,qGAE9C,IAAmB,QAAAI,GAAY,8BAAE,CAA5B,IAAMzB,KAAI,SACRI,QAAS,IAAAwB,YAAW5B,EAAKI,OAAQiB,GAAM,I,kGAIhD,MAAO,CAACG,EAAeC,GAvLgBI,CACrC7E,EAAK8E,gBACL9E,EAAK+E,eACN,GAHMC,EAAc,KAAEP,EAAY,KAK/B3B,GAAQ,EAAAmC,kBAAoBjB,EAAO5K,EACnCqB,GAAO,EAAAwK,kBAAoBjB,EAAO3K,EAClChB,EAA4B,EAApB,EAAA4M,mBAAyB,EAAI9B,GACrC7K,EAA6B,EAApB,EAAA2M,mBAAyB,EAAI9B,GAE1C,OACE,wBAACtJ,EAAI,CAACgC,UAAWA,GACf,wBAAC,EAAAqJ,qBAAqBC,SAAQ,CAACrO,MAAO6I,GACpC,wBAAC,UAAc,KACb,+BACE9D,UAAU,WACVxD,MAAM,OACNC,OAAO,OACPC,QAAS,UAAGuK,EAAI,YAAIrI,EAAG,YAAIpC,EAAK,YAAIC,GACpCG,UAAU,gBAEV,gCACEW,GAAI,GACJC,GAAI,GACJhB,MAAO,IACPC,OAAQ,IACRmB,OAAO,MACPX,KAAK,OACLY,YAAa,GAAMyJ,IAErB,kCAAQzK,GAAI,EAAGC,GAAI,EAAGC,EAAG,EAAAC,cAAeC,KAAK,SAC5CkM,EAAelN,KAAI,SAACkL,EAAM7D,GAAM,OAC/B,wBAAC4D,EAAQ,CACP/K,IAAKmH,EACL6D,KAAMA,EACNC,SAAS,EACTlI,UAAWiI,EAAKK,SAAWa,EAC3BjM,YAAakM,EACbjM,WAAY,WAAM,OAAAyH,EAAU6C,oBAAoB,YAGnDiC,EAAa3M,KAAI,SAACkL,EAAM7D,GAAM,OAC7B,wBAAC4D,EAAQ,CACP/K,IAAKmH,EACL6D,KAAMA,EACNC,SAAS,EACTlI,UAAWiI,EAAKK,SAAWa,EAC3BjM,YAAakM,EACbjM,WAAY,WAAM,OAAAyH,EAAU6C,oBAAoB,aAIrD0B,GACC,wBAAC,UAAW,CAACrI,UAAU,iBAAiBsC,KAAM+F,IAEhD,wBAAC,UAAW,CAACrI,UAAU,eAAemE,KAAMA,S,2NCvHtD,iBACA,UAEA,UAOA,UAGa,EAAAkF,qBAAuB,UAAME,cACxC,MAGF,8BACE,IAAMC,EAAgB,UAAMC,WAAW,EAAAJ,sBACvC,IAAKG,EACH,MAAM,IAAIE,MAAM,kCAElB,OAAOF,GAeT,8BACmB,KAAAG,aAAe,IAAI,EAAA/D,gBAAuB,EAAAwC,WAC1C,KAAAwB,YAAc,IAAI,EAAAhE,gBAAwB,GAC1C,KAAAiE,eAAiB,IAAI,EAAAjE,gBAAiC,MAE/D,KAAAkE,eAAyB,EACzB,KAAAC,gBAA0B,EAwDpC,OAtDE,sBAAI,0BAAW,C,IAAf,WACE,OAAOlE,KAAK8D,c,gCAGd,sBAAI,yBAAU,C,IAAd,WACE,OAAO9D,KAAK+D,a,gCAGd,sBAAI,6BAAc,C,IAAlB,WACE,OAAO/D,KAAKgE,gB,gCAGd,YAAAzD,eAAA,SAAe5J,EAAeC,GAC5BoJ,KAAKiE,eAAiBtN,EACtBqJ,KAAKkE,gBAAkBtN,GAGzB,YAAA4J,KAAA,SAAKC,EAAeC,QAAA,IAAAA,IAAAA,EAAA,MAClB,IAAMyD,EAAYzD,EAAKV,KAAKoE,eAAe1D,GAAM,EAAA6B,UAE3C/B,EADQR,KAAK+D,YAAY3O,MACVqL,EAErB,GADAT,KAAK+D,YAAYhD,KAAKP,GAClBE,EAAI,CACN,IAAM2D,EAAQrE,KAAKoE,eAAe1D,GAC5B,GAAQ,IAAA4D,eAAcH,EAAWE,GACvCrE,KAAK8D,aAAa/C,MAAK,IAAAwD,UAASvE,KAAK8D,aAAa1O,MAAO,MAI7D,YAAAuL,IAAA,SAAIC,EAAYC,EAAY2D,QAAA,IAAAA,IAAAA,GAAA,GAC1B,IAAMC,EAAID,EAAY,EAAIxE,KAAK+D,YAAY3O,MAAQ,EACnD4K,KAAK8D,aAAa/C,MAChB,IAAAwD,UAASvE,KAAK8D,aAAa1O,MAAO,CAAEsC,EAAGkJ,EAAK6D,EAAG9M,EAAGkJ,EAAK4D,MAI3D,YAAA3D,oBAAA,SAAoBa,GAClB3B,KAAKgE,eAAejD,KAAKY,IAGnB,YAAAyC,eAAR,SAAuBM,GACrB,IAAMpC,EAAStC,KAAK8D,aAAa1O,MAC3BqM,EAAQzB,KAAK+D,YAAY3O,MAU/B,OARAsP,GAAS,IAAAC,YAAWD,EAAQ,EAAIjD,GAChCiD,GAAS,IAAAC,YAAWD,EAA6B,EAApB,EAAAnB,kBAAyBvD,KAAKiE,gBAElD,CACPvM,GAFFgN,GAAS,IAAAH,UAASG,EAAQpC,IAEd5K,EAAI,EAAA6L,kBACd5L,EAAG+M,EAAO/M,EAAI,EAAA4L,oBAKpB,EA9DA,GAAa,EAAA1D,cAAAA,G,gvBCrCb,iBACA,UAEA,UAEA,UACA,UAEA,UAOa,EAAA+E,YAAc,KACd,EAAAC,WAAa,IAE1B,IAAM1M,GAAO,IAAAnD,QAAO,MAAP,CAAc,CACzB2B,MAAO,OACPC,OAAQ,SAqDV,UAlDuB,SAAC,G,IAAEuD,EAAS,YAAEL,EAAQ,WACrCmE,GAAY,IAAAuD,oBAEZsD,EAAeC,EAAMlK,OAA8B,MACnDmK,GAAkB,IAAAC,oBAAmBH,GAE3CC,EAAMG,iBAAgB,WACpBjH,EAAUsC,eAAeyE,EAAgBrO,MAAOqO,EAAgBpO,UAC/D,CAACoO,EAAgBrO,MAAOqO,EAAgBpO,SAE3C,IAAMuO,EAAUJ,EAAMjP,aAAY,SAACC,GAEjC,GADe+O,EAAarJ,UACb1F,EAAEqP,iBAAjB,CAIA,IAAMC,GAAY,IAAAC,cAAavP,GAE3BsP,EAAUE,aACZtH,EAAUuC,KAAKzK,EAAEyP,OAAS,EAAI,EAAAZ,YAAc,EAAI,EAAAA,YAAa,CAC3DlN,EAAG3B,EAAE0P,QACL9N,EAAG5B,EAAE2P,UAEP3P,EAAE4P,iBACF5P,EAAE6P,mBACOP,EAAUQ,UACnB5H,EAAU0C,IAAI5K,EAAEyP,OAAS,EAAAX,WAAY,GAAG,GACxC9O,EAAE4P,iBACF5P,EAAE6P,oBAEF3H,EAAU0C,IAAI,GAAI5K,EAAEyP,OAAS,EAAAX,YAAY,GACzC9O,EAAE4P,iBACF5P,EAAE6P,sBAEH,IASH,OAFA,IAAAE,gBAAehB,EAAc,QAASK,EAAS,CAAEY,SAAS,IAGxD,gBAAC5N,EAAI,CAACgC,UAAWA,EAAW6L,IAAKlB,GAC9BhL,K,myBCpEP,iBACA,UAEA,UAEA,UACA,UAOA,UAiFA,SAAgBmM,EACdhD,GAEA,MAAsB,mBAAfA,EAAMlB,KALf,UAxEoB,SAAC,G,IAAE5H,EAAS,YAAEmE,EAAI,OAC9B4H,GAAqB,IAAAvQ,iBAAgB,EAAAC,oBAErC,IACJ,UAAMuQ,SAAQ,W,UACNC,EAAY9H,EAAK8E,gBAAgBiD,OAAO/H,EAAK+E,eAE7CiD,GADU,IAAAC,MAAKH,EAAUhQ,KAAI,SAAC6M,GAAU,OAAAA,EAAMtB,WACxB6E,OAAOP,GAE/BQ,EAAW,EACXC,EAA+C,G,IACnD,IAA+B,QAAAJ,GAAW,8BAAE,CAA/B,IAAAlL,EAAY,qBACjB/E,EAAa6P,EAAmBS,cAAcvL,GAC/C/E,IAGLoQ,GAAYpQ,EAAWuQ,MACvBF,EAAqBrQ,EAAW9B,KACM,QAAnC,EAAAmS,EAAqBrQ,EAAW9B,WAAG,QAAI,GAAK,I,iGAkBjD,MAAO,CACLkS,GAhBa,IAAAI,kBAAiBvI,EAAK8E,iBAEZkD,EAAYxE,QACN,IAAAyE,MAC7BD,EAAYlQ,KAAI,SAACsB,GAAM,OAAAA,EAAE0D,iBACzB0G,OAEagF,KAAKC,MAClB,IAAAC,KACEC,OAAOC,KAAKR,GAAsBtQ,KAAI,SAACE,GACrC,OAAAwQ,KAAKK,IAAIT,EAAqBpQ,GAAM,WAYzC,CAACgI,EAAM,EAAA1I,qBAAoB,GAxCzB6Q,EAAQ,KAAE3E,EAAM,KAAEsF,EAAgB,KAAEC,EAAsB,KAAEC,EAAM,KA0CzE,OACE,wBAAC,EAAApN,KAAI,CAACC,UAAWA,EAAWwB,QAAQ,YAClC,wBAAC,EAAAhB,YAAW,KACV,wBAAC,EAAAe,WAAU,CAACC,QAAQ,MAAI,WACxB,mCACE,wBAAC,EAAAD,WAAU,2BACX,wBAAC,EAAAA,WAAU,CAACC,QAAQ,YACjByL,E,KAAoBC,E,aAGzB,mCACE,wBAAC,EAAA3L,WAAU,4BACX,wBAAC,EAAAA,WAAU,CAACC,QAAQ,YAAY2L,EAAOC,QAAQ,KAEjD,mCACE,wBAAC,EAAA7L,WAAU,oBACX,wBAAC,EAAAA,WAAU,CAACC,QAAQ,YAAY8K,IAElC,mCACE,wBAAC,EAAA/K,WAAU,2BACX,wBAAC,EAAAA,WAAU,CAACC,QAAQ,YAAYmG,EAAOyF,QAAQ,QASzD,uB,0JC9FA,iBAEA,UAEA,UAGA,UAGA,UA4BMC,GAAoB,IAAAxS,QAAO,MAAP,CAAc,CACtC,mBAAoB,CAClB2B,MAAO,OACPC,OAAQ,OACR2B,QAAS,OACTkP,eAAgB,SAChBvO,WAAY,YAGVwO,EAAgB,SAAC,G,MAAEjL,EAAI,OAErBpG,EAAgE,QAAnD,GADQ,IAAAV,iBAAgB,EAAAC,oBACL+Q,cAAclK,EAAKrB,qBAAa,QAAI,CACxElD,KAAM,UACNZ,KAAM,IAGFA,EAAOjB,EAAWiB,KAAKC,QAC3B,SAACD,EAAME,GACL,OAAAF,EACA,YAAKE,EAAMC,MAAMC,EAAC,YAAIF,EAAMC,MAAME,EAAC,cAAMH,EAAMI,GAAGF,EAAC,YAAIF,EAAMI,GAAGD,EAAC,YAAIH,EAAMK,GAAGH,EAAC,YAAIF,EAAMK,GAAGF,EAAC,YAAIH,EAAMM,IAAIJ,EAAC,YAAIF,EAAMM,IAAIH,KAC5H,UAEF,OACE,wBAAC6P,EAAiB,KAChB,wBAAC,EAAA9L,WAAU,CAACC,QAAQ,MAAI,cACxB,wBAAC,EAAAD,WAAU,CAACC,QAAQ,YAAYtF,EAAW6B,MAC3C,mCACE,wBAAC,EAAAwD,WAAU,yBACX,wBAAC,EAAAA,WAAU,CAACC,QAAQ,YAAYc,EAAKnB,eAEvC,+BAAKnB,UAAU,iBACb,+BACExD,MAAM,QACNC,OAAO,QACPC,QAAS,WAAI,EAAAC,sBAAqB,aAAK,EAAAA,sBAAqB,YAClC,EAAxB,EAAAA,sBAAyB,YACC,EAAxB,EAAAA,uBACJC,UAAU,gBAEV,kCAAQC,GAAI,EAAGC,GAAI,EAAGC,EAAG,EAAAC,cAAeC,KAAK,SAC7C,gCAAMC,EAASU,OAAO,QAAQC,YAAa,GAAKZ,KAAK,aAO/D,UApEoB,SAAC,G,IACfuQ,EADiBlL,EAAI,OAAEtC,EAAS,YAEpC,MACO,mBADCsC,EAAKsF,KAKF,MAHP4F,EAAU,wBAACD,EAAa,CAACjL,KAAMA,IAOjC,wBAAC,EAAAvC,KAAI,CAACC,UAAWA,EAAWwB,QAAQ,YAClC,wBAAC,EAAAhB,YAAW,KAAEgN,O,0JC7BpB,iBACA,UAAe,W,sOCDf,iBACA,SAQA,aAEMC,GAAU,IAAAC,gBAAe,WAEzBC,EAAmB,UAAMpE,cAAyB,IAAI,EAAAqE,WAEtDC,EAAY,IAAI,EAAAD,UAiBtB,SAAgBE,IACd,OAAO,UAAMrE,WAAWkE,GAjB1BE,EAAUE,KAAK,EAAAH,WAAWI,gBAAgBH,GAC1CA,EAAUI,KAAKR,GAEf,UAAeI,EAKF,EAAAK,kBAAoB,SAAC,G,IAAEvO,EAAQ,WAC1C,OACE,wBAACgO,EAAiBrE,SAAQ,CAACrO,MAAO4S,GAC/BlO,IAKP,mBAIA,2BAAmCwO,GAEjC,OADkBL,IACD9I,IAAImJ,IAGvB,uBACEA,EACAC,GAEA,IAAMP,EAAYC,IACZO,EAAS,UAAM3N,SAIrB,OAHsB,MAAlB2N,EAAO/M,UACT+M,EAAO/M,QAAUuM,EAAUS,OAAOH,EAAYC,IAEzCC,EAAO/M,U,sdClDhB,cAKA,UAoCA,SAAgBiN,EAAclR,EAAyBmR,GACrD,GAAIA,EAAI,GAAKA,EAAI,EACf,MAAM,IAAI9E,MAAM,uCAGlB,IAAM+E,GAAM,EAAID,IAAM,EAAIA,IAAM,EAAIA,GAC9BE,EAAK,EAAIF,GAAK,EAAIA,IAAM,EAAIA,GAC5BG,EAAK,EAAIH,EAAIA,GAAK,EAAIA,GACtBI,EAAKJ,EAAIA,EAAIA,EAEnB,MAAO,CACLjR,EACEkR,EAAKpR,EAAMC,MAAMC,EAAImR,EAAKrR,EAAMI,GAAGF,EAAIoR,EAAKtR,EAAMK,GAAGH,EAAIqR,EAAKvR,EAAMM,IAAIJ,EAC1EC,EACEiR,EAAKpR,EAAMC,MAAME,EAAIkR,EAAKrR,EAAMI,GAAGD,EAAImR,EAAKtR,EAAMK,GAAGF,EAAIoR,EAAKvR,EAAMM,IAAIH,GAhC9E,4BACEqR,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAO,CACL9R,MAAO,CAAEC,EAAGsR,EAAQrR,EAAGsR,GACvBrR,GAAI,CAAEF,EAAGwR,EAAKvR,EAAGwR,GACjBtR,GAAI,CAAEH,EAAG0R,EAAKzR,EAAG0R,GACjBvR,IAAK,CAAEJ,EAAG4R,EAAM3R,EAAG4R,KAIvB,kBAkBA,IAAMC,EAAmB,IAAIC,IAC7B,SAAgBC,EACdlS,GAGA,IAAMmS,EAAa,EAAAC,+BACbC,EAASL,EAAiBrK,IAAI3H,GACpC,QAAe1C,IAAX+U,EACF,OAAOA,EAOT,IAJA,IAAI/H,EAAS,EAETgI,EAAgBpB,EAAclR,EAAO,GAEhCuS,EAAQ,EAAGA,GAASJ,EAAYI,IAAS,CAChD,IAAM9G,EAAQyF,EAAclR,EAAOuS,EAAQJ,GACrCK,GAAY,IAAA1F,eAAcrB,EAAO6G,GACvChI,IAAU,IAAAmI,gBAAeD,GACzBF,EAAgB7G,EAKlB,OAFAuG,EAAiBnK,IAAI7H,EAAOsK,GAErBA,EAvBT,mBA0BA,IAAMoI,EAAmB,IAAIT,IAC7B,yBACEjS,G,QAIMmB,EAAkB,EAAAwR,qBAUlBN,EAASK,EAAiB/K,IAAI3H,GACpC,QAAe1C,IAAX+U,EACF,OAAOA,EAGT,IAAMnI,EAAkB,GAEpB0I,EAAoB,EACpBN,EAAuBtS,EAAMC,MAEjCiK,EAAOrN,KAAKyV,GAGZ,IADA,IAAMO,EAAmBvD,KAAKwD,KArBH,EAqBQZ,EAAelS,GAAsB,IAC/DuS,EAAQ,EAAGA,GAASM,EAAkBN,IAAS,CACtD,IACM9G,EAAQyF,EAAclR,EADlBuS,EAAQM,GAGlB,IADAD,IAAqB,IAAAG,eAAcT,EAAe7G,GAC3CmH,GAAqBzR,GAAS,CACnCyR,GAAwCzR,EACxC,IAAM6R,GAAa,IAAAjG,UACjBtB,GACA,IAAA0B,aACE,IAAA8F,iBAAe,IAAAnG,eAAcwF,EAAe7G,IAC5CmH,IAGJ1I,EAAOrN,KAAKmW,GACZV,EAAgBU,EAElBV,EAAgB7G,EAGdmH,EAAoB,GACtB1I,EAAOrN,KAAKqU,EAAclR,EAAO,IAGnCyP,OAAOyD,OAAOhJ,G,IACd,IAAgB,QAAAA,GAAM,8BAAE,CAAnB,IAAMS,EAAC,QACV8E,OAAOyD,OAAOvI,I,iGAIhB,OAFA+H,EAAiB7K,IAAI7H,EAAOkK,GAErBA,I,yLChJI,EAAAyI,qBAAuB,IACvB,EAAAP,+BAAiC,IACjC,EAAArG,kBAAoB,GACpB,EAAApM,cAAgB,IAChB,EAAAL,sBAAwB,I,uhCCJrC,iBAUA,8BAAmCkP,GAC3B,QAAkBjB,EAAMjK,SAA6B,CACzDsG,KAAM,EACNrI,IAAK,EACLC,MAAO,EACP2R,OAAQ,EACRhU,MAAO,EACPC,OAAQ,IACR,GAPK2D,EAAI,KAAEqQ,EAAO,KAqCpB,OA5BA7F,EAAMG,iBAAgB,WACpB,GAAKc,EAAIvK,QAAT,CAIA,IAAMoP,EAAW,IAAIC,gBAAe,WAClC,IAAMC,EAAK/E,EAAIvK,QACf,GAAKsP,EAAL,CAGA,IAAMC,EAAID,EAAGE,wBACbL,EAAQ,CACN7R,IAAKiS,EAAEjS,IACPqI,KAAM4J,EAAE5J,KACRpI,MAAOgS,EAAEhS,MACT2R,OAAQK,EAAEL,OACVhU,MAAOqU,EAAErU,MACTC,OAAQoU,EAAEpU,aAMd,OAFAiU,EAASK,QAAQlF,EAAIvK,SAEd,WACLoP,EAASM,iBAEV,CAACnF,IAEGzL,I,suBChDT,iBAEA,0BAIEyL,EACAjE,EACAqJ,EAIA5W,GAEAuQ,EAAMpG,WAAU,WACd,GAAKqH,EAAIvK,QAAT,CAKA,IAAM4P,EAAerF,EAAIvK,QAGzB,OADA4P,EAAaC,iBAAiBvJ,EAAMqJ,EAAU5W,GACvC,WACL6W,EAAaE,oBAAoBxJ,EAAMqJ,EAAU5W,OAElD,CAACuN,EAAMqJ,EAAUpF,EAAKxR,M,+dC1B3B,iBACA,UAMA,0BACEgX,EACA,G,IAAA,aAAiD,GAAE,EAAjDC,EAAa,gBAAEC,EAAO,UAElB,IAAgB,UAAM5Q,cAAwBhG,GAAU,GAAvD6W,EAAG,KAAEC,EAAM,KAsBlB,OApBA,UAAMjN,WAAU,WACd,GAAI6M,EAAY,CACd,GAAIA,aAAsB,EAAAK,WAAY,CACpC,IAAM,EAAeL,EAAWM,UAAU,CACxC/K,KAAM,SAAC4K,GACDF,EACF,UAAMrP,iBAAgB,WAAM,OAAAwP,EAAOD,MAEnCC,EAAOD,IAGXI,MAAOL,IAET,OAAO,WAAM,SAAaM,eAE1BJ,EAAOJ,MAGV,CAACA,EAAYE,EAASD,IAElBE,I,8xBCjCT,QAEA,iBACA,YAEA,UACA,YAEA,WAEMM,EAASC,SAASC,eAAe,QAC1BC,EAASC,WAAWJ,GAC5BK,OACH,gBAACvH,EAAMwH,WAAU,KACf,gBAAC,EAAAlE,kBAAiB,KAChB,gBAAC,UAAa,KACZ,gBAAC,UAAG,W,+HChBZ,cAEa,EAAAmE,mBAAqBvF,OAAOyD,OAAqB,IAc9D,wBAA6B3U,GACnB,IAAA0W,EAAuC1W,EAAC,QAA/B2W,EAA8B3W,EAAC,OAAvB8P,EAAsB9P,EAAC,SAAb4W,EAAY5W,EAAC,QAChD,MAAO,CAELwP,YAAa,EAAAqH,wBAA0BD,EAAUF,EACjDC,OAAM,EACN7G,SAAQ,IAIZ,6BAAkCgH,GAChC,SAAUA,EAAMF,SAAWE,EAAMH,QAAUG,EAAMJ,SAAWI,EAAMhH,Y,itBC1BpE,cAEA,UAcA,SAAgBgB,EAAiBiG,GAC/B,GAAIA,EAAWhL,QAAU,EACvB,OAAO,EAKT,IAFA,IAAIA,EAAS,EACTgI,EAAgBgD,EAAW,GACtBrP,EAAI,EAAGA,EAAIqP,EAAWhL,OAAQrE,IACrCqE,IAAU,IAAAyI,eAAcT,EAAegD,EAAWrP,IAClDqM,EAAgBgD,EAAWrP,GAG7B,OAAOqE,EAZT,qBAeA,IAAMiL,EAAwB,IAAItD,IAClC,kCAAuCqD,GACrC,GAAIA,EAAWhL,QAAU,EACvB,OAAO,EAGT,IAAIA,EAASiL,EAAsB5N,IAAI2N,GACvC,YAAehY,IAAXgN,IAIJA,EAAS+E,EAAiBiG,GAC1BC,EAAsB1N,IAAIyN,EAAYhL,IAJ7BA,GASX,sCACErK,EACAuV,EACAtQ,EACA/D,G,WAAA,IAAAA,IAAAA,EAAkB,EAAAwR,sBAElB,IAAM2C,EAAyB,GAC/B,GAAkC,KAA9B,IAAA7C,gBAAe+C,GACjB,MAAM,IAAInJ,MAAM,4BAGlB,GAAInH,GAAY,EACd,MAAO,GAKT,IAFA,IAAIoN,EAAgBrS,EAChB2S,EAAoB1N,EACjB0N,GAAqBzR,GAAS,CACnC,IAAMsK,GAAQ,IAAAsB,UAASuF,GAAe,IAAAnF,YAAWqI,EAAWrU,IAC5DmU,EAAWzY,KAAK4O,GAChBmH,GAAqBzR,EACrBmR,EAAgB7G,EAYlB,OATImH,EAAoB,GACtB0C,EAAWzY,MACT,IAAAkQ,UACmC,QAAjC,EAAAuI,EAAWA,EAAWhL,OAAS,UAAE,QAAI,EAAAS,WACrC,IAAAoC,YAAWqI,EAAW5C,KAKrB0C,GAGT,4BACEA,EACAxK,GAEA,OAAOwK,EAAW1W,KAAI,SAAC6M,GAAU,WAAAsB,UAAStB,EAAOX,OAGnD,oCACE2K,EACAC,GAEA,IAAMC,EAActG,EAAiBoG,GAErC,GAAIA,EAAMnL,QAAU,GAAKqL,GAAeD,EACtC,MAAO,CAACD,EAAO,IAQjB,IALA,IAAMG,EAAa,CAACH,EAAM,IACpBI,EAAiB,GAEnBC,EAAc,EACdxD,EAAgBmD,EAAM,GACjBxP,EAAI,EAAGA,EAAIwP,EAAMnL,OAAQrE,IAAK,CACrC,IAAM0E,EAAI8K,EAAMxP,GACV,GAAS,IAAA8M,eAAcpI,EAAG2H,GAChC,GAAIwD,EAAc,GAAUJ,EAAY,CACtC,IAAMK,EAAkBL,EAAaI,EAC/B9C,GAAa,IAAAgD,mBACjB1D,EACA3H,EACAoL,EAAkB,GAEpBH,EAAM/Y,KACJ4S,OAAOwG,OAAO,GAAI3D,EAAe,CAAEpS,EAAG8S,EAAW9S,EAAGC,EAAG6S,EAAW7S,KAEpE0V,EAAUhZ,KAAI,MAAdgZ,EAAS,GACPpG,OAAOwG,OAAO,GAAItL,EAAG,CAAEzK,EAAG8S,EAAW9S,EAAGC,EAAG6S,EAAW7S,KAAI,EACvDsV,EAAMS,MAAMjQ,KAAE,IAEnB,MAEA6P,GAAe,EACfF,EAAM/Y,KAAK8N,GACX2H,EAAgB3H,EAIpB,MAAO,CAACiL,EAAOC,K,aChHjB,SAAgBpD,EAAe9H,GAC7B,OAAO2E,KAAKC,KAAK5E,EAAEzK,EAAIyK,EAAEzK,EAAIyK,EAAExK,EAAIwK,EAAExK,G,gMAhB1B,EAAA4K,UAA6B0E,OAAOyD,OAAO,CAAEhT,EAAG,EAAGC,EAAG,IAEnE,uBAA4BgW,EAAU3C,GACpC,OACElE,KAAK8G,IAAID,EAAEjW,EAAIsT,EAAEtT,GAAKuF,OAAO4Q,SAAW/G,KAAK8G,IAAID,EAAEhW,EAAIqT,EAAErT,GAAKsF,OAAO4Q,SAIzE,sBAA2B1L,EAAU2L,GACnC,MAAO,CACLpW,EAAGyK,EAAEzK,EAAIoW,EACTnW,EAAGwK,EAAExK,EAAImW,IAIb,mBAIA,yBAA8BlW,EAAWC,GACvC,IAAM+I,EAAKhJ,EAAGF,EAAIG,EAAGH,EACfmJ,EAAKjJ,EAAGD,EAAIE,EAAGF,EACrB,OAAOmP,KAAKC,KAAKnG,EAAKA,EAAKC,EAAKA,IAGlC,oBAAyB8M,EAAU3C,GACjC,MAAO,CACLtT,EAAGiW,EAAEjW,EAAIsT,EAAEtT,EACXC,EAAGgW,EAAEhW,EAAIqT,EAAErT,IAIf,yBAA8BgW,EAAU3C,GACtC,MAAO,CACLtT,EAAGiW,EAAEjW,EAAIsT,EAAEtT,EACXC,EAAGgW,EAAEhW,EAAIqT,EAAErT,IAIf,0BAA+BwK,GAC7B,IAAM4L,EAAY9D,EAAe9H,GACjC,OAAkB,IAAd4L,EACK,EAAAxL,UAGF,CACL7K,EAAGyK,EAAEzK,EAAIqW,EACTpW,EAAGwK,EAAExK,EAAIoW,IAIb,6BACEtW,EACAK,EACAkW,GAEA,MAAO,CACLtW,EAAGD,EAAMC,GAAKI,EAAIJ,EAAID,EAAMC,GAAKsW,EACjCrW,EAAGF,EAAME,GAAKG,EAAIH,EAAIF,EAAME,GAAKqW,K,6MC/DrC,iBAQMC,EAAc,UAASC,IAAM,UAASA,GAAGC,QAAW,UAC7C,EAAAC,OAPM,WAOsBC,KAAKJ,GAC1C,UAPW,kBAQJI,KAAKJ,GACZ,MARa,SASJI,KAAKJ,GACd,QACA,UAES,EAAAK,QAAkB,EAElB,EAAA1B,wBAAyC,QAAfqB,G,mcCnBvC,aAEA,UAKA,2BAQA,OAPE,YAAA9X,eAAA,WACE,OAAO,EAAAmQ,aAGT,YAAAK,cAAA,SAAcpS,G,MACZ,OAA2C,QAApC,IAAA+R,YAAYiI,MAAK,SAAC7W,GAAM,OAAAA,EAAEnD,KAAOA,YAAG,QAAI,MANpB,IAF9B,IAAAia,eACA,IAAAC,cACY7Y,GAAb,GAAa,EAAAA,mBAAAA,G,qFCPb,cACA,UAEa,EAAA0Q,YAAsC,CACjD,CACE/R,IAAI,IAAA6G,cAAa,aAEjBlD,KAAM,aAENyF,MAAO,UAEPiJ,MAAO,GAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,KAAQ,GAAI,GAAI,GAAI,GAAI,IAE/C,IAAAA,mBAAkB,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,IAE5C,IAAAA,mBAAkB,EAAG,GAAI,EAAG,GAAI,OAAQ,GAAI,EAAG,IAGjDC,gBAAiB,OAGnB,CACEpa,IAAI,IAAA6G,cAAa,cAEjBlD,KAAM,aAENyF,MAAO,UAEPiJ,MAAO,GAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,KAAQ,EAAG,aAAe,EAAG,GAAI,IAExD,IAAAA,kBAAiB,GAAI,GAAI,aAAe,GAAI,OAAQ,GAAI,KAAM,IAE9D,IAAAA,mBAAkB,KAAM,GAAI,OAAQ,GAAI,QAAS,GAAI,MAAO,IAE5D,IAAAA,mBAAkB,MAAO,GAAI,QAAS,GAAI,OAAQ,GAAI,EAAG,IAEzD,IAAAA,mBAAkB,EAAG,GAAI,OAAQ,GAAI,QAAS,GAAI,GAAI,IAEtD,IAAAA,mBAAkB,GAAI,GAAI,QAAS,GAAI,OAAQ,GAAI,EAAG,IAGxDC,gBAAiB,MAGnB,CACEpa,IAAI,IAAA6G,cAAa,eAEjBlD,KAAM,iBAENyF,MAAO,UAEPiJ,MAAO,EAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,IAE1C,IAAAA,mBAAkB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAE9C,IAAAA,mBAAkB,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,IAE7C,IAAAA,kBAAiB,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,IAE1C,IAAAA,kBAAiB,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAM,IAE5C,IAAAA,kBAAiB,IAAM,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,IAG9CC,gBAAiB,IAGnB,CACEpa,IAAI,IAAA6G,cAAa,WAEjBlD,KAAM,gBAENyF,MAAO,UAEPiJ,MAAO,GAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,EAAG,GAAI,IAAM,EAAG,EAAG,MAE1C,IAAAA,kBAAiB,EAAG,IAAK,SAAW,EAAG,EAAG,EAAG,EAAG,OAEhD,IAAAA,kBAAiB,EAAG,KAAM,SAAW,MAAO,SAAW,MAAO,EAAG,OAEjE,IAAAA,mBAAkB,EAAG,MAAO,EAAG,GAAI,IAAM,EAAG,EAAG,MAE/C,IAAAA,kBAAiB,EAAG,IAAK,SAAW,EAAG,KAAQ,EAAG,EAAG,IAGvDC,gBAAiB,MAGnB,CACEpa,IAAI,IAAA6G,cAAa,iBAEjBlD,KAAM,iBAENyF,MAAO,UAEPiJ,MAAO,IAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,GAAI,IAAM,GAAI,SAAU,UAAY,GAAI,IAE5D,IAAAA,mBAAkB,GAAI,GAAI,IAAM,EAAG,GAAI,GAAK,GAAI,IAEhD,IAAAA,kBAAiB,GAAI,EAAG,GAAI,KAAM,GAAI,MAAO,GAAI,IAEjD,IAAAA,mBAAkB,GAAI,GAAI,GAAI,KAAM,MAAS,KAAM,GAAI,OAGzDC,gBAAiB,KAGnB,CACEpa,IAAI,IAAA6G,cAAa,gBAEjBlD,KAAM,eAENyF,MAAO,UAEPiJ,MAAO,GAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,KAAQ,EAAG,GAAI,IAAK,GAAI,MAE/C,IAAAA,kBAAiB,GAAI,IAAK,GAAI,KAAM,GAAI,KAAM,GAAI,MAElD,IAAAA,mBAAkB,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,MAEpD,IAAAA,mBAAkB,GAAI,KAAM,GAAI,IAAK,GAAI,IAAK,GAAI,MAElD,IAAAA,kBAAiB,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,MAEhD,IAAAA,kBAAiB,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,MAEhD,IAAAA,kBAAiB,GAAI,IAAK,GAAI,IAAK,MAAS,EAAG,GAAI,IAGrDC,gBAAiB,OAGnB,CACEpa,IAAI,IAAA6G,cAAa,YAEjBlD,KAAM,WAENyF,MAAO,UAEPiJ,MAAO,EAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,GAAI,KAAM,GAAI,OAAQ,GAAI,KAAM,IAEpD,IAAAA,mBAAkB,KAAM,GAAI,OAAQ,GAAI,OAAQ,GAAI,IAAK,IAEzD,IAAAA,mBAAkB,IAAK,GAAI,OAAQ,GAAI,OAAQ,GAAI,KAAM,IAEzD,IAAAA,mBAAkB,KAAM,GAAI,OAAQ,GAAI,KAAM,GAAI,EAAG,IAGvDC,gBAAiB,IAGnB,CACEpa,IAAI,IAAA6G,cAAa,eAEjBlD,KAAM,eAENyF,MAAO,UAEPiJ,MAAO,GAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,KAAQ,GAAI,KAAO,KAAM,IAAK,IAErD,IAAAA,mBAAkB,IAAK,GAAI,IAAK,GAAI,MAAO,UAAY,KAAM,MAE7D,IAAAA,mBAAkB,KAAM,KAAO,MAAO,KAAO,IAAK,GAAI,IAAK,IAE3D,IAAAA,mBAAkB,IAAK,GAAI,MAAO,KAAM,OAAQ,GAAI,EAAG,IAGzDC,gBAAiB,MAGnB,CACEpa,IAAI,IAAA6G,cAAa,iBAEjBlD,KAAM,iBAENyF,MAAO,UAEPiJ,MAAO,GAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,EAAG,EAAG,IAAM,GAAK,IAAM,KAE9C,IAAAA,kBAAiB,IAAM,GAAK,IAAM,GAAK,GAAI,EAAG,GAAI,IAElD,IAAAA,kBAAiB,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,IAExC,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAExC,IAAAA,kBAAiB,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,IAExC,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAExC,IAAAA,kBAAiB,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,IAExC,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,MAAO,GAAK,MAAO,KAEhD,IAAAA,kBAAiB,MAAO,GAAK,MAAO,GAAK,OAAQ,EAAG,EAAG,IAGzDC,gBAAiB,OAGnB,CACEpa,IAAI,IAAA6G,cAAa,kBAEjBlD,KAAM,gBAENyF,MAAO,UAEPiJ,MAAO,EAEPtP,KAAM,EAAC,IAAAoX,kBAAiB,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAE/CC,gBAAiB,MAGnB,CACEpa,IAAI,IAAA6G,cAAa,aAEjBlD,KAAM,YAENyF,MAAO,UAEPiJ,MAAO,KAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,GAAI,IAAM,GAAI,GAAK,KAAO,GAAK,KAEnD,IAAAA,mBAAkB,GAAK,IAAM,GAAK,KAAO,IAAM,EAAG,EAAG,IAErD,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,IAExC,IAAAA,kBAAiB,EAAG,EAAG,GAAI,GAAK,IAAM,SAAW,GAAI,IAErD,IAAAA,kBAAiB,GAAI,GAAI,KAAO,GAAI,KAAM,KAAO,IAAK,MAEtD,IAAAA,mBAAkB,IAAK,KAAO,IAAK,MAAO,IAAM,EAAG,EAAG,IAEtD,IAAAA,kBAAiB,EAAG,EAAG,KAAM,EAAG,EAAG,KAAM,EAAG,IAE5C,IAAAA,kBAAiB,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,IAG3CC,gBAAiB,OAGnB,CACEpa,IAAI,IAAA6G,cAAa,gBAEjBlD,KAAM,gBAENyF,MAAO,UAEPiJ,MAAO,GAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,KAAQ,GAAI,QAAS,GAAI,GAAI,IAEpD,IAAAA,mBAAkB,GAAI,GAAI,QAAS,GAAI,OAAS,GAAI,KAAO,IAE3D,IAAAA,mBAAkB,KAAO,GAAI,OAAS,EAAG,OAAS,EAAG,KAAO,IAE5D,IAAAA,kBAAiB,KAAO,EAAG,OAAS,EAAG,GAAI,EAAG,GAAI,IAElD,IAAAA,kBAAiB,GAAI,EAAG,GAAI,GAAI,MAAS,KAAM,GAAI,OAEnD,IAAAA,kBAAiB,GAAI,KAAM,MAAS,KAAM,MAAS,EAAG,GAAI,IAG5DC,gBAAiB,OAGnB,CACEpa,IAAI,IAAA6G,cAAa,iBAEjBlD,KAAM,iBAENyF,MAAO,UAEPiJ,MAAO,EAEPtP,KAAM,EACJ,IAAAoX,kBACE,EACA,EACA,QACA,SACA,UACC,SACD,UACC,WAGH,IAAAA,kBACE,UACC,SACD,UACC,SACD,UACC,SACD,UACC,WAILC,gBAAiB,IAGnB,CACEpa,IAAI,IAAA6G,cAAa,mBAEjBlD,KAAM,qBAENyF,MAAO,UAEPiJ,MAAO,GAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,EAAG,GAAI,YAAa,EAAG,EAAG,IAEjD,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,IAG5CC,gBAAiB,MAGnB,CACEpa,IAAI,IAAA6G,cAAa,kBAEjBlD,KAAM,YAENyF,MAAO,UAEPiJ,MAAO,EAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,KAAQ,EAAG,MAAQ,EAAG,EAAG,IAEhD,IAAAA,kBAAiB,EAAG,EAAG,OAAQ,EAAG,GAAI,EAAG,GAAI,IAE7C,IAAAA,kBAAiB,GAAI,EAAG,GAAI,EAAG,OAAQ,EAAG,EAAG,IAE7C,IAAAA,kBAAiB,EAAG,EAAG,OAAQ,EAAG,OAAQ,EAAG,EAAG,IAGlDC,gBAAiB,MAGnB,CACEpa,IAAI,IAAA6G,cAAa,YAEjBlD,KAAM,YAENyF,MAAO,UAEPiJ,MAAO,KAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,EAAG,KAAM,IAAK,KAAM,IAAK,IAEhD,IAAAA,mBAAkB,IAAK,GAAI,KAAM,KAAM,GAAI,KAAM,EAAG,IAEpD,IAAAA,mBAAkB,EAAG,GAAI,EAAG,KAAM,IAAK,KAAM,IAAK,IAElD,IAAAA,mBAAkB,IAAK,GAAI,KAAM,KAAO,MAAO,KAAO,KAAM,IAG9DC,gBAAiB,OAGnB,CACEpa,IAAI,IAAA6G,cAAa,QAEjBlD,KAAM,WAENyF,MAAO,UAEPiJ,MAAO,EAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,KAAQ,GAAI,KAAO,IAAM,GAAI,IAEpD,IAAAA,kBAAiB,GAAI,EAAG,KAAO,KAAM,IAAM,EAAG,KAAO,OAErD,IAAAA,kBAAiB,KAAO,KAAM,GAAI,IAAK,GAAI,KAAM,KAAO,MAExD,IAAAA,kBAAiB,KAAO,IAAK,IAAM,MAAO,IAAM,MAAO,KAAO,MAE9D,IAAAA,mBAAkB,KAAO,KAAM,GAAI,MAAO,GAAI,KAAM,KAAO,OAE3D,IAAAA,mBAAkB,KAAO,MAAO,IAAM,GAAI,UAAY,SAAU,GAAI,IAEpE,IAAAA,kBAAiB,GAAI,EAAG,KAAO,KAAM,MAAS,EAAG,GAAI,IAGvDC,gBAAiB,IAGnB,CACEpa,IAAI,IAAA6G,cAAa,aAEjBlD,KAAM,aAENyF,MAAO,UAEPiJ,MAAO,EAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEtC,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEtC,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEtC,IAAAA,kBAAiB,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAExC,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAGxCC,gBAAiB,OAGnB,CACEpa,IAAI,IAAA6G,cAAa,cAEjBlD,KAAM,YAENyF,MAAO,UAEPiJ,MAAO,EAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,IAEzC,IAAAA,kBAAiB,GAAI,EAAG,KAAM,EAAG,GAAI,EAAG,GAAI,IAG9CC,gBAAiB,MAGnB,CACEpa,IAAI,IAAA6G,cAAa,eAEjBlD,KAAM,eAENyF,MAAO,UAEPiJ,MAAO,IAEPtP,KAAM,EAAC,IAAAoX,kBAAiB,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAEjDC,gBAAiB,IAGnB,CACEpa,IAAI,IAAA6G,cAAa,WAEjBlD,KAAM,eAENyF,MAAO,UAEPiJ,MAAO,KAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,KAAQ,GAAI,GAAI,GAAI,GAAI,IAE/C,IAAAA,mBAAkB,GAAI,GAAI,GAAI,GAAI,UAAW,aAAc,EAAG,IAE9D,IAAAA,mBAAkB,EAAG,GAAI,EAAG,KAAO,GAAI,MAAO,GAAI,IAGpDC,gBAAiB,OAGnB,CACEpa,IAAI,IAAA6G,cAAa,gBAEjBlD,KAAM,gBAENyF,MAAO,UAEPiJ,MAAO,GAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,GAAI,EAAG,GAAI,IAAK,GAAI,IAAK,MAE7C,IAAAA,mBAAkB,IAAK,KAAO,IAAK,KAAM,KAAM,KAAM,KAAM,MAE3D,IAAAA,mBAAkB,KAAM,KAAM,KAAM,KAAM,EAAG,KAAM,EAAG,OAEtD,IAAAA,mBAAkB,EAAG,MAAO,EAAG,GAAI,IAAK,GAAI,IAAK,IAGnDC,gBAAiB,IAGnB,CACEpa,IAAI,IAAA6G,cAAa,eAEjBlD,KAAM,aAENyF,MAAO,UAEPiJ,MAAO,IAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAExC,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,IAE1C,IAAAA,kBAAiB,IAAK,EAAG,KAAM,EAAG,GAAI,EAAG,EAAG,IAE5C,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,IAE1C,IAAAA,kBAAiB,IAAK,EAAG,KAAM,EAAG,GAAI,EAAG,EAAG,IAE5C,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAGxCC,gBAAiB,OAGnB,CACEpa,IAAI,IAAA6G,cAAa,WAEjBlD,KAAM,kBAENyF,MAAO,UAEPiJ,MAAO,EAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,KAAQ,EAAG,OAAQ,IAAK,EAAG,MAElD,IAAAA,kBAAiB,EAAG,IAAK,OAAQ,KAAM,MAAQ,KAAM,EAAG,MAExD,IAAAA,mBAAkB,EAAG,KAAM,OAAQ,IAAK,OAAQ,EAAG,EAAG,IAGxDC,gBAAiB,MAGnB,CACEpa,IAAI,IAAA6G,cAAa,cAEjBlD,KAAM,aAENyF,MAAO,UAEPiJ,MAAO,EAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,KAAQ,GAAI,QAAS,GAAI,GAAI,IAEpD,IAAAA,mBAAkB,GAAI,GAAI,QAAS,GAAI,QAAS,GAAI,GAAI,IAG1DC,gBAAiB,MAGnB,CACEpa,IAAI,IAAA6G,cAAa,cAEjBlD,KAAM,aAENyF,MAAO,UAEPiJ,MAAO,EAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,KAAO,GAAK,GAAI,GAAK,KAAM,IAElD,IAAAA,kBAAiB,KAAM,EAAG,IAAK,SAAW,KAAM,GAAK,IAAK,IAE1D,IAAAA,kBAAiB,IAAK,EAAG,MAAO,GAAK,KAAM,GAAK,KAAM,IAEtD,IAAAA,kBAAiB,KAAM,EAAG,EAAG,SAAW,KAAM,GAAK,EAAG,IAGxDC,gBAAiB,IAGnB,CACEpa,IAAI,IAAA6G,cAAa,eAEjBlD,KAAM,cAENyF,MAAO,UAEPiJ,MAAO,IAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,IAE3C,IAAAA,mBAAkB,GAAI,EAAG,KAAO,EAAG,UAAW,SAAU,GAAI,MAE5D,IAAAA,kBAAiB,GAAI,IAAK,IAAM,KAAM,KAAO,KAAM,GAAI,IAGzDC,gBAAiB,OAGnB,CACEpa,IAAI,IAAA6G,cAAa,aAEjBlD,KAAM,YAENyF,MAAO,UAEPiJ,MAAO,EAEPtP,KAAM,EACJ,IAAAoX,kBAAiB,EAAG,EAAG,KAAQ,EAAG,EAAG,EAAG,GAAK,OAE7C,IAAAA,kBAAiB,GAAK,KAAM,SAAW,IAAK,MAAQ,IAAK,EAAG,MAE5D,IAAAA,kBAAiB,EAAG,IAAK,OAAQ,KAAM,OAAQ,KAAM,EAAG,MAExD,IAAAA,mBAAkB,EAAG,KAAM,MAAQ,KAAM,EAAG,KAAM,GAAK,OAEvD,IAAAA,mBAAkB,GAAK,MAAO,YAAa,EAAG,KAAQ,EAAG,EAAG,IAG9DC,gBAAiB,IAGnB,CACEpa,IAAI,IAAA6G,cAAa,iBAEjBlD,KAAM,iBAENyF,MAAO,UAEPiJ,MAAO,GAEPtP,KAAM,EAAC,IAAAoX,kBAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE7CC,gBAAiB,M,gECrpBrB,aAEA,UAEA,UAAe,IAAI,EAAAC,iBAAgB,SAAC1G,GAClCA,EAAK,EAAAtS,wB,oFCDP,wBAA6BrB,GAC3B,OAAOA,I,0JCLT,aAEA,aACA,aAEA,WAAe,IAAAsT,gBAAe,UAAmB,Y,gqDCLjD,cACA,SACA,UAOA,aACA,UAOA,UAIA,aAOE,WAA6BgH,GAA7B,WANiB,KAAAC,QAAU,IAAI,EAAA/O,gBAC7B,IAEM,KAAAgP,kBAAyC,KAChC,KAAAC,OAAS,IAAI,EAAAjP,gBAAmC,MAK/DC,KAAK8O,QAAQhD,WAAU,SAACvO,GAClB,EAAKwR,mBACP,EAAKA,kBAAkB/C,cAGJ,IAAjBzO,EAAMuE,OAKV,EAAKiN,mBAAoB,IAAAE,eACvB1R,EAAMnH,KAAI,SAACsB,GAAM,OAAAA,EAAEwX,cACnBpD,WAAU,SAACqD,GACX,EAAKH,OAAOjO,KAAK8N,EAAQM,UAAUA,EAAU3I,OAAO,EAAA4I,gBAPpD,EAAKJ,OAAOjO,KAAK,SA8FzB,OAlFE,sBAAI,qBAAM,C,IAAV,WACE,OAAOf,KAAK8O,S,gCAGd,sBAAI,oBAAK,C,IAAT,WACE,OAAO9O,KAAK8O,QAAQ1Z,O,gCAGtB,sBAAI,oBAAK,C,IAAT,WACE,OAAO4K,KAAKgP,Q,gCAGd,YAAA5P,oBAAA,SAAoBiQ,GAApB,WACQpC,GAAQ,IAAAqC,QAAaD,GAErBE,EADK,IAAIC,SAASvC,GACLwC,SAAS,GACtBvQ,EAAO+N,EAAMS,MAAM,GACzB,GAAgB,IAAZ6B,EAAe,CACjB,IACMhS,EADUmS,KAAKC,MAAM,UAAKC,QAAQ1Q,EAAM,CAAE2Q,GAAI,YAC9BzZ,KAAI,SAACgD,GACzB,OAAQA,EAAK2I,MACX,IAAK,iBACH,OAAOzI,EAA6BwW,SAAS1W,GAAM,SAACA,GAClD,SAAK2W,YAAY3W,MAErB,IAAK,gBACH,OAAOI,EAA4BsW,SAAS1W,GAAM,SAACA,GACjD,SAAK2W,YAAY3W,MAErB,IAAK,eACH,OAAOM,EAA2BoW,SAAS1W,GAAM,SAACA,GAChD,SAAK2W,YAAY3W,MAErB,QACE,MAAM,IAAIyK,MAAM,6BAAsBzK,EAAK2I,WAGjD/B,KAAK8O,QAAQ/N,KAAKxD,KAItB,YAAA4C,eAAA,WACE,IAAM5C,EAAQyC,KAAK8O,QAAQ1Z,MAAMgB,KAAI,SAACsB,GAAM,OAAAA,EAAEsY,YACxCC,EAAU,UAAKC,QAAQR,KAAKS,UAAU5S,IACtC2B,EAAO,IAAIkR,WAAW,EAAIH,EAAQnO,QAGxC,OAFA5C,EAAKG,IAAI4Q,EAAS,GAClB,IAAIT,SAAStQ,EAAKmR,QAAQC,SAAS,EAAG,IAC/B,IAAAC,QAAarR,IAGtB,YAAAtB,cAAA,sBACQxE,EAAO,IAAIE,GAA6B,SAACF,GAC7C,SAAK2W,YAAY3W,MAGnB,OADA4G,KAAK8O,QAAQ/N,KAAK,EAAD,OAAKf,KAAK8O,QAAQ1Z,QAAK,IAAEgE,IAAI,IACvCA,GAGT,YAAA0E,gBAAA,sBACQ1E,EAAO,IAAII,GAA4B,SAACJ,GAC5C,SAAK2W,YAAY3W,MAGnB,OADA4G,KAAK8O,QAAQ/N,KAAK,EAAD,OAAKf,KAAK8O,QAAQ1Z,QAAK,IAAEgE,IAAI,IACvCA,GAGT,YAAA2E,eAAA,sBACQ3E,EAAO,IAAIM,GAA2B,SAACN,GAC3C,SAAK2W,YAAY3W,MAGnB,OADA4G,KAAK8O,QAAQ/N,KAAK,EAAD,OAAKf,KAAK8O,QAAQ1Z,QAAK,IAAEgE,IAAI,IACvCA,GAGT,YAAA4H,eAAA,SAAe5H,GAEb,OADe4G,KAAK8O,QAAQ1Z,MAAMmZ,MAAK,SAAC7W,GAAM,OAAAA,EAAEuJ,WAAa7H,MAAS,MAIhE,YAAA2W,YAAR,SAAoB3W,GAClB4G,KAAK8O,QAAQ/N,KAAKf,KAAK8O,QAAQ1Z,MAAMoR,QAAO,SAAC9O,GAAM,OAAAA,IAAM0B,OA5GrC,IADvB,IAAAoV,cAQc,SAAAtN,QAAO,EAAAsP,WAPTrP,GAAb,GAAa,EAAAA,YAAAA,EAgHb,mBAAsB,EAAAsP,gBAAAA,EAYtB,kBASE,WAA6BC,GAA7B,MACE,cAAO,K,OADoB,EAAAA,QAAAA,EAPZ,EAAAC,eAAiB,IAAI,EAAA5Q,gBACpC,MAEe,EAAA6Q,eAAiB,IAAI,EAAA7Q,gBAAwB,GAE7C,EAAA8Q,WAAa,IAAI,EAAA9Q,gBAAiC,MAIjE,EAAK+Q,WAAY,IAAA7B,eAAc,CAC7B,EAAK0B,eACL,EAAKC,iBACJ1Q,MAAK,IAAA9J,MAAI,WAAM,SAAK2a,aAEvB,IAAA9B,eAAc,CAAC,EAAK0B,eAAgB,EAAKC,iBAAiB9E,WACxD,SAAC,G,IAAA,SAAC1Q,EAAY,KAAEE,EAAY,KACrB,EAAKyV,QAKV,EAAKF,WAAW9P,KAAK,CACnBgB,KAAM,iBACN3G,aAAcA,EACdE,aAAY,IAPZ,EAAKuV,WAAW9P,KAAK,S,EAoF/B,OAvGkD,OAgCzC,EAAA+O,SAAP,SACEkB,EACAC,GAEA,IAAM7X,EAAO,IAAIE,EAA6B2X,GAG9C,OAFA7X,EAAK0C,cAAckV,EAAK5V,cACxBhC,EAAKiD,gBAAgB2U,EAAK1V,cACnBlC,GAGT,YAAA4W,OAAA,WACE,MAAO,CACLjO,KAAM,iBACN3G,aAAc4E,KAAK2Q,eAAevb,MAClCkG,aAAc0E,KAAK4Q,eAAexb,QAItC,sBAAI,uBAAQ,C,IAAZ,WACE,OAAO4K,KAAK8Q,W,gCAGd,sBAAI,sBAAO,C,IAAX,WAEE,IAAMxV,EAAe0E,KAAK4Q,eAAexb,MACzC,OAC+B,MAA7B4K,KAAK2Q,eAAevb,OACpBkG,GAAgB,GAChBA,GAAgB,G,gCAIpB,sBAAI,4BAAa,C,IAAjB,WACE,OAAO0E,KAAK2Q,gB,gCAGd,sBAAI,2BAAY,C,IAAhB,WACE,OAAO3Q,KAAK2Q,eAAevb,O,gCAG7B,sBAAI,4BAAa,C,IAAjB,WACE,OAAO4K,KAAK4Q,gB,gCAGd,sBAAI,wBAAS,C,IAAb,WACE,OAAO5Q,KAAK6Q,Y,gCAGd,sBAAI,uBAAQ,C,IAAZ,WACE,OAAO7Q,KAAK6Q,WAAWzb,O,gCAGzB,YAAA0G,cAAA,SAAcV,GACRA,IAAiB4E,KAAK2Q,eAAevb,OAIzC4K,KAAK2Q,eAAe5P,KAAK3F,IAG3B,YAAAiB,gBAAA,SAAgB6U,GACVA,IAAYlR,KAAK4Q,eAAexb,OAIpC4K,KAAK4Q,eAAe7P,KAAKmQ,IAG3B,YAAAzW,OAAA,WACEuF,KAAK0Q,QAAQ1Q,OAEjB,EAvGA,CAAkDyQ,GAArC,EAAAnX,6BAAAA,EAyGb,kBAME,WAA6BoX,GAA7B,MACE,cAAO,K,OADoB,EAAAA,QAAAA,EAJZ,EAAAS,WAAa,IAAI,EAAApR,gBAA+B,MAEhD,EAAA8Q,WAAa,IAAI,EAAA9Q,gBAAiC,MAIjE,EAAK+Q,WAAY,IAAA7B,eAAc,CAAC,EAAKkC,aAAajR,MAChD,IAAA9J,MAAI,WAAM,SAAK2a,aAGjB,IAAA9B,eAAc,CAAC,EAAKkC,aAAarF,WAAU,SAAC,G,IAACsF,EAAD,OAAa,GAClD,EAAKL,QAKV,EAAKF,WAAW9P,KAAK,CACnBgB,KAAM,gBACNrF,SAAU0U,IANV,EAAKP,WAAW9P,KAAK,S,EAwD7B,OAtEiD,OAyBxC,EAAA+O,SAAP,SACEkB,EACAC,GAEA,IAAM7X,EAAO,IAAII,EAA4ByX,GAE7C,OADA7X,EAAK+D,YAAY6T,EAAKtU,UACftD,GAGT,YAAA4W,OAAA,WACE,MAAO,CACLjO,KAAM,gBACNrF,SAAUsD,KAAKmR,WAAW/b,QAI9B,sBAAI,uBAAQ,C,IAAZ,WACE,OAAO4K,KAAK8Q,W,gCAGd,sBAAI,sBAAO,C,IAAX,WAEE,IAAMM,EAAepR,KAAKmR,WAAW/b,MACrC,OAAuB,MAAhBgc,GAAwBA,GAAgB,G,gCAGjD,sBAAI,wBAAS,C,IAAb,WACE,OAAOpR,KAAK6Q,Y,gCAGd,sBAAI,uBAAQ,C,IAAZ,WACE,OAAO7Q,KAAK6Q,WAAWzb,O,gCAGzB,sBAAI,wBAAS,C,IAAb,WACE,OAAO4K,KAAKmR,Y,gCAGd,YAAAhU,YAAA,SAAYT,GACVsD,KAAKmR,WAAWpQ,KAAKrE,IAGvB,YAAAjC,OAAA,WACEuF,KAAK0Q,QAAQ1Q,OAEjB,EAtEA,CAAiDyQ,GAApC,EAAAjX,4BAAAA,EAwEb,kBAME,WAA6BkX,GAA7B,MACE,cAAO,K,OADoB,EAAAA,QAAAA,EAJZ,EAAAS,WAAa,IAAI,EAAApR,gBAA+B,MAEhD,EAAA8Q,WAAa,IAAI,EAAA9Q,gBAAiC,MAIjE,EAAK+Q,WAAY,IAAA7B,eAAc,CAAC,EAAKkC,aAAajR,MAChD,IAAA9J,MAAI,WAAM,SAAK2a,aAGjB,IAAA9B,eAAc,CAAC,EAAKkC,aAAarF,WAAU,SAAC,G,IAACsF,EAAD,OAAa,GAClD,EAAKL,QAKV,EAAKF,WAAW9P,KAAK,CACnBgB,KAAM,eACNrF,SAAU0U,IANV,EAAKP,WAAW9P,KAAK,S,EAwD7B,OAtEgD,OAyBvC,EAAA+O,SAAP,SACEkB,EACAC,GAEA,IAAM7X,EAAO,IAAIM,EAA2BuX,GAE5C,OADA7X,EAAK+D,YAAY6T,EAAKtU,UACftD,GAGT,YAAA4W,OAAA,WACE,MAAO,CACLjO,KAAM,eACNrF,SAAUsD,KAAKmR,WAAW/b,QAI9B,sBAAI,uBAAQ,C,IAAZ,WACE,OAAO4K,KAAK8Q,W,gCAGd,sBAAI,sBAAO,C,IAAX,WAEE,IAAMM,EAAepR,KAAKmR,WAAW/b,MACrC,OAAuB,MAAhBgc,GAAwBA,GAAgB,G,gCAGjD,sBAAI,wBAAS,C,IAAb,WACE,OAAOpR,KAAK6Q,Y,gCAGd,sBAAI,uBAAQ,C,IAAZ,WACE,OAAO7Q,KAAK6Q,WAAWzb,O,gCAGzB,sBAAI,wBAAS,C,IAAb,WACE,OAAO4K,KAAKmR,Y,gCAGd,YAAAhU,YAAA,SAAYT,GACVsD,KAAKmR,WAAWpQ,KAAKrE,IAGvB,YAAAjC,OAAA,WACEuF,KAAK0Q,QAAQ1Q,OAEjB,EAtEA,CAAgDyQ,GAAnC,EAAA/W,2BAAAA,G,s0CClUb,cACA,SAEA,UACA,UAMA,UAUA,UAYA,aACE,WACsCwM,GAAA,KAAAA,mBAAAA,EAkHxC,OA/GE,YAAAiJ,UAAA,SAAU5R,G,QACJ8T,EAAqB,CACvBjO,gBAAiB,GACjBC,cAAe,IAGLiO,KAAKC,M,IAEjB,IAAmB,QAAAhU,GAAK,8BAAE,CAArB,IAAMnE,EAAI,QACbiY,EAASrR,KAAKwR,UAAUpY,EAAMiY,I,iGAGhC,OAAOA,GAGD,YAAAG,UAAR,SAAkBpY,EAAgBiY,GAChC,OAAQjY,EAAK2I,MACX,IAAK,iBACH,OAAO/B,KAAKyR,mBAAmBrY,EAAMiY,GACvC,IAAK,eACH,OAAOrR,KAAK0R,iBAAiBtY,EAAMiY,GACrC,IAAK,gBACH,OAAOrR,KAAK2R,kBAAkBvY,EAAMiY,GACtC,QACE,MAAM,IAAIxN,MAAM,kCAA4BzK,EAAa2I,SAIvD,YAAA0P,mBAAR,SACErY,EACAiY,G,YAEQjW,EAA+BhC,EAAI,aAArBkC,EAAiBlC,EAAI,aAErCwY,EACsD,QAA1D,EAA0B,QAA1B,OAAAC,MAAKR,EAAOhO,sBAAc,SAAI,IAAAwO,MAAKR,EAAOjO,wBAAgB,QAAI,EAAAb,UAE1DlM,EAAa2J,KAAKkG,mBAAmBS,cAAcvL,GACzD,IAAK/E,EACH,MAAM,IAAIwN,MAAM,8BAAuBzI,IAGzC,IAAM0W,EAA+B,GACjCC,EAAmB,E,IACvB,IAAoB,QAAA1b,EAAWiB,MAAI,8BAAE,CAAhC,IAAME,EAAK,QACRkK,GAAS,IAAAsQ,eAAcxa,GAC7Bsa,EAAiBzd,KAAI,MAArByd,EAAgB,OAASpQ,IAAM,IAI/BqQ,IAAoB,IAAAE,wBAAuBvQ,I,iGAG7C,IAAMwQ,EACJ7b,EAAWsY,gBACXrT,GAAgB,EAAIjF,EAAWsY,iBAWjC,OA+CJ,SACEjN,EACAC,EACA0P,GAEA,GAAc,MAAV1P,EACF,MAAM,IAAIkC,MAAM,kBAGlB,OAAsB,IAAlBnC,EAAOI,OACFuP,EAGFpK,OAAOwG,OAAO,GAAI4D,EAAQ,CAC/BhO,cAAegO,EAAOhO,cAAcgD,OAClC3E,EAAOtL,KAAI,SAAC6M,GAAU,OACpBvL,EAAGuL,EAAMvL,EACTC,EAAGsL,EAAMtL,EACTgK,OAAM,SAjEHwQ,CATD,GAAgB,IAAAC,0BACpBN,EACAI,EAAcH,GACf,GAHiB,GAKsB3b,KAAI,SAAC6M,GAC3C,WAAAsB,UAASqN,EAAa3O,MAG4B7J,EAAMiY,IAGpD,YAAAK,iBAAR,SACEtY,EACAiY,G,MAEMgB,EACqD,QAAzD,EAAAhB,EAAOjO,gBAAgBiO,EAAOjO,gBAAgBtB,OAAS,UAAE,QAAI,EAAAS,UAC/D,IAAI,IAAA+P,aAAYD,EAAc,EAAA9P,WAC5B,OAAO8O,EAGH,IAAA3U,EAAatD,EAAI,SAEjBmZ,GAAmB,IAAAhI,eAAc8H,EAAc,EAAA9P,WAWrD,OAVI7F,EAAW6V,IACb7V,EAAW6V,GAsDjB,SACE7Q,EACAC,EACA0P,G,MAEA,GAAc,MAAV1P,EACF,MAAM,IAAIkC,MAAM,kBAGlB,GAAsB,IAAlBnC,EAAOI,OACT,OAAOuP,EAGT,IAAMmB,GAAa,IAAAlO,gBACjB,IAAAuN,MAAKnQ,GACuB,QAA5B,OAAAmQ,MAAKR,EAAOjO,wBAAgB,QAAI,EAAAb,WAGlC,OAAO0E,OAAOwG,OAAO,GAAI4D,EAAQ,CAC/BjO,gBAAiBiO,EAAOjO,gBAAgBiD,OACtC3E,EAAOtL,KAAI,SAAC6M,GAAU,OACpBvL,EAAGuL,EAAMvL,EACTC,EAAGsL,EAAMtL,EACTgK,OAAM,OAGV0B,cAAegO,EAAOhO,cAAcjN,KAAI,SAAC6M,GAAU,OACjDvL,EAAGuL,EAAMvL,EAAI8a,EAAW9a,EACxBC,EAAGsL,EAAMtL,EAAI6a,EAAW7a,EACxBgK,OAAQsB,EAAMtB,aA1ET8Q,EANW,IAAAC,4BAChBL,GACA,IAAA5H,iBAAe,IAAAnG,eAAc,EAAA/B,UAAW8P,IACxC3V,GAGiCtD,EAAMiY,IAGnC,YAAAM,kBAAR,SACEvY,EACAiY,GAEQ,IAAA3U,EAAatD,EAAI,SAEnB,KAAqC,IAAAgZ,0BACzCf,EAAOhO,cACP3G,GACD,GAHMiW,EAAW,KAAEC,EAAmB,KAKvC,MAAO,CACLxP,gBAAiBiO,EAAOjO,gBAAgBiD,OAAOsM,GAC/CtP,cAAeuP,IAjHD,IAFnB,IAAApE,eACA,IAAAC,aAGI,SAAAvN,QAAO,EAAAtL,sBAFC4a,GAAb,GAAa,EAAAA,QAAAA,G,gEChCb,aAEA,UACA,UAEA,UAAe,IAAI,EAAA5B,iBAAgB,SAAC1G,GAClCA,EAAK,EAAA/G,aACL+G,EAAK,EAAAsI,a,uFC2BM,EAAA/Q,gBAAwCwH,OAAOyD,OAAO,CACjEtH,gBAAiB,GACjBC,cAAe,M,yJCpCjB,aACA,UACA,aAEMjL,GAAQ,IAAAya,aAAY,CACxBC,QAAS,CACPC,KAAM,WAYV,UAJyB,SAAC,G,IAAEjZ,EAAQ,WAA8B,OAChE,wBAAC,EAAAkZ,cAAa,CAAC5a,MAAOA,GAAQ0B,K,+nBCfhC,uBAA+BmT,EAAYgG,GAMzC,IALA,IAAMtF,EAAI,EAAH,KAAOV,IAAK,GAEfoE,EAAgB,GAChBvS,EAAc,GAEX6O,EAAE7L,OAAS,GAChBhD,EAAOzK,KAAKsZ,EAAEuF,OACVpU,EAAOgD,SAAWmR,IACpB5B,EAAOhd,KAAKyK,GACZA,EAAS,IAQb,OAJIA,EAAOgD,OAAS,GAClBuP,EAAOhd,KAAKyK,GAGPuS,GAGT,sBAA8BpE,EAAYkG,EAAWC,GACnD,QADmD,IAAAA,IAAAA,GAAA,GAC9B,IAAjBnG,EAAMnL,OACR,OAAOmL,EAIT,IADA,IAAMU,EAAI,GACDlQ,EAAI,EAAGA,EAAIwP,EAAMnL,OAAQrE,GAAK0V,EACrCxF,EAAEtZ,KAAK4Y,EAAMxP,IAKf,OAHI2V,IAAanG,EAAMnL,OAAS,GAAKqR,GAAM,GACzCxF,EAAEtZ,KAAK4Y,EAAMA,EAAMnL,OAAS,IAEvB6L,GAGT,qBAA6BjW,GAC3B,OAAY,MAALA,K","sources":["webpack://potioncraft-plotter/./src/style.css","webpack://potioncraft-plotter/./src/style.css?7163","webpack://potioncraft-plotter/./src/components/App.tsx","webpack://potioncraft-plotter/./src/components/IngredientSelector.tsx","webpack://potioncraft-plotter/./src/components/PlotBuilderItemsList.tsx","webpack://potioncraft-plotter/./src/components/PlotEditor/PlotEditor.tsx","webpack://potioncraft-plotter/./src/components/PlotEditor/PlotEditorViewModel.ts","webpack://potioncraft-plotter/./src/components/PlotEditor/index.ts","webpack://potioncraft-plotter/./src/components/Plot/Plot.tsx","webpack://potioncraft-plotter/./src/components/Plot/PlotViewModel.ts","webpack://potioncraft-plotter/./src/components/Plot/components/PanZoomHandler.tsx","webpack://potioncraft-plotter/./src/components/Plot/components/PlotDetails.tsx","webpack://potioncraft-plotter/./src/components/Plot/components/StepDetails.tsx","webpack://potioncraft-plotter/./src/components/Plot/index.ts","webpack://potioncraft-plotter/./src/container.tsx","webpack://potioncraft-plotter/./src/curves.ts","webpack://potioncraft-plotter/./src/game-settings.ts","webpack://potioncraft-plotter/./src/hooks/component-bounds.ts","webpack://potioncraft-plotter/./src/hooks/native-event.ts","webpack://potioncraft-plotter/./src/hooks/observe.ts","webpack://potioncraft-plotter/./src/index.tsx","webpack://potioncraft-plotter/./src/modifier-keys.ts","webpack://potioncraft-plotter/./src/point-array.ts","webpack://potioncraft-plotter/./src/points.ts","webpack://potioncraft-plotter/./src/runtime-env.ts","webpack://potioncraft-plotter/./src/services/ingredients/IngredientRegistry.ts","webpack://potioncraft-plotter/./src/services/ingredients/ingredients.ts","webpack://potioncraft-plotter/./src/services/ingredients/module.ts","webpack://potioncraft-plotter/./src/services/ingredients/types.ts","webpack://potioncraft-plotter/./src/services/module.ts","webpack://potioncraft-plotter/./src/services/plotter/PlotBuilder.ts","webpack://potioncraft-plotter/./src/services/plotter/Plotter.ts","webpack://potioncraft-plotter/./src/services/plotter/module.ts","webpack://potioncraft-plotter/./src/services/plotter/types.ts","webpack://potioncraft-plotter/./src/theme.tsx","webpack://potioncraft-plotter/./src/utils.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\r\\nThis should be kept minimal and only provide globals\\r\\nor non-react component styles.\\r\\n*/\\r\\n\\r\\nhtml, body, #root {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  margin: 0;\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;;;CAGC;;AAED;EACE,WAAW;EACX,YAAY;EACZ,SAAS;AACX\",\"sourcesContent\":[\"/*\\r\\nThis should be kept minimal and only provide globals\\r\\nor non-react component styles.\\r\\n*/\\r\\n\\r\\nhtml, body, #root {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  margin: 0;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import * as React from \"react\";\r\n\r\nimport PlotEditor from \"./PlotEditor\";\r\n\r\nconst App: React.FC = () => {\r\n  return <PlotEditor />;\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  MenuItem,\r\n  Select,\r\n  SelectProps,\r\n  SelectChangeEvent,\r\n  ListItemText,\r\n  Tooltip,\r\n  styled,\r\n} from \"@mui/material\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\n\r\nimport {\r\n  IngredientDescriptor,\r\n  IngredientId,\r\n} from \"@/services/ingredients/types\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\nimport { MAX_INGREDIENT_EXTENT, POTION_RADIUS } from \"@/game-settings\";\r\n\r\nexport interface IngredientSelectorProps\r\n  extends Omit<SelectProps<IngredientId | \"\">, \"value\" | \"onChange\"> {\r\n  value: IngredientId | null;\r\n  allowEmpty?: boolean;\r\n  onChange(value: IngredientId | null): void;\r\n  onMouseOverItem?(value: IngredientId | null): void;\r\n  onMouseOutItem?(): void;\r\n}\r\n\r\nconst StyledTooltip = styled(Tooltip)({\r\n  tooltipPlacementLeft: {\r\n    margin: \"10px 0\",\r\n  },\r\n});\r\n\r\nconst IngredientSelector = ({\r\n  value,\r\n  onChange,\r\n  allowEmpty = false,\r\n  onMouseOverItem,\r\n  onMouseOutItem,\r\n  ...props\r\n}: IngredientSelectorProps) => {\r\n  const registry = useDIDependency(IngredientRegistry);\r\n\r\n  const onSelectChange = React.useCallback(\r\n    (e: SelectChangeEvent<IngredientId | \"\">) => {\r\n      const value = e.target.value;\r\n      if (value === \"\") {\r\n        onChange(null);\r\n      } else {\r\n        onChange(value as any);\r\n      }\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <Select<IngredientId | \"\">\r\n      {...props}\r\n      value={value ?? \"\"}\r\n      onChange={onSelectChange}\r\n    >\r\n      {allowEmpty && <MenuItem value=\"\"></MenuItem>}\r\n      {registry.getIngredients().map((ingredient) => (\r\n        <MenuItem\r\n          key={ingredient.id}\r\n          value={ingredient.id}\r\n          onMouseOver={\r\n            onMouseOverItem ? () => onMouseOverItem(ingredient.id) : undefined\r\n          }\r\n          onMouseOut={onMouseOutItem}\r\n        >\r\n          <StyledTooltip\r\n            placement=\"left\"\r\n            title={\r\n              <svg\r\n                width=\"100px\"\r\n                height=\"100px\"\r\n                viewBox={`-${MAX_INGREDIENT_EXTENT} -${MAX_INGREDIENT_EXTENT} ${\r\n                  MAX_INGREDIENT_EXTENT * 2\r\n                } ${MAX_INGREDIENT_EXTENT * 2}`}\r\n                transform=\"scale(1, -1)\"\r\n              >\r\n                <circle cx={0} cy={0} r={POTION_RADIUS} fill=\"blue\" />\r\n                <path\r\n                  d={ingredient.path.reduce(\r\n                    (path, curve) =>\r\n                      path +\r\n                      `M ${curve.start.x} ${curve.start.y} C ${curve.p1.x},${curve.p1.y} ${curve.p2.x},${curve.p2.y} ${curve.end.x},${curve.end.y}`,\r\n                    \"M 0 0 \"\r\n                  )}\r\n                  stroke=\"black\"\r\n                  strokeWidth={0.2}\r\n                  fill=\"none\"\r\n                />\r\n              </svg>\r\n            }\r\n          >\r\n            <ListItemText>{ingredient.name}</ListItemText>\r\n          </StyledTooltip>\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default IngredientSelector;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  styled,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Slider,\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { Add as AddIcon, Delete as DeleteIcon } from \"@mui/icons-material\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport {\r\n  AddIngredientPlotBuilderItem,\r\n  PlotBuilder,\r\n  PlotBuilderItem,\r\n  PourSolventPlotBuilderItem,\r\n  StirCauldronPlotBuilderItem,\r\n} from \"@/services/plotter/PlotBuilder\";\r\nimport { IngredientId } from \"@/services/ingredients/types\";\r\n\r\nimport IngredientSelector from \"./IngredientSelector\";\r\n\r\nexport interface PlotBuilderItemsListProps {\r\n  className?: string;\r\n  builder: PlotBuilder;\r\n  highlightItem?: PlotBuilderItem | null;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  overflow: \"auto\",\r\n  boxSixing: \"border-box\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  \"& .list\": {\r\n    listStyle: \"none\",\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  \"& .list-item\": {\r\n    position: \"relative\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  \"& .list-item .delete-button\": {\r\n    position: \"absolute\",\r\n    top: \"5px\",\r\n    right: \"15px\",\r\n  },\r\n  \"& .buttons\": {\r\n    alignSelf: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst PlotBuilderItemsList = ({\r\n  className,\r\n  builder,\r\n  highlightItem,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotBuilderItemsListProps) => {\r\n  const items = useObservation(builder.items$) ?? [];\r\n  return (\r\n    <Root className={className}>\r\n      <ul className=\"list\">\r\n        {items.map((item, i) => (\r\n          <PlotListItem\r\n            key={i}\r\n            item={item}\r\n            highlight={item === highlightItem}\r\n            onMouseOver={onMouseOver}\r\n            onMouseOut={onMouseOut}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <div className=\"buttons\">\r\n        <Button color=\"primary\" onClick={() => builder.addIngredient()}>\r\n          <AddIcon /> Ingredient\r\n        </Button>\r\n        <Button color=\"primary\" onClick={() => builder.addStirCauldron()}>\r\n          <AddIcon /> Stir Cauldron\r\n        </Button>\r\n        <Button color=\"primary\" onClick={() => builder.addPourSolvent()}>\r\n          <AddIcon /> Pour Solvent\r\n        </Button>\r\n      </div>\r\n    </Root>\r\n  );\r\n};\r\n\r\ninterface PlotListItemProps {\r\n  item: PlotBuilderItem;\r\n  highlight?: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst PlotListItem = ({\r\n  item,\r\n  highlight = false,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotListItemProps) => {\r\n  if (item instanceof AddIngredientPlotBuilderItem) {\r\n    return (\r\n      <AddIngredientPlotListItem\r\n        item={item}\r\n        highlight={highlight}\r\n        onMouseOver={onMouseOver}\r\n        onMouseOut={onMouseOut}\r\n      />\r\n    );\r\n  } else if (item instanceof StirCauldronPlotBuilderItem) {\r\n    return (\r\n      <StirCauldronPlotListItem\r\n        item={item}\r\n        highlight={highlight}\r\n        onMouseOver={onMouseOver}\r\n        onMouseOut={onMouseOut}\r\n      />\r\n    );\r\n  } else if (item instanceof PourSolventPlotBuilderItem) {\r\n    return (\r\n      <PourSolventPlotListItem\r\n        item={item}\r\n        highlight={highlight}\r\n        onMouseOver={onMouseOver}\r\n        onMouseOut={onMouseOut}\r\n      />\r\n    );\r\n  }\r\n  return <div>Unknown PlotItem {item.constructor.name}</div>;\r\n};\r\n\r\ninterface PlotListItemCardProps {\r\n  item: PlotBuilderItem;\r\n  highlight: boolean;\r\n  children: React.ReactNode;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\n\r\nconst PlotListItemCard = ({\r\n  item,\r\n  highlight,\r\n  children,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotListItemCardProps) => {\r\n  const valid = useObservation(item.isValid$) ?? false;\r\n  return (\r\n    <Card\r\n      className=\"list-item\"\r\n      style={{\r\n        backgroundColor:\r\n          (!valid && \"salmon\") || (highlight && \"lightblue\") || undefined,\r\n      }}\r\n      onMouseOver={() => onMouseOver(item)}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <IconButton\r\n        size=\"small\"\r\n        className=\"delete-button\"\r\n        onClick={() => item.delete()}\r\n      >\r\n        <DeleteIcon />\r\n      </IconButton>\r\n      <CardContent>{children}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\ninterface AddIngredientPlotListItemProps {\r\n  item: AddIngredientPlotBuilderItem;\r\n  highlight: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst AddIngredientPlotListItem = ({\r\n  item,\r\n  highlight,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: AddIngredientPlotListItemProps) => {\r\n  const savedIngredientRef = React.useRef<IngredientId | null>(null);\r\n\r\n  // Need both state (for rerender on change) and ref (to check it in a callback)\r\n  const [isPreviewing, setIsPreviewing] = React.useState<boolean>(false);\r\n  const isPreviewingRef = React.useRef(false);\r\n\r\n  const [isChangingGrind, setIsChangingGrind] = React.useState(false);\r\n  const ingredientId = useObservation(item.ingredientId$) ?? null;\r\n  const grindPercent = useObservation(item.grindPercent$) ?? 0;\r\n\r\n  // We change the ingredientId during mouse over for live feedback, but this changes the ingredient id we wish to display.\r\n  // We need to pin the previously selected id so that IngredientSelector works properly during the selection process.\r\n  const displayIngredientId = isPreviewing\r\n    ? savedIngredientRef.current\r\n    : ingredientId;\r\n  return (\r\n    <PlotListItemCard\r\n      item={item}\r\n      highlight={highlight}\r\n      onMouseOver={isChangingGrind ? () => {} : onMouseOver}\r\n      onMouseOut={isChangingGrind ? () => {} : onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Ingredient</Typography>\r\n      </div>\r\n      <IngredientSelector\r\n        fullWidth\r\n        value={displayIngredientId}\r\n        allowEmpty={displayIngredientId == null}\r\n        // Store the last ingredient when we open, so we can return to it after closing without making a selection.\r\n        onOpen={() => {\r\n          savedIngredientRef.current = item.ingredientId;\r\n          setIsPreviewing(true);\r\n          isPreviewingRef.current = true;\r\n        }}\r\n        // Change the ingredient id with the mouse for a live preview.\r\n        onMouseOverItem={(id) => {\r\n          if (!isPreviewing) {\r\n            return;\r\n          }\r\n          item.setIngredient(id);\r\n        }}\r\n        // Change our saved ingredient when the input is committed.  We will restore it when the input closes after the change.\r\n        onChange={(id) => {\r\n          setIsPreviewing(false);\r\n          isPreviewingRef.current = false;\r\n          item.setIngredient(id);\r\n        }}\r\n        onClose={() => {\r\n          if (isPreviewingRef.current) {\r\n            item.setIngredient(savedIngredientRef.current);\r\n            setIsPreviewing(false);\r\n            isPreviewingRef.current = false;\r\n          }\r\n          savedIngredientRef.current = null;\r\n        }}\r\n      />\r\n      <Grid paddingTop={1}>\r\n        <Typography id=\"grind-label\">Grind Percent</Typography>\r\n        <Slider\r\n          value={grindPercent}\r\n          onChange={(_, value) => {\r\n            React.startTransition(() => {\r\n              item.setGrindPercent(value as number);\r\n            });\r\n            setIsChangingGrind(true);\r\n          }}\r\n          onChangeCommitted={(_, value) => {\r\n            item.setGrindPercent(value as number);\r\n            setIsChangingGrind(false);\r\n          }}\r\n          aria-labelledby=\"grind-label\"\r\n          min={0}\r\n          max={1}\r\n          step={0.001}\r\n        />\r\n      </Grid>\r\n    </PlotListItemCard>\r\n  );\r\n};\r\n\r\ninterface StirCauldronPlotListItemProps {\r\n  item: StirCauldronPlotBuilderItem;\r\n  highlight: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\n\r\nconst StirCauldronPlotListItem = ({\r\n  item,\r\n  highlight,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: StirCauldronPlotListItemProps) => {\r\n  const distance = useObservation(item.distance$) ?? 0;\r\n  const [inputDistance, setInputDistance] = React.useState<string | null>(null);\r\n  return (\r\n    <PlotListItemCard\r\n      item={item}\r\n      highlight={highlight}\r\n      onMouseOver={onMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Stir Cauldron</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"Distance\"\r\n        value={inputDistance ?? distance ?? \"\"}\r\n        onChange={(e) => {\r\n          let asNumber: number | null = Number(e.target.value);\r\n          if (isNaN(asNumber)) {\r\n            asNumber = null;\r\n          }\r\n\r\n          setInputDistance(e.target.value);\r\n          item.setDistance(asNumber);\r\n        }}\r\n        onBlur={() => setInputDistance(null)}\r\n      />\r\n    </PlotListItemCard>\r\n  );\r\n};\r\n\r\ninterface PourSolventPlotListItemProps {\r\n  item: PourSolventPlotBuilderItem;\r\n  highlight: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst PourSolventPlotListItem = ({\r\n  item,\r\n  highlight,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PourSolventPlotListItemProps) => {\r\n  const distance = useObservation(item.distance$);\r\n  const [inputDistance, setInputDistance] = React.useState<string | null>(null);\r\n  return (\r\n    <PlotListItemCard\r\n      item={item}\r\n      highlight={highlight}\r\n      onMouseOver={onMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Pour Solvent</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"Distance\"\r\n        value={inputDistance ?? distance ?? \"\"}\r\n        onChange={(e) => {\r\n          let asNumber: number | null = Number(e.target.value);\r\n          if (isNaN(asNumber)) {\r\n            asNumber = null;\r\n          }\r\n\r\n          setInputDistance(e.target.value);\r\n          item.setDistance(asNumber);\r\n        }}\r\n        onBlur={() => setInputDistance(null)}\r\n      />\r\n    </PlotListItemCard>\r\n  );\r\n};\r\n\r\nexport default PlotBuilderItemsList;\r\n","import React from \"react\";\r\nimport { throttleTime } from \"rxjs\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { useDICreate } from \"@/container\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { ingredientId } from \"@/services/ingredients/types\";\r\n\r\nimport Plot from \"../Plot\";\r\nimport PlotBuilderItemsList from \"../PlotBuilderItemsList\";\r\n\r\nimport { PlotEditorViewModel } from \"./PlotEditorViewModel\";\r\nimport { EmptyPlotResult } from \"@/services/plotter/types\";\r\nimport { useQueryString } from \"@/hooks/query-string\";\r\n\r\nconst Root = styled(\"div\")({\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  \"& .plot\": {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .divider\": {\r\n    width: \"2px\",\r\n    height: \"100%\",\r\n    background: \"grey\",\r\n  },\r\n  \"& .plot-items\": {\r\n    width: \"400px\",\r\n    height: \"100%\",\r\n  },\r\n});\r\n\r\nconst PlotEditor = () => {\r\n  const viewModel = useDICreate(PlotEditorViewModel);\r\n  const builder = viewModel.builder;\r\n\r\n  const plotObserved = useObservation(builder.plot$) ?? null;\r\n  const plot = React.useDeferredValue(plotObserved);\r\n  const highlightItem = useObservation(viewModel.mouseOverBuilderItem$) ?? null;\r\n  const outputShareString = useObservation(viewModel.shareString$) ?? null;\r\n\r\n  React.useEffect(() => {\r\n    const query = new URLSearchParams(window.location.search);\r\n    if (query.has(\"data\")) {\r\n      const data = query.get(\"data\")!;\r\n      builder.loadFromShareString(data);\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (!outputShareString) {\r\n      return;\r\n    }\r\n    const query = new URLSearchParams(window.location.search);\r\n    query.set(\"data\", outputShareString);\r\n    window.history.replaceState({}, \"\", `?${query.toString()}`);\r\n  }, [outputShareString]);\r\n\r\n  return (\r\n    <Root>\r\n      <Plot\r\n        className=\"plot\"\r\n        plot={plot ?? EmptyPlotResult}\r\n        viewModel={viewModel}\r\n      />\r\n      <div className=\"divider\" />\r\n      <PlotBuilderItemsList\r\n        className=\"plot-items\"\r\n        builder={builder}\r\n        highlightItem={highlightItem}\r\n        onMouseOver={(item) => viewModel.onMouseOverBuilderItem(item)}\r\n        onMouseOut={() => viewModel.onMouseOverBuilderItem(null)}\r\n      />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PlotEditor;\r\n","import { BehaviorSubject, map, Observable } from \"rxjs\";\r\n\r\nimport { inject } from \"microinject\";\r\n\r\nimport { Point } from \"@/points\";\r\n\r\nimport { PlotBuilder, PlotBuilderItem } from \"@/services/plotter/PlotBuilder\";\r\nimport { PlotItem } from \"@/services/plotter/types\";\r\n\r\nimport { IPlotViewModel, PlotViewModel } from \"../Plot/PlotViewModel\";\r\n\r\nexport class PlotEditorViewModel implements IPlotViewModel {\r\n  private readonly _plotViewModel = new PlotViewModel();\r\n  private readonly _mouseOverBuilderItem$ =\r\n    new BehaviorSubject<PlotBuilderItem | null>(null);\r\n  private readonly _shareString$: Observable<string>;\r\n\r\n  constructor(@inject(PlotBuilder) private readonly _builder: PlotBuilder) {\r\n    this._shareString$ = this._builder.plot$.pipe(\r\n      map((x) => _builder.getShareString())\r\n    );\r\n  }\r\n\r\n  get builder(): PlotBuilder {\r\n    return this._builder;\r\n  }\r\n\r\n  get shareString$(): Observable<string> {\r\n    return this._shareString$;\r\n  }\r\n\r\n  get viewOffset$(): Observable<Point> {\r\n    return this._plotViewModel.viewOffset$;\r\n  }\r\n  get viewScale$(): Observable<number> {\r\n    return this._plotViewModel.viewScale$;\r\n  }\r\n\r\n  get mouseOverItem$(): Observable<PlotItem | null> {\r\n    return this._plotViewModel.mouseOverItem$;\r\n  }\r\n\r\n  get mouseOverBuilderItem$(): Observable<PlotBuilderItem | null> {\r\n    return this._mouseOverBuilderItem$;\r\n  }\r\n\r\n  viewportResize(width: number, height: number): void {\r\n    this._plotViewModel.viewportResize(width, height);\r\n  }\r\n\r\n  zoom(delta: number, on: Point | null | undefined): void {\r\n    this._plotViewModel.zoom(delta, on);\r\n  }\r\n\r\n  pan(dx: number, dy: number): void {\r\n    this._plotViewModel.pan(dx, dy);\r\n  }\r\n\r\n  onMouseOverPlotItem(item: PlotItem | null): void {\r\n    this._plotViewModel.onMouseOverPlotItem(item);\r\n    this._mouseOverBuilderItem$.next(\r\n      item ? this._builder.builderItemFor(item) : null\r\n    );\r\n  }\r\n\r\n  onMouseOverBuilderItem(item: PlotBuilderItem | null): void {\r\n    this._mouseOverBuilderItem$.next(item);\r\n    this._plotViewModel.onMouseOverPlotItem(item ? item.plotItem : null);\r\n  }\r\n}\r\n","import PlotEditor from \"./PlotEditor\";\r\nexport default PlotEditor;\r\n","import React from \"react\";\r\nimport Color from \"color\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { useDICreate } from \"@/container\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\nimport { PointZero } from \"@/points\";\r\nimport { MAP_EXTENT_RADIUS, POTION_RADIUS } from \"@/game-settings\";\r\nimport { PointArray } from \"@/point-array\";\r\nimport { keepEveryK } from \"@/utils\";\r\n\r\nimport { PlotItem, PlotPoint, PlotResult } from \"@/services/plotter/types\";\r\nimport {\r\n  IPlotViewModel,\r\n  PlotViewModel,\r\n  PlotViewModelContext,\r\n  usePlotViewModel,\r\n} from \"./PlotViewModel\";\r\n\r\nimport PanZoomHandler from \"./components/PanZoomHandler\";\r\nimport PlotDetails from \"./components/PlotDetails\";\r\nimport StepDetails from \"./components/StepDetails\";\r\n\r\nexport interface PlotProps {\r\n  className?: string;\r\n  plot: PlotResult;\r\n  viewModel?: IPlotViewModel;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  backgroundColor: \"#DABE99\",\r\n  overflow: \"auto\",\r\n  position: \"relative\",\r\n  \"& .plot-details\": {\r\n    position: \"absolute\",\r\n    top: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  \"& .inspect-source\": {\r\n    position: \"absolute\",\r\n    top: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n  },\r\n  \"& .plot-svg\": {\r\n    display: \"block\",\r\n  },\r\n}));\r\n\r\nconst Plot = ({ className, plot, viewModel: externalViewModel }: PlotProps) => {\r\n  const internalViewModel = useDICreate(PlotViewModel);\r\n  const viewModel = externalViewModel ?? internalViewModel;\r\n\r\n  const offset = useObservation(viewModel.viewOffset$) ?? PointZero;\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n  const inspectSource = useObservation(viewModel.mouseOverItem$) ?? null;\r\n\r\n  const onLineMouseOver = React.useCallback(\r\n    (line: PlotLine) => {\r\n      viewModel.onMouseOverPlotItem(line.source);\r\n    },\r\n    [viewModel]\r\n  );\r\n\r\n  const [committedLines, pendingLines] = resultToPlotLines(\r\n    plot.committedPoints,\r\n    plot.pendingPoints\r\n  );\r\n\r\n  let left = -MAP_EXTENT_RADIUS + offset.x;\r\n  let top = -MAP_EXTENT_RADIUS + offset.y;\r\n  let width = MAP_EXTENT_RADIUS * 2 * (1 / scale);\r\n  let height = MAP_EXTENT_RADIUS * 2 * (1 / scale);\r\n\r\n  return (\r\n    <Root className={className}>\r\n      <PlotViewModelContext.Provider value={viewModel}>\r\n        <PanZoomHandler>\r\n          <svg\r\n            className=\"plot-svg\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            viewBox={`${left} ${top} ${width} ${height}`}\r\n            transform=\"scale(1, -1)\"\r\n          >\r\n            <rect\r\n              x={-60}\r\n              y={-60}\r\n              width={120}\r\n              height={120}\r\n              stroke=\"red\"\r\n              fill=\"none\"\r\n              strokeWidth={0.2 / scale}\r\n            />\r\n            <circle cx={0} cy={0} r={POTION_RADIUS} fill=\"blue\" />\r\n            {committedLines.map((line, i) => (\r\n              <PlotLine\r\n                key={i}\r\n                line={line}\r\n                pending={false}\r\n                highlight={line.source === inspectSource}\r\n                onMouseOver={onLineMouseOver}\r\n                onMouseOut={() => viewModel.onMouseOverPlotItem(null)}\r\n              />\r\n            ))}\r\n            {pendingLines.map((line, i) => (\r\n              <PlotLine\r\n                key={i}\r\n                line={line}\r\n                pending={true}\r\n                highlight={line.source === inspectSource}\r\n                onMouseOver={onLineMouseOver}\r\n                onMouseOut={() => viewModel.onMouseOverPlotItem(null)}\r\n              />\r\n            ))}\r\n          </svg>\r\n          {inspectSource && (\r\n            <StepDetails className=\"inspect-source\" step={inspectSource} />\r\n          )}\r\n          <PlotDetails className=\"plot-details\" plot={plot} />\r\n        </PanZoomHandler>\r\n      </PlotViewModelContext.Provider>\r\n    </Root>\r\n  );\r\n};\r\n\r\ninterface PlotLineProps {\r\n  line: PlotLine;\r\n  pending: boolean;\r\n  highlight: boolean;\r\n  onMouseOver(line: PlotLine): void;\r\n  onMouseOut(): void;\r\n}\r\nconst PlotLine = ({\r\n  line,\r\n  pending,\r\n  highlight,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotLineProps) => {\r\n  const viewModel = usePlotViewModel();\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n  const { points, source, evenOdd } = line;\r\n\r\n  const onPathMouseOver = React.useCallback(() => {\r\n    onMouseOver(line);\r\n  }, [line, onMouseOver]);\r\n\r\n  if (points.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  let color = \"black\";\r\n  switch (source.type) {\r\n    case \"add-ingredient\":\r\n      color = evenOdd ? \"red\" : \"green\";\r\n      break;\r\n    case \"pour-solvent\":\r\n      color = \"blue\";\r\n      break;\r\n  }\r\n\r\n  if (pending) {\r\n    color = Color(color).lighten(0.4).hex();\r\n  }\r\n\r\n  const path = line.points.reduce(\r\n    (str, p) => `${str} L${p.x},${p.y}`,\r\n    `M ${points[0].x} ${points[0].y} `\r\n  );\r\n\r\n  return (\r\n    <path\r\n      d={path}\r\n      stroke={color}\r\n      strokeWidth={(highlight ? 0.8 : 0.4) / scale}\r\n      fill=\"none\"\r\n      onMouseOver={onPathMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    />\r\n  );\r\n};\r\n\r\ninterface PlotLine {\r\n  points: PointArray;\r\n  source: PlotItem;\r\n  evenOdd: boolean;\r\n}\r\n\r\nfunction resultToPlotLines(\r\n  committed: PlotPoint[],\r\n  pending: PlotPoint[],\r\n  trim = 4\r\n) {\r\n  let currentLine: PlotLine | null = null;\r\n  let sourceCounter = 0;\r\n\r\n  const commitedLines: PlotLine[] = [];\r\n  const pendingLines: PlotLine[] = [];\r\n\r\n  let lastSource: PlotItem | null = null;\r\n\r\n  for (const point of committed) {\r\n    if (currentLine == null || currentLine.source != point.source) {\r\n      if (lastSource == null || lastSource !== point.source) {\r\n        sourceCounter++;\r\n        lastSource = point.source;\r\n      }\r\n      currentLine = {\r\n        points: [],\r\n        source: point.source,\r\n        evenOdd: sourceCounter % 2 === 1,\r\n      };\r\n      commitedLines.push(currentLine);\r\n    }\r\n\r\n    currentLine.points.push(point);\r\n  }\r\n\r\n  currentLine = null;\r\n\r\n  for (const point of pending) {\r\n    if (currentLine == null || currentLine.source != point.source) {\r\n      if (lastSource == null || lastSource !== point.source) {\r\n        sourceCounter++;\r\n        lastSource = point.source;\r\n      }\r\n      currentLine = {\r\n        points: [],\r\n        source: point.source,\r\n        evenOdd: sourceCounter % 2 === 1,\r\n      };\r\n      pendingLines.push(currentLine);\r\n    }\r\n\r\n    currentLine.points.push(point);\r\n  }\r\n\r\n  if (trim > 1) {\r\n    for (const line of commitedLines) {\r\n      line.points = keepEveryK(line.points, trim, true);\r\n    }\r\n    for (const line of pendingLines) {\r\n      line.points = keepEveryK(line.points, trim, true);\r\n    }\r\n  }\r\n\r\n  return [commitedLines, pendingLines];\r\n}\r\n\r\nexport default Plot;\r\n","import React from \"react\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\n\r\nimport {\r\n  Point,\r\n  pointAdd,\r\n  pointScale,\r\n  pointSubtract,\r\n  PointZero,\r\n} from \"@/points\";\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\nimport { PlotItem } from \"@/services/plotter/types\";\r\n\r\nexport const PlotViewModelContext = React.createContext<IPlotViewModel | null>(\r\n  null\r\n);\r\n\r\nexport function usePlotViewModel(): IPlotViewModel {\r\n  const plotViewModel = React.useContext(PlotViewModelContext);\r\n  if (!plotViewModel) {\r\n    throw new Error(\"PlotViewModelContext not found\");\r\n  }\r\n  return plotViewModel;\r\n}\r\n\r\nexport interface IPlotViewModel {\r\n  readonly viewOffset$: Observable<Point>;\r\n  readonly viewScale$: Observable<number>;\r\n  readonly mouseOverItem$: Observable<PlotItem | null>;\r\n\r\n  viewportResize(width: number, height: number): void;\r\n  zoom(delta: number, on: Point | null | undefined): void;\r\n  pan(dx: number, dy: number, applyZoom?: boolean): void;\r\n\r\n  onMouseOverPlotItem(item: PlotItem | null): void;\r\n}\r\n\r\nexport class PlotViewModel implements IPlotViewModel {\r\n  private readonly _viewOffset$ = new BehaviorSubject<Point>(PointZero);\r\n  private readonly _viewScale$ = new BehaviorSubject<number>(1);\r\n  private readonly _inspectSource = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  private _viewportWidth: number = 0;\r\n  private _viewportHeight: number = 0;\r\n\r\n  get viewOffset$(): Observable<Point> {\r\n    return this._viewOffset$;\r\n  }\r\n\r\n  get viewScale$(): Observable<number> {\r\n    return this._viewScale$;\r\n  }\r\n\r\n  get mouseOverItem$(): Observable<PlotItem | null> {\r\n    return this._inspectSource;\r\n  }\r\n\r\n  viewportResize(width: number, height: number) {\r\n    this._viewportWidth = width;\r\n    this._viewportHeight = height;\r\n  }\r\n\r\n  zoom(delta: number, on: Point | null = null) {\r\n    const prevWorld = on ? this._clientToWorld(on) : PointZero;\r\n    const pzoom = this._viewScale$.value;\r\n    const zoom = pzoom * delta;\r\n    this._viewScale$.next(zoom);\r\n    if (on) {\r\n      const world = this._clientToWorld(on);\r\n      const delta = pointSubtract(prevWorld, world);\r\n      this._viewOffset$.next(pointAdd(this._viewOffset$.value, delta));\r\n    }\r\n  }\r\n\r\n  pan(dx: number, dy: number, applyZoom = false) {\r\n    const z = applyZoom ? 1 / this._viewScale$.value : 1;\r\n    this._viewOffset$.next(\r\n      pointAdd(this._viewOffset$.value, { x: dx * z, y: dy * z })\r\n    );\r\n  }\r\n\r\n  onMouseOverPlotItem(source: PlotItem | null): void {\r\n    this._inspectSource.next(source);\r\n  }\r\n\r\n  private _clientToWorld(client: Point): Point {\r\n    const offset = this._viewOffset$.value;\r\n    const scale = this._viewScale$.value;\r\n\r\n    client = pointScale(client, 1 / scale);\r\n    client = pointScale(client, (MAP_EXTENT_RADIUS * 2) / this._viewportWidth);\r\n    client = pointAdd(client, offset);\r\n    client = {\r\n      x: client.x - MAP_EXTENT_RADIUS,\r\n      y: client.y - MAP_EXTENT_RADIUS,\r\n    };\r\n\r\n    return client;\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { getModifiers } from \"@/modifier-keys\";\r\n\r\nimport { useComponentBounds } from \"@/hooks/component-bounds\";\r\nimport { useNativeEvent } from \"@/hooks/native-event\";\r\n\r\nimport { usePlotViewModel } from \"../PlotViewModel\";\r\n\r\nexport interface PanZoomHandlerProps {\r\n  className?: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ZOOM_FACTOR = 1.05;\r\nexport const PAN_FACTOR = 0.05;\r\n\r\nconst Root = styled(\"div\")({\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n});\r\n\r\nconst PanZoomHandler = ({ className, children }: PanZoomHandlerProps) => {\r\n  const viewModel = usePlotViewModel();\r\n\r\n  const containerRef = React.useRef<HTMLDivElement | null>(null);\r\n  const containerBounds = useComponentBounds(containerRef);\r\n\r\n  React.useLayoutEffect(() => {\r\n    viewModel.viewportResize(containerBounds.width, containerBounds.height);\r\n  }, [containerBounds.width, containerBounds.height]);\r\n\r\n  const onWheel = React.useCallback((e: WheelEvent) => {\r\n    const target = containerRef.current;\r\n    if (!target || e.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const modifiers = getModifiers(e);\r\n\r\n    if (modifiers.ctrlMetaKey) {\r\n      viewModel.zoom(e.deltaY < 0 ? ZOOM_FACTOR : 1 / ZOOM_FACTOR, {\r\n        x: e.clientX,\r\n        y: e.clientY,\r\n      });\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else if (modifiers.shiftKey) {\r\n      viewModel.pan(e.deltaY * PAN_FACTOR, 0, true);\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else {\r\n      viewModel.pan(0, -e.deltaY * PAN_FACTOR, true);\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }, []);\r\n\r\n  // React listens to the root listener for all events,\r\n  //  and chrome assumes the root event listener for mouse events\r\n  //  never wants to preventDefault.\r\n  // We need to take a local event listener and mark it as not passive.\r\n  // https://github.com/facebook/react/issues/14856\r\n  useNativeEvent(containerRef, \"wheel\", onWheel, { passive: false });\r\n\r\n  return (\r\n    <Root className={className} ref={containerRef}>\r\n      {children}\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PanZoomHandler;\r\n","import React from \"react\";\r\nimport { uniq, sum } from \"lodash\";\r\n\r\nimport { Card, CardContent, Typography } from \"@mui/material\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\nimport { pointArrayLength } from \"@/point-array\";\r\n\r\nimport {\r\n  AddIngredientPlotItem,\r\n  PlotItem,\r\n  PlotResult,\r\n} from \"@/services/plotter/types\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\n\r\nexport interface PlotDetailsProps {\r\n  className?: string;\r\n  plot: PlotResult;\r\n}\r\n\r\nconst PlotDetails = ({ className, plot }: PlotDetailsProps) => {\r\n  const ingredientRegistry = useDIDependency(IngredientRegistry);\r\n\r\n  const [baseCost, length, totalIngredients, totalUniqueIngredients, stress] =\r\n    React.useMemo(() => {\r\n      const allPoints = plot.committedPoints.concat(plot.pendingPoints);\r\n      const sources = uniq(allPoints.map((point) => point.source));\r\n      const ingredients = sources.filter(isIngredientPoint);\r\n\r\n      let baseCost = 0;\r\n      let ingredientTypeCounts: Record<string, number> = {};\r\n      for (const { ingredientId } of ingredients) {\r\n        const ingredient = ingredientRegistry.getIngredient(ingredientId);\r\n        if (!ingredient) {\r\n          continue;\r\n        }\r\n        baseCost += ingredient.price;\r\n        ingredientTypeCounts[ingredient.id] =\r\n          (ingredientTypeCounts[ingredient.id] ?? 0) + 1;\r\n      }\r\n\r\n      const length = pointArrayLength(plot.committedPoints);\r\n\r\n      const totalIngredients = ingredients.length;\r\n      const totalUniqueIngredients = uniq(\r\n        ingredients.map((x) => x.ingredientId)\r\n      ).length;\r\n\r\n      const stress = Math.sqrt(\r\n        sum(\r\n          Object.keys(ingredientTypeCounts).map((key) =>\r\n            Math.pow(ingredientTypeCounts[key], 2)\r\n          )\r\n        )\r\n      );\r\n\r\n      return [\r\n        baseCost,\r\n        length,\r\n        totalIngredients,\r\n        totalUniqueIngredients,\r\n        stress,\r\n      ];\r\n    }, [plot, IngredientRegistry]);\r\n\r\n  return (\r\n    <Card className={className} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h6\">Details</Typography>\r\n        <div>\r\n          <Typography>Ingredient count: </Typography>\r\n          <Typography variant=\"overline\">\r\n            {totalIngredients} ({totalUniqueIngredients} unique)\r\n          </Typography>\r\n        </div>\r\n        <div>\r\n          <Typography>Ingredient stress: </Typography>\r\n          <Typography variant=\"overline\">{stress.toFixed(2)}</Typography>\r\n        </div>\r\n        <div>\r\n          <Typography>Base Cost: </Typography>\r\n          <Typography variant=\"overline\">{baseCost}</Typography>\r\n        </div>\r\n        <div>\r\n          <Typography>Committed length: </Typography>\r\n          <Typography variant=\"overline\">{length.toFixed(2)}</Typography>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PlotDetails;\r\n\r\nexport function isIngredientPoint(\r\n  point: PlotItem\r\n): point is AddIngredientPlotItem {\r\n  return point.type === \"add-ingredient\";\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Card, CardContent, Typography, styled } from \"@mui/material\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\n\r\nimport { CubicBezierCurve } from \"@/curves\";\r\nimport { MAX_INGREDIENT_EXTENT, POTION_RADIUS } from \"@/game-settings\";\r\n\r\nimport { AddIngredientPlotItem, PlotItem } from \"@/services/plotter/types\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\n\r\nexport interface StepDetailsProps {\r\n  className?: string;\r\n  step: PlotItem;\r\n}\r\n\r\nconst StepDetails = ({ step, className }: StepDetailsProps) => {\r\n  let content: React.ReactNode;\r\n  switch (step.type) {\r\n    case \"add-ingredient\":\r\n      content = <AddIngredient step={step} />;\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  return (\r\n    <Card className={className} variant=\"outlined\">\r\n      <CardContent>{content}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\ninterface AddIngredientStepProps {\r\n  step: AddIngredientPlotItem;\r\n}\r\n\r\nconst AddIngredientRoot = styled(\"div\")({\r\n  \"& .svg-container\": {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\nconst AddIngredient = ({ step }: AddIngredientStepProps) => {\r\n  const ingredientRegistry = useDIDependency(IngredientRegistry);\r\n  const ingredient = ingredientRegistry.getIngredient(step.ingredientId) ?? {\r\n    name: \"Unknown\",\r\n    path: [] as CubicBezierCurve[],\r\n  };\r\n\r\n  const path = ingredient.path.reduce(\r\n    (path, curve) =>\r\n      path +\r\n      `M ${curve.start.x} ${curve.start.y} C ${curve.p1.x},${curve.p1.y} ${curve.p2.x},${curve.p2.y} ${curve.end.x},${curve.end.y}`,\r\n    \"M 0 0 \"\r\n  );\r\n  return (\r\n    <AddIngredientRoot>\r\n      <Typography variant=\"h6\">Ingredient</Typography>\r\n      <Typography variant=\"overline\">{ingredient.name}</Typography>\r\n      <div>\r\n        <Typography>Grind Percentage</Typography>\r\n        <Typography variant=\"overline\">{step.grindPercent}</Typography>\r\n      </div>\r\n      <div className=\"svg-container\">\r\n        <svg\r\n          width=\"100px\"\r\n          height=\"100px\"\r\n          viewBox={`-${MAX_INGREDIENT_EXTENT} -${MAX_INGREDIENT_EXTENT} ${\r\n            MAX_INGREDIENT_EXTENT * 2\r\n          } ${MAX_INGREDIENT_EXTENT * 2}`}\r\n          transform=\"scale(1, -1)\"\r\n        >\r\n          <circle cx={0} cy={0} r={POTION_RADIUS} fill=\"blue\" />\r\n          <path d={path} stroke=\"black\" strokeWidth={0.2} fill=\"none\" />\r\n        </svg>\r\n      </div>\r\n    </AddIngredientRoot>\r\n  );\r\n};\r\n\r\nexport default StepDetails;\r\n","import Plot from \"./Plot\";\r\nexport default Plot;\r\n","import React from \"react\";\r\nimport {\r\n  composeModules,\r\n  Container,\r\n  Identifier,\r\n  Newable,\r\n  ParameterRecord,\r\n} from \"microinject\";\r\n\r\nimport servicesModule from \"./services/module\";\r\n\r\nconst modules = composeModules(servicesModule);\r\n\r\nconst ContainerContext = React.createContext<Container>(new Container());\r\n\r\nconst container = new Container();\r\ncontainer.bind(Container).toConstantValue(container);\r\ncontainer.load(modules);\r\n\r\nexport default container;\r\n\r\nexport interface ContainerProviderProps {\r\n  children: React.ReactNode;\r\n}\r\nexport const ContainerProvider = ({ children }: ContainerProviderProps) => {\r\n  return (\r\n    <ContainerContext.Provider value={container}>\r\n      {children}\r\n    </ContainerContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useDIContainer(): Container {\r\n  return React.useContext(ContainerContext);\r\n}\r\n\r\nexport function useDIDependency<T>(identifier: Identifier<T>): T {\r\n  const container = useDIContainer();\r\n  return container.get(identifier);\r\n}\r\n\r\nexport function useDICreate<T>(\r\n  identifier: Newable<T>,\r\n  parameters?: ParameterRecord\r\n): T {\r\n  const container = useDIContainer();\r\n  const valRef = React.useRef<T>();\r\n  if (valRef.current == null) {\r\n    valRef.current = container.create(identifier, parameters);\r\n  }\r\n  return valRef.current;\r\n}\r\n","import {\r\n  BEZIER_CURVE_LENGTH_RESOLUTION,\r\n  PATH_SPACING_PHYSICS,\r\n} from \"./game-settings\";\r\n\r\nimport {\r\n  Point,\r\n  pointAdd,\r\n  pointDistance,\r\n  pointMagnitude,\r\n  pointNormalize,\r\n  pointScale,\r\n  pointSubtract,\r\n  PointZero,\r\n} from \"./points\";\r\n\r\nexport interface CubicBezierCurve {\r\n  start: Point;\r\n  p1: Point;\r\n  p2: Point;\r\n  end: Point;\r\n}\r\n\r\nexport function cubicBezierCurve(\r\n  startX: number,\r\n  startY: number,\r\n  p1x: number,\r\n  p1y: number,\r\n  p2x: number,\r\n  p2y: number,\r\n  endx: number,\r\n  endy: number\r\n): CubicBezierCurve {\r\n  return {\r\n    start: { x: startX, y: startY },\r\n    p1: { x: p1x, y: p1y },\r\n    p2: { x: p2x, y: p2y },\r\n    end: { x: endx, y: endy },\r\n  };\r\n}\r\n\r\nexport function getCurvePoint(curve: CubicBezierCurve, t: number): Point {\r\n  if (t < 0 || t > 1) {\r\n    throw new Error(\"getPoint: t must be between 0 and 1\");\r\n  }\r\n\r\n  const b1 = (1 - t) * (1 - t) * (1 - t);\r\n  const b2 = 3 * t * (1 - t) * (1 - t);\r\n  const b3 = 3 * t * t * (1 - t);\r\n  const b4 = t * t * t;\r\n\r\n  return {\r\n    x:\r\n      b1 * curve.start.x + b2 * curve.p1.x + b3 * curve.p2.x + b4 * curve.end.x,\r\n    y:\r\n      b1 * curve.start.y + b2 * curve.p1.y + b3 * curve.p2.y + b4 * curve.end.y,\r\n  };\r\n}\r\n\r\nconst curveLengthCache = new Map<CubicBezierCurve, number>();\r\nexport function getCurveLength(\r\n  curve: CubicBezierCurve\r\n  // resolution: number = BEZIER_CURVE_LENGTH_RESOLUTION\r\n): number {\r\n  const resolution = BEZIER_CURVE_LENGTH_RESOLUTION;\r\n  const cached = curveLengthCache.get(curve);\r\n  if (cached !== undefined) {\r\n    return cached;\r\n  }\r\n\r\n  let length = 0.0;\r\n\r\n  let previousPoint = getCurvePoint(curve, 0);\r\n\r\n  for (let index = 1; index <= resolution; index++) {\r\n    const point = getCurvePoint(curve, index / resolution);\r\n    const vector2_2 = pointSubtract(point, previousPoint);\r\n    length += pointMagnitude(vector2_2);\r\n    previousPoint = point;\r\n  }\r\n\r\n  curveLengthCache.set(curve, length);\r\n\r\n  return length;\r\n}\r\n\r\nconst curvePointsCache = new Map<CubicBezierCurve, readonly Point[]>();\r\nexport function curveToPoints(\r\n  curve: CubicBezierCurve\r\n  // spacing: number = PATH_SPACING_PHYSICS,\r\n  // resolution: number = 1\r\n): readonly Point[] {\r\n  const spacing: number = PATH_SPACING_PHYSICS;\r\n  const resolution: number = 1;\r\n\r\n  // if (spacing <= Number.EPSILON) {\r\n  //   throw new Error(\"curveToPoints: spacing must be greater than 0\");\r\n  // }\r\n  // if (resolution <= 0) {\r\n  //   throw new Error(\"curveToPoints: resolution must be greater than 0\");\r\n  // }\r\n\r\n  const cached = curvePointsCache.get(curve);\r\n  if (cached !== undefined) {\r\n    return cached;\r\n  }\r\n\r\n  const points: Point[] = [];\r\n\r\n  let remainingDistance = 0;\r\n  let previousPoint: Point = curve.start;\r\n\r\n  points.push(previousPoint);\r\n\r\n  const samplePointCount = Math.ceil(getCurveLength(curve) * resolution * 10.0);\r\n  for (let index = 0; index <= samplePointCount; index++) {\r\n    const t = index / samplePointCount;\r\n    const point = getCurvePoint(curve, t);\r\n    remainingDistance += pointDistance(previousPoint, point);\r\n    while (remainingDistance >= spacing) {\r\n      remainingDistance = remainingDistance - spacing;\r\n      const splitPoint = pointAdd(\r\n        point,\r\n        pointScale(\r\n          pointNormalize(pointSubtract(previousPoint, point)),\r\n          remainingDistance\r\n        )\r\n      );\r\n      points.push(splitPoint);\r\n      previousPoint = splitPoint;\r\n    }\r\n    previousPoint = point;\r\n  }\r\n\r\n  if (remainingDistance > 0) {\r\n    points.push(getCurvePoint(curve, 1));\r\n  }\r\n\r\n  Object.freeze(points);\r\n  for (const p of points) {\r\n    Object.freeze(p);\r\n  }\r\n  curvePointsCache.set(curve, points);\r\n\r\n  return points;\r\n}\r\n","export const PATH_SPACING_PHYSICS = 0.05;\r\nexport const BEZIER_CURVE_LENGTH_RESOLUTION = 200;\r\nexport const MAP_EXTENT_RADIUS = 60;\r\nexport const POTION_RADIUS = 0.79;\r\nexport const MAX_INGREDIENT_EXTENT = 10;\r\n","import * as React from \"react\";\r\n\r\ninterface UseComponentBounds {\r\n  left: number;\r\n  top: number;\r\n  right: number;\r\n  bottom: number;\r\n  width: number;\r\n  height: number;\r\n}\r\nexport function useComponentBounds(ref: React.RefObject<HTMLElement | null>) {\r\n  const [size, setSize] = React.useState<UseComponentBounds>({\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  React.useLayoutEffect(() => {\r\n    if (!ref.current) {\r\n      return;\r\n    }\r\n\r\n    const observer = new ResizeObserver(() => {\r\n      const el = ref.current;\r\n      if (!el) {\r\n        return;\r\n      }\r\n      const b = el.getBoundingClientRect();\r\n      setSize({\r\n        top: b.top,\r\n        left: b.left,\r\n        right: b.right,\r\n        bottom: b.bottom,\r\n        width: b.width,\r\n        height: b.height,\r\n      });\r\n    });\r\n\r\n    observer.observe(ref.current);\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [ref]);\r\n\r\n  return size;\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport function useNativeEvent<\r\n  T extends GlobalEventHandlers,\r\n  K extends keyof GlobalEventHandlersEventMap\r\n>(\r\n  ref: React.RefObject<T | null>,\r\n  type: K,\r\n  listener: (\r\n    this: GlobalEventHandlers,\r\n    ev: GlobalEventHandlersEventMap[K]\r\n  ) => any,\r\n  options?: boolean | AddEventListenerOptions\r\n) {\r\n  React.useEffect(() => {\r\n    if (!ref.current) {\r\n      return;\r\n    }\r\n\r\n    // De-reference the target so we remove from the right element.\r\n    const listenTarget = ref.current;\r\n\r\n    listenTarget.addEventListener(type, listener, options);\r\n    return () => {\r\n      listenTarget.removeEventListener(type, listener, options);\r\n    };\r\n  }, [type, listener, ref, options]);\r\n}\r\n","import React from \"react\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport interface UseObservationOpts {\r\n  useTransition?: boolean;\r\n  onError?: (err: Error) => void;\r\n}\r\nexport function useObservation<T>(\r\n  observable: Observable<T> | T | null | undefined,\r\n  { useTransition, onError }: UseObservationOpts = {}\r\n): T | undefined {\r\n  const [val, setVal] = React.useState<T | undefined>(undefined);\r\n\r\n  React.useEffect(() => {\r\n    if (observable) {\r\n      if (observable instanceof Observable) {\r\n        const subscription = observable.subscribe({\r\n          next: (val) => {\r\n            if (useTransition) {\r\n              React.startTransition(() => setVal(val));\r\n            } else {\r\n              setVal(val);\r\n            }\r\n          },\r\n          error: onError,\r\n        });\r\n        return () => subscription.unsubscribe();\r\n      } else {\r\n        setVal(observable);\r\n      }\r\n    }\r\n  }, [observable, onError, useTransition]);\r\n\r\n  return val;\r\n}\r\n","import \"@/style.css\";\r\n\r\nimport * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom/client\";\r\n\r\nimport { ContainerProvider } from \"./container\";\r\nimport ThemeProvider from \"./theme\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nconst rootEl = document.getElementById(\"root\");\r\nconst root = ReactDOM.createRoot(rootEl!);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <ContainerProvider>\r\n      <ThemeProvider>\r\n        <App />\r\n      </ThemeProvider>\r\n    </ContainerProvider>\r\n  </React.StrictMode>\r\n);\r\n","import { keyboardModifierUseMeta } from \"./runtime-env\";\r\n\r\nexport const MODIFIER_KEYS_NONE = Object.freeze<ModifierKeys>({});\r\n\r\nexport interface ModifierKeys {\r\n  ctrlMetaKey?: boolean;\r\n  shiftKey?: boolean;\r\n  altKey?: boolean;\r\n}\r\n\r\nexport interface MouseEventModifierKeys {\r\n  ctrlKey: boolean;\r\n  altKey: boolean;\r\n  shiftKey: boolean;\r\n  metaKey: boolean;\r\n}\r\nexport function getModifiers(e: MouseEventModifierKeys): ModifierKeys {\r\n  const { ctrlKey, altKey, shiftKey, metaKey } = e;\r\n  return {\r\n    // Mac reserves ctrl for system use, apps use meta.\r\n    ctrlMetaKey: keyboardModifierUseMeta ? metaKey : ctrlKey,\r\n    altKey,\r\n    shiftKey,\r\n  };\r\n}\r\n\r\nexport function isModifierPressed(event: React.MouseEvent<any>) {\r\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\r\n}\r\n","import { sum } from \"lodash\";\r\nimport { PATH_SPACING_PHYSICS } from \"./game-settings\";\r\n\r\nimport {\r\n  linearInterpolate,\r\n  Point,\r\n  pointAdd,\r\n  pointDistance,\r\n  pointMagnitude,\r\n  pointScale,\r\n  pointSubtract,\r\n  PointZero,\r\n} from \"./points\";\r\n\r\nexport type PointArray = Point[];\r\nexport type ReadOnlyPointArray = readonly Point[];\r\n\r\nexport function pointArrayLength(pointArray: ReadOnlyPointArray): number {\r\n  if (pointArray.length <= 1) {\r\n    return 0;\r\n  }\r\n\r\n  let length = 0;\r\n  let previousPoint = pointArray[0];\r\n  for (let i = 1; i < pointArray.length; i++) {\r\n    length += pointDistance(previousPoint, pointArray[i]);\r\n    previousPoint = pointArray[i];\r\n  }\r\n\r\n  return length;\r\n}\r\n\r\nconst pointArrayLengthCache = new Map<ReadOnlyPointArray, number>();\r\nexport function pointArrayLengthCached(pointArray: ReadOnlyPointArray): number {\r\n  if (pointArray.length <= 1) {\r\n    return 0;\r\n  }\r\n\r\n  let length = pointArrayLengthCache.get(pointArray);\r\n  if (length !== undefined) {\r\n    return length;\r\n  }\r\n\r\n  length = pointArrayLength(pointArray);\r\n  pointArrayLengthCache.set(pointArray, length);\r\n\r\n  return length;\r\n}\r\n\r\nexport function pointArrayLineFromDistance(\r\n  start: Point,\r\n  direction: Point,\r\n  distance: number,\r\n  spacing: number = PATH_SPACING_PHYSICS\r\n) {\r\n  const pointArray: PointArray = [];\r\n  if (pointMagnitude(direction) === 0) {\r\n    throw new Error(\"direction must be valid.\");\r\n  }\r\n\r\n  if (distance <= 0) {\r\n    return [];\r\n  }\r\n\r\n  let previousPoint = start;\r\n  let remainingDistance = distance;\r\n  while (remainingDistance >= spacing) {\r\n    const point = pointAdd(previousPoint, pointScale(direction, spacing));\r\n    pointArray.push(point);\r\n    remainingDistance -= spacing;\r\n    previousPoint = point;\r\n  }\r\n\r\n  if (remainingDistance > 0) {\r\n    pointArray.push(\r\n      pointAdd(\r\n        pointArray[pointArray.length - 1] ?? PointZero,\r\n        pointScale(direction, remainingDistance)\r\n      )\r\n    );\r\n  }\r\n\r\n  return pointArray;\r\n}\r\n\r\nexport function pointArrayOffset(\r\n  pointArray: PointArray,\r\n  offset: Point\r\n): PointArray {\r\n  return pointArray.map((point) => pointAdd(point, offset));\r\n}\r\n\r\nexport function takePointArrayByDistance<T extends Point>(\r\n  array: T[],\r\n  takeLength: number\r\n): [taken: T[], remainder: T[]] {\r\n  const totalLength = pointArrayLength(array);\r\n\r\n  if (array.length <= 1 || totalLength <= takeLength) {\r\n    return [array, [] as T[]];\r\n  }\r\n\r\n  const taken: T[] = [array[0]];\r\n  const remainder: T[] = [];\r\n\r\n  let takenLength = 0;\r\n  let previousPoint = array[0];\r\n  for (let i = 1; i < array.length; i++) {\r\n    const p = array[i];\r\n    const length = pointDistance(p, previousPoint);\r\n    if (takenLength + length >= takeLength) {\r\n      const remainingLength = takeLength - takenLength;\r\n      const splitPoint = linearInterpolate(\r\n        previousPoint,\r\n        p,\r\n        remainingLength / length\r\n      );\r\n      taken.push(\r\n        Object.assign({}, previousPoint, { x: splitPoint.x, y: splitPoint.y })\r\n      );\r\n      remainder.push(\r\n        Object.assign({}, p, { x: splitPoint.x, y: splitPoint.y }),\r\n        ...array.slice(i)\r\n      );\r\n      break;\r\n    } else {\r\n      takenLength += length;\r\n      taken.push(p);\r\n      previousPoint = p;\r\n    }\r\n  }\r\n\r\n  return [taken, remainder];\r\n}\r\n","export interface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport const PointZero: Readonly<Point> = Object.freeze({ x: 0, y: 0 });\r\n\r\nexport function pointEquals(a: Point, b: Point): boolean {\r\n  return (\r\n    Math.abs(a.x - b.x) < Number.EPSILON && Math.abs(a.y - b.y) < Number.EPSILON\r\n  );\r\n}\r\n\r\nexport function pointScale(p: Point, factor: number): Point {\r\n  return {\r\n    x: p.x * factor,\r\n    y: p.y * factor,\r\n  };\r\n}\r\n\r\nexport function pointMagnitude(p: Point): number {\r\n  return Math.sqrt(p.x * p.x + p.y * p.y);\r\n}\r\n\r\nexport function pointDistance(p1: Point, p2: Point) {\r\n  const dx = p1.x - p2.x;\r\n  const dy = p1.y - p2.y;\r\n  return Math.sqrt(dx * dx + dy * dy);\r\n}\r\n\r\nexport function pointAdd(a: Point, b: Point) {\r\n  return {\r\n    x: a.x + b.x,\r\n    y: a.y + b.y,\r\n  };\r\n}\r\n\r\nexport function pointSubtract(a: Point, b: Point) {\r\n  return {\r\n    x: a.x - b.x,\r\n    y: a.y - b.y,\r\n  };\r\n}\r\n\r\nexport function pointNormalize(p: Point): Point {\r\n  const magnitude = pointMagnitude(p);\r\n  if (magnitude === 0) {\r\n    return PointZero;\r\n  }\r\n\r\n  return {\r\n    x: p.x / magnitude,\r\n    y: p.y / magnitude,\r\n  };\r\n}\r\n\r\nexport function linearInterpolate(\r\n  start: Point,\r\n  end: Point,\r\n  lerp: number\r\n): Point {\r\n  return {\r\n    x: start.x + (end.x - start.x) * lerp,\r\n    y: start.y + (end.y - start.y) * lerp,\r\n  };\r\n}\r\n","import platform from \"platform\";\r\n\r\nconst OS_WINDOWS = /windows/i;\r\nconst OS_MAC = /Mac|iOS|(OS\\ X)/;\r\nconst OS_LINUX = /linux/i;\r\n\r\nexport type OSType = \"windows\" | \"mac\" | \"linux\" | \"unknown\";\r\n\r\nconst osPlatform = (platform.os && platform.os.family) || \"unknown\";\r\nexport const OSType: OSType = OS_WINDOWS.test(osPlatform)\r\n  ? \"windows\"\r\n  : OS_MAC.test(osPlatform)\r\n  ? \"mac\"\r\n  : OS_LINUX.test(osPlatform)\r\n  ? \"linux\"\r\n  : \"unknown\";\r\n\r\nexport const isProd: boolean = process.env.NODE_ENV === \"production\";\r\n\r\nexport const keyboardModifierUseMeta = osPlatform === \"mac\";\r\n","import { injectable, singleton } from \"microinject\";\r\n\r\nimport { ingredients } from \"./ingredients\";\r\nimport { IngredientDescriptor, IngredientId } from \"./types\";\r\n\r\n@injectable()\r\n@singleton()\r\nexport class IngredientRegistry {\r\n  getIngredients(): readonly IngredientDescriptor[] {\r\n    return ingredients;\r\n  }\r\n\r\n  getIngredient(id: IngredientId): IngredientDescriptor | null {\r\n    return ingredients.find((x) => x.id === id) ?? null;\r\n  }\r\n}\r\n","import { cubicBezierCurve } from \"@/curves\";\r\nimport { IngredientDescriptor, ingredientId } from \"./types\";\r\n\r\nexport const ingredients: IngredientDescriptor[] = [\r\n  {\r\n    id: ingredientId(\"BloodRuby\"),\r\n\r\n    name: \"Blood Ruby\",\r\n\r\n    color: \"#C24647\",\r\n\r\n    price: 90,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3, -3, -3, -3),\r\n\r\n      cubicBezierCurve(-3, -3, -3, -3, -3, 3, -3, 3),\r\n\r\n      cubicBezierCurve(-3, 3, -3, 3, -5.9999, 0, -6, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.1465,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"BloodyRoot\"),\r\n\r\n    name: \"Bloodthorn\",\r\n\r\n    color: \"#AC4937\",\r\n\r\n    price: 14,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0.0001001358, -2, 0, -2),\r\n\r\n      cubicBezierCurve(0, -2, -0.0001001358, -2, -1.7499, 1, -1.75, 1),\r\n\r\n      cubicBezierCurve(-1.75, 1, -1.7501, 1, -1.7501, -3, -1.75, -3),\r\n\r\n      cubicBezierCurve(-1.75, -3, -1.7499, -3, -4.0001, 2, -4, 2),\r\n\r\n      cubicBezierCurve(-4, 2, -3.9999, 2, -3.9999, -4, -4, -4),\r\n\r\n      cubicBezierCurve(-4, -4, -4.0001, -4, -5.9999, 0, -6, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.435,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"CliffFungus\"),\r\n\r\n    name: \"Brown Mushroom\",\r\n\r\n    color: \"#957C64\",\r\n\r\n    price: 6,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, -1, 0, -1, -1, -1),\r\n\r\n      cubicBezierCurve(-1, -1, -2, -1, -2, -1, -2, -2),\r\n\r\n      cubicBezierCurve(-2, -2, -2, -3, -2, -3, 0, -3),\r\n\r\n      cubicBezierCurve(0, -3, 2, -3, 2, -3, 2, -4),\r\n\r\n      cubicBezierCurve(2, -4, 2, -5, 2, -5, 0.5, -5),\r\n\r\n      cubicBezierCurve(0.5, -5, 0, -5, 0, -5, 0, -6),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Crystal\"),\r\n\r\n    name: \"Cloud Crystal\",\r\n\r\n    color: \"#ADADAD\",\r\n\r\n    price: 60,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 0, -0.75, 1, 0, 1.5),\r\n\r\n      cubicBezierCurve(0, 1.5, 0.7499999, 2, 1, 2, 1, 2.75),\r\n\r\n      cubicBezierCurve(1, 2.75, 0.9999999, 3.75, -0.9999999, 3.25, -1, 4.25),\r\n\r\n      cubicBezierCurve(-1, 4.25, -1, 5, -0.75, 5, 0, 5.5),\r\n\r\n      cubicBezierCurve(0, 5.5, 0.7499999, 6, 0.0001, 7, 0, 7),\r\n    ],\r\n\r\n    preGrindPercent: 0.177,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"DryadMushroom\"),\r\n\r\n    name: \"Dryad's Saddle\",\r\n\r\n    color: \"#9C785A\",\r\n\r\n    price: 5.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -0.25, 0, -1.33541, -0.3291796, -1, -1),\r\n\r\n      cubicBezierCurve(-1, -1, -0.5, -2, 2, -0.5, 2, -2),\r\n\r\n      cubicBezierCurve(2, -2, 2, -3.5, -2, -1.25, -2, -3),\r\n\r\n      cubicBezierCurve(-2, -3, -2, -3.75, 0.0001, -3.75, 0, -3.75),\r\n    ],\r\n\r\n    preGrindPercent: 0.53,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"EarthCrystal\"),\r\n\r\n    name: \"Earth Pyrite\",\r\n\r\n    color: \"#93806A\",\r\n\r\n    price: 30,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0, -1.5, 0, -1.5),\r\n\r\n      cubicBezierCurve(0, -1.5, 0, -1.5, -1, -1.5, -1, -1.5),\r\n\r\n      cubicBezierCurve(-1, -1.5, -1, -1.5, -1, -3.5, -1, -3.5),\r\n\r\n      cubicBezierCurve(-1, -3.5, -1, -3.5, 1, -3.5, 1, -3.5),\r\n\r\n      cubicBezierCurve(1, -3.5, 1, -3.5, 1, -5.5, 1, -5.5),\r\n\r\n      cubicBezierCurve(1, -5.5, 1, -5.5, 0, -5.5, 0, -5.5),\r\n\r\n      cubicBezierCurve(0, -5.5, 0, -5.5, 0.0001, -7, 0, -7),\r\n    ],\r\n\r\n    preGrindPercent: 0.1364,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Firebell\"),\r\n\r\n    name: \"Firebell\",\r\n\r\n    color: \"#D1810D\",\r\n\r\n    price: 5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -1.25, 1, -1.2501, 1, -1.25, 1),\r\n\r\n      cubicBezierCurve(-1.25, 1, -1.2499, 1, -2.5001, 0, -2.5, 0),\r\n\r\n      cubicBezierCurve(-2.5, 0, -2.4999, 0, -3.7501, 1, -3.75, 1),\r\n\r\n      cubicBezierCurve(-3.75, 1, -3.7499, 1, -3.75, 1, -5, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"FireCitrine\"),\r\n\r\n    name: \"Fire Citrine\",\r\n\r\n    color: \"#CD7C19\",\r\n\r\n    price: 50,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -0.75, -1.5, -1.5, 0),\r\n\r\n      cubicBezierCurve(-1.5, 0, -2.5, 2, -2.75, -0.7499999, -3.5, -0.75),\r\n\r\n      cubicBezierCurve(-3.5, -0.75, -4.25, -0.75, -4.5, 2, -5.5, 0),\r\n\r\n      cubicBezierCurve(-5.5, 0, -6.25, -1.5, -6.9999, 0, -7, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.202,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"FrostSapphire\"),\r\n\r\n    name: \"Frost Sapphire\",\r\n\r\n    color: \"#7399BF\",\r\n\r\n    price: 40,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 0, 0.25, 0.5, 0.25, 0.5),\r\n\r\n      cubicBezierCurve(0.25, 0.5, 0.25, 0.5, 1, -1, 1, -1),\r\n\r\n      cubicBezierCurve(1, -1, 1, -1, 2, 1, 2, 1),\r\n\r\n      cubicBezierCurve(2, 1, 2, 1, 3, -1, 3, -1),\r\n\r\n      cubicBezierCurve(3, -1, 3, -1, 4, 1, 4, 1),\r\n\r\n      cubicBezierCurve(4, 1, 4, 1, 5, -1, 5, -1),\r\n\r\n      cubicBezierCurve(5, -1, 5, -1, 6, 1, 6, 1),\r\n\r\n      cubicBezierCurve(6, 1, 6, 1, 6.75, -0.5, 6.75, -0.5),\r\n\r\n      cubicBezierCurve(6.75, -0.5, 6.75, -0.5, 7.0001, 0, 7, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.2139,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"GoblinMushroom\"),\r\n\r\n    name: \"Goblin Shroom\",\r\n\r\n    color: \"#928A5E\",\r\n\r\n    price: 5,\r\n\r\n    path: [cubicBezierCurve(0, 0, 3, 0, 3, -5, 0, -5)],\r\n\r\n    preGrindPercent: 0.663,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Goldthorn\"),\r\n\r\n    name: \"Goldthorn\",\r\n\r\n    color: \"#96714E\",\r\n\r\n    price: 12.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -0.25, 0, -0.5, 0.25, -0.5, 0.5),\r\n\r\n      cubicBezierCurve(-0.5, 0.5, -0.5, 0.75, -0.25, 1, 0, 1),\r\n\r\n      cubicBezierCurve(0, 1, 1, 1, 1, 0.5, 1, 0),\r\n\r\n      cubicBezierCurve(1, 0, 1, -0.5, 0.5, -0.9999999, 0, -1),\r\n\r\n      cubicBezierCurve(0, -1, -0.75, -1, -1.5, -0.25, -1.5, 0.25),\r\n\r\n      cubicBezierCurve(-1.5, 0.25, -1.5, 1.75, -0.75, 2, 0, 2),\r\n\r\n      cubicBezierCurve(0, 2, 1.25, 2, 2, 1.25, 2, 0),\r\n\r\n      cubicBezierCurve(2, 0, 2, -1, 1, -2, 0, -2),\r\n    ],\r\n\r\n    preGrindPercent: 0.3013,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"GraveTruffle\"),\r\n\r\n    name: \"Grave Truffle\",\r\n\r\n    color: \"#908B7F\",\r\n\r\n    price: 10,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3.0001, -2, -3, -2),\r\n\r\n      cubicBezierCurve(-3, -2, -2.9999, -2, -0.7501, -7, -0.75, -7),\r\n\r\n      cubicBezierCurve(-0.75, -7, -0.7499, -7, 0.7499, -7, 0.75, -7),\r\n\r\n      cubicBezierCurve(0.75, -7, 0.7501, -7, 3, -2, 3, -2),\r\n\r\n      cubicBezierCurve(3, -2, 3, -2, -0.0001, -1.25, 0, -1.25),\r\n\r\n      cubicBezierCurve(0, -1.25, 0.0001, -1.25, 0.0001, -5, 0, -5),\r\n    ],\r\n\r\n    preGrindPercent: 0.2535,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"GreenMushroom\"),\r\n\r\n    name: \"Green Mushroom\",\r\n\r\n    color: \"#A5A24F\",\r\n\r\n    price: 9,\r\n\r\n    path: [\r\n      cubicBezierCurve(\r\n        0,\r\n        0,\r\n        3.02107,\r\n        1.020414,\r\n        0.5508628,\r\n        -1.518064,\r\n        1.527383,\r\n        -2.506451\r\n      ),\r\n\r\n      cubicBezierCurve(\r\n        1.527383,\r\n        -2.506451,\r\n        2.500548,\r\n        -3.491441,\r\n        5.012281,\r\n        -0.9910625,\r\n        3.996144,\r\n        -3.978157\r\n      ),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"GreyChanterelle\"),\r\n\r\n    name: \"Shadow Chanterelle\",\r\n\r\n    color: \"#887C77\",\r\n\r\n    price: 10,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 3, 0, -2.384186e-7, 5, 3, 5),\r\n\r\n      cubicBezierCurve(3, 5, 4, 5, 4.5, 4, 4.5, 3),\r\n    ],\r\n\r\n    preGrindPercent: 0.512,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"IceDragonfruit\"),\r\n\r\n    name: \"Ice Fruit\",\r\n\r\n    color: \"#5D8089\",\r\n\r\n    price: 9,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0.9999, 2, 1, 2),\r\n\r\n      cubicBezierCurve(1, 2, 1.0001, 2, 3, -2, 3, -2),\r\n\r\n      cubicBezierCurve(3, -2, 3, -2, 4.9999, 2, 5, 2),\r\n\r\n      cubicBezierCurve(5, 2, 5.0001, 2, 6.0001, 0, 6, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.333,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"LavaRoot\"),\r\n\r\n    name: \"Lava Root\",\r\n\r\n    color: \"#C86B41\",\r\n\r\n    price: 11.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 1.5, -2.5, 1.5, -2.5, 0),\r\n\r\n      cubicBezierCurve(-2.5, 0, -2.5, -1.5, -5, -1.5, -5, 0),\r\n\r\n      cubicBezierCurve(-5, 0, -5, 1.5, -7.5, 1.5, -7.5, 0),\r\n\r\n      cubicBezierCurve(-7.5, 0, -7.5, -0.75, -6.25, -0.75, -6.25, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.4289,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Leaf\"),\r\n\r\n    name: \"Terraria\",\r\n\r\n    color: \"#749064\",\r\n\r\n    price: 3,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -0.25, -0.75, 0, -1),\r\n\r\n      cubicBezierCurve(0, -1, 0.25, -1.25, 0.5, -1, 0.75, -1.25),\r\n\r\n      cubicBezierCurve(0.75, -1.25, 1, -1.5, 1, -2.25, 0.75, -2.5),\r\n\r\n      cubicBezierCurve(0.75, -2.5, 0.5, -2.75, -0.5, -2.25, -0.75, -2.5),\r\n\r\n      cubicBezierCurve(-0.75, -2.5, -1, -2.75, -1, -3.5, -0.75, -3.75),\r\n\r\n      cubicBezierCurve(-0.75, -3.75, -0.5, -4, -0.1767767, -3.823223, 0, -4),\r\n\r\n      cubicBezierCurve(0, -4, 0.25, -4.25, 0.0001, -5, 0, -5),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"LumpyBeet\"),\r\n\r\n    name: \"Lumpy Beet\",\r\n\r\n    color: \"#A36674\",\r\n\r\n    price: 9,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 2, 3, 1, 3, 3),\r\n\r\n      cubicBezierCurve(3, 3, 3, 4, 1, 4, 1, 3),\r\n\r\n      cubicBezierCurve(1, 3, 1, 2, 1, 1, 1, 0),\r\n\r\n      cubicBezierCurve(1, 0, 1, -1, 3, -1, 3, 0),\r\n\r\n      cubicBezierCurve(3, 0, 3, 1, 3, 2, 4, 2),\r\n    ],\r\n\r\n    preGrindPercent: 0.1805,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Marshrooms\"),\r\n\r\n    name: \"Marshroom\",\r\n\r\n    color: \"#837956\",\r\n\r\n    price: 7,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 2, -2, 1, -4, 3, -4),\r\n\r\n      cubicBezierCurve(3, -4, 3.5, -4, 5, -4, 5, -3),\r\n    ],\r\n\r\n    preGrindPercent: 0.423,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"RedMushroom\"),\r\n\r\n    name: \"Red Mushroom\",\r\n\r\n    color: \"#A76C3F\",\r\n\r\n    price: 9.5,\r\n\r\n    path: [cubicBezierCurve(0, 0, -4, 4, -4, -4, -8, 0)],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Refruit\"),\r\n\r\n    name: \"Hairy Banana\",\r\n\r\n    color: \"#C5B13E\",\r\n\r\n    price: 12.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3, -3, -4, -3),\r\n\r\n      cubicBezierCurve(-4, -3, -5, -3, -8.000098, -2.453497e-5, -8, 0),\r\n\r\n      cubicBezierCurve(-8, 0, -7, 0.25, -5, -1.25, -4, -1),\r\n    ],\r\n\r\n    preGrindPercent: 0.3375,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"SulphurShelf\"),\r\n\r\n    name: \"Sulphur Shelf\",\r\n\r\n    color: \"#D77838\",\r\n\r\n    price: 11,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -2, 0, -3.5, 0, -3.5, 0.75),\r\n\r\n      cubicBezierCurve(-3.5, 0.75, -3.5, 1.5, -2.75, 1.5, -2.25, 1.5),\r\n\r\n      cubicBezierCurve(-2.25, 1.5, -1.75, 1.5, -1, 1.5, -1, 2.25),\r\n\r\n      cubicBezierCurve(-1, 2.25, -1, 3, -2.5, 3, -4.5, 3),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Tangleweeds\"),\r\n\r\n    name: \"Tangleweed\",\r\n\r\n    color: \"#759786\",\r\n\r\n    price: 8.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, -1, 3, -1, 3, 0),\r\n\r\n      cubicBezierCurve(3, 0, 3, 1, 1.5, 1, 1.5, 0),\r\n\r\n      cubicBezierCurve(1.5, 0, 1.5, -1, 3, -2, 4, 0),\r\n\r\n      cubicBezierCurve(4, 0, 5, 2, 6.5, 1, 6.5, 0),\r\n\r\n      cubicBezierCurve(6.5, 0, 6.5, -1, 5, -1, 5, 0),\r\n\r\n      cubicBezierCurve(5, 0, 5, 1, 8, 1, 8, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.5005,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Thistle\"),\r\n\r\n    name: \"Thunder Thistle\",\r\n\r\n    color: \"#9E5874\",\r\n\r\n    price: 9,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 1.9999, 3.5, 2, 3.5),\r\n\r\n      cubicBezierCurve(2, 3.5, 2.0001, 3.5, -0.9999, 2.5, -1, 2.5),\r\n\r\n      cubicBezierCurve(-1, 2.5, -1.0001, 2.5, 1.0001, 6, 1, 6),\r\n    ],\r\n\r\n    preGrindPercent: 0.353,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Thornstick\"),\r\n\r\n    name: \"Thornstick\",\r\n\r\n    color: \"#818C4D\",\r\n\r\n    price: 8,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3.9999, -6, -4, -6),\r\n\r\n      cubicBezierCurve(-4, -6, -4.0001, -6, -1.9999, -5, -2, -5),\r\n    ],\r\n\r\n    preGrindPercent: 0.319,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Waterbloom\"),\r\n\r\n    name: \"Waterbloom\",\r\n\r\n    color: \"#539278\",\r\n\r\n    price: 4,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.25, -0.5, 1, -0.5, 1.25, 0),\r\n\r\n      cubicBezierCurve(1.25, 0, 1.5, 0.4999999, 2.25, 0.5, 2.5, 0),\r\n\r\n      cubicBezierCurve(2.5, 0, 2.75, -0.5, 3.5, -0.5, 3.75, 0),\r\n\r\n      cubicBezierCurve(3.75, 0, 4, 0.4999999, 4.75, 0.5, 5, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Wierdshroom\"),\r\n\r\n    name: \"Weirdshroom\",\r\n\r\n    color: \"#B88A51\",\r\n\r\n    price: 8.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -2, 0, -2, -6, -1, -6),\r\n\r\n      cubicBezierCurve(-1, -6, 0.25, -6, 1.353553, -6.207107, 1, -5.5),\r\n\r\n      cubicBezierCurve(1, -5.5, 0.5, -4.5, -0.25, -3.75, 0, -3),\r\n    ],\r\n\r\n    preGrindPercent: 0.3045,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Windbloom\"),\r\n\r\n    name: \"Windbloom\",\r\n\r\n    color: \"#ADABA2\",\r\n\r\n    price: 6,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0, 0, 0.5, 1.25),\r\n\r\n      cubicBezierCurve(0.5, 1.25, 0.9999999, 2.5, 0.9999, 2.5, 1, 2.5),\r\n\r\n      cubicBezierCurve(1, 2.5, 1.0001, 2.5, -1.0001, 2.5, -1, 2.5),\r\n\r\n      cubicBezierCurve(-1, 2.5, -0.9999, 2.5, -1, 2.5, -0.5, 3.75),\r\n\r\n      cubicBezierCurve(-0.5, 3.75, -2.086163e-7, 5, 0.0001, 5, 0, 5),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"WitchMushroom\"),\r\n\r\n    name: \"Witch Mushroom\",\r\n\r\n    color: \"#92777C\",\r\n\r\n    price: 13,\r\n\r\n    path: [cubicBezierCurve(0, 0, 0, 4, 5, 1, 5, 5)],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n];\r\n","import { ContainerModule } from \"microinject\";\r\n\r\nimport { IngredientRegistry } from \"./IngredientRegistry\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(IngredientRegistry);\r\n});\r\n","import { CubicBezierCurve } from \"@/curves\";\r\nimport { Opaque } from \"type-fest\";\r\n\r\nexport type IngredientId = Opaque<string, \"IngredientName\">;\r\nexport function ingredientId(id: string): IngredientId {\r\n  return id as IngredientId;\r\n}\r\n\r\nexport interface IngredientDescriptor {\r\n  readonly id: IngredientId;\r\n  readonly name: string;\r\n  readonly color: string;\r\n  readonly price: number;\r\n  readonly path: CubicBezierCurve[];\r\n  readonly preGrindPercent: number;\r\n}\r\n","import { composeModules } from \"microinject\";\r\n\r\nimport ingredientsModule from \"./ingredients/module\";\r\nimport plotterModule from \"./plotter/module\";\r\n\r\nexport default composeModules(ingredientsModule, plotterModule);\r\n","import { isNotNull } from \"@/utils\";\r\nimport { inject, injectable } from \"microinject\";\r\nimport {\r\n  BehaviorSubject,\r\n  combineLatest,\r\n  map,\r\n  Observable,\r\n  Subscription,\r\n} from \"rxjs\";\r\nimport pako from \"pako\";\r\nimport {\r\n  encode as encodeBase64,\r\n  decode as decodeBase64,\r\n} from \"base64-arraybuffer\";\r\n\r\nimport { IngredientId } from \"../ingredients/types\";\r\n\r\nimport { Plotter } from \"./Plotter\";\r\nimport { PlotItem, PlotResult } from \"./types\";\r\n\r\n@injectable()\r\nexport class PlotBuilder {\r\n  private readonly _items$ = new BehaviorSubject<readonly PlotBuilderItem[]>(\r\n    []\r\n  );\r\n  private _itemSubscription: Subscription | null = null;\r\n  private readonly _plot$ = new BehaviorSubject<PlotResult | null>(null);\r\n\r\n  constructor(@inject(Plotter) plotter: Plotter) {\r\n    // This is a little wonky, but subscribing to all observables in an observable array is something I could see wanting to do a lot.\r\n    // Should make a utility function to handle this use case, if one doesnt already exist in rxjs.\r\n    this._items$.subscribe((items) => {\r\n      if (this._itemSubscription) {\r\n        this._itemSubscription.unsubscribe();\r\n      }\r\n\r\n      if (items.length === 0) {\r\n        this._plot$.next(null);\r\n        return;\r\n      }\r\n\r\n      this._itemSubscription = combineLatest(\r\n        items.map((x) => x.plotItem$)\r\n      ).subscribe((plotItems) => {\r\n        this._plot$.next(plotter.plotItems(plotItems.filter(isNotNull)));\r\n      });\r\n    });\r\n  }\r\n\r\n  get items$() {\r\n    return this._items$;\r\n  }\r\n\r\n  get items(): readonly PlotBuilderItem[] {\r\n    return this._items$.value;\r\n  }\r\n\r\n  get plot$() {\r\n    return this._plot$;\r\n  }\r\n\r\n  loadFromShareString(dataStr: string) {\r\n    const array = decodeBase64(dataStr);\r\n    const dv = new DataView(array);\r\n    const version = dv.getUint8(0);\r\n    const data = array.slice(1);\r\n    if (version === 0) {\r\n      const decoded = JSON.parse(pako.inflate(data, { to: \"string\" })) as any[];\r\n      const items = decoded.map((item) => {\r\n        switch (item.type) {\r\n          case \"add-ingredient\":\r\n            return AddIngredientPlotBuilderItem.fromJSON(item, (item) =>\r\n              this._deleteItem(item)\r\n            );\r\n          case \"stir-cauldron\":\r\n            return StirCauldronPlotBuilderItem.fromJSON(item, (item) =>\r\n              this._deleteItem(item)\r\n            );\r\n          case \"pour-solvent\":\r\n            return PourSolventPlotBuilderItem.fromJSON(item, (item) =>\r\n              this._deleteItem(item)\r\n            );\r\n          default:\r\n            throw new Error(`Unknown item type: ${item.type}`);\r\n        }\r\n      });\r\n      this._items$.next(items);\r\n    }\r\n  }\r\n\r\n  getShareString() {\r\n    const items = this._items$.value.map((x) => x.toJSON());\r\n    const encoded = pako.deflate(JSON.stringify(items));\r\n    const data = new Uint8Array(1 + encoded.length);\r\n    data.set(encoded, 1);\r\n    new DataView(data.buffer).setUint8(0, 0);\r\n    return encodeBase64(data);\r\n  }\r\n\r\n  addIngredient(): AddIngredientPlotBuilderItem {\r\n    const item = new AddIngredientPlotBuilderItem((item) =>\r\n      this._deleteItem(item)\r\n    );\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  addStirCauldron(): StirCauldronPlotBuilderItem {\r\n    const item = new StirCauldronPlotBuilderItem((item) =>\r\n      this._deleteItem(item)\r\n    );\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  addPourSolvent(): PourSolventPlotBuilderItem {\r\n    const item = new PourSolventPlotBuilderItem((item) =>\r\n      this._deleteItem(item)\r\n    );\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  builderItemFor(item: PlotItem): PlotBuilderItem | null {\r\n    const result = this._items$.value.find((x) => x.plotItem === item) || null;\r\n    return result;\r\n  }\r\n\r\n  private _deleteItem(item: PlotBuilderItem) {\r\n    this._items$.next(this._items$.value.filter((x) => x !== item));\r\n  }\r\n}\r\n\r\nexport abstract class PlotBuilderItem {\r\n  abstract readonly isValid$: Observable<boolean>;\r\n  abstract readonly isValid: boolean;\r\n\r\n  abstract readonly plotItem$: Observable<PlotItem | null>;\r\n  abstract readonly plotItem: PlotItem | null;\r\n\r\n  abstract delete(): void;\r\n\r\n  abstract toJSON(): any;\r\n}\r\n\r\nexport class AddIngredientPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _ingredientId$ = new BehaviorSubject<IngredientId | null>(\r\n    null\r\n  );\r\n  private readonly _grindPercent$ = new BehaviorSubject<number>(1);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([\r\n      this._ingredientId$,\r\n      this._grindPercent$,\r\n    ]).pipe(map(() => this.isValid));\r\n\r\n    combineLatest([this._ingredientId$, this._grindPercent$]).subscribe(\r\n      ([ingredientId, grindPercent]) => {\r\n        if (!this.isValid) {\r\n          this._plotItem$.next(null);\r\n          return;\r\n        }\r\n\r\n        this._plotItem$.next({\r\n          type: \"add-ingredient\",\r\n          ingredientId: ingredientId as IngredientId,\r\n          grindPercent,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  static fromJSON(\r\n    json: any,\r\n    del: (item: PlotBuilderItem) => void\r\n  ): AddIngredientPlotBuilderItem {\r\n    const item = new AddIngredientPlotBuilderItem(del);\r\n    item.setIngredient(json.ingredientId);\r\n    item.setGrindPercent(json.grindPercent);\r\n    return item;\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      type: \"add-ingredient\",\r\n      ingredientId: this._ingredientId$.value,\r\n      grindPercent: this._grindPercent$.value,\r\n    };\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    // TODO: Check if ingredientId is valid\r\n    const grindPercent = this._grindPercent$.value;\r\n    return (\r\n      this._ingredientId$.value != null &&\r\n      grindPercent >= 0 &&\r\n      grindPercent <= 1\r\n    );\r\n  }\r\n\r\n  get ingredientId$(): Observable<IngredientId | null> {\r\n    return this._ingredientId$;\r\n  }\r\n\r\n  get ingredientId(): IngredientId | null {\r\n    return this._ingredientId$.value;\r\n  }\r\n\r\n  get grindPercent$(): Observable<number> {\r\n    return this._grindPercent$;\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  setIngredient(ingredientId: IngredientId | null) {\r\n    if (ingredientId === this._ingredientId$.value) {\r\n      return;\r\n    }\r\n\r\n    this._ingredientId$.next(ingredientId);\r\n  }\r\n\r\n  setGrindPercent(percent: number) {\r\n    if (percent === this._grindPercent$.value) {\r\n      return;\r\n    }\r\n\r\n    this._grindPercent$.next(percent);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n\r\nexport class StirCauldronPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _distance$ = new BehaviorSubject<number | null>(null);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([this._distance$]).pipe(\r\n      map(() => this.isValid)\r\n    );\r\n\r\n    combineLatest([this._distance$]).subscribe(([stirDistance]) => {\r\n      if (!this.isValid) {\r\n        this._plotItem$.next(null);\r\n        return;\r\n      }\r\n\r\n      this._plotItem$.next({\r\n        type: \"stir-cauldron\",\r\n        distance: stirDistance!,\r\n      });\r\n    });\r\n  }\r\n\r\n  static fromJSON(\r\n    json: any,\r\n    del: (item: PlotBuilderItem) => void\r\n  ): StirCauldronPlotBuilderItem {\r\n    const item = new StirCauldronPlotBuilderItem(del);\r\n    item.setDistance(json.distance);\r\n    return item;\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      type: \"stir-cauldron\",\r\n      distance: this._distance$.value,\r\n    };\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    // TODO: Check if ingredientId is valid\r\n    const stirDistance = this._distance$.value;\r\n    return stirDistance != null && stirDistance >= 0;\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  get distance$(): Observable<number | null> {\r\n    return this._distance$;\r\n  }\r\n\r\n  setDistance(distance: number | null) {\r\n    this._distance$.next(distance);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n\r\nexport class PourSolventPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _distance$ = new BehaviorSubject<number | null>(null);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([this._distance$]).pipe(\r\n      map(() => this.isValid)\r\n    );\r\n\r\n    combineLatest([this._distance$]).subscribe(([stirDistance]) => {\r\n      if (!this.isValid) {\r\n        this._plotItem$.next(null);\r\n        return;\r\n      }\r\n\r\n      this._plotItem$.next({\r\n        type: \"pour-solvent\",\r\n        distance: stirDistance!,\r\n      });\r\n    });\r\n  }\r\n\r\n  static fromJSON(\r\n    json: any,\r\n    del: (item: PlotBuilderItem) => void\r\n  ): PourSolventPlotBuilderItem {\r\n    const item = new PourSolventPlotBuilderItem(del);\r\n    item.setDistance(json.distance);\r\n    return item;\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      type: \"pour-solvent\",\r\n      distance: this._distance$.value,\r\n    };\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    // TODO: Check if ingredientId is valid\r\n    const stirDistance = this._distance$.value;\r\n    return stirDistance != null && stirDistance >= 0;\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  get distance$(): Observable<number | null> {\r\n    return this._distance$;\r\n  }\r\n\r\n  setDistance(distance: number | null) {\r\n    this._distance$.next(distance);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n","import { last } from \"lodash\";\r\nimport { inject, injectable, singleton } from \"microinject\";\r\n\r\nimport { curveToPoints } from \"@/curves\";\r\nimport {\r\n  PointArray,\r\n  pointArrayLengthCached,\r\n  pointArrayLineFromDistance,\r\n  takePointArrayByDistance,\r\n} from \"@/point-array\";\r\nimport {\r\n  Point,\r\n  pointAdd,\r\n  pointDistance,\r\n  pointEquals,\r\n  pointNormalize,\r\n  pointSubtract,\r\n  PointZero,\r\n} from \"@/points\";\r\n\r\nimport { IngredientRegistry } from \"../ingredients/IngredientRegistry\";\r\n\r\nimport {\r\n  AddIngredientPlotItem,\r\n  PlotItem,\r\n  PlotResult,\r\n  PourSolventPlotItem,\r\n  StirCauldronPlotItem,\r\n} from \"./types\";\r\n\r\n@injectable()\r\n@singleton()\r\nexport class Plotter {\r\n  constructor(\r\n    @inject(IngredientRegistry) private ingredientRegistry: IngredientRegistry\r\n  ) {}\r\n\r\n  plotItems(items: readonly PlotItem[]): PlotResult {\r\n    let result: PlotResult = {\r\n      committedPoints: [],\r\n      pendingPoints: [],\r\n    };\r\n\r\n    const now = Date.now();\r\n\r\n    for (const item of items) {\r\n      result = this._plotItem(item, result);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private _plotItem(item: PlotItem, result: PlotResult): PlotResult {\r\n    switch (item.type) {\r\n      case \"add-ingredient\":\r\n        return this._plotAddIngredient(item, result);\r\n      case \"pour-solvent\":\r\n        return this._plotPourSolvent(item, result);\r\n      case \"stir-cauldron\":\r\n        return this._plotStirCauldron(item, result);\r\n      default:\r\n        throw new Error(`Unknown plot item type: ${(item as any).type}`);\r\n    }\r\n  }\r\n\r\n  private _plotAddIngredient(\r\n    item: AddIngredientPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const { ingredientId, grindPercent } = item;\r\n\r\n    const addPosition =\r\n      last(result.pendingPoints) ?? last(result.committedPoints) ?? PointZero;\r\n\r\n    const ingredient = this.ingredientRegistry.getIngredient(ingredientId);\r\n    if (!ingredient) {\r\n      throw new Error(`Unknown ingredient: ${ingredientId}`);\r\n    }\r\n\r\n    const ingredientPoints: PointArray = [];\r\n    let ingredientLength = 0;\r\n    for (const curve of ingredient.path) {\r\n      const points = curveToPoints(curve);\r\n      ingredientPoints.push(...points);\r\n      // Use the cached length, as curveToPoints is cached and will return consistent array references.\r\n      // Note, this produces a very slightly incorrect length. A difference of around e-15 when compared to getting\r\n      // the length of the final ingredientPoints array.\r\n      ingredientLength += pointArrayLengthCached(points);\r\n    }\r\n\r\n    const takePercent =\r\n      ingredient.preGrindPercent +\r\n      grindPercent * (1 - ingredient.preGrindPercent);\r\n\r\n    const [addedPoints] = takePointArrayByDistance(\r\n      ingredientPoints,\r\n      takePercent * ingredientLength\r\n    );\r\n\r\n    const appendPendingPoints = addedPoints.map((point) =>\r\n      pointAdd(addPosition, point)\r\n    );\r\n\r\n    return appendPendingPlotPoints(appendPendingPoints, item, result);\r\n  }\r\n\r\n  private _plotPourSolvent(\r\n    item: PourSolventPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const currentPoint =\r\n      result.committedPoints[result.committedPoints.length - 1] ?? PointZero;\r\n    if (pointEquals(currentPoint, PointZero)) {\r\n      return result;\r\n    }\r\n\r\n    let { distance } = item;\r\n\r\n    const distanceToOrigin = pointDistance(currentPoint, PointZero);\r\n    if (distance > distanceToOrigin) {\r\n      distance = distanceToOrigin;\r\n    }\r\n\r\n    const newPoints = pointArrayLineFromDistance(\r\n      currentPoint,\r\n      pointNormalize(pointSubtract(PointZero, currentPoint)),\r\n      distance\r\n    );\r\n\r\n    return commitPlotPoints(newPoints, item, result);\r\n  }\r\n\r\n  private _plotStirCauldron(\r\n    item: StirCauldronPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const { distance } = item;\r\n\r\n    const [addedPoints, remainderPlotPoints] = takePointArrayByDistance(\r\n      result.pendingPoints,\r\n      distance\r\n    );\r\n\r\n    return {\r\n      committedPoints: result.committedPoints.concat(addedPoints),\r\n      pendingPoints: remainderPlotPoints,\r\n    };\r\n  }\r\n}\r\n\r\nfunction appendPendingPlotPoints(\r\n  points: Point[],\r\n  source: PlotItem,\r\n  result: PlotResult\r\n): PlotResult {\r\n  if (source == null) {\r\n    throw new Error(\"source is null\");\r\n  }\r\n\r\n  if (points.length === 0) {\r\n    return result;\r\n  }\r\n\r\n  return Object.assign({}, result, {\r\n    pendingPoints: result.pendingPoints.concat(\r\n      points.map((point) => ({\r\n        x: point.x,\r\n        y: point.y,\r\n        source,\r\n      }))\r\n    ),\r\n  });\r\n}\r\n\r\nfunction commitPlotPoints(\r\n  points: Point[],\r\n  source: PlotItem,\r\n  result: PlotResult\r\n): PlotResult {\r\n  if (source == null) {\r\n    throw new Error(\"source is null\");\r\n  }\r\n\r\n  if (points.length === 0) {\r\n    return result;\r\n  }\r\n\r\n  const difference = pointSubtract(\r\n    last(points)!,\r\n    last(result.committedPoints) ?? PointZero\r\n  );\r\n\r\n  return Object.assign({}, result, {\r\n    committedPoints: result.committedPoints.concat(\r\n      points.map((point) => ({\r\n        x: point.x,\r\n        y: point.y,\r\n        source,\r\n      }))\r\n    ),\r\n    pendingPoints: result.pendingPoints.map((point) => ({\r\n      x: point.x + difference.x,\r\n      y: point.y + difference.y,\r\n      source: point.source,\r\n    })),\r\n  });\r\n}\r\n","import { ContainerModule } from \"microinject\";\r\n\r\nimport { PlotBuilder } from \"./PlotBuilder\";\r\nimport { Plotter } from \"./Plotter\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(PlotBuilder);\r\n  bind(Plotter);\r\n});\r\n","import { Point } from \"@/points\";\r\n\r\nimport { IngredientId } from \"../ingredients/types\";\r\n\r\nexport type PlotItem =\r\n  | AddIngredientPlotItem\r\n  | PourSolventPlotItem\r\n  | StirCauldronPlotItem;\r\n\r\nexport interface AddIngredientPlotItem {\r\n  type: \"add-ingredient\";\r\n  ingredientId: IngredientId;\r\n  grindPercent: number;\r\n}\r\n\r\nexport interface PourSolventPlotItem {\r\n  type: \"pour-solvent\";\r\n  distance: number;\r\n}\r\n\r\nexport interface StirCauldronPlotItem {\r\n  type: \"stir-cauldron\";\r\n  distance: number;\r\n}\r\n\r\nexport interface PlotPoint extends Point {\r\n  source: PlotItem;\r\n}\r\n\r\nexport interface PlotResult {\r\n  committedPoints: PlotPoint[];\r\n  pendingPoints: PlotPoint[];\r\n}\r\n\r\nexport const EmptyPlotResult: Readonly<PlotResult> = Object.freeze({\r\n  committedPoints: [],\r\n  pendingPoints: [],\r\n}) as any;\r\n","import { ThemeProvider } from \"@emotion/react\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\nimport React from \"react\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: \"light\",\r\n  },\r\n});\r\n\r\nexport interface AppThemeProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst AppThemeProvider = ({ children }: AppThemeProviderProps) => (\r\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n);\r\n\r\nexport default AppThemeProvider;\r\n","export function windowArray<T>(array: T[], count: number): T[][] {\r\n  const a = [...array];\r\n\r\n  let result: T[][] = [];\r\n  let window: T[] = [];\r\n\r\n  while (a.length > 0) {\r\n    window.push(a.pop()!);\r\n    if (window.length === count) {\r\n      result.push(window);\r\n      window = [];\r\n    }\r\n  }\r\n\r\n  if (window.length > 0) {\r\n    result.push(window);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function keepEveryK<T>(array: T[], k: number, keepLast = false) {\r\n  if (array.length === 0) {\r\n    return array;\r\n  }\r\n\r\n  const a = [];\r\n  for (let i = 0; i < array.length; i += k) {\r\n    a.push(array[i]);\r\n  }\r\n  if (keepLast && (array.length - 1) % k !== 0) {\r\n    a.push(array[array.length - 1]);\r\n  }\r\n  return a;\r\n}\r\n\r\nexport function isNotNull<T>(x: T | null | undefined): x is T {\r\n  return x != null;\r\n}\r\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","StyledTooltip","styled","Tooltip","tooltipPlacementLeft","margin","value","onChange","allowEmpty","onMouseOverItem","onMouseOutItem","props","registry","useDIDependency","IngredientRegistry","onSelectChange","useCallback","e","target","Select","MenuItem","getIngredients","map","ingredient","key","onMouseOver","onMouseOut","placement","title","width","height","viewBox","MAX_INGREDIENT_EXTENT","transform","cx","cy","r","POTION_RADIUS","fill","d","path","reduce","curve","start","x","y","p1","p2","end","stroke","strokeWidth","ListItemText","name","Root","theme","overflow","boxSixing","display","flexDirection","listStyle","paddingLeft","spacing","paddingRight","position","marginBottom","top","right","alignSelf","alignItems","PlotListItem","item","highlight","AddIngredientPlotBuilderItem","AddIngredientPlotListItem","StirCauldronPlotBuilderItem","StirCauldronPlotListItem","PourSolventPlotBuilderItem","PourSolventPlotListItem","constructor","PlotListItemCard","children","valid","useObservation","isValid$","Card","className","style","backgroundColor","IconButton","size","onClick","delete","Delete","CardContent","savedIngredientRef","useRef","useState","isPreviewing","setIsPreviewing","isPreviewingRef","isChangingGrind","setIsChangingGrind","ingredientId","ingredientId$","grindPercent","grindPercent$","displayIngredientId","current","Typography","variant","fullWidth","onOpen","setIngredient","onClose","Grid","paddingTop","Slider","_","startTransition","setGrindPercent","onChangeCommitted","min","max","step","distance","distance$","inputDistance","setInputDistance","TextField","label","asNumber","Number","isNaN","setDistance","onBlur","builder","highlightItem","items","items$","i","Button","color","addIngredient","Add","addStirCauldron","addPourSolvent","background","viewModel","useDICreate","PlotEditorViewModel","plotObserved","plot$","plot","useDeferredValue","mouseOverBuilderItem$","outputShareString","shareString$","useEffect","query","URLSearchParams","window","location","search","has","data","get","loadFromShareString","set","history","replaceState","toString","EmptyPlotResult","onMouseOverBuilderItem","_builder","_plotViewModel","PlotViewModel","_mouseOverBuilderItem$","BehaviorSubject","this","_shareString$","pipe","getShareString","viewOffset$","viewScale$","mouseOverItem$","viewportResize","zoom","delta","on","pan","dx","dy","onMouseOverPlotItem","next","builderItemFor","plotItem","inject","PlotBuilder","left","PlotLine","line","pending","usePlotViewModel","scale","points","source","evenOdd","onPathMouseOver","length","type","lighten","hex","str","p","externalViewModel","internalViewModel","offset","PointZero","inspectSource","onLineMouseOver","committed","trim","currentLine","sourceCounter","commitedLines","pendingLines","lastSource","point","keepEveryK","resultToPlotLines","committedPoints","pendingPoints","committedLines","MAP_EXTENT_RADIUS","PlotViewModelContext","Provider","createContext","plotViewModel","useContext","Error","_viewOffset$","_viewScale$","_inspectSource","_viewportWidth","_viewportHeight","prevWorld","_clientToWorld","world","pointSubtract","pointAdd","applyZoom","z","client","pointScale","ZOOM_FACTOR","PAN_FACTOR","containerRef","React","containerBounds","useComponentBounds","useLayoutEffect","onWheel","defaultPrevented","modifiers","getModifiers","ctrlMetaKey","deltaY","clientX","clientY","preventDefault","stopPropagation","shiftKey","useNativeEvent","passive","ref","isIngredientPoint","ingredientRegistry","useMemo","allPoints","concat","ingredients","uniq","filter","baseCost","ingredientTypeCounts","getIngredient","price","pointArrayLength","Math","sqrt","sum","Object","keys","pow","totalIngredients","totalUniqueIngredients","stress","toFixed","AddIngredientRoot","justifyContent","AddIngredient","content","modules","composeModules","ContainerContext","Container","container","useDIContainer","bind","toConstantValue","load","ContainerProvider","identifier","parameters","valRef","create","getCurvePoint","t","b1","b2","b3","b4","startX","startY","p1x","p1y","p2x","p2y","endx","endy","curveLengthCache","Map","getCurveLength","resolution","BEZIER_CURVE_LENGTH_RESOLUTION","cached","previousPoint","index","vector2_2","pointMagnitude","curvePointsCache","PATH_SPACING_PHYSICS","remainingDistance","samplePointCount","ceil","pointDistance","splitPoint","pointNormalize","freeze","bottom","setSize","observer","ResizeObserver","el","b","getBoundingClientRect","observe","disconnect","listener","listenTarget","addEventListener","removeEventListener","observable","useTransition","onError","val","setVal","Observable","subscribe","error","unsubscribe","rootEl","document","getElementById","ReactDOM","createRoot","render","StrictMode","MODIFIER_KEYS_NONE","ctrlKey","altKey","metaKey","keyboardModifierUseMeta","event","pointArray","pointArrayLengthCache","direction","array","takeLength","totalLength","taken","remainder","takenLength","remainingLength","linearInterpolate","assign","slice","a","abs","EPSILON","factor","magnitude","lerp","osPlatform","os","family","OSType","test","isProd","find","injectable","singleton","cubicBezierCurve","preGrindPercent","ContainerModule","plotter","_items$","_itemSubscription","_plot$","combineLatest","plotItem$","plotItems","isNotNull","dataStr","decode","version","DataView","getUint8","JSON","parse","inflate","to","fromJSON","_deleteItem","toJSON","encoded","deflate","stringify","Uint8Array","buffer","setUint8","encode","Plotter","PlotBuilderItem","_delete","_ingredientId$","_grindPercent$","_plotItem$","_isValid$","isValid","json","del","percent","_distance$","stirDistance","result","Date","now","_plotItem","_plotAddIngredient","_plotPourSolvent","_plotStirCauldron","addPosition","last","ingredientPoints","ingredientLength","curveToPoints","pointArrayLengthCached","takePercent","appendPendingPlotPoints","takePointArrayByDistance","currentPoint","pointEquals","distanceToOrigin","difference","commitPlotPoints","pointArrayLineFromDistance","addedPoints","remainderPlotPoints","createTheme","palette","mode","ThemeProvider","count","pop","k","keepLast"],"sourceRoot":""}
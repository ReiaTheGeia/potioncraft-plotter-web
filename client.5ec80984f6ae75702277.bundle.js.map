{"version":3,"file":"client.5ec80984f6ae75702277.bundle.js","mappings":"0KAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,0LAA2L,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,6BAA6B,MAAQ,GAAG,SAAW,uDAAuD,eAAiB,CAAC,2LAA2L,WAAa,MAEnkB,W,4KCIIC,EAAU,GAEdA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKnB,QAAe,KAAW,WAAiB,gBAAiBM,G,4xBC1BnE,iBAEA,aAMA,UAJsB,WACpB,OAAO,gBAAC,UAAU,Q,8tBCLpB,iBAEA,UAUA,UAMA,UACA,UAWMC,GAAgB,IAAAC,QAAO,EAAAC,QAAP,CAAgB,CACpCC,qBAAsB,CACpBC,OAAQ,YA4EZ,UAxE2B,SAAC,GAC1B,IAAAC,EAAK,QACLC,EAAQ,WACR,IAAAC,WAAAA,OAAU,IAAG,GAAK,EAClBC,EAAe,kBACfC,EAAc,iBACXC,EAAK,IANkB,sEAQpBC,GAAW,IAAAC,iBAAgB,EAAAC,oBAE3BC,EAAiB,UAAMC,aAC3B,SAACC,GACC,IAAMX,EAAQW,EAAEC,OAAOZ,MAErBC,EADY,KAAVD,EACO,KAEAA,KAGb,CAACC,IAGH,OACE,wBAAC,EAAAY,OAAM,KACDR,EAAK,CACTL,MAAOA,QAAAA,EAAS,GAChBC,SAAUQ,IAETP,GAAc,wBAAC,EAAAY,SAAQ,CAACd,MAAM,KAC9BM,EAASS,iBAAiBC,KAAI,SAACC,GAAe,OAC7C,wBAAC,EAAAH,SAAQ,CACPI,IAAKD,EAAW9B,GAChBa,MAAOiB,EAAW9B,GAClBgC,YACEhB,EAAkB,WAAM,OAAAA,EAAgBc,EAAW9B,UAAMO,EAE3D0B,WAAYhB,GAEZ,wBAACT,EAAa,CACZ0B,UAAU,OACVC,MACE,+BACEC,MAAM,QACNC,OAAO,QACPC,QAAS,WAAI,EAAAC,sBAAqB,aAAK,EAAAA,sBAAqB,YAClC,EAAxB,EAAAA,sBAAyB,YACC,EAAxB,EAAAA,uBACJC,UAAU,gBAEV,kCAAQC,GAAI,EAAGC,GAAI,EAAGC,EAAG,EAAAC,cAAeC,KAAK,SAC7C,gCACEC,EAAGhB,EAAWiB,KAAKC,QACjB,SAACD,EAAME,GACL,OAAAF,EACA,YAAKE,EAAMC,MAAMC,EAAC,YAAIF,EAAMC,MAAME,EAAC,cAAMH,EAAMI,GAAGF,EAAC,YAAIF,EAAMI,GAAGD,EAAC,YAAIH,EAAMK,GAAGH,EAAC,YAAIF,EAAMK,GAAGF,EAAC,YAAIH,EAAMM,IAAIJ,EAAC,YAAIF,EAAMM,IAAIH,KAC5H,UAEFI,OAAO,QACPC,YAAa,GACbZ,KAAK,WAKX,wBAAC,EAAAa,aAAY,KAAE5B,EAAW6B,c,wwBCpGtC,iBACA,UAEA,UACA,UACA,UAEA,UAEA,UAmBMC,GAAO,IAAAnD,QAAO,MAAP,EAAc,SAAC,GAAc,OAAP,QAAO,CACxCoD,gBAAiB,UACjBC,SAAU,aA+EZ,SAASC,EAAaC,EAA+BC,GACnD,OAAQA,EAAOC,YACb,IAAK,iBAEH,YAkCN,SACEF,EACAC,GAEAD,EAAIG,OAEJH,EAAII,UAAUH,EAAOd,EAAGc,EAAOb,GAC/BY,EAAIK,QAAO,IAAAC,kBAAiBL,EAAOM,QAEnC,IAAMC,EAAMC,EAAqBR,EAAOS,QACxC,GAAIF,EAAK,CACP,IAAMG,EAAMC,EAAQJ,GACdK,EAAIF,EAAIvC,MAAQ,IAChB0C,EAAIH,EAAItC,OAAS,IACvB2B,EAAIe,MAAM,GAAI,GACdf,EAAII,WAAWS,EAAI,GAAIC,EAAI,GAC3Bd,EAAIgB,UAAUL,EAAK,EAAG,EAAGE,EAAGC,GAG9Bd,EAAIiB,UAtDAC,CAAqBlB,EAAKC,GAE5B,IAAK,eAEH,YAgFN,SACED,EACAC,GAEAD,EAAIG,OAEJH,EAAII,UAAUH,EAAOd,EAAGc,EAAOb,GAO/B,IAAM+B,EAAYP,EAAQQ,GACpBC,EAAaF,EAAU/C,MAAQ,IAC/BkD,EAAaH,EAAU9C,OAAS,IACtC2B,EAAIG,OACJH,EAAIe,MAAM,GAAI,GACdf,EAAII,WAAWiB,EAAa,GAAIC,EAAa,EAAI,IACjDtB,EAAIgB,UAAUG,EAAW,EAAG,EAAGE,EAAYC,GAC3CtB,EAAIiB,UAEJ,IAAMT,EAAMe,EAAuBtB,EAAOuB,QAC1C,GAAIhB,EAAK,CACP,IAAMG,EAAMC,EAAQJ,GACdK,EAAIF,EAAIvC,MAAQ,GAChB0C,EAAIH,EAAItC,OAAS,GACvB2B,EAAIe,MAAM,GAAI,GACdf,EAAII,WAAWS,EAAI,GAAIC,EAAI,GAC3Bd,EAAIgB,UAAUL,EAAK,EAAG,EAAGE,EAAGC,GAG9Bd,EAAIiB,UAjHAQ,CAAyBzB,EAAKC,GAEhC,IAAK,kBAEH,YAsHN,SACED,EACAC,GAEAD,EAAIG,OACJH,EAAII,UAAUH,EAAOd,EAAGc,EAAOb,GAE/B,IAAMoB,EAAMkB,EAAyBzB,EAAOS,QAC5C,GAAIF,EAAK,CACP,IAAMG,EAAMC,EAAQJ,GACdK,EAAIF,EAAIvC,MAAQ,IAChB0C,EAAIH,EAAItC,OAAS,IACvB2B,EAAIG,OACJH,EAAIe,MAAM,GAAI,GACdf,EAAII,WAAWS,EAAI,GAAIC,EAAI,GAC3Bd,EAAIgB,UAAUL,EAAK,EAAG,EAAGE,EAAGC,GAC5Bd,EAAIiB,UAQNjB,EAAIiB,UA/IAU,CAA4B3B,EAAKC,GAEnC,IAAK,SAEH,YAwJN,SACED,EACAC,GAEAD,EAAIG,OACJH,EAAII,UAAUH,EAAOd,EAAGc,EAAOb,GA+B/B,IAAMoB,EAAMoB,EAAgB3B,EAAOS,QACnC,GAAIF,EAAK,CACP,IAAMG,EAAMC,EAAQJ,GACdK,EAAIF,EAAIvC,MAAQ,IAChB0C,EAAIH,EAAItC,OAAS,IACvB2B,EAAIG,OACJH,EAAIe,MAAM,GAAI,GACdf,EAAII,WAAWS,EAAI,GAAIC,EAAI,GAC3Bd,EAAIgB,UAAUL,EAAK,EAAG,EAAGE,EAAGC,GAC5Bd,EAAIiB,UAGNjB,EAAIiB,UAzMAY,CAAmB7B,EAAKC,IAnC9B,UArD2B,SAAC,G,UAAE6B,EAAS,YAAEjE,EAAG,MAAEkE,EAAS,YAC/C,EAA2D,QAAvC,OAAAC,gBAAeD,EAAUE,sBAAc,QAAI,EAAAC,SAA7D9D,EAAK,QAAEC,EAAM,SACf8D,EAA8C,QAArC,OAAAH,gBAAeD,EAAUK,oBAAY,QAAI,EAAAC,UAClDtB,EAA4C,QAApC,OAAAiB,gBAAeD,EAAUO,mBAAW,QAAI,EAEhD,IAA4B,UAAMC,SACtC,MACD,GAFMC,EAAS,KAAEC,EAAY,KAIxBC,EAAW7E,EAAI6E,SAqCrB,OAnCA,UAAMC,WAAU,WACd,GAAKH,EAAL,CAIA,IAAMxG,EAAK4G,uBAAsB,WAC/B,IAAM5C,EAAMwC,EAAUK,WAAW,MAEjC7C,EAAI8C,UAAU,EAAG,EAAG1E,EAAOC,GAoCjC,SACE2B,EACA+C,EACAC,EACAC,EACAC,GAEAlD,EAAIG,OACJH,EAAIe,MAAMgC,EAAYA,GAEtB/C,EAAII,UAAU,EAAA+C,kBAAmB,EAAAA,mBAEjCnD,EAAIe,MAAM,GAAI,GAGdf,EAAII,UAAU4C,EAASC,GAEvBC,IACAlD,EAAIiB,UApDAmC,CAAepD,EAAKe,EAAOoB,EAAOhD,EAAGgD,EAAO/C,GAAG,W,QAC7CY,EAAIqD,YACJrD,EAAIsD,YAAc,MAClBtD,EAAIuD,UAAY,GAChBvD,EAAIwD,QAAQ,IAAK,IACjBxD,EAAIyD,QAAQ,GAAI,IAChBzD,EAAIyD,OAAO,GAAI,IACfzD,EAAIyD,OAAO,IAAK,IAChBzD,EAAIyD,QAAQ,IAAK,IACjBzD,EAAIR,SAEJQ,EAAIqD,YACJrD,EAAI0D,UAAY,OAChB1D,EAAI2D,IAAI,EAAG,EAAG,EAAA/E,cAAe,EAAG,EAAIgF,KAAKC,IACzC7D,EAAInB,O,IAEJ,IAAqB,QAAA6D,GAAQ,8BAAE,CAA1B,IAAMzC,EAAM,QACfF,EAAaC,EAAKC,I,wGAKxB,OAAO,WAAM,OAAA6D,qBAAqB9H,OACjC,CAACwG,EAAWE,EAAUtE,EAAOC,EAAQ8D,EAAOhD,EAAGgD,EAAO/C,EAAG2B,IAG1D,wBAACnB,EAAI,CAACkC,UAAWA,GACf,kCAAQiC,IAAK,SAACA,GAAQ,OAAAtB,EAAasB,IAAM3F,MAAOA,EAAOC,OAAQA,MA6CrE,IAAM2F,EAAW,IAAIC,IACrB,SAASrD,EAAQJ,GACf,GAAIwD,EAASE,IAAI1D,GACf,OAAOwD,EAASG,IAAI3D,GAGtB,IAAMG,EAAM,IAAIyD,MAIhB,OAHAzD,EAAI0D,QAAUC,QAAQC,MAAMC,KAAKF,SACjC3D,EAAIH,IAAMA,EACVwD,EAASS,IAAIjE,EAAKG,GACXA,EAGT,IAAMF,EAA+C,CACnDiE,MAAO,EAAQ,MACfC,MAAO,EAAQ,MACfC,MAAO,EAAQ,KACfC,MAAO,EAAQ,MACfC,OAAQ,EAAQ,OAyBZvD,EAAiD,CACrDwD,KAAM,EAAQ,MACdC,UAAW,EAAQ,MACnBC,OAAQ,EAAQ,MAChBC,MAAO,EAAQ,MACfC,KAAM,EAAQ,MACdC,UAAW,EAAQ,MACnBC,KAAM,EAAQ,MACdC,IAAK,EAAQ,KACbC,MAAO,EAAQ,MACfC,OAAQ,EAAQ,MAChBC,eAAgB,EAAQ,MACxBC,QAAS,EAAQ,MACjBC,aAAc,EAAQ,MACtBC,OAAQ,EAAQ,GAChBC,MAAO,EAAQ,MACfC,UAAW,EAAQ,MACnBC,KAAM,EAAQ,MACdC,WAAY,EAAQ,MACpBC,OAAQ,EAAQ,MAChBC,YAAa,EAAQ,MACrBC,MAAO,EAAQ,MACfC,SAAU,EAAQ,MAClBC,UAAW,EAAQ,OAGfjF,EAAgB,EAAQ,MAoCxBM,EAAmD,CACvD4E,OAAQ,EAAQ,MAChBC,OAAQ,EAAQ,MAChBC,MAAO,EAAQ,OA+BR,EAAQ,MACP,EAAQ,MAFlB,IAKM5E,EAA0C,CAC9C4E,MAAO,EAAQ,MACfD,OAAQ,EAAQ,Q,0JC/QlB,iBACA,UAAe,W,gvBCDf,iBACA,UAEA,UAEA,UACA,UAUa,EAAAE,YAAc,KACd,EAAAC,WAAa,IAE1B,IAAM9G,GAAO,IAAAnD,QAAO,MAAP,CAAc,CACzB2B,MAAO,OACPC,OAAQ,SA2DV,UAxDwB,SAAC,G,IACvByD,EAAS,YACTC,EAAS,YACT4E,EAAQ,WAEFC,EAAeC,EAAMC,OAA8B,MACnDC,GAAkB,IAAAC,oBAAmBJ,GAE3CC,EAAMI,iBAAgB,WACpBlF,EAAUmF,kBAAkBH,EAAgB3I,MAAO2I,EAAgB1I,UAClE,CAAC0I,EAAgB3I,MAAO2I,EAAgB1I,SAE3C,IAAM8I,EAAUN,EAAMtJ,aAAY,SAACC,GAEjC,GADeoJ,EAAaQ,UACb5J,EAAE6J,iBAAjB,CAIA,IAAMC,GAAY,IAAAC,cAAa/J,GAE3B8J,EAAUE,aACZzF,EAAU0F,KAAKjK,EAAEkK,OAAS,EAAI,EAAAjB,YAAc,EAAI,EAAAA,YAAa,CAC3DtH,EAAG3B,EAAEmK,QACLvI,EAAG5B,EAAEoK,UAEPpK,EAAEqK,iBACFrK,EAAEsK,mBACOR,EAAUS,UACnBhG,EAAUiG,KAAKxK,EAAEkK,OAAS,EAAAhB,WAAY,GAAG,GACzClJ,EAAEqK,iBACFrK,EAAEsK,oBAEF/F,EAAUiG,IAAI,EAAGxK,EAAEkK,OAAS,EAAAhB,YAAY,GACxClJ,EAAEqK,iBACFrK,EAAEsK,sBAEH,IASH,OAFA,IAAAG,gBAAerB,EAAc,QAASO,EAAS,CAAEe,SAAS,IAGxD,gBAACtI,EAAI,CACHkC,UAAWA,EACXiC,IAAK6C,EACLuB,YAAa,SAAC3K,GAAM,OAAAuE,EAAUoG,YAAY3K,EAAEmK,QAASnK,EAAEoK,WAEtDjB,K,0JC3EP,iBACA,UAAe,W,ucCDf,iBAEA,UAWA,UAEA,UAEA,UASA,aAUM/G,GAAO,IAAAnD,QAAO,MAAP,EAAc,SAAC,G,IAAE2L,EAAK,QAAO,OACxCtI,SAAU,OACVuI,UAAW,aACXC,QAAS,OACTC,cAAe,SACf,UAAW,CACTC,UAAW,OACXC,YAAaL,EAAMM,QAAQ,GAC3BC,aAAcP,EAAMM,QAAQ,IAE9B,eAAgB,CACdE,SAAU,WACVC,aAAcT,EAAMM,QAAQ,IAE9B,8BAA+B,CAC7BE,SAAU,WACVE,IAAK,MACLC,MAAO,QAET,aAAc,CACZC,UAAW,SACXV,QAAS,OACTC,cAAe,SACfU,WAAY,cA8CVC,EAAe,SAAC,G,IACpBC,EAAI,OACJ,IAAAC,UAAAA,OAAS,IAAG,GAAK,EACjBpL,EAAW,cACXC,EAAU,aAEV,OAAIkL,aAAgB,EAAAE,6BAEhB,wBAACC,EAAyB,CACxBH,KAAMA,EACNC,UAAWA,EACXpL,YAAaA,EACbC,WAAYA,IAGPkL,aAAgB,EAAAI,4BAEvB,wBAACC,EAAwB,CACvBL,KAAMA,EACNC,UAAWA,EACXpL,YAAaA,EACbC,WAAYA,IAGPkL,aAAgB,EAAAM,2BAEvB,wBAACC,EAAuB,CACtBP,KAAMA,EACNC,UAAWA,EACXpL,YAAaA,EACbC,WAAYA,IAIX,mC,oBAAuBkL,EAAKQ,YAAYhK,OAW3CiK,EAAmB,SAAC,G,MACxBT,EAAI,OACJC,EAAS,YACTzC,EAAQ,WACR3I,EAAW,cACXC,EAAU,aAEJ4L,EAAqC,QAA7B,OAAA7H,gBAAemH,EAAKW,iBAAS,SAC3C,OACE,wBAAC,EAAAC,KAAI,CACHjI,UAAU,YACVkI,MAAO,CACLnK,iBACIgK,EAAuBT,GAAa,YAA3B,gBAA2C7M,GAE1DyB,YAAa,WAAM,OAAAA,EAAYmL,IAC/BlL,WAAYA,GAEZ,wBAAC,EAAAgM,WAAU,CACTC,KAAK,QACLpI,UAAU,gBACVqI,QAAS,WAAM,OAAAhB,EAAKiB,WAEpB,wBAAC,EAAAC,OAAU,OAEb,wBAAC,EAAAC,YAAW,KAAE3D,KAWd2C,EAA4B,SAAC,G,QACjCH,EAAI,OACJC,EAAS,YACTpL,EAAW,cACXC,EAAU,aAEJsM,EAAqB,UAAMzD,OAA4B,MAGvD,IAAkC,UAAMvE,UAAkB,GAAM,GAA/DiI,EAAY,KAAEC,EAAe,KAC9BC,EAAkB,UAAM5D,QAAO,GAE/B,IAAwC,UAAMvE,UAAS,GAAM,GAA5DoI,EAAe,KAAEC,EAAkB,KACpCC,EAAiD,QAAlC,OAAA7I,gBAAemH,EAAK2B,sBAAc,QAAI,KACrDC,EAAiD,QAAlC,OAAA/I,gBAAemH,EAAK6B,sBAAc,QAAI,EAIrDC,EAAsBT,EACxBD,EAAmBnD,QACnByD,EACJ,OACE,wBAACjB,EAAgB,CACfT,KAAMA,EACNC,UAAWA,EACXpL,YAAa2M,EAAkB,aAAW3M,EAC1CC,WAAY0M,EAAkB,aAAW1M,GAEzC,mCACE,wBAAC,EAAAiN,WAAU,CAACC,QAAQ,YAAU,eAEhC,wBAAC,UAAkB,CACjBC,WAAS,EACTvO,MAAOoO,EACPlO,WAAmC,MAAvBkO,EAEZI,OAAQ,WACNd,EAAmBnD,QAAU+B,EAAK0B,aAClCJ,GAAgB,GAChBC,EAAgBtD,SAAU,GAG5BpK,gBAAiB,SAAChB,GACXwO,GAGLrB,EAAKmC,cAActP,IAGrBc,SAAU,SAACd,GACTyO,GAAgB,GAChBC,EAAgBtD,SAAU,EAC1B+B,EAAKmC,cAActP,IAErBuP,QAAS,WACHb,EAAgBtD,UAClB+B,EAAKmC,cAAcf,EAAmBnD,SACtCqD,GAAgB,GAChBC,EAAgBtD,SAAU,GAE5BmD,EAAmBnD,QAAU,QAGjC,wBAAC,EAAAoE,KAAI,CAACC,WAAY,GAChB,wBAAC,EAAAP,WAAU,CAAClP,GAAG,eAAa,iBAC5B,wBAAC,EAAA0P,OAAM,CACL7O,MAAOkO,EACPjO,SAAU,SAAC6O,EAAG9O,GACZ,UAAM+O,iBAAgB,WACpBzC,EAAK0C,gBAAgBhP,MAEvB+N,GAAmB,IAErBkB,kBAAmB,SAACH,EAAG9O,GACrBsM,EAAK0C,gBAAgBhP,GACrB+N,GAAmB,IACpB,kBACe,cAChBmB,IAAK,EACLC,IAAK,EACLC,KAAM,UAcVzC,EAA2B,SAAC,G,QAChCL,EAAI,OACJC,EAAS,YACTpL,EAAW,cACXC,EAAU,aAEJiO,EAAyC,QAA9B,OAAAlK,gBAAemH,EAAKgD,kBAAU,QAAI,EAC7C,IAAoC,UAAM5J,SAAwB,MAAK,GAAtE6J,EAAa,KAAEC,EAAgB,KACtC,OACE,wBAACzC,EAAgB,CACfT,KAAMA,EACNC,UAAWA,EACXpL,YAAaA,EACbC,WAAYA,GAEZ,mCACE,wBAAC,EAAAiN,WAAU,CAACC,QAAQ,YAAU,kBAEhC,wBAAC,EAAAmB,UAAS,CACRC,MAAM,WACN1P,MAAgC,QAAzB,EAAAuP,QAAAA,EAAiBF,SAAQ,QAAI,GACpCpP,SAAU,SAACU,GACT,IAAIgP,EAA0BC,OAAOjP,EAAEC,OAAOZ,OAC1C6P,MAAMF,KACRA,EAAW,MAGbH,EAAiB7O,EAAEC,OAAOZ,OAC1BsM,EAAKwD,YAAYH,IAEnBI,OAAQ,WAAM,OAAAP,EAAiB,WAYjC3C,EAA0B,SAAC,G,MAC/BP,EAAI,OACJC,EAAS,YACTpL,EAAW,cACXC,EAAU,aAEJiO,GAAW,IAAAlK,gBAAemH,EAAKgD,WAC/B,IAAoC,UAAM5J,SAAwB,MAAK,GAAtE6J,EAAa,KAAEC,EAAgB,KACtC,OACE,wBAACzC,EAAgB,CACfT,KAAMA,EACNC,UAAWA,EACXpL,YAAaA,EACbC,WAAYA,GAEZ,mCACE,wBAAC,EAAAiN,WAAU,CAACC,QAAQ,YAAU,iBAEhC,wBAAC,EAAAmB,UAAS,CACRC,MAAM,WACN1P,MAAgC,QAAzB,EAAAuP,QAAAA,EAAiBF,SAAQ,QAAI,GACpCpP,SAAU,SAACU,GACT,IAAIgP,EAA0BC,OAAOjP,EAAEC,OAAOZ,OAC1C6P,MAAMF,KACRA,EAAW,MAGbH,EAAiB7O,EAAEC,OAAOZ,OAC1BsM,EAAKwD,YAAYH,IAEnBI,OAAQ,WAAM,OAAAP,EAAiB,WAMvC,UAvS6B,SAAC,G,MAC5BvK,EAAS,YACT+K,EAAO,UACPC,EAAa,gBACb9O,EAAW,cACXC,EAAU,aAEJ8O,EAAsC,QAA9B,OAAA/K,gBAAe6K,EAAQG,eAAO,QAAI,GAChD,OACE,wBAACpN,EAAI,CAACkC,UAAWA,GACf,8BAAIA,UAAU,QACXiL,EAAMlP,KAAI,SAACsL,EAAM8D,GAAM,OACtB,wBAAC/D,EAAY,CACXnL,IAAKkP,EACL9D,KAAMA,EACNC,UAAWD,IAAS2D,EACpB9O,YAAaA,EACbC,WAAYA,QAIlB,+BAAK6D,UAAU,WACb,wBAAC,EAAAoL,OAAM,CAACC,MAAM,UAAUhD,QAAS,WAAM,OAAA0C,EAAQO,kBAC7C,wBAAC,EAAAC,IAAO,M,eAEV,wBAAC,EAAAH,OAAM,CAACC,MAAM,UAAUhD,QAAS,WAAM,OAAA0C,EAAQS,oBAC7C,wBAAC,EAAAD,IAAO,M,kBAEV,wBAAC,EAAAH,OAAM,CAACC,MAAM,UAAUhD,QAAS,WAAM,OAAA0C,EAAQU,mBAC7C,wBAAC,EAAAF,IAAO,M,+KC5FlB,iBACA,UAEA,UACA,UAEA,UAEA,UACA,UAEA,aACA,aACA,aAEA,UACA,aAGMzN,GAAO,IAAAnD,QAAO,MAAP,CAAc,CACzB2B,MAAO,OACPC,OAAQ,OACRiK,QAAS,OACTC,cAAe,MACf,oBAAqB,CACnBK,SAAU,WACVxK,MAAO,OACPC,OAAQ,QAEV,SAAU,CACRuK,SAAU,WACVE,IAAK,EACL0E,KAAM,EACNpP,MAAO,OACPC,OAAQ,QAEV,UAAW,CACTuK,SAAU,WACVE,IAAK,EACL0E,KAAM,EACNpP,MAAO,OACPC,OAAQ,QAEV,kBAAmB,CACjBuK,SAAU,WACV6E,OAAQ,EACR1E,MAAO,GAET,aAAc,CACZ3K,MAAO,MACPC,OAAQ,OACRqP,WAAY,QAEd,gBAAiB,CACftP,MAAO,QACPC,OAAQ,UAiEZ,UA7DmB,W,cACX0D,GAAY,IAAA4L,aAAY,EAAAC,qBAExB/P,EAAoD,QAA9C,GADS,IAAAT,iBAAgB,EAAAyQ,oBACZC,kBAAkB,gBAAe,eAAEjQ,IAEtDgP,EAAU9K,EAAU8K,QAEpBkB,EAA4C,QAA7B,OAAA/L,gBAAe6K,EAAQmB,cAAM,QAAI,KAChDC,EAAO,UAAMC,iBAAiBH,GAE9BjB,EAA+D,QAA/C,OAAA9K,gBAAeD,EAAUoM,8BAAsB,QAAI,KACnEC,EAA0D,QAAtC,OAAApM,gBAAeD,EAAUsM,qBAAa,QAAI,KAE9DC,EAA0D,QAA7C,OAAAtM,gBAAeD,EAAUwM,4BAAoB,QAAI,EAAAlM,UAmBpE,OAjBA,UAAMM,WAAU,WACd,IAAM6L,EAAQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAClD,GAAIJ,EAAMtK,IAAI,QAAS,CACrB,IAAM2K,EAAOL,EAAMrK,IAAI,QACvB0I,EAAQiC,oBAAoBD,MAE7B,IAEH,UAAMlM,WAAU,WACd,GAAKyL,EAAL,CAGA,IAAMI,EAAQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAClDJ,EAAM/J,IAAI,OAAQ2J,GAClBM,OAAOK,QAAQC,aAAa,GAAI,GAAI,WAAIR,EAAMS,gBAC7C,CAACb,IAGF,wBAACxO,EAAI,KACH,wBAAC,UAAe,CAACkC,UAAU,iBAAiBC,UAAWA,GACpDlE,GAAO,wBAAC,UAAS,CAACiE,UAAU,MAAMjE,IAAKA,EAAKkE,UAAWA,IACxD,wBAAC,UAAI,CACHD,UAAU,OACVmM,KAAMA,QAAAA,EAAQ,EAAAiB,gBACdnN,UAAWA,IAEb,wBAAC,EAAAgI,KAAI,CAACjI,UAAU,gBACd,wBAAC,EAAAwI,YAAW,KACV,wBAAC,EAAAY,WAAU,CAACC,QAAQ,Y,IAChBmD,EAAWnP,EAAEgQ,QAAQ,G,KAAMb,EAAWlP,EAAE+P,QAAQ,G,QAK1D,+BAAKrN,UAAU,YACf,wBAAC,UAAoB,CACnBA,UAAU,aACV+K,QAASA,EACTC,cAAeA,EACf9O,YAAa,SAACmL,GAAS,OAAApH,EAAUqN,uBAAuBjG,IACxDlL,WAAY,WAAM,OAAA8D,EAAUqN,uBAAuB,Y,qzBClH3D,cAEA,SAEA,UACA,UAEA,UAEA,UAMA,aAqBE,WAAkDC,GAAlD,WAAkD,KAAAA,SAAAA,EAlBjC,KAAAC,eAAiB,IAAI,EAAAC,gBAAsB,EAAArN,UAK3C,KAAAsN,aAAe,IAAI,EAAAD,gBAAuB,EAAAlN,WAC1C,KAAAoN,YAAc,IAAI,EAAAF,gBAAwB,GAC1C,KAAAG,uBACf,IAAI,EAAAH,gBAAwC,MAE7B,KAAAI,sBAAwB,IAAI,EAAAJ,gBAC3C,EAAAlN,WAGe,KAAAuN,oBAAsB,IAAI,EAAAL,gBACzC,MAIAM,KAAKC,cAAgBD,KAAKR,SAASrB,MAAM+B,MACvC,IAAAlS,MAAI,SAACsB,GAAM,OAAAkQ,EAASW,qBAEtBH,KAAKI,sBAAuB,IAAAC,eAAc,CACxCL,KAAKF,sBACLE,KAAKL,aACLK,KAAKJ,cACJM,MAAK,IAAAlS,MAAI,SAAC,G,IAACsS,EAAD,OAAU,GAAM,SAAKC,eAAeD,OA+HrD,OA5HE,sBAAI,sBAAO,C,IAAX,WACE,OAAON,KAAKR,U,gCAGd,sBAAI,2BAAY,C,IAAhB,WACE,OAAOQ,KAAKC,e,gCAGd,sBAAI,4BAAa,C,IAAjB,WACE,OAAOD,KAAKP,gB,gCAGd,sBAAI,0BAAW,C,IAAf,WACE,OAAOO,KAAKL,c,gCAEd,sBAAI,yBAAU,C,IAAd,WACE,OAAOK,KAAKJ,a,gCAGd,sBAAI,kCAAmB,C,IAAvB,WACE,OAAOI,KAAKI,sB,gCAGd,sBAAI,iCAAkB,C,IAAtB,WACE,OAAOJ,KAAKD,qB,gCAGd,sBAAI,oCAAqB,C,IAAzB,WACE,OAAOC,KAAKH,wB,gCAGd,YAAAjI,KAAA,SAAK4I,EAAeC,QAAA,IAAAA,IAAAA,EAAA,MAClB,IAAMC,EAAYD,EAAKT,KAAKO,eAAeE,GAAM,EAAAjO,UAE3CoF,EADQoI,KAAKJ,YAAY5S,MACVwT,EAErB,GADAR,KAAKJ,YAAYe,KAAK/I,GAClB6I,EAAI,CACN,IAAMG,EAAQZ,KAAKO,eAAeE,GAC5B,GAAQ,IAAAI,eAAcD,EAAOF,GACnCV,KAAKL,aAAagB,MAAK,IAAAG,UAASd,KAAKL,aAAa3S,MAAO,MAI7D,YAAAmL,IAAA,SAAI4I,EAAYC,EAAYC,QAAA,IAAAA,IAAAA,GAAA,GAC1B,IAAMC,EAAID,EAAY,EAAIjB,KAAKJ,YAAY5S,MAAQ,EACnDgT,KAAKL,aAAagB,MAChB,IAAAG,UAASd,KAAKL,aAAa3S,MAAO,CAAEsC,EAAGyR,EAAKG,EAAG3R,EAAGyR,EAAKE,MAI3D,YAAA5I,YAAA,SAAYR,EAAiBC,GAC3BiI,KAAKF,sBAAsBa,KAAK,CAAErR,EAAGwI,EAASvI,EAAGwI,KAGnD,YAAAV,kBAAA,SAAkB9I,EAAeC,GAC/B,IAAI2S,EAAWnB,KAAKP,eAAezS,MAUnC,GATuB,IAAnBmU,EAAS5S,OAAmC,IAApB4S,EAAS3S,SACnC2S,EAAW,CACT5S,MAA2B,EAApB,EAAA+E,kBACP9E,OAA4B,EAApB,EAAA8E,oBAIZ0M,KAAKP,eAAekB,KAAK,CAAEpS,MAAK,EAAEC,OAAM,IAE1B,IAAVD,GAA0B,IAAXC,EAAnB,CAIA,IAAI4S,EAEFA,EADE7S,EAAQC,EACID,EAAQ4S,EAAS5S,MAEjBC,EAAS2S,EAAS3S,OAQlCwR,KAAKJ,YAAYe,KAAKX,KAAKJ,YAAY5S,MAAQoU,KAIjD,YAAAC,oBAAA,SAAoB/H,GAClB0G,KAAKD,oBAAoBY,KAAKrH,GAC9B0G,KAAKH,uBAAuBc,KAC1BrH,EAAO0G,KAAKR,SAAS8B,eAAehI,GAAQ,OAIhD,YAAAiG,uBAAA,SAAuBjG,GACrB0G,KAAKH,uBAAuBc,KAAKrH,GACjC0G,KAAKD,oBAAoBY,KAAKrH,EAAOA,EAAKiI,SAAW,OAG/C,YAAAhB,eAAR,SAAuBiB,GACrB,IAAMtO,EAAa8M,KAAKJ,YAAY5S,MAC9B,EAA6BgT,KAAKL,aAAa3S,MAA1CmG,EAAO,IAAKC,EAAO,IAS9B,MAAO,CACL9D,EAAGkS,EAAElS,EAAI4D,EAAa,EAAAI,kBAAoBH,EAC1C5D,GAAuD,GAAnDiS,EAAEjS,EAAI2D,EAAa,EAAAI,kBAAoBF,KAIvC,YAAAqO,eAAR,SAAuBD,GACrB,IAAMtO,EAAa8M,KAAKJ,YAAY5S,MAC9B,EAA6BgT,KAAKL,aAAa3S,MAA1CmG,EAAO,IAAKC,EAAO,IAG9B,MAAO,CACL9D,GAAIkS,EAAElS,EAAI,EAAAgE,kBAAoBH,GAAWD,EACzC3D,IAAKiS,EAAEjS,EAAI,EAAA+D,kBAAoBF,GAAWF,IAzJhB,GAqBjB,SAAAwO,QAAO,EAAAC,eArBT5D,GAAb,GAAa,EAAAA,oBAAAA,G,0JCfb,iBACA,UAAe,W,wwBCDf,iBACA,aACA,UAEA,UACA,UACA,UAEA,UAGA,UAMA,aACA,aACA,UAQMhO,GAAO,IAAAnD,QAAO,MAAP,EAAc,SAAC,G,IAAE2L,EAAK,QAAO,OACxCtI,SAAU,SACV8I,SAAU,WACV,kBAAmB,CACjBA,SAAU,WACVE,IAAKV,EAAMM,QAAQ,GACnBK,MAAOX,EAAMM,QAAQ,IAEvB,oBAAqB,CACnBE,SAAU,WACVE,IAAKV,EAAMM,QAAQ,GACnB8E,KAAMpF,EAAMM,QAAQ,IAEtB,cAAe,CACbJ,QAAS,QACTM,SAAU,WACV4E,KAAM,EACN1E,IAAK,OA+EH2I,EAAW,SAAC,G,MAChBC,EAAI,OACJC,EAAO,UACPvI,EAAS,YACTpL,EAAW,cACXC,EAAU,aAEJ8D,GAAY,IAAA6P,oBACZ7Q,EAA4C,QAApC,OAAAiB,gBAAeD,EAAUO,mBAAW,QAAI,EAC9CuP,EAA4BH,EAAI,OAAxBI,EAAoBJ,EAAI,OAAhBK,EAAYL,EAAI,QAElCM,EAAkB,UAAMzU,aAAY,WACxCS,EAAY0T,KACX,CAACA,EAAM1T,IAEV,GAAsB,IAAlB6T,EAAOI,OACT,OAAO,KAGT,IAAI9E,EAAQ,QACZ,OAAQ2E,EAAOI,MACb,IAAK,iBACH/E,EAAQ4E,EAAU,MAAQ,QAC1B,MACF,IAAK,eACH5E,EAAQ,OAIRwE,IACFxE,GAAQ,aAAMA,GAAOgF,QAAQ,IAAKC,OAGpC,IAAMrT,EAAO2S,EAAKG,OAAO7S,QACvB,SAACqT,EAAKhB,GAAM,gBAAGgB,EAAG,aAAKhB,EAAElS,EAAC,YAAIkS,EAAEjS,KAChC,YAAKyS,EAAO,GAAG1S,EAAC,YAAI0S,EAAO,GAAGzS,EAAC,MAGjC,OACE,gCACEN,EAAGC,EACHS,OAAQ2N,EACR1N,aAAc2J,EAAY,EAAI,GAAKrI,EACnClC,KAAK,OACLb,YAAagU,EACb/T,WAAYA,KAwElB,UAhMa,SAAC,G,YAAE6D,EAAS,YAAEmM,EAAI,OAAElM,EAAS,YAClC,EAA2D,QAAvC,OAAAC,gBAAeD,EAAUE,sBAAc,QAAI,EAAAC,SAA7D9D,EAAK,QAAEC,EAAM,SACf8D,EAA8C,QAArC,OAAAH,gBAAeD,EAAUK,oBAAY,QAAI,EAAAC,UAClDtB,EAA4C,QAApC,OAAAiB,gBAAeD,EAAUO,mBAAW,QAAI,EAChDgQ,EAA4D,QAA5C,OAAAtQ,gBAAeD,EAAUwQ,2BAAmB,QAAI,KAEhEC,EAAkB,UAAMjV,aAC5B,SAACmU,GACC3P,EAAUmP,oBAAoBQ,EAAKI,UAErC,CAAC/P,IAGG,IAsHR,SACE0Q,EACAd,EACAe,G,yBAAA,IAAAA,IAAAA,EAAA,GAEA,IAAIC,EAA+B,KAC/BC,EAAgB,EAEdC,EAA4B,GAC5BC,EAA2B,GAE7BC,EAA8B,K,IAElC,IAAoB,QAAAN,GAAS,8BAAE,CAA1B,IAAMO,EAAK,QACK,MAAfL,GAAuBA,EAAYb,QAAUkB,EAAMlB,SACnC,MAAdiB,GAAsBA,IAAeC,EAAMlB,SAC7Cc,IACAG,EAAaC,EAAMlB,QAErBa,EAAc,CACZd,OAAQ,GACRC,OAAQkB,EAAMlB,OACdC,QAASa,EAAgB,GAAM,GAEjCC,EAAc/W,KAAK6W,IAGrBA,EAAYd,OAAO/V,KAAKkX,I,iGAG1BL,EAAc,K,IAEd,IAAoB,QAAAhB,GAAO,8BAAhBqB,EAAK,QACK,MAAfL,GAAuBA,EAAYb,QAAUkB,EAAMlB,SACnC,MAAdiB,GAAsBA,IAAeC,EAAMlB,SAC7Cc,IACAG,EAAaC,EAAMlB,QAErBa,EAAc,CACZd,OAAQ,GACRC,OAAQkB,EAAMlB,OACdC,QAASa,EAAgB,GAAM,GAEjCE,EAAahX,KAAK6W,IAGpBA,EAAYd,OAAO/V,KAAKkX,G,iGAG1B,GAAIN,EAAO,EAAG,C,IACZ,IAAmB,QAAAG,GAAa,+BAArBnB,EAAI,SACRG,QAAS,IAAAoB,YAAWvB,EAAKG,OAAQa,GAAM,G,qGAE9C,IAAmB,QAAAI,GAAY,8BAAE,CAA5B,IAAMpB,KAAI,SACRG,QAAS,IAAAoB,YAAWvB,EAAKG,OAAQa,GAAM,I,kGAIhD,MAAO,CAACG,EAAeC,GAhLgBI,CACrCjF,EAAKkF,gBACLlF,EAAKmF,eACN,GAHMC,EAAc,KAAEP,EAAY,KAKnC,OACE,wBAAClT,EAAI,CAACkC,UAAWA,GACf,wBAAC,EAAAwR,qBAAqBC,SAAQ,CAAC1W,MAAOkF,GACpC,+BACED,UAAU,WACV1D,MAAOA,EACPC,OAAQA,EACRC,QAAS,cAAOF,EAAK,YAAIC,IAGzB,6BAAGG,UAAW,gBAASuC,EAAK,MAC1B,6BACEvC,UAAW,oBAAa,EAAA2E,kBAAiB,aAAK,EAAAA,kBAAiB,MAE/D,6BAAG3E,UAAU,gBACX,6BAAGA,UAAW,oBAAa2D,EAAOhD,EAAC,aAAKgD,EAAO/C,EAAC,MAC7CiU,EAAexV,KAAI,SAAC6T,EAAMzE,GAAM,OAC/B,wBAACwE,EAAQ,CACP1T,IAAKkP,EACLyE,KAAMA,EACNC,SAAS,EACTvI,UAAWsI,EAAKI,SAAWQ,EAC3BtU,YAAawU,EACbvU,WAAY,WAAM,OAAA8D,EAAUmP,oBAAoB,YAGnD4B,EAAajV,KAAI,SAAC6T,EAAMzE,GAAM,OAC7B,wBAACwE,EAAQ,CACP1T,IAAKkP,EACLyE,KAAMA,EACNC,SAAS,EACTvI,UAAWsI,EAAKI,SAAWQ,EAC3BtU,YAAawU,EACbvU,WAAY,WAAM,OAAA8D,EAAUmP,oBAAoB,iBAQ7DoB,GACC,wBAAC,UAAW,CAACxQ,UAAU,iBAAiBmK,KAAMqG,IAEhD,wBAAC,UAAW,CAACxQ,UAAU,eAAemM,KAAMA,Q,2MC9GpD,iBAca,EAAAqF,qBAAuB,UAAME,cACxC,MAGF,8BACE,IAAMC,EAAgB,UAAMC,WAAW,EAAAJ,sBACvC,IAAKG,EACH,MAAM,IAAIE,MAAM,kCAElB,OAAOF,I,myBCvBT,iBACA,UAEA,UAEA,UACA,UAOA,UAiFA,SAAgBG,EACdZ,GAEA,MAAsB,mBAAfA,EAAMd,KALf,UAxEoB,SAAC,G,IAAEpQ,EAAS,YAAEmM,EAAI,OAC9B4F,GAAqB,IAAAzW,iBAAgB,EAAAC,oBAErC,IACJ,UAAMyW,SAAQ,W,UACNC,EAAY9F,EAAKkF,gBAAgBa,OAAO/F,EAAKmF,eAE7Ca,GADU,IAAAC,MAAKH,EAAUlW,KAAI,SAACmV,GAAU,OAAAA,EAAMlB,WACxBqC,OAAOP,GAE/BQ,EAAW,EACXC,EAA+C,G,IACnD,IAA+B,QAAAJ,GAAW,8BAAE,CAA/B,IAAApJ,EAAY,qBACjB/M,EAAa+V,EAAmBS,kBAAkBzJ,GACnD/M,IAGLsW,GAAYtW,EAAWyW,MACvBF,EAAqBvW,EAAW9B,KACM,QAAnC,EAAAqY,EAAqBvW,EAAW9B,WAAG,QAAI,GAAK,I,iGAkBjD,MAAO,CACLoY,GAhBa,IAAAI,kBAAiBvG,EAAKkF,iBAEZc,EAAYhC,QACN,IAAAiC,MAC7BD,EAAYpW,KAAI,SAACsB,GAAM,OAAAA,EAAE0L,iBACzBoH,OAEarO,KAAK6Q,MAClB,IAAAC,KACEC,OAAOC,KAAKP,GAAsBxW,KAAI,SAACE,GACrC,OAAA6F,KAAKiR,IAAIR,EAAqBtW,GAAM,WAYzC,CAACkQ,EAAM,EAAA5Q,qBAAoB,GAxCzB+W,EAAQ,KAAEnC,EAAM,KAAE6C,EAAgB,KAAEC,EAAsB,KAAEC,EAAM,KA0CzE,OACE,wBAAC,EAAAjL,KAAI,CAACjI,UAAWA,EAAWqJ,QAAQ,YAClC,wBAAC,EAAAb,YAAW,KACV,wBAAC,EAAAY,WAAU,CAACC,QAAQ,MAAI,WACxB,mCACE,wBAAC,EAAAD,WAAU,2BACX,wBAAC,EAAAA,WAAU,CAACC,QAAQ,YACjB2J,E,KAAoBC,E,aAGzB,mCACE,wBAAC,EAAA7J,WAAU,4BACX,wBAAC,EAAAA,WAAU,CAACC,QAAQ,YAAY6J,EAAO7F,QAAQ,KAEjD,mCACE,wBAAC,EAAAjE,WAAU,oBACX,wBAAC,EAAAA,WAAU,CAACC,QAAQ,YAAYiJ,IAElC,mCACE,wBAAC,EAAAlJ,WAAU,2BACX,wBAAC,EAAAA,WAAU,CAACC,QAAQ,YAAY8G,EAAO9C,QAAQ,QASzD,uB,0JC9FA,iBAEA,UAEA,UAGA,UAGA,UA4BM8F,GAAoB,IAAAxY,QAAO,MAAP,CAAc,CACtC,mBAAoB,CAClB2B,MAAO,OACPC,OAAQ,OACRiK,QAAS,OACT4M,eAAgB,SAChBjM,WAAY,YAGVkM,EAAgB,SAAC,G,MAAElJ,EAAI,OAErBnO,EAEL,QAFkB,GADQ,IAAAV,iBAAgB,EAAAC,oBACLiX,kBACpCrI,EAAKpB,qBACN,QAAI,CACHlL,KAAM,UACNZ,KAAM,IAGFA,EAAOjB,EAAWiB,KAAKC,QAC3B,SAACD,EAAME,GACL,OAAAF,EACA,YAAKE,EAAMC,MAAMC,EAAC,YAAIF,EAAMC,MAAME,EAAC,cAAMH,EAAMI,GAAGF,EAAC,YAAIF,EAAMI,GAAGD,EAAC,YAAIH,EAAMK,GAAGH,EAAC,YAAIF,EAAMK,GAAGF,EAAC,YAAIH,EAAMM,IAAIJ,EAAC,YAAIF,EAAMM,IAAIH,KAC5H,UAEF,OACE,wBAAC6V,EAAiB,KAChB,wBAAC,EAAA/J,WAAU,CAACC,QAAQ,MAAI,cACxB,wBAAC,EAAAD,WAAU,CAACC,QAAQ,YAAYrN,EAAW6B,MAC3C,mCACE,wBAAC,EAAAuL,WAAU,yBACX,wBAAC,EAAAA,WAAU,CAACC,QAAQ,YAAYc,EAAKlB,eAEvC,+BAAKjJ,UAAU,iBACb,+BACE1D,MAAM,QACNC,OAAO,QACPC,QAAS,WAAI,EAAAC,sBAAqB,aAAK,EAAAA,sBAAqB,YAClC,EAAxB,EAAAA,sBAAyB,YACC,EAAxB,EAAAA,uBACJC,UAAU,gBAEV,kCAAQC,GAAI,EAAGC,GAAI,EAAGC,EAAG,EAAAC,cAAeC,KAAK,SAC7C,gCAAMC,EAAGC,EAAMS,OAAO,QAAQC,YAAa,GAAKZ,KAAK,aAO/D,UAtEoB,SAAC,G,IACfuW,EADiBnJ,EAAI,OAAEnK,EAAS,YAEpC,MACO,mBADCmK,EAAKiG,KAKF,MAHPkD,EAAU,wBAACD,EAAa,CAAClJ,KAAMA,IAOjC,wBAAC,EAAAlC,KAAI,CAACjI,UAAWA,EAAWqJ,QAAQ,YAClC,wBAAC,EAAAb,YAAW,KAAE8K,O,0JC7BpB,iBACA,UAAe,W,sOCDf,iBACA,SAQA,aAEMC,GAAU,IAAAC,gBAAe,WAEzBC,EAAmB,UAAM/B,cAAyB,IAAI,EAAAgC,WAEtDrU,EAAY,IAAI,EAAAqU,UAiBtB,SAAgBC,IACd,OAAO,UAAM/B,WAAW6B,GAjB1BpU,EAAUqD,KAAK,EAAAgR,WAAWE,gBAAgBvU,GAC1CA,EAAUwU,KAAKN,GAEf,UAAelU,EAKF,EAAAyU,kBAAoB,SAAC,G,IAAEjP,EAAQ,WAC1C,OACE,wBAAC4O,EAAiBhC,SAAQ,CAAC1W,MAAOsE,GAC/BwF,IAKP,mBAIA,2BAAmCkP,GAEjC,OADkBJ,IACDtR,IAAI0R,IAGvB,uBACEA,EACAC,GAEA,IAAM3U,EAAYsU,IACZM,EAAS,UAAMjP,SAIrB,OAHsB,MAAlBiP,EAAO3O,UACT2O,EAAO3O,QAAUjG,EAAU6U,OAAOH,EAAYC,IAEzCC,EAAO3O,U,sdClDhB,cAKA,UAoCA,SAAgB6O,EAAchX,EAAyBiX,GACrD,GAAIA,EAAI,GAAKA,EAAI,EACf,MAAM,IAAIvC,MAAM,uCAGlB,IAAMwC,GAAM,EAAID,IAAM,EAAIA,IAAM,EAAIA,GAC9BE,EAAK,EAAIF,GAAK,EAAIA,IAAM,EAAIA,GAC5BG,EAAK,EAAIH,EAAIA,GAAK,EAAIA,GACtBI,EAAKJ,EAAIA,EAAIA,EAEnB,MAAO,CACL/W,EACEgX,EAAKlX,EAAMC,MAAMC,EAAIiX,EAAKnX,EAAMI,GAAGF,EAAIkX,EAAKpX,EAAMK,GAAGH,EAAImX,EAAKrX,EAAMM,IAAIJ,EAC1EC,EACE+W,EAAKlX,EAAMC,MAAME,EAAIgX,EAAKnX,EAAMI,GAAGD,EAAIiX,EAAKpX,EAAMK,GAAGF,EAAIkX,EAAKrX,EAAMM,IAAIH,GAhC9E,4BACEmX,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAO,CACL5X,MAAO,CAAEC,EAAGoX,EAAQnX,EAAGoX,GACvBnX,GAAI,CAAEF,EAAGsX,EAAKrX,EAAGsX,GACjBpX,GAAI,CAAEH,EAAGwX,EAAKvX,GACdG,IAAK,CAAEJ,EAAG0X,EAAMzX,EAAG0X,KAIvB,kBAkBA,IAAMC,EAAmB,IAAI9S,IAC7B,SAAgB+S,EACd/X,GAGA,IAAMgY,EAAa,EAAAC,+BACbC,EAASJ,EAAiB5S,IAAIlF,GACpC,QAAe1C,IAAX4a,EACF,OAAOA,EAOT,IAJA,IAAIlF,EAAS,EAETmF,EAAgBnB,EAAchX,EAAO,GAEhCoY,EAAQ,EAAGA,GAASJ,EAAYI,IAAS,CAChD,IAAMrE,EAAQiD,EAAchX,EAAOoY,EAAQJ,GACrCK,GAAY,IAAA5G,eAAcsC,EAAOoE,GACvCnF,IAAU,IAAAsF,gBAAeD,GACzBF,EAAgBpE,EAKlB,OAFA+D,EAAiBtS,IAAIxF,EAAOgT,GAErBA,EAvBT,mBA0BA,IAAMuF,EAAmB,IAAIvT,IAC7B,yBACEhF,G,QAIMyJ,EAAkB,EAAA+O,qBAUlBN,EAASK,EAAiBrT,IAAIlF,GACpC,QAAe1C,IAAX4a,EACF,OAAOA,EAGT,IAAMtF,EAAkB,GAEpB6F,EAAoB,EACpBN,EAAuBnY,EAAMC,MAEjC2S,EAAO/V,KAAKsb,GAGZ,IADA,IAAMO,EAAmB/T,KAAKgU,KArBH,EAqBQZ,EAAe/X,GAAsB,IAC/DoY,EAAQ,EAAGA,GAASM,EAAkBN,IAAS,CACtD,IACMrE,EAAQiD,EAAchX,EADlBoY,EAAQM,GAGlB,IADAD,IAAqB,IAAAG,eAAcT,EAAepE,GAC3C0E,GAAqBhP,GAAS,CACnCgP,GAAwChP,EACxC,IAAMoP,GAAa,IAAAnH,UACjBqC,GACA,IAAA+E,aACE,IAAAC,iBAAe,IAAAtH,eAAc0G,EAAepE,IAC5C0E,IAGJ7F,EAAO/V,KAAKgc,GACZV,EAAgBU,EAElBV,EAAgBpE,EAGd0E,EAAoB,GACtB7F,EAAO/V,KAAKma,EAAchX,EAAO,IAGnC0V,OAAOsD,OAAOpG,G,IACd,IAAgB,QAAAA,GAAM,8BAAE,CAAnB,IAAMR,EAAC,QACVsD,OAAOsD,OAAO5G,I,iGAIhB,OAFAmG,EAAiB/S,IAAIxF,EAAO4S,GAErBA,I,yLChJI,EAAA4F,qBAAuB,IACvB,EAAAP,+BAAiC,IACjC,EAAA/T,kBAAoB,GACpB,EAAAvE,cAAgB,IAChB,EAAAL,sBAAwB,I,uhCCJrC,iBAUA,8BAAmCwF,GAC3B,QAAkB8C,EAAMtE,SAA6B,CACzDiL,KAAM,EACN1E,IAAK,EACLC,MAAO,EACP0E,OAAQ,EACRrP,MAAO,EACPC,OAAQ,IACR,GAPK6L,EAAI,KAAEgO,EAAO,KAqCpB,OA5BArR,EAAMI,iBAAgB,WACpB,GAAKlD,EAAIqD,QAAT,CAIA,IAAM+Q,EAAW,IAAIC,gBAAe,WAClC,IAAMC,EAAKtU,EAAIqD,QACf,GAAKiR,EAAL,CAGA,IAAMC,EAAID,EAAGE,wBACbL,EAAQ,CACNpP,IAAKwP,EAAExP,IACP0E,KAAM8K,EAAE9K,KACRzE,MAAOuP,EAAEvP,MACT0E,OAAQ6K,EAAE7K,OACVrP,MAAOka,EAAEla,MACTC,OAAQia,EAAEja,aAMd,OAFA8Z,EAASK,QAAQzU,EAAIqD,SAEd,WACL+Q,EAASM,iBAEV,CAAC1U,IAEGmG,I,suBChDT,iBAEA,0BAIEnG,EACAmO,EACAwG,EAIAzc,GAEA4K,EAAMlE,WAAU,WACd,GAAKoB,EAAIqD,QAAT,CAKA,IAAMuR,EAAe5U,EAAIqD,QAGzB,OADAuR,EAAaC,iBAAiB1G,EAAMwG,EAAUzc,GACvC,WACL0c,EAAaE,oBAAoB3G,EAAMwG,EAAUzc,OAElD,CAACiW,EAAMwG,EAAU3U,EAAK9H,M,+dC1B3B,iBACA,UAMA,0BACE6c,EACA,G,IAAA,aAAiD,GAAE,EAAjDC,EAAa,gBAAEC,EAAO,UAElB,IAAgB,UAAMzW,cAAwBhG,GAAU,GAAvD0c,EAAG,KAAEC,EAAM,KAsBlB,OApBA,UAAMvW,WAAU,WACd,GAAImW,EAAY,CACd,GAAIA,aAAsB,EAAAK,WAAY,CACpC,IAAM,EAAeL,EAAWM,UAAU,CACxC5I,KAAM,SAACyI,GACDF,EACF,UAAMnN,iBAAgB,WAAM,OAAAsN,EAAOD,MAEnCC,EAAOD,IAGX1U,MAAOyU,IAET,OAAO,WAAM,SAAaK,eAE1BH,EAAOJ,MAGV,CAACA,EAAYE,EAASD,IAElBE,I,8xBCjCT,QAEA,iBACA,YAEA,UACA,YAEA,WAEMK,EAASC,SAASC,eAAe,QAC1BC,EAASC,WAAWJ,GAC5BK,OACH,gBAAC9S,EAAM+S,WAAU,KACf,gBAAC,EAAAhE,kBAAiB,KAChB,gBAAC,UAAa,KACZ,gBAAC,UAAG,W,+HChBZ,cAEa,EAAAiE,mBAAqBlF,OAAOsD,OAAqB,IAc9D,wBAA6Bza,GACnB,IAAAsc,EAAuCtc,EAAC,QAA/Buc,EAA8Bvc,EAAC,OAAvBuK,EAAsBvK,EAAC,SAAbwc,EAAYxc,EAAC,QAChD,MAAO,CAELgK,YAAa,EAAAyS,wBAA0BD,EAAUF,EACjDC,OAAM,EACNhS,SAAQ,IAIZ,6BAAkCmS,GAChC,SAAUA,EAAMF,SAAWE,EAAMH,QAAUG,EAAMJ,SAAWI,EAAMnS,Y,itBC1BpE,cAEA,UAcA,SAAgByM,EAAiB2F,GAC/B,GAAIA,EAAWlI,QAAU,EACvB,OAAO,EAKT,IAFA,IAAIA,EAAS,EACTmF,EAAgB+C,EAAW,GACtBlN,EAAI,EAAGA,EAAIkN,EAAWlI,OAAQhF,IACrCgF,IAAU,IAAA4F,eAAcT,EAAe+C,EAAWlN,IAClDmK,EAAgB+C,EAAWlN,GAG7B,OAAOgF,EAZT,qBAeA,IAAMmI,EAAwB,IAAInW,IAClC,kCAAuCkW,GACrC,GAAIA,EAAWlI,QAAU,EACvB,OAAO,EAGT,IAAIA,EAASmI,EAAsBjW,IAAIgW,GACvC,YAAe5d,IAAX0V,IAIJA,EAASuC,EAAiB2F,GAC1BC,EAAsB3V,IAAI0V,EAAYlI,IAJ7BA,GASX,sCACE/S,EACAmb,EACAnO,EACAxD,G,WAAA,IAAAA,IAAAA,EAAkB,EAAA+O,sBAElB,IAAM0C,EAAyB,GAC/B,GAAkC,KAA9B,IAAA5C,gBAAe8C,GACjB,MAAM,IAAI1G,MAAM,4BAGlB,GAAIzH,GAAY,EACd,MAAO,GAKT,IAFA,IAAIkL,EAAgBlY,EAChBwY,EAAoBxL,EACjBwL,GAAqBhP,GAAS,CACnC,IAAMsK,GAAQ,IAAArC,UAASyG,GAAe,IAAAW,YAAWsC,EAAW3R,IAC5DyR,EAAWre,KAAKkX,GAChB0E,GAAqBhP,EACrB0O,EAAgBpE,EAYlB,OATI0E,EAAoB,GACtByC,EAAWre,MACT,IAAA6U,UACmC,QAAjC,EAAAwJ,EAAWA,EAAWlI,OAAS,UAAE,QAAI,EAAA5P,WACrC,IAAA0V,YAAWsC,EAAW3C,KAKrByC,GAGT,4BACEA,EACAhY,GAEA,OAAOgY,EAAWtc,KAAI,SAACmV,GAAU,WAAArC,UAASqC,EAAO7Q,OAGnD,oCACEmY,EACAC,GAEA,IAAMC,EAAchG,EAAiB8F,GAErC,GAAIA,EAAMrI,QAAU,GAAKuI,GAAeD,EACtC,MAAO,CAACD,EAAO,IAQjB,IALA,IAAMG,EAAa,CAACH,EAAM,IACpBI,EAAiB,GAEnBC,EAAc,EACdvD,EAAgBkD,EAAM,GACjBrN,EAAI,EAAGA,EAAIqN,EAAMrI,OAAQhF,IAAK,CACrC,IAAMoE,EAAIiJ,EAAMrN,GACV,GAAS,IAAA4K,eAAcxG,EAAG+F,GAChC,GAAIuD,EAAc,GAAUJ,EAAY,CACtC,IAAMK,EAAkBL,EAAaI,EAC/B7C,GAAa,IAAA+C,mBACjBzD,EACA/F,EACAuJ,EAAkB,GAEpBH,EAAM3e,KACJ6Y,OAAOmG,OAAO,GAAI1D,EAAe,CAAEjY,EAAG2Y,EAAW3Y,EAAGC,EAAG0Y,EAAW1Y,KAEpEsb,EAAU5e,KAAI,MAAd4e,EAAS,GACP/F,OAAOmG,OAAO,GAAIzJ,EAAG,CAAElS,EAAG2Y,EAAW3Y,EAAGC,EAAG0Y,EAAW1Y,KAAI,EACvDkb,EAAMS,MAAM9N,KAAE,IAEnB,MAEA0N,GAAe,EACfF,EAAM3e,KAAKuV,GACX+F,EAAgB/F,EAIpB,MAAO,CAACoJ,EAAOC,K,aChHjB,SAAgBnD,EAAelG,GAC7B,OAAOzN,KAAK6Q,KAAKpD,EAAElS,EAAIkS,EAAElS,EAAIkS,EAAEjS,EAAIiS,EAAEjS,G,gMAhB1B,EAAAiD,UAA6BsS,OAAOsD,OAAO,CAAE9Y,EAAG,EAAGC,EAAG,IAEnE,uBAA4B4b,EAAU1C,GACpC,OACE1U,KAAKqX,IAAID,EAAE7b,EAAImZ,EAAEnZ,GAAKsN,OAAOyO,SAAWtX,KAAKqX,IAAID,EAAE5b,EAAIkZ,EAAElZ,GAAKqN,OAAOyO,SAIzE,sBAA2B7J,EAAU8J,GACnC,MAAO,CACLhc,EAAGkS,EAAElS,EAAIgc,EACT/b,EAAGiS,EAAEjS,EAAI+b,IAIb,mBAIA,yBAA8B9b,EAAWC,GACvC,IAAMsR,EAAKvR,EAAGF,EAAIG,EAAGH,EACf0R,EAAKxR,EAAGD,EAAIE,EAAGF,EACrB,OAAOwE,KAAK6Q,KAAK7D,EAAKA,EAAKC,EAAKA,IAGlC,oBAAyBmK,EAAU1C,GACjC,MAAO,CACLnZ,EAAG6b,EAAE7b,EAAImZ,EAAEnZ,EACXC,EAAG4b,EAAE5b,EAAIkZ,EAAElZ,IAIf,yBAA8B4b,EAAU1C,GACtC,MAAO,CACLnZ,EAAG6b,EAAE7b,EAAImZ,EAAEnZ,EACXC,EAAG4b,EAAE5b,EAAIkZ,EAAElZ,IAIf,0BAA+BiS,GAC7B,IAAM+J,EAAY7D,EAAelG,GACjC,OAAkB,IAAd+J,EACK,EAAA/Y,UAGF,CACLlD,EAAGkS,EAAElS,EAAIic,EACThc,EAAGiS,EAAEjS,EAAIgc,IAIb,6BACElc,EACAK,EACA8b,GAEA,MAAO,CACLlc,EAAGD,EAAMC,GAAKI,EAAIJ,EAAID,EAAMC,GAAKkc,EACjCjc,EAAGF,EAAME,GAAKG,EAAIH,EAAIF,EAAME,GAAKic,K,6MC/DrC,iBAQMC,EAAc,UAASC,IAAM,UAASA,GAAGC,QAAW,UAC7C,EAAAC,OAPM,WAOsBC,KAAKJ,GAC1C,UAPW,kBAQJI,KAAKJ,GACZ,MARa,SASJI,KAAKJ,GACd,QACA,UAES,EAAAK,QAAkB,EAElB,EAAA1B,wBAAyC,QAAfqB,G,mcCnBvC,aAEA,UAKA,2BAQA,OAPE,YAAA1d,eAAA,WACE,OAAO,EAAAqW,aAGT,YAAAK,kBAAA,SAAkBtY,G,MAChB,OAA2C,QAApC,IAAAiY,YAAY2H,MAAK,SAACzc,GAAM,OAAAA,EAAEnD,KAAOA,YAAG,QAAI,MANpB,IAF9B,IAAA6f,eACA,IAAAC,cACYze,GAAb,GAAa,EAAAA,mBAAAA,G,qFCPb,cACA,UAEa,EAAA4W,YAAsC,CACjD,CACEjY,IAAI,IAAA6O,cAAa,aAEjBlL,KAAM,aAENwN,MAAO,UAEPoH,MAAO,GAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,KAAQ,GAAI,GAAI,GAAI,GAAI,IAE/C,IAAAA,mBAAkB,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,IAE5C,IAAAA,mBAAkB,EAAG,GAAI,EAAG,GAAI,OAAQ,GAAI,EAAG,IAGjDC,gBAAiB,OAGnB,CACEhgB,IAAI,IAAA6O,cAAa,cAEjBlL,KAAM,aAENwN,MAAO,UAEPoH,MAAO,GAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,KAAQ,EAAG,aAAe,EAAG,GAAI,IAExD,IAAAA,kBAAiB,GAAI,GAAI,aAAe,GAAI,OAAQ,GAAI,KAAM,IAE9D,IAAAA,mBAAkB,KAAM,GAAI,OAAQ,GAAI,QAAS,GAAI,MAAO,IAE5D,IAAAA,mBAAkB,MAAO,GAAI,QAAS,GAAI,OAAQ,GAAI,EAAG,IAEzD,IAAAA,mBAAkB,EAAG,GAAI,OAAQ,GAAI,QAAS,GAAI,GAAI,IAEtD,IAAAA,mBAAkB,GAAI,GAAI,QAAS,GAAI,OAAQ,GAAI,EAAG,IAGxDC,gBAAiB,MAGnB,CACEhgB,IAAI,IAAA6O,cAAa,eAEjBlL,KAAM,iBAENwN,MAAO,UAEPoH,MAAO,EAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,IAE1C,IAAAA,mBAAkB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAE9C,IAAAA,mBAAkB,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,IAE7C,IAAAA,kBAAiB,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,IAE1C,IAAAA,kBAAiB,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAM,IAE5C,IAAAA,kBAAiB,IAAM,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,IAG9CC,gBAAiB,IAGnB,CACEhgB,IAAI,IAAA6O,cAAa,WAEjBlL,KAAM,gBAENwN,MAAO,UAEPoH,MAAO,GAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,EAAG,GAAI,IAAM,EAAG,EAAG,MAE1C,IAAAA,kBAAiB,EAAG,IAAK,SAAW,EAAG,EAAG,EAAG,EAAG,OAEhD,IAAAA,kBAAiB,EAAG,KAAM,SAAW,MAAO,SAAW,MAAO,EAAG,OAEjE,IAAAA,mBAAkB,EAAG,MAAO,EAAG,GAAI,IAAM,EAAG,EAAG,MAE/C,IAAAA,kBAAiB,EAAG,IAAK,SAAW,EAAG,KAAQ,EAAG,EAAG,IAGvDC,gBAAiB,MAGnB,CACEhgB,IAAI,IAAA6O,cAAa,iBAEjBlL,KAAM,iBAENwN,MAAO,UAEPoH,MAAO,IAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,GAAI,IAAM,GAAI,SAAU,UAAY,GAAI,IAE5D,IAAAA,mBAAkB,GAAI,GAAI,IAAM,EAAG,GAAI,GAAK,GAAI,IAEhD,IAAAA,kBAAiB,GAAI,EAAG,GAAI,KAAM,GAAI,MAAO,GAAI,IAEjD,IAAAA,mBAAkB,GAAI,GAAI,GAAI,KAAM,MAAS,KAAM,GAAI,OAGzDC,gBAAiB,KAGnB,CACEhgB,IAAI,IAAA6O,cAAa,gBAEjBlL,KAAM,eAENwN,MAAO,UAEPoH,MAAO,GAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,KAAQ,EAAG,GAAI,IAAK,GAAI,MAE/C,IAAAA,kBAAiB,GAAI,IAAK,GAAI,KAAM,GAAI,KAAM,GAAI,MAElD,IAAAA,mBAAkB,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,MAEpD,IAAAA,mBAAkB,GAAI,KAAM,GAAI,IAAK,GAAI,IAAK,GAAI,MAElD,IAAAA,kBAAiB,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,MAEhD,IAAAA,kBAAiB,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,MAEhD,IAAAA,kBAAiB,GAAI,IAAK,GAAI,IAAK,MAAS,EAAG,GAAI,IAGrDC,gBAAiB,OAGnB,CACEhgB,IAAI,IAAA6O,cAAa,YAEjBlL,KAAM,WAENwN,MAAO,UAEPoH,MAAO,EAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,GAAI,KAAM,GAAI,OAAQ,GAAI,KAAM,IAEpD,IAAAA,mBAAkB,KAAM,GAAI,OAAQ,GAAI,OAAQ,GAAI,IAAK,IAEzD,IAAAA,mBAAkB,IAAK,GAAI,OAAQ,GAAI,OAAQ,GAAI,KAAM,IAEzD,IAAAA,mBAAkB,KAAM,GAAI,OAAQ,GAAI,KAAM,GAAI,EAAG,IAGvDC,gBAAiB,IAGnB,CACEhgB,IAAI,IAAA6O,cAAa,eAEjBlL,KAAM,eAENwN,MAAO,UAEPoH,MAAO,GAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,KAAQ,GAAI,KAAO,KAAM,IAAK,IAErD,IAAAA,mBAAkB,IAAK,GAAI,IAAK,GAAI,MAAO,UAAY,KAAM,MAE7D,IAAAA,mBAAkB,KAAM,KAAO,MAAO,KAAO,IAAK,GAAI,IAAK,IAE3D,IAAAA,mBAAkB,IAAK,GAAI,MAAO,KAAM,OAAQ,GAAI,EAAG,IAGzDC,gBAAiB,MAGnB,CACEhgB,IAAI,IAAA6O,cAAa,iBAEjBlL,KAAM,iBAENwN,MAAO,UAEPoH,MAAO,GAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,EAAG,EAAG,IAAM,GAAK,IAAM,KAE9C,IAAAA,kBAAiB,IAAM,GAAK,IAAM,GAAK,GAAI,EAAG,GAAI,IAElD,IAAAA,kBAAiB,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,IAExC,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAExC,IAAAA,kBAAiB,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,IAExC,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAExC,IAAAA,kBAAiB,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,IAExC,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,MAAO,GAAK,MAAO,KAEhD,IAAAA,kBAAiB,MAAO,GAAK,MAAO,GAAK,OAAQ,EAAG,EAAG,IAGzDC,gBAAiB,OAGnB,CACEhgB,IAAI,IAAA6O,cAAa,kBAEjBlL,KAAM,gBAENwN,MAAO,UAEPoH,MAAO,EAEPxV,KAAM,EAAC,IAAAgd,kBAAiB,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAE/CC,gBAAiB,MAGnB,CACEhgB,IAAI,IAAA6O,cAAa,aAEjBlL,KAAM,YAENwN,MAAO,UAEPoH,MAAO,KAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,GAAI,IAAM,GAAI,GAAK,KAAO,GAAK,KAEnD,IAAAA,mBAAkB,GAAK,IAAM,GAAK,KAAO,IAAM,EAAG,EAAG,IAErD,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,IAExC,IAAAA,kBAAiB,EAAG,EAAG,GAAI,GAAK,IAAM,SAAW,GAAI,IAErD,IAAAA,kBAAiB,GAAI,GAAI,KAAO,GAAI,KAAM,KAAO,IAAK,MAEtD,IAAAA,mBAAkB,IAAK,KAAO,IAAK,MAAO,IAAM,EAAG,EAAG,IAEtD,IAAAA,kBAAiB,EAAG,EAAG,KAAM,EAAG,EAAG,KAAM,EAAG,IAE5C,IAAAA,kBAAiB,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,IAG3CC,gBAAiB,OAGnB,CACEhgB,IAAI,IAAA6O,cAAa,gBAEjBlL,KAAM,gBAENwN,MAAO,UAEPoH,MAAO,GAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,KAAQ,GAAI,QAAS,GAAI,GAAI,IAEpD,IAAAA,mBAAkB,GAAI,GAAI,QAAS,GAAI,OAAS,GAAI,KAAO,IAE3D,IAAAA,mBAAkB,KAAO,GAAI,OAAS,EAAG,OAAS,EAAG,KAAO,IAE5D,IAAAA,kBAAiB,KAAO,EAAG,OAAS,EAAG,GAAI,EAAG,GAAI,IAElD,IAAAA,kBAAiB,GAAI,EAAG,GAAI,GAAI,MAAS,KAAM,GAAI,OAEnD,IAAAA,kBAAiB,GAAI,KAAM,MAAS,KAAM,MAAS,EAAG,GAAI,IAG5DC,gBAAiB,OAGnB,CACEhgB,IAAI,IAAA6O,cAAa,iBAEjBlL,KAAM,iBAENwN,MAAO,UAEPoH,MAAO,EAEPxV,KAAM,EACJ,IAAAgd,kBACE,EACA,EACA,QACA,SACA,UACC,SACD,UACC,WAGH,IAAAA,kBACE,UACC,SACD,UACC,SACD,UACC,SACD,UACC,WAILC,gBAAiB,IAGnB,CACEhgB,IAAI,IAAA6O,cAAa,mBAEjBlL,KAAM,qBAENwN,MAAO,UAEPoH,MAAO,GAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,EAAG,GAAI,YAAa,EAAG,EAAG,IAEjD,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,IAG5CC,gBAAiB,MAGnB,CACEhgB,IAAI,IAAA6O,cAAa,kBAEjBlL,KAAM,YAENwN,MAAO,UAEPoH,MAAO,EAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,KAAQ,EAAG,MAAQ,EAAG,EAAG,IAEhD,IAAAA,kBAAiB,EAAG,EAAG,OAAQ,EAAG,GAAI,EAAG,GAAI,IAE7C,IAAAA,kBAAiB,GAAI,EAAG,GAAI,EAAG,OAAQ,EAAG,EAAG,IAE7C,IAAAA,kBAAiB,EAAG,EAAG,OAAQ,EAAG,OAAQ,EAAG,EAAG,IAGlDC,gBAAiB,MAGnB,CACEhgB,IAAI,IAAA6O,cAAa,YAEjBlL,KAAM,YAENwN,MAAO,UAEPoH,MAAO,KAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,EAAG,KAAM,IAAK,KAAM,IAAK,IAEhD,IAAAA,mBAAkB,IAAK,GAAI,KAAM,KAAM,GAAI,KAAM,EAAG,IAEpD,IAAAA,mBAAkB,EAAG,GAAI,EAAG,KAAM,IAAK,KAAM,IAAK,IAElD,IAAAA,mBAAkB,IAAK,GAAI,KAAM,KAAO,MAAO,KAAO,KAAM,IAG9DC,gBAAiB,OAGnB,CACEhgB,IAAI,IAAA6O,cAAa,QAEjBlL,KAAM,WAENwN,MAAO,UAEPoH,MAAO,EAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,KAAQ,GAAI,KAAO,IAAM,GAAI,IAEpD,IAAAA,kBAAiB,GAAI,EAAG,KAAO,KAAM,IAAM,EAAG,KAAO,OAErD,IAAAA,kBAAiB,KAAO,KAAM,GAAI,IAAK,GAAI,KAAM,KAAO,MAExD,IAAAA,kBAAiB,KAAO,IAAK,IAAM,MAAO,IAAM,MAAO,KAAO,MAE9D,IAAAA,mBAAkB,KAAO,KAAM,GAAI,MAAO,GAAI,KAAM,KAAO,OAE3D,IAAAA,mBAAkB,KAAO,MAAO,IAAM,GAAI,UAAY,SAAU,GAAI,IAEpE,IAAAA,kBAAiB,GAAI,EAAG,KAAO,KAAM,MAAS,EAAG,GAAI,IAGvDC,gBAAiB,IAGnB,CACEhgB,IAAI,IAAA6O,cAAa,aAEjBlL,KAAM,aAENwN,MAAO,UAEPoH,MAAO,EAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEtC,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEtC,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEtC,IAAAA,kBAAiB,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAExC,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAGxCC,gBAAiB,OAGnB,CACEhgB,IAAI,IAAA6O,cAAa,cAEjBlL,KAAM,YAENwN,MAAO,UAEPoH,MAAO,EAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,IAEzC,IAAAA,kBAAiB,GAAI,EAAG,KAAM,EAAG,GAAI,EAAG,GAAI,IAG9CC,gBAAiB,MAGnB,CACEhgB,IAAI,IAAA6O,cAAa,eAEjBlL,KAAM,eAENwN,MAAO,UAEPoH,MAAO,IAEPxV,KAAM,EAAC,IAAAgd,kBAAiB,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAEjDC,gBAAiB,IAGnB,CACEhgB,IAAI,IAAA6O,cAAa,WAEjBlL,KAAM,eAENwN,MAAO,UAEPoH,MAAO,KAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,KAAQ,GAAI,GAAI,GAAI,GAAI,IAE/C,IAAAA,mBAAkB,GAAI,GAAI,GAAI,GAAI,UAAW,aAAc,EAAG,IAE9D,IAAAA,mBAAkB,EAAG,GAAI,EAAG,KAAO,GAAI,MAAO,GAAI,IAGpDC,gBAAiB,OAGnB,CACEhgB,IAAI,IAAA6O,cAAa,gBAEjBlL,KAAM,gBAENwN,MAAO,UAEPoH,MAAO,GAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,GAAI,EAAG,GAAI,IAAK,GAAI,IAAK,MAE7C,IAAAA,mBAAkB,IAAK,KAAO,IAAK,KAAM,KAAM,KAAM,KAAM,MAE3D,IAAAA,mBAAkB,KAAM,KAAM,KAAM,KAAM,EAAG,KAAM,EAAG,OAEtD,IAAAA,mBAAkB,EAAG,MAAO,EAAG,GAAI,IAAK,GAAI,IAAK,IAGnDC,gBAAiB,IAGnB,CACEhgB,IAAI,IAAA6O,cAAa,eAEjBlL,KAAM,aAENwN,MAAO,UAEPoH,MAAO,IAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAExC,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,IAE1C,IAAAA,kBAAiB,IAAK,EAAG,KAAM,EAAG,GAAI,EAAG,EAAG,IAE5C,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,IAE1C,IAAAA,kBAAiB,IAAK,EAAG,KAAM,EAAG,GAAI,EAAG,EAAG,IAE5C,IAAAA,kBAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAGxCC,gBAAiB,OAGnB,CACEhgB,IAAI,IAAA6O,cAAa,WAEjBlL,KAAM,kBAENwN,MAAO,UAEPoH,MAAO,EAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,KAAQ,EAAG,OAAQ,IAAK,EAAG,MAElD,IAAAA,kBAAiB,EAAG,IAAK,OAAQ,KAAM,MAAQ,KAAM,EAAG,MAExD,IAAAA,mBAAkB,EAAG,KAAM,OAAQ,IAAK,OAAQ,EAAG,EAAG,IAGxDC,gBAAiB,MAGnB,CACEhgB,IAAI,IAAA6O,cAAa,cAEjBlL,KAAM,aAENwN,MAAO,UAEPoH,MAAO,EAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,KAAQ,GAAI,QAAS,GAAI,GAAI,IAEpD,IAAAA,mBAAkB,GAAI,GAAI,QAAS,GAAI,QAAS,GAAI,GAAI,IAG1DC,gBAAiB,MAGnB,CACEhgB,IAAI,IAAA6O,cAAa,cAEjBlL,KAAM,aAENwN,MAAO,UAEPoH,MAAO,EAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,KAAO,GAAK,GAAI,GAAK,KAAM,IAElD,IAAAA,kBAAiB,KAAM,EAAG,IAAK,SAAW,KAAM,GAAK,IAAK,IAE1D,IAAAA,kBAAiB,IAAK,EAAG,MAAO,GAAK,KAAM,GAAK,KAAM,IAEtD,IAAAA,kBAAiB,KAAM,EAAG,EAAG,SAAW,KAAM,GAAK,EAAG,IAGxDC,gBAAiB,IAGnB,CACEhgB,IAAI,IAAA6O,cAAa,eAEjBlL,KAAM,cAENwN,MAAO,UAEPoH,MAAO,IAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,IAE3C,IAAAA,mBAAkB,GAAI,EAAG,KAAO,EAAG,UAAW,SAAU,GAAI,MAE5D,IAAAA,kBAAiB,GAAI,IAAK,IAAM,KAAM,KAAO,KAAM,GAAI,IAGzDC,gBAAiB,OAGnB,CACEhgB,IAAI,IAAA6O,cAAa,aAEjBlL,KAAM,YAENwN,MAAO,UAEPoH,MAAO,EAEPxV,KAAM,EACJ,IAAAgd,kBAAiB,EAAG,EAAG,KAAQ,EAAG,EAAG,EAAG,GAAK,OAE7C,IAAAA,kBAAiB,GAAK,KAAM,SAAW,IAAK,MAAQ,IAAK,EAAG,MAE5D,IAAAA,kBAAiB,EAAG,IAAK,OAAQ,KAAM,OAAQ,KAAM,EAAG,MAExD,IAAAA,mBAAkB,EAAG,KAAM,MAAQ,KAAM,EAAG,KAAM,GAAK,OAEvD,IAAAA,mBAAkB,GAAK,MAAO,YAAa,EAAG,KAAQ,EAAG,EAAG,IAG9DC,gBAAiB,IAGnB,CACEhgB,IAAI,IAAA6O,cAAa,iBAEjBlL,KAAM,iBAENwN,MAAO,UAEPoH,MAAO,GAEPxV,KAAM,EAAC,IAAAgd,kBAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE7CC,gBAAiB,M,gECrpBrB,aAEA,UAEA,UAAe,IAAI,EAAAC,iBAAgB,SAACzX,GAClCA,EAAK,EAAAnH,wB,oFCDP,wBAA6BrB,GAC3B,OAAOA,I,0JCLT,aAEA,aACA,aACA,aAEA,WAAe,IAAAsZ,gBACb,UACA,UACA,Y,gqDCTF,cACA,SACA,UAOA,aACA,UAOA,UAIA,aAOE,WAA6B4G,GAA7B,WANiB,KAAAC,QAAU,IAAI,EAAA5M,gBAC7B,IAEM,KAAA6M,kBAAyC,KAChC,KAAAC,OAAS,IAAI,EAAA9M,gBAAmC,MAK/DM,KAAKsM,QAAQ/C,WAAU,SAACrM,GAClB,EAAKqP,mBACP,EAAKA,kBAAkB/C,cAGJ,IAAjBtM,EAAMkF,OAKV,EAAKmK,mBAAoB,IAAAlM,eACvBnD,EAAMlP,KAAI,SAACsB,GAAM,OAAAA,EAAEmd,cACnBlD,WAAU,SAACmD,GACX,EAAKF,OAAO7L,KAAK0L,EAAQK,UAAUA,EAAUpI,OAAO,EAAAqI,gBAPpD,EAAKH,OAAO7L,KAAK,SA8FzB,OAlFE,sBAAI,qBAAM,C,IAAV,WACE,OAAOX,KAAKsM,S,gCAGd,sBAAI,oBAAK,C,IAAT,WACE,OAAOtM,KAAKsM,QAAQtf,O,gCAGtB,sBAAI,oBAAK,C,IAAT,WACE,OAAOgT,KAAKwM,Q,gCAGd,YAAAvN,oBAAA,SAAoB2N,GAApB,WACQnC,GAAQ,IAAAoC,QAAaD,GAErBE,EADK,IAAIC,SAAStC,GACLuC,SAAS,GACtBhO,EAAOyL,EAAMS,MAAM,GACzB,GAAgB,IAAZ4B,EAAe,CACjB,IACM5P,EADU+P,KAAKC,MAAM,UAAKC,QAAQnO,EAAM,CAAEoO,GAAI,YAC9Bpf,KAAI,SAACsL,GACzB,OAAQA,EAAK+I,MACX,IAAK,iBACH,OAAO7I,EAA6B6T,SAAS/T,GAAM,SAACA,GAClD,SAAKgU,YAAYhU,MAErB,IAAK,gBACH,OAAOI,EAA4B2T,SAAS/T,GAAM,SAACA,GACjD,SAAKgU,YAAYhU,MAErB,IAAK,eACH,OAAOM,EAA2ByT,SAAS/T,GAAM,SAACA,GAChD,SAAKgU,YAAYhU,MAErB,QACE,MAAM,IAAIwK,MAAM,6BAAsBxK,EAAK+I,WAGjDrC,KAAKsM,QAAQ3L,KAAKzD,KAItB,YAAAiD,eAAA,WACE,IAAMjD,EAAQ8C,KAAKsM,QAAQtf,MAAMgB,KAAI,SAACsB,GAAM,OAAAA,EAAEie,YACxCC,EAAU,UAAKC,QAAQR,KAAKS,UAAUxQ,IACtC8B,EAAO,IAAI2O,WAAW,EAAIH,EAAQpL,QAGxC,OAFApD,EAAKpK,IAAI4Y,EAAS,GAClB,IAAIT,SAAS/N,EAAK4O,QAAQC,SAAS,EAAG,IAC/B,IAAAC,QAAa9O,IAGtB,YAAAzB,cAAA,sBACQjE,EAAO,IAAIE,GAA6B,SAACF,GAC7C,SAAKgU,YAAYhU,MAGnB,OADA0G,KAAKsM,QAAQ3L,KAAK,EAAD,OAAKX,KAAKsM,QAAQtf,QAAK,IAAEsM,IAAI,IACvCA,GAGT,YAAAmE,gBAAA,sBACQnE,EAAO,IAAII,GAA4B,SAACJ,GAC5C,SAAKgU,YAAYhU,MAGnB,OADA0G,KAAKsM,QAAQ3L,KAAK,EAAD,OAAKX,KAAKsM,QAAQtf,QAAK,IAAEsM,IAAI,IACvCA,GAGT,YAAAoE,eAAA,sBACQpE,EAAO,IAAIM,GAA2B,SAACN,GAC3C,SAAKgU,YAAYhU,MAGnB,OADA0G,KAAKsM,QAAQ3L,KAAK,EAAD,OAAKX,KAAKsM,QAAQtf,QAAK,IAAEsM,IAAI,IACvCA,GAGT,YAAAgI,eAAA,SAAehI,GAEb,OADe0G,KAAKsM,QAAQtf,MAAM+e,MAAK,SAACzc,GAAM,OAAAA,EAAEiS,WAAajI,MAAS,MAIhE,YAAAgU,YAAR,SAAoBhU,GAClB0G,KAAKsM,QAAQ3L,KAAKX,KAAKsM,QAAQtf,MAAMsX,QAAO,SAAChV,GAAM,OAAAA,IAAMgK,OA5GrC,IADvB,IAAA0S,cAQc,SAAAtK,QAAO,EAAAqM,WAPTpM,GAAb,GAAa,EAAAA,YAAAA,EAgHb,mBAAsB,EAAAqM,gBAAAA,EAYtB,kBASE,WAA6BC,GAA7B,MACE,cAAO,K,OADoB,EAAAA,QAAAA,EAPZ,EAAAC,eAAiB,IAAI,EAAAxO,gBACpC,MAEe,EAAAyO,eAAiB,IAAI,EAAAzO,gBAAwB,GAE7C,EAAA0O,WAAa,IAAI,EAAA1O,gBAAiC,MAIjE,EAAK2O,WAAY,IAAAhO,eAAc,CAC7B,EAAK6N,eACL,EAAKC,iBACJjO,MAAK,IAAAlS,MAAI,WAAM,SAAKsgB,aAEvB,IAAAjO,eAAc,CAAC,EAAK6N,eAAgB,EAAKC,iBAAiB5E,WACxD,SAAC,G,IAAA,SAACvO,EAAY,KAAEE,EAAY,KACrB,EAAKoT,QAKV,EAAKF,WAAWzN,KAAK,CACnB0B,KAAM,iBACNrH,aAAcA,EACdE,aAAY,IAPZ,EAAKkT,WAAWzN,KAAK,S,EAoF/B,OAvGkD,OAgCzC,EAAA0M,SAAP,SACEkB,EACAC,GAEA,IAAMlV,EAAO,IAAIE,EAA6BgV,GAG9C,OAFAlV,EAAKmC,cAAc8S,EAAKvT,cACxB1B,EAAK0C,gBAAgBuS,EAAKrT,cACnB5B,GAGT,YAAAiU,OAAA,WACE,MAAO,CACLlL,KAAM,iBACNrH,aAAcgF,KAAKkO,eAAelhB,MAClCkO,aAAc8E,KAAKmO,eAAenhB,QAItC,sBAAI,uBAAQ,C,IAAZ,WACE,OAAOgT,KAAKqO,W,gCAGd,sBAAI,sBAAO,C,IAAX,WAEE,IAAMnT,EAAe8E,KAAKmO,eAAenhB,MACzC,OAC+B,MAA7BgT,KAAKkO,eAAelhB,OACpBkO,GAAgB,GAChBA,GAAgB,G,gCAIpB,sBAAI,4BAAa,C,IAAjB,WACE,OAAO8E,KAAKkO,gB,gCAGd,sBAAI,2BAAY,C,IAAhB,WACE,OAAOlO,KAAKkO,eAAelhB,O,gCAG7B,sBAAI,4BAAa,C,IAAjB,WACE,OAAOgT,KAAKmO,gB,gCAGd,sBAAI,wBAAS,C,IAAb,WACE,OAAOnO,KAAKoO,Y,gCAGd,sBAAI,uBAAQ,C,IAAZ,WACE,OAAOpO,KAAKoO,WAAWphB,O,gCAGzB,YAAAyO,cAAA,SAAcT,GACRA,IAAiBgF,KAAKkO,eAAelhB,OAIzCgT,KAAKkO,eAAevN,KAAK3F,IAG3B,YAAAgB,gBAAA,SAAgByS,GACVA,IAAYzO,KAAKmO,eAAenhB,OAIpCgT,KAAKmO,eAAexN,KAAK8N,IAG3B,YAAAlU,OAAA,WACEyF,KAAKiO,QAAQjO,OAEjB,EAvGA,CAAkDgO,GAArC,EAAAxU,6BAAAA,EAyGb,kBAME,WAA6ByU,GAA7B,MACE,cAAO,K,OADoB,EAAAA,QAAAA,EAJZ,EAAAS,WAAa,IAAI,EAAAhP,gBAA+B,MAEhD,EAAA0O,WAAa,IAAI,EAAA1O,gBAAiC,MAIjE,EAAK2O,WAAY,IAAAhO,eAAc,CAAC,EAAKqO,aAAaxO,MAChD,IAAAlS,MAAI,WAAM,SAAKsgB,aAGjB,IAAAjO,eAAc,CAAC,EAAKqO,aAAanF,WAAU,SAAC,G,IAACoF,EAAD,OAAa,GAClD,EAAKL,QAKV,EAAKF,WAAWzN,KAAK,CACnB0B,KAAM,gBACNhG,SAAUsS,IANV,EAAKP,WAAWzN,KAAK,S,EAwD7B,OAtEiD,OAyBxC,EAAA0M,SAAP,SACEkB,EACAC,GAEA,IAAMlV,EAAO,IAAII,EAA4B8U,GAE7C,OADAlV,EAAKwD,YAAYyR,EAAKlS,UACf/C,GAGT,YAAAiU,OAAA,WACE,MAAO,CACLlL,KAAM,gBACNhG,SAAU2D,KAAK0O,WAAW1hB,QAI9B,sBAAI,uBAAQ,C,IAAZ,WACE,OAAOgT,KAAKqO,W,gCAGd,sBAAI,sBAAO,C,IAAX,WAEE,IAAMM,EAAe3O,KAAK0O,WAAW1hB,MACrC,OAAuB,MAAhB2hB,GAAwBA,GAAgB,G,gCAGjD,sBAAI,wBAAS,C,IAAb,WACE,OAAO3O,KAAKoO,Y,gCAGd,sBAAI,uBAAQ,C,IAAZ,WACE,OAAOpO,KAAKoO,WAAWphB,O,gCAGzB,sBAAI,wBAAS,C,IAAb,WACE,OAAOgT,KAAK0O,Y,gCAGd,YAAA5R,YAAA,SAAYT,GACV2D,KAAK0O,WAAW/N,KAAKtE,IAGvB,YAAA9B,OAAA,WACEyF,KAAKiO,QAAQjO,OAEjB,EAtEA,CAAiDgO,GAApC,EAAAtU,4BAAAA,EAwEb,kBAME,WAA6BuU,GAA7B,MACE,cAAO,K,OADoB,EAAAA,QAAAA,EAJZ,EAAAS,WAAa,IAAI,EAAAhP,gBAA+B,MAEhD,EAAA0O,WAAa,IAAI,EAAA1O,gBAAiC,MAIjE,EAAK2O,WAAY,IAAAhO,eAAc,CAAC,EAAKqO,aAAaxO,MAChD,IAAAlS,MAAI,WAAM,SAAKsgB,aAGjB,IAAAjO,eAAc,CAAC,EAAKqO,aAAanF,WAAU,SAAC,G,IAACoF,EAAD,OAAa,GAClD,EAAKL,QAKV,EAAKF,WAAWzN,KAAK,CACnB0B,KAAM,eACNhG,SAAUsS,IANV,EAAKP,WAAWzN,KAAK,S,EAwD7B,OAtEgD,OAyBvC,EAAA0M,SAAP,SACEkB,EACAC,GAEA,IAAMlV,EAAO,IAAIM,EAA2B4U,GAE5C,OADAlV,EAAKwD,YAAYyR,EAAKlS,UACf/C,GAGT,YAAAiU,OAAA,WACE,MAAO,CACLlL,KAAM,eACNhG,SAAU2D,KAAK0O,WAAW1hB,QAI9B,sBAAI,uBAAQ,C,IAAZ,WACE,OAAOgT,KAAKqO,W,gCAGd,sBAAI,sBAAO,C,IAAX,WAEE,IAAMM,EAAe3O,KAAK0O,WAAW1hB,MACrC,OAAuB,MAAhB2hB,GAAwBA,GAAgB,G,gCAGjD,sBAAI,wBAAS,C,IAAb,WACE,OAAO3O,KAAKoO,Y,gCAGd,sBAAI,uBAAQ,C,IAAZ,WACE,OAAOpO,KAAKoO,WAAWphB,O,gCAGzB,sBAAI,wBAAS,C,IAAb,WACE,OAAOgT,KAAK0O,Y,gCAGd,YAAA5R,YAAA,SAAYT,GACV2D,KAAK0O,WAAW/N,KAAKtE,IAGvB,YAAA9B,OAAA,WACEyF,KAAKiO,QAAQjO,OAEjB,EAtEA,CAAgDgO,GAAnC,EAAApU,2BAAAA,G,s0CClUb,cACA,SAEA,UACA,UAMA,UAUA,UAYA,aACE,WACsCoK,GAAA,KAAAA,mBAAAA,EAkHxC,OA/GE,YAAA0I,UAAA,SAAUxP,G,QACJ0R,EAAqB,CACvBtL,gBAAiB,GACjBC,cAAe,IAGLsL,KAAKC,M,IAEjB,IAAmB,QAAA5R,GAAK,8BAAE,CAArB,IAAM5D,EAAI,QACbsV,EAAS5O,KAAK+O,UAAUzV,EAAMsV,I,iGAGhC,OAAOA,GAGD,YAAAG,UAAR,SAAkBzV,EAAgBsV,GAChC,OAAQtV,EAAK+I,MACX,IAAK,iBACH,OAAOrC,KAAKgP,mBAAmB1V,EAAMsV,GACvC,IAAK,eACH,OAAO5O,KAAKiP,iBAAiB3V,EAAMsV,GACrC,IAAK,gBACH,OAAO5O,KAAKkP,kBAAkB5V,EAAMsV,GACtC,QACE,MAAM,IAAI9K,MAAM,kCAA4BxK,EAAa+I,SAIvD,YAAA2M,mBAAR,SACE1V,EACAsV,G,YAEQ5T,EAA+B1B,EAAI,aAArB4B,EAAiB5B,EAAI,aAErC6V,EACsD,QAA1D,EAA0B,QAA1B,OAAAC,MAAKR,EAAOrL,sBAAc,SAAI,IAAA6L,MAAKR,EAAOtL,wBAAgB,QAAI,EAAA9Q,UAE1DvE,EAAa+R,KAAKgE,mBAAmBS,kBAAkBzJ,GAC7D,IAAK/M,EACH,MAAM,IAAI6V,MAAM,8BAAuB9I,IAGzC,IAAMqU,EAA+B,GACjCC,EAAmB,E,IACvB,IAAoB,QAAArhB,EAAWiB,MAAI,8BAAE,CAAhC,IAAME,EAAK,QACR4S,GAAS,IAAAuN,eAAcngB,GAC7BigB,EAAiBpjB,KAAI,MAArBojB,EAAgB,OAASrN,IAAM,IAI/BsN,IAAoB,IAAAE,wBAAuBxN,I,iGAG7C,IAAMyN,EACJxhB,EAAWke,gBACXjR,GAAgB,EAAIjN,EAAWke,iBAWjC,OA+CJ,SACEnK,EACAC,EACA2M,GAEA,GAAc,MAAV3M,EACF,MAAM,IAAI6B,MAAM,kBAGlB,OAAsB,IAAlB9B,EAAOI,OACFwM,EAGF9J,OAAOmG,OAAO,GAAI2D,EAAQ,CAC/BrL,cAAeqL,EAAOrL,cAAcY,OAClCnC,EAAOhU,KAAI,SAACmV,GAAU,OACpB7T,EAAG6T,EAAM7T,EACTC,EAAG4T,EAAM5T,EACT0S,OAAM,SAjEHyN,CATD,GAAgB,IAAAC,0BACpBN,EACAI,EAAcH,GACf,GAHiB,GAKsBthB,KAAI,SAACmV,GAC3C,WAAArC,UAASqO,EAAahM,MAG4B7J,EAAMsV,IAGpD,YAAAK,iBAAR,SACE3V,EACAsV,G,MAEMgB,EACqD,QAAzD,EAAAhB,EAAOtL,gBAAgBsL,EAAOtL,gBAAgBlB,OAAS,UAAE,QAAI,EAAA5P,UAC/D,IAAI,IAAAqd,aAAYD,EAAc,EAAApd,WAC5B,OAAOoc,EAGH,IAAAvS,EAAa/C,EAAI,SAEjBwW,GAAmB,IAAA9H,eAAc4H,EAAc,EAAApd,WAWrD,OAVI6J,EAAWyT,IACbzT,EAAWyT,GAsDjB,SACE9N,EACAC,EACA2M,G,MAEA,GAAc,MAAV3M,EACF,MAAM,IAAI6B,MAAM,kBAGlB,GAAsB,IAAlB9B,EAAOI,OACT,OAAOwM,EAGT,IAAMmB,GAAa,IAAAlP,gBACjB,IAAAuO,MAAKpN,GACuB,QAA5B,OAAAoN,MAAKR,EAAOtL,wBAAgB,QAAI,EAAA9Q,WAGlC,OAAOsS,OAAOmG,OAAO,GAAI2D,EAAQ,CAC/BtL,gBAAiBsL,EAAOtL,gBAAgBa,OACtCnC,EAAOhU,KAAI,SAACmV,GAAU,OACpB7T,EAAG6T,EAAM7T,EACTC,EAAG4T,EAAM5T,EACT0S,OAAM,OAGVsB,cAAeqL,EAAOrL,cAAcvV,KAAI,SAACmV,GAAU,OACjD7T,EAAG6T,EAAM7T,EAAIygB,EAAWzgB,EACxBC,EAAG4T,EAAM5T,EAAIwgB,EAAWxgB,EACxB0S,OAAQkB,EAAMlB,aA1ET+N,EANW,IAAAC,4BAChBL,GACA,IAAAzH,iBAAe,IAAAtH,eAAc,EAAArO,UAAWod,IACxCvT,GAGiC/C,EAAMsV,IAGnC,YAAAM,kBAAR,SACE5V,EACAsV,GAEQ,IAAAvS,EAAa/C,EAAI,SAEnB,KAAqC,IAAAqW,0BACzCf,EAAOrL,cACPlH,GACD,GAHM6T,EAAW,KAAEC,EAAmB,KAKvC,MAAO,CACL7M,gBAAiBsL,EAAOtL,gBAAgBa,OAAO+L,GAC/C3M,cAAe4M,IAjHD,IAFnB,IAAAnE,eACA,IAAAC,aAGI,SAAAvK,QAAO,EAAAlU,sBAFCugB,GAAb,GAAa,EAAAA,QAAAA,G,gEChCb,aAEA,UACA,UAEA,UAAe,IAAI,EAAA3B,iBAAgB,SAACzX,GAClCA,EAAK,EAAAgN,aACLhN,EAAK,EAAAoZ,a,uFC2BM,EAAA1O,gBAAwCyF,OAAOsD,OAAO,CACjE9E,gBAAiB,GACjBC,cAAe,M,owBCpCjB,aAEA,UAEA,UACA,UAKA,aAGE,a,QAFiB,KAAA6M,iBAAqD,G,IAGpE,IAAkB,aAAAC,WAAU,EAAAC,iBAAe,8BAAE,CAAxC,IAAMpiB,EAAG,QACN/B,EAAK+B,EACLqiB,EAAmB,CACvBpkB,GAAE,EACF6B,IAAK,IAAI,EAAAwiB,UAAU,EAAAF,eAAepiB,KAEpC8R,KAAKoQ,iBAAiBjkB,GAAMokB,G,kGAOlC,OAHE,YAAAtS,kBAAA,SAAkB9R,G,MAChB,OAAgC,QAAzB,EAAA6T,KAAKoQ,iBAAiBjkB,UAAG,QAAI,MAfT,IAF9B,IAAA6f,eACA,IAAAC,cACYjO,GAAb,GAAa,EAAAA,mBAAAA,G,iFCNb,iBACE,WAAoByS,GAAA,KAAAA,UAAAA,EAStB,OAPE,sBAAI,uBAAQ,C,IAAZ,WACE,OAAOzQ,KAAKyQ,W,gCAGd,YAAAC,QAAA,SAAQlP,GACN,MAAM,IAAIsC,MAAM,4BAEpB,EAVA,GAAa,EAAA0M,UAAAA,G,wFCFb,IAAMG,EAAQ7L,OAAOsD,OAAO,EAAQ,OAEvB,EAAAkI,eAAiB,CAC5BK,MAAK,I,gECLP,aACA,UAEA,UAAe,IAAI,EAAAvE,iBAAgB,SAACzX,GAClCA,EAAK,EAAAqJ,wB,gFCCM,EAAA3L,SAAWyS,OAAOsD,OAAO,CAAE7Z,MAAO,EAAGC,OAAQ,K,yJCL1D,aACA,UACA,aAEM+J,GAAQ,IAAAqY,aAAY,CACxBC,QAAS,CACPC,KAAM,WAYV,UAJyB,SAAC,G,IAAEha,EAAQ,WAA8B,OAChE,wBAAC,EAAAia,cAAa,CAACxY,MAAOA,GAAQzB,K,8pBCfhC,uBAA+B2T,EAAYuG,GAMzC,IALA,IAAM7F,EAAI,EAAH,KAAOV,IAAK,GAEfmE,EAAgB,GAChB/P,EAAc,GAEXsM,EAAE/I,OAAS,GAChBvD,EAAO5S,KAAKkf,EAAE8F,OACVpS,EAAOuD,SAAW4O,IACpBpC,EAAO3iB,KAAK4S,GACZA,EAAS,IAQb,OAJIA,EAAOuD,OAAS,GAClBwM,EAAO3iB,KAAK4S,GAGP+P,GAGT,sBAA8BnE,EAAYyG,EAAWC,GACnD,QADmD,IAAAA,IAAAA,GAAA,GAC9B,IAAjB1G,EAAMrI,OACR,OAAOqI,EAIT,IADA,IAAMU,EAAI,GACD/N,EAAI,EAAGA,EAAIqN,EAAMrI,OAAQhF,GAAK8T,EACrC/F,EAAElf,KAAKwe,EAAMrN,IAKf,OAHI+T,IAAa1G,EAAMrI,OAAS,GAAK8O,GAAM,GACzC/F,EAAElf,KAAKwe,EAAMA,EAAMrI,OAAS,IAEvB+I,GAGT,qBAA6B7b,GAC3B,OAAY,MAALA,GAGT,qBAA6B8hB,GAC3B,OAAOtM,OAAOC,KAAKqM,IAGrB,4BAAiCC,GAC/B,OAAQA,EAAUtd,KAAKC,GAAM,M","sources":["webpack://potioncraft-plotter/./src/style.css","webpack://potioncraft-plotter/./src/style.css?7163","webpack://potioncraft-plotter/./src/components/App.tsx","webpack://potioncraft-plotter/./src/components/IngredientSelector.tsx","webpack://potioncraft-plotter/./src/components/Map/Map.tsx","webpack://potioncraft-plotter/./src/components/Map/index.ts","webpack://potioncraft-plotter/./src/components/PanZoomViewport/PanZoomViewport.tsx","webpack://potioncraft-plotter/./src/components/PanZoomViewport/index.ts","webpack://potioncraft-plotter/./src/components/PlotBuilderItemsList.tsx","webpack://potioncraft-plotter/./src/components/PlotEditor/PlotEditor.tsx","webpack://potioncraft-plotter/./src/components/PlotEditor/PlotEditorViewModel.ts","webpack://potioncraft-plotter/./src/components/PlotEditor/index.ts","webpack://potioncraft-plotter/./src/components/Plot/Plot.tsx","webpack://potioncraft-plotter/./src/components/Plot/PlotViewModel.ts","webpack://potioncraft-plotter/./src/components/Plot/components/PlotDetails.tsx","webpack://potioncraft-plotter/./src/components/Plot/components/StepDetails.tsx","webpack://potioncraft-plotter/./src/components/Plot/index.ts","webpack://potioncraft-plotter/./src/container.tsx","webpack://potioncraft-plotter/./src/curves.ts","webpack://potioncraft-plotter/./src/game-settings.ts","webpack://potioncraft-plotter/./src/hooks/component-bounds.ts","webpack://potioncraft-plotter/./src/hooks/native-event.ts","webpack://potioncraft-plotter/./src/hooks/observe.ts","webpack://potioncraft-plotter/./src/index.tsx","webpack://potioncraft-plotter/./src/modifier-keys.ts","webpack://potioncraft-plotter/./src/point-array.ts","webpack://potioncraft-plotter/./src/points.ts","webpack://potioncraft-plotter/./src/runtime-env.ts","webpack://potioncraft-plotter/./src/services/ingredients/IngredientRegistry.ts","webpack://potioncraft-plotter/./src/services/ingredients/ingredients.ts","webpack://potioncraft-plotter/./src/services/ingredients/module.ts","webpack://potioncraft-plotter/./src/services/ingredients/types.ts","webpack://potioncraft-plotter/./src/services/module.ts","webpack://potioncraft-plotter/./src/services/plotter/PlotBuilder.ts","webpack://potioncraft-plotter/./src/services/plotter/Plotter.ts","webpack://potioncraft-plotter/./src/services/plotter/module.ts","webpack://potioncraft-plotter/./src/services/plotter/types.ts","webpack://potioncraft-plotter/./src/services/potion-bases/PotionBaseRegistry.ts","webpack://potioncraft-plotter/./src/services/potion-bases/PotionMap.ts","webpack://potioncraft-plotter/./src/services/potion-bases/maps/index.ts","webpack://potioncraft-plotter/./src/services/potion-bases/module.ts","webpack://potioncraft-plotter/./src/size.ts","webpack://potioncraft-plotter/./src/theme.tsx","webpack://potioncraft-plotter/./src/utils.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\r\\nThis should be kept minimal and only provide globals\\r\\nor non-react component styles.\\r\\n*/\\r\\n\\r\\nhtml, body, #root {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  margin: 0;\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;;;CAGC;;AAED;EACE,WAAW;EACX,YAAY;EACZ,SAAS;AACX\",\"sourcesContent\":[\"/*\\r\\nThis should be kept minimal and only provide globals\\r\\nor non-react component styles.\\r\\n*/\\r\\n\\r\\nhtml, body, #root {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  margin: 0;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import * as React from \"react\";\r\n\r\nimport PlotEditor from \"./PlotEditor\";\r\n\r\nconst App: React.FC = () => {\r\n  return <PlotEditor />;\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  MenuItem,\r\n  Select,\r\n  SelectProps,\r\n  SelectChangeEvent,\r\n  ListItemText,\r\n  Tooltip,\r\n  styled,\r\n} from \"@mui/material\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\n\r\nimport {\r\n  IngredientDescriptor,\r\n  IngredientId,\r\n} from \"@/services/ingredients/types\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\nimport { MAX_INGREDIENT_EXTENT, POTION_RADIUS } from \"@/game-settings\";\r\n\r\nexport interface IngredientSelectorProps\r\n  extends Omit<SelectProps<IngredientId | \"\">, \"value\" | \"onChange\"> {\r\n  value: IngredientId | null;\r\n  allowEmpty?: boolean;\r\n  onChange(value: IngredientId | null): void;\r\n  onMouseOverItem?(value: IngredientId | null): void;\r\n  onMouseOutItem?(): void;\r\n}\r\n\r\nconst StyledTooltip = styled(Tooltip)({\r\n  tooltipPlacementLeft: {\r\n    margin: \"10px 0\",\r\n  },\r\n});\r\n\r\nconst IngredientSelector = ({\r\n  value,\r\n  onChange,\r\n  allowEmpty = false,\r\n  onMouseOverItem,\r\n  onMouseOutItem,\r\n  ...props\r\n}: IngredientSelectorProps) => {\r\n  const registry = useDIDependency(IngredientRegistry);\r\n\r\n  const onSelectChange = React.useCallback(\r\n    (e: SelectChangeEvent<IngredientId | \"\">) => {\r\n      const value = e.target.value;\r\n      if (value === \"\") {\r\n        onChange(null);\r\n      } else {\r\n        onChange(value as any);\r\n      }\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <Select<IngredientId | \"\">\r\n      {...props}\r\n      value={value ?? \"\"}\r\n      onChange={onSelectChange}\r\n    >\r\n      {allowEmpty && <MenuItem value=\"\"></MenuItem>}\r\n      {registry.getIngredients().map((ingredient) => (\r\n        <MenuItem\r\n          key={ingredient.id}\r\n          value={ingredient.id}\r\n          onMouseOver={\r\n            onMouseOverItem ? () => onMouseOverItem(ingredient.id) : undefined\r\n          }\r\n          onMouseOut={onMouseOutItem}\r\n        >\r\n          <StyledTooltip\r\n            placement=\"left\"\r\n            title={\r\n              <svg\r\n                width=\"100px\"\r\n                height=\"100px\"\r\n                viewBox={`-${MAX_INGREDIENT_EXTENT} -${MAX_INGREDIENT_EXTENT} ${\r\n                  MAX_INGREDIENT_EXTENT * 2\r\n                } ${MAX_INGREDIENT_EXTENT * 2}`}\r\n                transform=\"scale(1, -1)\"\r\n              >\r\n                <circle cx={0} cy={0} r={POTION_RADIUS} fill=\"blue\" />\r\n                <path\r\n                  d={ingredient.path.reduce(\r\n                    (path, curve) =>\r\n                      path +\r\n                      `M ${curve.start.x} ${curve.start.y} C ${curve.p1.x},${curve.p1.y} ${curve.p2.x},${curve.p2.y} ${curve.end.x},${curve.end.y}`,\r\n                    \"M 0 0 \"\r\n                  )}\r\n                  stroke=\"black\"\r\n                  strokeWidth={0.2}\r\n                  fill=\"none\"\r\n                />\r\n              </svg>\r\n            }\r\n          >\r\n            <ListItemText>{ingredient.name}</ListItemText>\r\n          </StyledTooltip>\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default IngredientSelector;\r\n","import React from \"react\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { PointZero } from \"@/points\";\r\nimport { degreesToRadians } from \"@/utils\";\r\nimport { SizeZero } from \"@/size\";\r\n\r\nimport { MAP_EXTENT_RADIUS, POTION_RADIUS } from \"@/game-settings\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { PotionMap } from \"@/services/potion-bases/PotionMap\";\r\nimport {\r\n  DangerZonePartMapEntity,\r\n  ExperienceBonusMapEntity,\r\n  MapEntity,\r\n  PotionEffectMapEntity,\r\n  VortexMapEntity,\r\n} from \"@/services/potion-bases/types\";\r\n\r\nimport { IMapViewModel } from \"./MapViewModel\";\r\n\r\nexport interface MapProps {\r\n  className?: string;\r\n  map: PotionMap;\r\n  viewModel: IMapViewModel;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  backgroundColor: \"#DABE99\",\r\n  overflow: \"hidden\",\r\n}));\r\n\r\nconst PotionMapComponent = ({ className, map, viewModel }: MapProps) => {\r\n  const { width, height } = useObservation(viewModel.viewportSize$) ?? SizeZero;\r\n  const offset = useObservation(viewModel.viewOffset$) ?? PointZero;\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n\r\n  const [canvasRef, setCanvasRef] = React.useState<HTMLCanvasElement | null>(\r\n    null\r\n  );\r\n\r\n  const entities = map.entities;\r\n\r\n  React.useEffect(() => {\r\n    if (!canvasRef) {\r\n      return;\r\n    }\r\n\r\n    const id = requestAnimationFrame(() => {\r\n      const ctx = canvasRef.getContext(\"2d\")!;\r\n\r\n      ctx.clearRect(0, 0, width, height);\r\n\r\n      transformToMap(ctx, scale, offset.x, offset.y, () => {\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = \"red\";\r\n        ctx.lineWidth = 0.2;\r\n        ctx.moveTo(-60, -60);\r\n        ctx.lineTo(-60, 60);\r\n        ctx.lineTo(60, 60);\r\n        ctx.lineTo(60, -60);\r\n        ctx.lineTo(-60, -60);\r\n        ctx.stroke();\r\n\r\n        ctx.beginPath();\r\n        ctx.fillStyle = \"blue\";\r\n        ctx.arc(0, 0, POTION_RADIUS, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n\r\n        for (const entity of entities) {\r\n          renderEntity(ctx, entity);\r\n        }\r\n      });\r\n    });\r\n\r\n    return () => cancelAnimationFrame(id);\r\n  }, [canvasRef, entities, width, height, offset.x, offset.y, scale]);\r\n\r\n  return (\r\n    <Root className={className}>\r\n      <canvas ref={(ref) => setCanvasRef(ref)} width={width} height={height} />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PotionMapComponent;\r\n\r\nfunction transformToMap(\r\n  ctx: CanvasRenderingContext2D,\r\n  zoomFactor: number,\r\n  offsetX: number,\r\n  offsetY: number,\r\n  handler: () => void\r\n) {\r\n  ctx.save();\r\n  ctx.scale(zoomFactor, zoomFactor);\r\n\r\n  ctx.translate(MAP_EXTENT_RADIUS, MAP_EXTENT_RADIUS);\r\n\r\n  ctx.scale(1, -1);\r\n\r\n  // Offset is in map units, so apply after the inversion of y.\r\n  ctx.translate(offsetX, offsetY);\r\n\r\n  handler();\r\n  ctx.restore();\r\n}\r\n\r\nfunction renderEntity(ctx: CanvasRenderingContext2D, entity: MapEntity) {\r\n  switch (entity.entityType) {\r\n    case \"DangerZonePart\":\r\n      renderDangerZonePart(ctx, entity);\r\n      return;\r\n    case \"PotionEffect\":\r\n      renderPotionEffectEntity(ctx, entity);\r\n      return;\r\n    case \"ExperienceBonus\":\r\n      renderExperienceBonusEntity(ctx, entity);\r\n      return;\r\n    case \"Vortex\":\r\n      renderVortexEntity(ctx, entity);\r\n      return;\r\n  }\r\n}\r\n\r\nconst imgCache = new Map<string, HTMLImageElement>();\r\nfunction makeImg(src: string): HTMLImageElement {\r\n  if (imgCache.has(src)) {\r\n    return imgCache.get(src)!;\r\n  }\r\n\r\n  const img = new Image();\r\n  img.onerror = console.error.bind(console);\r\n  img.src = src;\r\n  imgCache.set(src, img);\r\n  return img;\r\n}\r\n\r\nconst DangerZoneImageSrces: Record<string, string> = {\r\n  Bone1: require(\"./assets/danger-zone-parts/Bone1.png\"),\r\n  Bone2: require(\"./assets/danger-zone-parts/Bone2.png\"),\r\n  Fang1: require(\"./assets/danger-zone-parts/Fang1.png\"),\r\n  Fang2: require(\"./assets/danger-zone-parts/Fang2.png\"),\r\n  Skull1: require(\"./assets/danger-zone-parts/Skull1.png\"),\r\n};\r\n\r\nfunction renderDangerZonePart(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: DangerZonePartMapEntity\r\n) {\r\n  ctx.save();\r\n\r\n  ctx.translate(entity.x, entity.y);\r\n  ctx.rotate(degreesToRadians(entity.angle));\r\n\r\n  const src = DangerZoneImageSrces[entity.prefab];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 130;\r\n    const h = img.height / 130;\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n\r\nconst PotionEffectImageSrces: Record<string, string> = {\r\n  Acid: require(\"./assets/potion-effects/Acid.webp\"),\r\n  Berserker: require(\"./assets/potion-effects/Berserker.webp\"),\r\n  Bounce: require(\"./assets/potion-effects/Bounce.webp\"),\r\n  Charm: require(\"./assets/potion-effects/Charm.webp\"),\r\n  Crop: require(\"./assets/potion-effects/Crop.webp\"),\r\n  Explosion: require(\"./assets/potion-effects/Explosion.webp\"),\r\n  Fire: require(\"./assets/potion-effects/Fire.webp\"),\r\n  Fly: require(\"./assets/potion-effects/Fly.webp\"),\r\n  Frost: require(\"./assets/potion-effects/Frost.webp\"),\r\n  Growth: require(\"./assets/potion-effects/Growth.webp\"),\r\n  Hallucinations: require(\"./assets/potion-effects/Hallucinations.webp\"),\r\n  Healing: require(\"./assets/potion-effects/Healing.webp\"),\r\n  Invisibility: require(\"./assets/potion-effects/Invisibility.webp\"),\r\n  Libido: require(\"./assets/potion-effects/Libido.webp\"),\r\n  Light: require(\"./assets/potion-effects/Light.webp\"),\r\n  Lightning: require(\"./assets/potion-effects/Lightning.webp\"),\r\n  Mana: require(\"./assets/potion-effects/Mana.webp\"),\r\n  Necromancy: require(\"./assets/potion-effects/Necromancy.webp\"),\r\n  Poison: require(\"./assets/potion-effects/Poison.webp\"),\r\n  SharpVision: require(\"./assets/potion-effects/SharpVision.webp\"),\r\n  Sleep: require(\"./assets/potion-effects/Sleep.webp\"),\r\n  SlowDown: require(\"./assets/potion-effects/SlowDown.webp\"),\r\n  StoneSkin: require(\"./assets/potion-effects/StoneSkin.webp\"),\r\n};\r\n\r\nconst EffectSlotSrc = require(\"./assets/EffectSlot.png\");\r\nfunction renderPotionEffectEntity(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: PotionEffectMapEntity\r\n) {\r\n  ctx.save();\r\n\r\n  ctx.translate(entity.x, entity.y);\r\n\r\n  // ctx.beginPath();\r\n  // ctx.fillStyle = \"red\";\r\n  // ctx.arc(0, 0, POTION_RADIUS, 0, 2 * Math.PI);\r\n  // ctx.fill();\r\n\r\n  const container = makeImg(EffectSlotSrc);\r\n  const containerW = container.width / 100;\r\n  const containerH = container.height / 100;\r\n  ctx.save();\r\n  ctx.scale(1, -1);\r\n  ctx.translate(-containerW / 2, -containerH / 2 - 0.2);\r\n  ctx.drawImage(container, 0, 0, containerW, containerH);\r\n  ctx.restore();\r\n\r\n  const src = PotionEffectImageSrces[entity.effect];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 40;\r\n    const h = img.height / 40;\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n\r\nconst ExperienceBonusImagesSrc: Record<string, string> = {\r\n  Little: require(\"./assets/experience-bonus/xp-small.png\"),\r\n  Medium: require(\"./assets/experience-bonus/xp-medium.png\"),\r\n  Large: require(\"./assets/experience-bonus/xp-large.png\"),\r\n};\r\n\r\nfunction renderExperienceBonusEntity(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: ExperienceBonusMapEntity\r\n) {\r\n  ctx.save();\r\n  ctx.translate(entity.x, entity.y);\r\n\r\n  const src = ExperienceBonusImagesSrc[entity.prefab];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 200;\r\n    const h = img.height / 200;\r\n    ctx.save();\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n    ctx.restore();\r\n  }\r\n\r\n  // ctx.beginPath();\r\n  // ctx.fillStyle = \"green\";\r\n  // ctx.arc(0, 0, 0.3, 0, 2 * Math.PI);\r\n  // ctx.fill();\r\n\r\n  ctx.restore();\r\n}\r\n\r\nconst VortexBackgroundImagesSrc: Record<string, string> = {\r\n  Large: require(\"./assets/vortexes/Vortex Background Large.png\"),\r\n  Medium: require(\"./assets/vortexes/Vortex Background Medium.png\"),\r\n};\r\n\r\nconst VortexImagesSrc: Record<string, string> = {\r\n  Large: require(\"./assets/vortexes/Vortex Large Idle.png\"),\r\n  Medium: require(\"./assets/vortexes/Vortex Medium Idle.png\"),\r\n};\r\n\r\nfunction renderVortexEntity(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: VortexMapEntity\r\n) {\r\n  ctx.save();\r\n  ctx.translate(entity.x, entity.y);\r\n\r\n  // let radius = 0;\r\n  // switch (entity.prefab) {\r\n  //   case \"Large\":\r\n  //     radius = 1.65;\r\n  //     break;\r\n  //   case \"Medium\":\r\n  //     radius = 1.25;\r\n  //     break;\r\n  // }\r\n\r\n  // if (radius > 0) {\r\n  //   ctx.beginPath();\r\n  //   ctx.fillStyle = \"purple\";\r\n  //   ctx.arc(0, 0, radius, 0, 2 * Math.PI);\r\n  //   ctx.fill();\r\n  // }\r\n\r\n  // const backgroundSrc = VortexBackgroundImagesSrc[entity.prefab];\r\n  // if (backgroundSrc) {\r\n  //   const img = makeImg(backgroundSrc);\r\n  //   const w = img.width / 150;\r\n  //   const h = img.height / 150;\r\n  //   ctx.save();\r\n  //   ctx.scale(1, -1);\r\n  //   ctx.translate(-w / 2, -h / 2);\r\n  //   ctx.drawImage(img, 0, 0, w, h);\r\n  //   ctx.restore();\r\n  // }\r\n\r\n  const src = VortexImagesSrc[entity.prefab];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 100;\r\n    const h = img.height / 100;\r\n    ctx.save();\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n    ctx.restore();\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n","import PotionMap from \"./Map\";\r\nexport default PotionMap;\r\n","import * as React from \"react\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { getModifiers } from \"@/modifier-keys\";\r\n\r\nimport { useComponentBounds } from \"@/hooks/component-bounds\";\r\nimport { useNativeEvent } from \"@/hooks/native-event\";\r\n\r\nimport { IPanZoomViewportViewModel } from \"./PanZoomViewportViewModel\";\r\n\r\nexport interface PanZoomHandlerProps {\r\n  className?: string;\r\n  viewModel: IPanZoomViewportViewModel;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ZOOM_FACTOR = 1.15;\r\nexport const PAN_FACTOR = 0.15;\r\n\r\nconst Root = styled(\"div\")({\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n});\r\n\r\nconst PanZoomViewport = ({\r\n  className,\r\n  viewModel,\r\n  children,\r\n}: PanZoomHandlerProps) => {\r\n  const containerRef = React.useRef<HTMLDivElement | null>(null);\r\n  const containerBounds = useComponentBounds(containerRef);\r\n\r\n  React.useLayoutEffect(() => {\r\n    viewModel.onViewportResized(containerBounds.width, containerBounds.height);\r\n  }, [containerBounds.width, containerBounds.height]);\r\n\r\n  const onWheel = React.useCallback((e: WheelEvent) => {\r\n    const target = containerRef.current;\r\n    if (!target || e.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const modifiers = getModifiers(e);\r\n\r\n    if (modifiers.ctrlMetaKey) {\r\n      viewModel.zoom(e.deltaY < 0 ? ZOOM_FACTOR : 1 / ZOOM_FACTOR, {\r\n        x: e.clientX,\r\n        y: e.clientY,\r\n      });\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else if (modifiers.shiftKey) {\r\n      viewModel.pan(-e.deltaY * PAN_FACTOR, 0, true);\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else {\r\n      viewModel.pan(0, e.deltaY * PAN_FACTOR, true);\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }, []);\r\n\r\n  // React listens to the root listener for all events,\r\n  //  and chrome assumes the root event listener for mouse events\r\n  //  never wants to preventDefault.\r\n  // We need to take a local event listener and mark it as not passive.\r\n  // https://github.com/facebook/react/issues/14856\r\n  useNativeEvent(containerRef, \"wheel\", onWheel, { passive: false });\r\n\r\n  return (\r\n    <Root\r\n      className={className}\r\n      ref={containerRef}\r\n      onMouseMove={(e) => viewModel.onMouseMove(e.clientX, e.clientY)}\r\n    >\r\n      {children}\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PanZoomViewport;\r\n","import PanZoomViewport from \"./PanZoomViewport\";\r\nexport default PanZoomViewport;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  styled,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Slider,\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { Add as AddIcon, Delete as DeleteIcon } from \"@mui/icons-material\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport {\r\n  AddIngredientPlotBuilderItem,\r\n  PlotBuilder,\r\n  PlotBuilderItem,\r\n  PourSolventPlotBuilderItem,\r\n  StirCauldronPlotBuilderItem,\r\n} from \"@/services/plotter/PlotBuilder\";\r\nimport { IngredientId } from \"@/services/ingredients/types\";\r\n\r\nimport IngredientSelector from \"./IngredientSelector\";\r\n\r\nexport interface PlotBuilderItemsListProps {\r\n  className?: string;\r\n  builder: PlotBuilder;\r\n  highlightItem?: PlotBuilderItem | null;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  overflow: \"auto\",\r\n  boxSixing: \"border-box\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  \"& .list\": {\r\n    listStyle: \"none\",\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  \"& .list-item\": {\r\n    position: \"relative\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  \"& .list-item .delete-button\": {\r\n    position: \"absolute\",\r\n    top: \"5px\",\r\n    right: \"15px\",\r\n  },\r\n  \"& .buttons\": {\r\n    alignSelf: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst PlotBuilderItemsList = ({\r\n  className,\r\n  builder,\r\n  highlightItem,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotBuilderItemsListProps) => {\r\n  const items = useObservation(builder.items$) ?? [];\r\n  return (\r\n    <Root className={className}>\r\n      <ul className=\"list\">\r\n        {items.map((item, i) => (\r\n          <PlotListItem\r\n            key={i}\r\n            item={item}\r\n            highlight={item === highlightItem}\r\n            onMouseOver={onMouseOver}\r\n            onMouseOut={onMouseOut}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <div className=\"buttons\">\r\n        <Button color=\"primary\" onClick={() => builder.addIngredient()}>\r\n          <AddIcon /> Ingredient\r\n        </Button>\r\n        <Button color=\"primary\" onClick={() => builder.addStirCauldron()}>\r\n          <AddIcon /> Stir Cauldron\r\n        </Button>\r\n        <Button color=\"primary\" onClick={() => builder.addPourSolvent()}>\r\n          <AddIcon /> Pour Solvent\r\n        </Button>\r\n      </div>\r\n    </Root>\r\n  );\r\n};\r\n\r\ninterface PlotListItemProps {\r\n  item: PlotBuilderItem;\r\n  highlight?: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst PlotListItem = ({\r\n  item,\r\n  highlight = false,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotListItemProps) => {\r\n  if (item instanceof AddIngredientPlotBuilderItem) {\r\n    return (\r\n      <AddIngredientPlotListItem\r\n        item={item}\r\n        highlight={highlight}\r\n        onMouseOver={onMouseOver}\r\n        onMouseOut={onMouseOut}\r\n      />\r\n    );\r\n  } else if (item instanceof StirCauldronPlotBuilderItem) {\r\n    return (\r\n      <StirCauldronPlotListItem\r\n        item={item}\r\n        highlight={highlight}\r\n        onMouseOver={onMouseOver}\r\n        onMouseOut={onMouseOut}\r\n      />\r\n    );\r\n  } else if (item instanceof PourSolventPlotBuilderItem) {\r\n    return (\r\n      <PourSolventPlotListItem\r\n        item={item}\r\n        highlight={highlight}\r\n        onMouseOver={onMouseOver}\r\n        onMouseOut={onMouseOut}\r\n      />\r\n    );\r\n  }\r\n  return <div>Unknown PlotItem {item.constructor.name}</div>;\r\n};\r\n\r\ninterface PlotListItemCardProps {\r\n  item: PlotBuilderItem;\r\n  highlight: boolean;\r\n  children: React.ReactNode;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\n\r\nconst PlotListItemCard = ({\r\n  item,\r\n  highlight,\r\n  children,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotListItemCardProps) => {\r\n  const valid = useObservation(item.isValid$) ?? false;\r\n  return (\r\n    <Card\r\n      className=\"list-item\"\r\n      style={{\r\n        backgroundColor:\r\n          (!valid && \"salmon\") || (highlight && \"lightblue\") || undefined,\r\n      }}\r\n      onMouseOver={() => onMouseOver(item)}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <IconButton\r\n        size=\"small\"\r\n        className=\"delete-button\"\r\n        onClick={() => item.delete()}\r\n      >\r\n        <DeleteIcon />\r\n      </IconButton>\r\n      <CardContent>{children}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\ninterface AddIngredientPlotListItemProps {\r\n  item: AddIngredientPlotBuilderItem;\r\n  highlight: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst AddIngredientPlotListItem = ({\r\n  item,\r\n  highlight,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: AddIngredientPlotListItemProps) => {\r\n  const savedIngredientRef = React.useRef<IngredientId | null>(null);\r\n\r\n  // Need both state (for rerender on change) and ref (to check it in a callback)\r\n  const [isPreviewing, setIsPreviewing] = React.useState<boolean>(false);\r\n  const isPreviewingRef = React.useRef(false);\r\n\r\n  const [isChangingGrind, setIsChangingGrind] = React.useState(false);\r\n  const ingredientId = useObservation(item.ingredientId$) ?? null;\r\n  const grindPercent = useObservation(item.grindPercent$) ?? 0;\r\n\r\n  // We change the ingredientId during mouse over for live feedback, but this changes the ingredient id we wish to display.\r\n  // We need to pin the previously selected id so that IngredientSelector works properly during the selection process.\r\n  const displayIngredientId = isPreviewing\r\n    ? savedIngredientRef.current\r\n    : ingredientId;\r\n  return (\r\n    <PlotListItemCard\r\n      item={item}\r\n      highlight={highlight}\r\n      onMouseOver={isChangingGrind ? () => {} : onMouseOver}\r\n      onMouseOut={isChangingGrind ? () => {} : onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Ingredient</Typography>\r\n      </div>\r\n      <IngredientSelector\r\n        fullWidth\r\n        value={displayIngredientId}\r\n        allowEmpty={displayIngredientId == null}\r\n        // Store the last ingredient when we open, so we can return to it after closing without making a selection.\r\n        onOpen={() => {\r\n          savedIngredientRef.current = item.ingredientId;\r\n          setIsPreviewing(true);\r\n          isPreviewingRef.current = true;\r\n        }}\r\n        // Change the ingredient id with the mouse for a live preview.\r\n        onMouseOverItem={(id) => {\r\n          if (!isPreviewing) {\r\n            return;\r\n          }\r\n          item.setIngredient(id);\r\n        }}\r\n        // Change our saved ingredient when the input is committed.  We will restore it when the input closes after the change.\r\n        onChange={(id) => {\r\n          setIsPreviewing(false);\r\n          isPreviewingRef.current = false;\r\n          item.setIngredient(id);\r\n        }}\r\n        onClose={() => {\r\n          if (isPreviewingRef.current) {\r\n            item.setIngredient(savedIngredientRef.current);\r\n            setIsPreviewing(false);\r\n            isPreviewingRef.current = false;\r\n          }\r\n          savedIngredientRef.current = null;\r\n        }}\r\n      />\r\n      <Grid paddingTop={1}>\r\n        <Typography id=\"grind-label\">Grind Percent</Typography>\r\n        <Slider\r\n          value={grindPercent}\r\n          onChange={(_, value) => {\r\n            React.startTransition(() => {\r\n              item.setGrindPercent(value as number);\r\n            });\r\n            setIsChangingGrind(true);\r\n          }}\r\n          onChangeCommitted={(_, value) => {\r\n            item.setGrindPercent(value as number);\r\n            setIsChangingGrind(false);\r\n          }}\r\n          aria-labelledby=\"grind-label\"\r\n          min={0}\r\n          max={1}\r\n          step={0.001}\r\n        />\r\n      </Grid>\r\n    </PlotListItemCard>\r\n  );\r\n};\r\n\r\ninterface StirCauldronPlotListItemProps {\r\n  item: StirCauldronPlotBuilderItem;\r\n  highlight: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\n\r\nconst StirCauldronPlotListItem = ({\r\n  item,\r\n  highlight,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: StirCauldronPlotListItemProps) => {\r\n  const distance = useObservation(item.distance$) ?? 0;\r\n  const [inputDistance, setInputDistance] = React.useState<string | null>(null);\r\n  return (\r\n    <PlotListItemCard\r\n      item={item}\r\n      highlight={highlight}\r\n      onMouseOver={onMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Stir Cauldron</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"Distance\"\r\n        value={inputDistance ?? distance ?? \"\"}\r\n        onChange={(e) => {\r\n          let asNumber: number | null = Number(e.target.value);\r\n          if (isNaN(asNumber)) {\r\n            asNumber = null;\r\n          }\r\n\r\n          setInputDistance(e.target.value);\r\n          item.setDistance(asNumber);\r\n        }}\r\n        onBlur={() => setInputDistance(null)}\r\n      />\r\n    </PlotListItemCard>\r\n  );\r\n};\r\n\r\ninterface PourSolventPlotListItemProps {\r\n  item: PourSolventPlotBuilderItem;\r\n  highlight: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst PourSolventPlotListItem = ({\r\n  item,\r\n  highlight,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PourSolventPlotListItemProps) => {\r\n  const distance = useObservation(item.distance$);\r\n  const [inputDistance, setInputDistance] = React.useState<string | null>(null);\r\n  return (\r\n    <PlotListItemCard\r\n      item={item}\r\n      highlight={highlight}\r\n      onMouseOver={onMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Pour Solvent</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"Distance\"\r\n        value={inputDistance ?? distance ?? \"\"}\r\n        onChange={(e) => {\r\n          let asNumber: number | null = Number(e.target.value);\r\n          if (isNaN(asNumber)) {\r\n            asNumber = null;\r\n          }\r\n\r\n          setInputDistance(e.target.value);\r\n          item.setDistance(asNumber);\r\n        }}\r\n        onBlur={() => setInputDistance(null)}\r\n      />\r\n    </PlotListItemCard>\r\n  );\r\n};\r\n\r\nexport default PlotBuilderItemsList;\r\n","import React from \"react\";\r\nimport { styled, Card, CardContent, Typography } from \"@mui/material\";\r\n\r\nimport { useDICreate, useDIDependency } from \"@/container\";\r\nimport { PointZero } from \"@/points\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { EmptyPlotResult } from \"@/services/plotter/types\";\r\nimport { PotionBaseRegistry } from \"@/services/potion-bases/PotionBaseRegistry\";\r\n\r\nimport Plot from \"../Plot\";\r\nimport PlotBuilderItemsList from \"../PlotBuilderItemsList\";\r\nimport PotionMap from \"../Map\";\r\n\r\nimport { PlotEditorViewModel } from \"./PlotEditorViewModel\";\r\nimport PanZoomViewport from \"../PanZoomViewport\";\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\n\r\nconst Root = styled(\"div\")({\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  \"& .plot-container\": {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .map\": {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .plot\": {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .mouse-coords\": {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    right: 0,\r\n  },\r\n  \"& .divider\": {\r\n    width: \"2px\",\r\n    height: \"100%\",\r\n    background: \"grey\",\r\n  },\r\n  \"& .plot-items\": {\r\n    width: \"400px\",\r\n    height: \"100%\",\r\n  },\r\n});\r\n\r\nconst PlotEditor = () => {\r\n  const viewModel = useDICreate(PlotEditorViewModel);\r\n  const baseRegistry = useDIDependency(PotionBaseRegistry);\r\n  const map = baseRegistry.getPotionBaseById(\"water\" as any)?.map;\r\n\r\n  const builder = viewModel.builder;\r\n\r\n  const plotObserved = useObservation(builder.plot$) ?? null;\r\n  const plot = React.useDeferredValue(plotObserved);\r\n\r\n  const highlightItem = useObservation(viewModel.mouseOverBuilderItem$) ?? null;\r\n  const outputShareString = useObservation(viewModel.shareString$) ?? null;\r\n\r\n  const mouseWorld = useObservation(viewModel.mouseWorldPosition$) ?? PointZero;\r\n\r\n  React.useEffect(() => {\r\n    const query = new URLSearchParams(window.location.search);\r\n    if (query.has(\"data\")) {\r\n      const data = query.get(\"data\")!;\r\n      builder.loadFromShareString(data);\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (!outputShareString) {\r\n      return;\r\n    }\r\n    const query = new URLSearchParams(window.location.search);\r\n    query.set(\"data\", outputShareString);\r\n    window.history.replaceState({}, \"\", `?${query.toString()}`);\r\n  }, [outputShareString]);\r\n\r\n  return (\r\n    <Root>\r\n      <PanZoomViewport className=\"plot-container\" viewModel={viewModel}>\r\n        {map && <PotionMap className=\"map\" map={map} viewModel={viewModel} />}\r\n        <Plot\r\n          className=\"plot\"\r\n          plot={plot ?? EmptyPlotResult}\r\n          viewModel={viewModel}\r\n        />\r\n        <Card className=\"mouse-coords\">\r\n          <CardContent>\r\n            <Typography variant=\"overline\">\r\n              ({mouseWorld.x.toFixed(2)}, {mouseWorld.y.toFixed(2)})\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </PanZoomViewport>\r\n      <div className=\"divider\" />\r\n      <PlotBuilderItemsList\r\n        className=\"plot-items\"\r\n        builder={builder}\r\n        highlightItem={highlightItem}\r\n        onMouseOver={(item) => viewModel.onMouseOverBuilderItem(item)}\r\n        onMouseOut={() => viewModel.onMouseOverBuilderItem(null)}\r\n      />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PlotEditor;\r\n","import { BehaviorSubject, map, Observable, combineLatest } from \"rxjs\";\r\n\r\nimport { inject } from \"microinject\";\r\n\r\nimport { Point, pointAdd, pointSubtract, PointZero } from \"@/points\";\r\nimport { Size, SizeZero } from \"@/size\";\r\n\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\n\r\nimport { PlotBuilder, PlotBuilderItem } from \"@/services/plotter/PlotBuilder\";\r\nimport { PlotItem } from \"@/services/plotter/types\";\r\n\r\nimport { IPlotViewModel } from \"../Plot/PlotViewModel\";\r\nimport { IPanZoomViewportViewModel } from \"../PanZoomViewport/PanZoomViewportViewModel\";\r\n\r\nexport class PlotEditorViewModel\r\n  implements IPlotViewModel, IPanZoomViewportViewModel\r\n{\r\n  private readonly _viewportSize$ = new BehaviorSubject<Size>(SizeZero);\r\n\r\n  /**\r\n   * The offset of the map on the viewport, in map units, unscaled.\r\n   */\r\n  private readonly _viewOffset$ = new BehaviorSubject<Point>(PointZero);\r\n  private readonly _viewScale$ = new BehaviorSubject<number>(1);\r\n  private readonly _mouseOverBuilderItem$ =\r\n    new BehaviorSubject<PlotBuilderItem | null>(null);\r\n  private readonly _shareString$: Observable<string>;\r\n  private readonly _mouseClientPosition$ = new BehaviorSubject<Point>(\r\n    PointZero\r\n  );\r\n  private readonly _mouseWorldPosition$: Observable<Point>;\r\n  private readonly _mouseOverPlotItem$ = new BehaviorSubject<PlotItem | null>(\r\n    null\r\n  );\r\n\r\n  constructor(@inject(PlotBuilder) private readonly _builder: PlotBuilder) {\r\n    this._shareString$ = this._builder.plot$.pipe(\r\n      map((x) => _builder.getShareString())\r\n    );\r\n    this._mouseWorldPosition$ = combineLatest([\r\n      this._mouseClientPosition$,\r\n      this._viewOffset$,\r\n      this._viewScale$,\r\n    ]).pipe(map(([clientPos]) => this._clientToWorld(clientPos)));\r\n  }\r\n\r\n  get builder(): PlotBuilder {\r\n    return this._builder;\r\n  }\r\n\r\n  get shareString$(): Observable<string> {\r\n    return this._shareString$;\r\n  }\r\n\r\n  get viewportSize$(): Observable<Size> {\r\n    return this._viewportSize$;\r\n  }\r\n\r\n  get viewOffset$(): Observable<Point> {\r\n    return this._viewOffset$;\r\n  }\r\n  get viewScale$(): Observable<number> {\r\n    return this._viewScale$;\r\n  }\r\n\r\n  get mouseWorldPosition$(): Observable<Point> {\r\n    return this._mouseWorldPosition$;\r\n  }\r\n\r\n  get mouseOverPlotItem$(): Observable<PlotItem | null> {\r\n    return this._mouseOverPlotItem$;\r\n  }\r\n\r\n  get mouseOverBuilderItem$(): Observable<PlotBuilderItem | null> {\r\n    return this._mouseOverBuilderItem$;\r\n  }\r\n\r\n  zoom(delta: number, on: Point | null = null) {\r\n    const prevWorld = on ? this._clientToWorld(on) : PointZero;\r\n    const pzoom = this._viewScale$.value;\r\n    const zoom = pzoom * delta;\r\n    this._viewScale$.next(zoom);\r\n    if (on) {\r\n      const world = this._clientToWorld(on);\r\n      const delta = pointSubtract(world, prevWorld);\r\n      this._viewOffset$.next(pointAdd(this._viewOffset$.value, delta));\r\n    }\r\n  }\r\n\r\n  pan(dx: number, dy: number, applyZoom = false) {\r\n    const z = applyZoom ? 1 / this._viewScale$.value : 1;\r\n    this._viewOffset$.next(\r\n      pointAdd(this._viewOffset$.value, { x: dx * z, y: dy * z })\r\n    );\r\n  }\r\n\r\n  onMouseMove(clientX: number, clientY: number): void {\r\n    this._mouseClientPosition$.next({ x: clientX, y: clientY });\r\n  }\r\n\r\n  onViewportResized(width: number, height: number): void {\r\n    let prevSize = this._viewportSize$.value;\r\n    if (prevSize.width === 0 || prevSize.height === 0) {\r\n      prevSize = {\r\n        width: MAP_EXTENT_RADIUS * 2,\r\n        height: MAP_EXTENT_RADIUS * 2,\r\n      };\r\n    }\r\n\r\n    this._viewportSize$.next({ width, height });\r\n\r\n    if (width === 0 || height === 0) {\r\n      return;\r\n    }\r\n\r\n    let scaleFactor = 1;\r\n    if (width < height) {\r\n      scaleFactor = width / prevSize.width;\r\n    } else {\r\n      scaleFactor = height / prevSize.height;\r\n    }\r\n\r\n    // TODO: Keep the view centered.\r\n    // const offset: Point = {\r\n    //   x: (prevSize.width - width) / 2 / this._viewScale$.value,\r\n    //   y: (prevSize.height - height) / 2 / this._viewScale$.value,\r\n    // };\r\n    this._viewScale$.next(this._viewScale$.value * scaleFactor);\r\n    // this._viewOffset$.next(pointAdd(this._viewOffset$.value, offset));\r\n  }\r\n\r\n  onMouseOverPlotItem(item: PlotItem | null): void {\r\n    this._mouseOverPlotItem$.next(item);\r\n    this._mouseOverBuilderItem$.next(\r\n      item ? this._builder.builderItemFor(item) : null\r\n    );\r\n  }\r\n\r\n  onMouseOverBuilderItem(item: PlotBuilderItem | null): void {\r\n    this._mouseOverBuilderItem$.next(item);\r\n    this._mouseOverPlotItem$.next(item ? item.plotItem : null);\r\n  }\r\n\r\n  private _clientToWorld(p: Point): Point {\r\n    const zoomFactor = this._viewScale$.value;\r\n    const { x: offsetX, y: offsetY } = this._viewOffset$.value;\r\n\r\n    // Why the hell is offset operating in the opposite direction of crucible-web even with the same map renderer?\r\n\r\n    // return {\r\n    //   x: p.x / zoomFactor - MAP_EXTENT_RADIUS + offsetX,\r\n    //   y: (p.y / zoomFactor - MAP_EXTENT_RADIUS + offsetY) * -1,\r\n    // };\r\n\r\n    return {\r\n      x: p.x / zoomFactor - MAP_EXTENT_RADIUS - offsetX,\r\n      y: (p.y / zoomFactor - MAP_EXTENT_RADIUS - offsetY) * -1,\r\n    };\r\n  }\r\n\r\n  private _worldToClient(p: Point): Point {\r\n    const zoomFactor = this._viewScale$.value;\r\n    const { x: offsetX, y: offsetY } = this._viewOffset$.value;\r\n\r\n    // Why the hell is this opposite of crucible-web even with the same client to world coord function?\r\n    return {\r\n      x: (p.x + MAP_EXTENT_RADIUS + offsetX) * zoomFactor,\r\n      y: (-p.y + MAP_EXTENT_RADIUS + offsetY) * zoomFactor,\r\n    };\r\n  }\r\n}\r\n","import PlotEditor from \"./PlotEditor\";\r\nexport default PlotEditor;\r\n","import React from \"react\";\r\nimport Color from \"color\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\nimport { PointZero } from \"@/points\";\r\nimport { MAP_EXTENT_RADIUS, POTION_RADIUS } from \"@/game-settings\";\r\nimport { PointArray } from \"@/point-array\";\r\nimport { keepEveryK } from \"@/utils\";\r\n\r\nimport { PlotItem, PlotPoint, PlotResult } from \"@/services/plotter/types\";\r\nimport {\r\n  IPlotViewModel,\r\n  PlotViewModelContext,\r\n  usePlotViewModel,\r\n} from \"./PlotViewModel\";\r\n\r\nimport PlotDetails from \"./components/PlotDetails\";\r\nimport StepDetails from \"./components/StepDetails\";\r\nimport { SizeZero } from \"@/size\";\r\n\r\nexport interface PlotProps {\r\n  className?: string;\r\n  plot: PlotResult;\r\n  viewModel: IPlotViewModel;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  overflow: \"hidden\",\r\n  position: \"relative\",\r\n  \"& .plot-details\": {\r\n    position: \"absolute\",\r\n    top: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  \"& .inspect-source\": {\r\n    position: \"absolute\",\r\n    top: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n  },\r\n  \"& .plot-svg\": {\r\n    display: \"block\",\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n  },\r\n}));\r\n\r\nconst Plot = ({ className, plot, viewModel }: PlotProps) => {\r\n  const { width, height } = useObservation(viewModel.viewportSize$) ?? SizeZero;\r\n  const offset = useObservation(viewModel.viewOffset$) ?? PointZero;\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n  const inspectSource = useObservation(viewModel.mouseOverPlotItem$) ?? null;\r\n\r\n  const onLineMouseOver = React.useCallback(\r\n    (line: PlotLine) => {\r\n      viewModel.onMouseOverPlotItem(line.source);\r\n    },\r\n    [viewModel]\r\n  );\r\n\r\n  const [committedLines, pendingLines] = resultToPlotLines(\r\n    plot.committedPoints,\r\n    plot.pendingPoints\r\n  );\r\n\r\n  return (\r\n    <Root className={className}>\r\n      <PlotViewModelContext.Provider value={viewModel}>\r\n        <svg\r\n          className=\"plot-svg\"\r\n          width={width}\r\n          height={height}\r\n          viewBox={`0 0 ${width} ${height}`}\r\n        >\r\n          {/* In theory all these transforms can be done in one go, but neither order seems to work when combining them */}\r\n          <g transform={`scale(${scale})`}>\r\n            <g\r\n              transform={`translate(${MAP_EXTENT_RADIUS}, ${MAP_EXTENT_RADIUS})`}\r\n            >\r\n              <g transform=\"scale(1, -1)\">\r\n                <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n                  {committedLines.map((line, i) => (\r\n                    <PlotLine\r\n                      key={i}\r\n                      line={line}\r\n                      pending={false}\r\n                      highlight={line.source === inspectSource}\r\n                      onMouseOver={onLineMouseOver}\r\n                      onMouseOut={() => viewModel.onMouseOverPlotItem(null)}\r\n                    />\r\n                  ))}\r\n                  {pendingLines.map((line, i) => (\r\n                    <PlotLine\r\n                      key={i}\r\n                      line={line}\r\n                      pending={true}\r\n                      highlight={line.source === inspectSource}\r\n                      onMouseOver={onLineMouseOver}\r\n                      onMouseOut={() => viewModel.onMouseOverPlotItem(null)}\r\n                    />\r\n                  ))}\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </g>\r\n        </svg>\r\n        {inspectSource && (\r\n          <StepDetails className=\"inspect-source\" step={inspectSource} />\r\n        )}\r\n        <PlotDetails className=\"plot-details\" plot={plot} />\r\n      </PlotViewModelContext.Provider>\r\n    </Root>\r\n  );\r\n};\r\n\r\ninterface PlotLineProps {\r\n  line: PlotLine;\r\n  pending: boolean;\r\n  highlight: boolean;\r\n  onMouseOver(line: PlotLine): void;\r\n  onMouseOut(): void;\r\n}\r\nconst PlotLine = ({\r\n  line,\r\n  pending,\r\n  highlight,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotLineProps) => {\r\n  const viewModel = usePlotViewModel();\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n  const { points, source, evenOdd } = line;\r\n\r\n  const onPathMouseOver = React.useCallback(() => {\r\n    onMouseOver(line);\r\n  }, [line, onMouseOver]);\r\n\r\n  if (points.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  let color = \"black\";\r\n  switch (source.type) {\r\n    case \"add-ingredient\":\r\n      color = evenOdd ? \"red\" : \"green\";\r\n      break;\r\n    case \"pour-solvent\":\r\n      color = \"blue\";\r\n      break;\r\n  }\r\n\r\n  if (pending) {\r\n    color = Color(color).lighten(0.4).hex();\r\n  }\r\n\r\n  const path = line.points.reduce(\r\n    (str, p) => `${str} L${p.x},${p.y}`,\r\n    `M ${points[0].x} ${points[0].y} `\r\n  );\r\n\r\n  return (\r\n    <path\r\n      d={path}\r\n      stroke={color}\r\n      strokeWidth={(highlight ? 5 : 2) / scale}\r\n      fill=\"none\"\r\n      onMouseOver={onPathMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    />\r\n  );\r\n};\r\n\r\ninterface PlotLine {\r\n  points: PointArray;\r\n  source: PlotItem;\r\n  evenOdd: boolean;\r\n}\r\n\r\nfunction resultToPlotLines(\r\n  committed: PlotPoint[],\r\n  pending: PlotPoint[],\r\n  trim = 4\r\n) {\r\n  let currentLine: PlotLine | null = null;\r\n  let sourceCounter = 0;\r\n\r\n  const commitedLines: PlotLine[] = [];\r\n  const pendingLines: PlotLine[] = [];\r\n\r\n  let lastSource: PlotItem | null = null;\r\n\r\n  for (const point of committed) {\r\n    if (currentLine == null || currentLine.source != point.source) {\r\n      if (lastSource == null || lastSource !== point.source) {\r\n        sourceCounter++;\r\n        lastSource = point.source;\r\n      }\r\n      currentLine = {\r\n        points: [],\r\n        source: point.source,\r\n        evenOdd: sourceCounter % 2 === 1,\r\n      };\r\n      commitedLines.push(currentLine);\r\n    }\r\n\r\n    currentLine.points.push(point);\r\n  }\r\n\r\n  currentLine = null;\r\n\r\n  for (const point of pending) {\r\n    if (currentLine == null || currentLine.source != point.source) {\r\n      if (lastSource == null || lastSource !== point.source) {\r\n        sourceCounter++;\r\n        lastSource = point.source;\r\n      }\r\n      currentLine = {\r\n        points: [],\r\n        source: point.source,\r\n        evenOdd: sourceCounter % 2 === 1,\r\n      };\r\n      pendingLines.push(currentLine);\r\n    }\r\n\r\n    currentLine.points.push(point);\r\n  }\r\n\r\n  if (trim > 1) {\r\n    for (const line of commitedLines) {\r\n      line.points = keepEveryK(line.points, trim, true);\r\n    }\r\n    for (const line of pendingLines) {\r\n      line.points = keepEveryK(line.points, trim, true);\r\n    }\r\n  }\r\n\r\n  return [commitedLines, pendingLines];\r\n}\r\n\r\nexport default Plot;\r\n","import React from \"react\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\n\r\nimport {\r\n  Point,\r\n  pointAdd,\r\n  pointScale,\r\n  pointSubtract,\r\n  PointZero,\r\n} from \"@/points\";\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\nimport { PlotItem } from \"@/services/plotter/types\";\r\nimport { Size } from \"@/size\";\r\n\r\nexport const PlotViewModelContext = React.createContext<IPlotViewModel | null>(\r\n  null\r\n);\r\n\r\nexport function usePlotViewModel(): IPlotViewModel {\r\n  const plotViewModel = React.useContext(PlotViewModelContext);\r\n  if (!plotViewModel) {\r\n    throw new Error(\"PlotViewModelContext not found\");\r\n  }\r\n  return plotViewModel;\r\n}\r\n\r\nexport interface IPlotViewModel {\r\n  readonly viewportSize$: Observable<Size>;\r\n  readonly viewOffset$: Observable<Point>;\r\n  readonly viewScale$: Observable<number>;\r\n  readonly mouseOverPlotItem$: Observable<PlotItem | null>;\r\n\r\n  onMouseOverPlotItem(item: PlotItem | null): void;\r\n}\r\n","import React from \"react\";\r\nimport { uniq, sum } from \"lodash\";\r\n\r\nimport { Card, CardContent, Typography } from \"@mui/material\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\nimport { pointArrayLength } from \"@/point-array\";\r\n\r\nimport {\r\n  AddIngredientPlotItem,\r\n  PlotItem,\r\n  PlotResult,\r\n} from \"@/services/plotter/types\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\n\r\nexport interface PlotDetailsProps {\r\n  className?: string;\r\n  plot: PlotResult;\r\n}\r\n\r\nconst PlotDetails = ({ className, plot }: PlotDetailsProps) => {\r\n  const ingredientRegistry = useDIDependency(IngredientRegistry);\r\n\r\n  const [baseCost, length, totalIngredients, totalUniqueIngredients, stress] =\r\n    React.useMemo(() => {\r\n      const allPoints = plot.committedPoints.concat(plot.pendingPoints);\r\n      const sources = uniq(allPoints.map((point) => point.source));\r\n      const ingredients = sources.filter(isIngredientPoint);\r\n\r\n      let baseCost = 0;\r\n      let ingredientTypeCounts: Record<string, number> = {};\r\n      for (const { ingredientId } of ingredients) {\r\n        const ingredient = ingredientRegistry.getIngredientById(ingredientId);\r\n        if (!ingredient) {\r\n          continue;\r\n        }\r\n        baseCost += ingredient.price;\r\n        ingredientTypeCounts[ingredient.id] =\r\n          (ingredientTypeCounts[ingredient.id] ?? 0) + 1;\r\n      }\r\n\r\n      const length = pointArrayLength(plot.committedPoints);\r\n\r\n      const totalIngredients = ingredients.length;\r\n      const totalUniqueIngredients = uniq(\r\n        ingredients.map((x) => x.ingredientId)\r\n      ).length;\r\n\r\n      const stress = Math.sqrt(\r\n        sum(\r\n          Object.keys(ingredientTypeCounts).map((key) =>\r\n            Math.pow(ingredientTypeCounts[key], 2)\r\n          )\r\n        )\r\n      );\r\n\r\n      return [\r\n        baseCost,\r\n        length,\r\n        totalIngredients,\r\n        totalUniqueIngredients,\r\n        stress,\r\n      ];\r\n    }, [plot, IngredientRegistry]);\r\n\r\n  return (\r\n    <Card className={className} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h6\">Details</Typography>\r\n        <div>\r\n          <Typography>Ingredient count: </Typography>\r\n          <Typography variant=\"overline\">\r\n            {totalIngredients} ({totalUniqueIngredients} unique)\r\n          </Typography>\r\n        </div>\r\n        <div>\r\n          <Typography>Ingredient stress: </Typography>\r\n          <Typography variant=\"overline\">{stress.toFixed(2)}</Typography>\r\n        </div>\r\n        <div>\r\n          <Typography>Base Cost: </Typography>\r\n          <Typography variant=\"overline\">{baseCost}</Typography>\r\n        </div>\r\n        <div>\r\n          <Typography>Committed length: </Typography>\r\n          <Typography variant=\"overline\">{length.toFixed(2)}</Typography>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PlotDetails;\r\n\r\nexport function isIngredientPoint(\r\n  point: PlotItem\r\n): point is AddIngredientPlotItem {\r\n  return point.type === \"add-ingredient\";\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Card, CardContent, Typography, styled } from \"@mui/material\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\n\r\nimport { CubicBezierCurve } from \"@/curves\";\r\nimport { MAX_INGREDIENT_EXTENT, POTION_RADIUS } from \"@/game-settings\";\r\n\r\nimport { AddIngredientPlotItem, PlotItem } from \"@/services/plotter/types\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\n\r\nexport interface StepDetailsProps {\r\n  className?: string;\r\n  step: PlotItem;\r\n}\r\n\r\nconst StepDetails = ({ step, className }: StepDetailsProps) => {\r\n  let content: React.ReactNode;\r\n  switch (step.type) {\r\n    case \"add-ingredient\":\r\n      content = <AddIngredient step={step} />;\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  return (\r\n    <Card className={className} variant=\"outlined\">\r\n      <CardContent>{content}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\ninterface AddIngredientStepProps {\r\n  step: AddIngredientPlotItem;\r\n}\r\n\r\nconst AddIngredientRoot = styled(\"div\")({\r\n  \"& .svg-container\": {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\nconst AddIngredient = ({ step }: AddIngredientStepProps) => {\r\n  const ingredientRegistry = useDIDependency(IngredientRegistry);\r\n  const ingredient = ingredientRegistry.getIngredientById(\r\n    step.ingredientId\r\n  ) ?? {\r\n    name: \"Unknown\",\r\n    path: [] as CubicBezierCurve[],\r\n  };\r\n\r\n  const path = ingredient.path.reduce(\r\n    (path, curve) =>\r\n      path +\r\n      `M ${curve.start.x} ${curve.start.y} C ${curve.p1.x},${curve.p1.y} ${curve.p2.x},${curve.p2.y} ${curve.end.x},${curve.end.y}`,\r\n    \"M 0 0 \"\r\n  );\r\n  return (\r\n    <AddIngredientRoot>\r\n      <Typography variant=\"h6\">Ingredient</Typography>\r\n      <Typography variant=\"overline\">{ingredient.name}</Typography>\r\n      <div>\r\n        <Typography>Grind Percentage</Typography>\r\n        <Typography variant=\"overline\">{step.grindPercent}</Typography>\r\n      </div>\r\n      <div className=\"svg-container\">\r\n        <svg\r\n          width=\"100px\"\r\n          height=\"100px\"\r\n          viewBox={`-${MAX_INGREDIENT_EXTENT} -${MAX_INGREDIENT_EXTENT} ${\r\n            MAX_INGREDIENT_EXTENT * 2\r\n          } ${MAX_INGREDIENT_EXTENT * 2}`}\r\n          transform=\"scale(1, -1)\"\r\n        >\r\n          <circle cx={0} cy={0} r={POTION_RADIUS} fill=\"blue\" />\r\n          <path d={path} stroke=\"black\" strokeWidth={0.2} fill=\"none\" />\r\n        </svg>\r\n      </div>\r\n    </AddIngredientRoot>\r\n  );\r\n};\r\n\r\nexport default StepDetails;\r\n","import Plot from \"./Plot\";\r\nexport default Plot;\r\n","import React from \"react\";\r\nimport {\r\n  composeModules,\r\n  Container,\r\n  Identifier,\r\n  Newable,\r\n  ParameterRecord,\r\n} from \"microinject\";\r\n\r\nimport servicesModule from \"./services/module\";\r\n\r\nconst modules = composeModules(servicesModule);\r\n\r\nconst ContainerContext = React.createContext<Container>(new Container());\r\n\r\nconst container = new Container();\r\ncontainer.bind(Container).toConstantValue(container);\r\ncontainer.load(modules);\r\n\r\nexport default container;\r\n\r\nexport interface ContainerProviderProps {\r\n  children: React.ReactNode;\r\n}\r\nexport const ContainerProvider = ({ children }: ContainerProviderProps) => {\r\n  return (\r\n    <ContainerContext.Provider value={container}>\r\n      {children}\r\n    </ContainerContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useDIContainer(): Container {\r\n  return React.useContext(ContainerContext);\r\n}\r\n\r\nexport function useDIDependency<T>(identifier: Identifier<T>): T {\r\n  const container = useDIContainer();\r\n  return container.get(identifier);\r\n}\r\n\r\nexport function useDICreate<T>(\r\n  identifier: Newable<T>,\r\n  parameters?: ParameterRecord\r\n): T {\r\n  const container = useDIContainer();\r\n  const valRef = React.useRef<T>();\r\n  if (valRef.current == null) {\r\n    valRef.current = container.create(identifier, parameters);\r\n  }\r\n  return valRef.current;\r\n}\r\n","import {\r\n  BEZIER_CURVE_LENGTH_RESOLUTION,\r\n  PATH_SPACING_PHYSICS,\r\n} from \"./game-settings\";\r\n\r\nimport {\r\n  Point,\r\n  pointAdd,\r\n  pointDistance,\r\n  pointMagnitude,\r\n  pointNormalize,\r\n  pointScale,\r\n  pointSubtract,\r\n  PointZero,\r\n} from \"./points\";\r\n\r\nexport interface CubicBezierCurve {\r\n  start: Point;\r\n  p1: Point;\r\n  p2: Point;\r\n  end: Point;\r\n}\r\n\r\nexport function cubicBezierCurve(\r\n  startX: number,\r\n  startY: number,\r\n  p1x: number,\r\n  p1y: number,\r\n  p2x: number,\r\n  p2y: number,\r\n  endx: number,\r\n  endy: number\r\n): CubicBezierCurve {\r\n  return {\r\n    start: { x: startX, y: startY },\r\n    p1: { x: p1x, y: p1y },\r\n    p2: { x: p2x, y: p2y },\r\n    end: { x: endx, y: endy },\r\n  };\r\n}\r\n\r\nexport function getCurvePoint(curve: CubicBezierCurve, t: number): Point {\r\n  if (t < 0 || t > 1) {\r\n    throw new Error(\"getPoint: t must be between 0 and 1\");\r\n  }\r\n\r\n  const b1 = (1 - t) * (1 - t) * (1 - t);\r\n  const b2 = 3 * t * (1 - t) * (1 - t);\r\n  const b3 = 3 * t * t * (1 - t);\r\n  const b4 = t * t * t;\r\n\r\n  return {\r\n    x:\r\n      b1 * curve.start.x + b2 * curve.p1.x + b3 * curve.p2.x + b4 * curve.end.x,\r\n    y:\r\n      b1 * curve.start.y + b2 * curve.p1.y + b3 * curve.p2.y + b4 * curve.end.y,\r\n  };\r\n}\r\n\r\nconst curveLengthCache = new Map<CubicBezierCurve, number>();\r\nexport function getCurveLength(\r\n  curve: CubicBezierCurve\r\n  // resolution: number = BEZIER_CURVE_LENGTH_RESOLUTION\r\n): number {\r\n  const resolution = BEZIER_CURVE_LENGTH_RESOLUTION;\r\n  const cached = curveLengthCache.get(curve);\r\n  if (cached !== undefined) {\r\n    return cached;\r\n  }\r\n\r\n  let length = 0.0;\r\n\r\n  let previousPoint = getCurvePoint(curve, 0);\r\n\r\n  for (let index = 1; index <= resolution; index++) {\r\n    const point = getCurvePoint(curve, index / resolution);\r\n    const vector2_2 = pointSubtract(point, previousPoint);\r\n    length += pointMagnitude(vector2_2);\r\n    previousPoint = point;\r\n  }\r\n\r\n  curveLengthCache.set(curve, length);\r\n\r\n  return length;\r\n}\r\n\r\nconst curvePointsCache = new Map<CubicBezierCurve, readonly Point[]>();\r\nexport function curveToPoints(\r\n  curve: CubicBezierCurve\r\n  // spacing: number = PATH_SPACING_PHYSICS,\r\n  // resolution: number = 1\r\n): readonly Point[] {\r\n  const spacing: number = PATH_SPACING_PHYSICS;\r\n  const resolution: number = 1;\r\n\r\n  // if (spacing <= Number.EPSILON) {\r\n  //   throw new Error(\"curveToPoints: spacing must be greater than 0\");\r\n  // }\r\n  // if (resolution <= 0) {\r\n  //   throw new Error(\"curveToPoints: resolution must be greater than 0\");\r\n  // }\r\n\r\n  const cached = curvePointsCache.get(curve);\r\n  if (cached !== undefined) {\r\n    return cached;\r\n  }\r\n\r\n  const points: Point[] = [];\r\n\r\n  let remainingDistance = 0;\r\n  let previousPoint: Point = curve.start;\r\n\r\n  points.push(previousPoint);\r\n\r\n  const samplePointCount = Math.ceil(getCurveLength(curve) * resolution * 10.0);\r\n  for (let index = 0; index <= samplePointCount; index++) {\r\n    const t = index / samplePointCount;\r\n    const point = getCurvePoint(curve, t);\r\n    remainingDistance += pointDistance(previousPoint, point);\r\n    while (remainingDistance >= spacing) {\r\n      remainingDistance = remainingDistance - spacing;\r\n      const splitPoint = pointAdd(\r\n        point,\r\n        pointScale(\r\n          pointNormalize(pointSubtract(previousPoint, point)),\r\n          remainingDistance\r\n        )\r\n      );\r\n      points.push(splitPoint);\r\n      previousPoint = splitPoint;\r\n    }\r\n    previousPoint = point;\r\n  }\r\n\r\n  if (remainingDistance > 0) {\r\n    points.push(getCurvePoint(curve, 1));\r\n  }\r\n\r\n  Object.freeze(points);\r\n  for (const p of points) {\r\n    Object.freeze(p);\r\n  }\r\n  curvePointsCache.set(curve, points);\r\n\r\n  return points;\r\n}\r\n","export const PATH_SPACING_PHYSICS = 0.05;\r\nexport const BEZIER_CURVE_LENGTH_RESOLUTION = 200;\r\nexport const MAP_EXTENT_RADIUS = 60;\r\nexport const POTION_RADIUS = 0.79;\r\nexport const MAX_INGREDIENT_EXTENT = 10;\r\n","import * as React from \"react\";\r\n\r\ninterface UseComponentBounds {\r\n  left: number;\r\n  top: number;\r\n  right: number;\r\n  bottom: number;\r\n  width: number;\r\n  height: number;\r\n}\r\nexport function useComponentBounds(ref: React.RefObject<HTMLElement | null>) {\r\n  const [size, setSize] = React.useState<UseComponentBounds>({\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  React.useLayoutEffect(() => {\r\n    if (!ref.current) {\r\n      return;\r\n    }\r\n\r\n    const observer = new ResizeObserver(() => {\r\n      const el = ref.current;\r\n      if (!el) {\r\n        return;\r\n      }\r\n      const b = el.getBoundingClientRect();\r\n      setSize({\r\n        top: b.top,\r\n        left: b.left,\r\n        right: b.right,\r\n        bottom: b.bottom,\r\n        width: b.width,\r\n        height: b.height,\r\n      });\r\n    });\r\n\r\n    observer.observe(ref.current);\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [ref]);\r\n\r\n  return size;\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport function useNativeEvent<\r\n  T extends GlobalEventHandlers,\r\n  K extends keyof GlobalEventHandlersEventMap\r\n>(\r\n  ref: React.RefObject<T | null>,\r\n  type: K,\r\n  listener: (\r\n    this: GlobalEventHandlers,\r\n    ev: GlobalEventHandlersEventMap[K]\r\n  ) => any,\r\n  options?: boolean | AddEventListenerOptions\r\n) {\r\n  React.useEffect(() => {\r\n    if (!ref.current) {\r\n      return;\r\n    }\r\n\r\n    // De-reference the target so we remove from the right element.\r\n    const listenTarget = ref.current;\r\n\r\n    listenTarget.addEventListener(type, listener, options);\r\n    return () => {\r\n      listenTarget.removeEventListener(type, listener, options);\r\n    };\r\n  }, [type, listener, ref, options]);\r\n}\r\n","import React from \"react\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport interface UseObservationOpts {\r\n  useTransition?: boolean;\r\n  onError?: (err: Error) => void;\r\n}\r\nexport function useObservation<T>(\r\n  observable: Observable<T> | T | null | undefined,\r\n  { useTransition, onError }: UseObservationOpts = {}\r\n): T | undefined {\r\n  const [val, setVal] = React.useState<T | undefined>(undefined);\r\n\r\n  React.useEffect(() => {\r\n    if (observable) {\r\n      if (observable instanceof Observable) {\r\n        const subscription = observable.subscribe({\r\n          next: (val) => {\r\n            if (useTransition) {\r\n              React.startTransition(() => setVal(val));\r\n            } else {\r\n              setVal(val);\r\n            }\r\n          },\r\n          error: onError,\r\n        });\r\n        return () => subscription.unsubscribe();\r\n      } else {\r\n        setVal(observable);\r\n      }\r\n    }\r\n  }, [observable, onError, useTransition]);\r\n\r\n  return val;\r\n}\r\n","import \"@/style.css\";\r\n\r\nimport * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom/client\";\r\n\r\nimport { ContainerProvider } from \"./container\";\r\nimport ThemeProvider from \"./theme\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nconst rootEl = document.getElementById(\"root\");\r\nconst root = ReactDOM.createRoot(rootEl!);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <ContainerProvider>\r\n      <ThemeProvider>\r\n        <App />\r\n      </ThemeProvider>\r\n    </ContainerProvider>\r\n  </React.StrictMode>\r\n);\r\n","import { keyboardModifierUseMeta } from \"./runtime-env\";\r\n\r\nexport const MODIFIER_KEYS_NONE = Object.freeze<ModifierKeys>({});\r\n\r\nexport interface ModifierKeys {\r\n  ctrlMetaKey?: boolean;\r\n  shiftKey?: boolean;\r\n  altKey?: boolean;\r\n}\r\n\r\nexport interface MouseEventModifierKeys {\r\n  ctrlKey: boolean;\r\n  altKey: boolean;\r\n  shiftKey: boolean;\r\n  metaKey: boolean;\r\n}\r\nexport function getModifiers(e: MouseEventModifierKeys): ModifierKeys {\r\n  const { ctrlKey, altKey, shiftKey, metaKey } = e;\r\n  return {\r\n    // Mac reserves ctrl for system use, apps use meta.\r\n    ctrlMetaKey: keyboardModifierUseMeta ? metaKey : ctrlKey,\r\n    altKey,\r\n    shiftKey,\r\n  };\r\n}\r\n\r\nexport function isModifierPressed(event: React.MouseEvent<any>) {\r\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\r\n}\r\n","import { sum } from \"lodash\";\r\nimport { PATH_SPACING_PHYSICS } from \"./game-settings\";\r\n\r\nimport {\r\n  linearInterpolate,\r\n  Point,\r\n  pointAdd,\r\n  pointDistance,\r\n  pointMagnitude,\r\n  pointScale,\r\n  pointSubtract,\r\n  PointZero,\r\n} from \"./points\";\r\n\r\nexport type PointArray = Point[];\r\nexport type ReadOnlyPointArray = readonly Point[];\r\n\r\nexport function pointArrayLength(pointArray: ReadOnlyPointArray): number {\r\n  if (pointArray.length <= 1) {\r\n    return 0;\r\n  }\r\n\r\n  let length = 0;\r\n  let previousPoint = pointArray[0];\r\n  for (let i = 1; i < pointArray.length; i++) {\r\n    length += pointDistance(previousPoint, pointArray[i]);\r\n    previousPoint = pointArray[i];\r\n  }\r\n\r\n  return length;\r\n}\r\n\r\nconst pointArrayLengthCache = new Map<ReadOnlyPointArray, number>();\r\nexport function pointArrayLengthCached(pointArray: ReadOnlyPointArray): number {\r\n  if (pointArray.length <= 1) {\r\n    return 0;\r\n  }\r\n\r\n  let length = pointArrayLengthCache.get(pointArray);\r\n  if (length !== undefined) {\r\n    return length;\r\n  }\r\n\r\n  length = pointArrayLength(pointArray);\r\n  pointArrayLengthCache.set(pointArray, length);\r\n\r\n  return length;\r\n}\r\n\r\nexport function pointArrayLineFromDistance(\r\n  start: Point,\r\n  direction: Point,\r\n  distance: number,\r\n  spacing: number = PATH_SPACING_PHYSICS\r\n) {\r\n  const pointArray: PointArray = [];\r\n  if (pointMagnitude(direction) === 0) {\r\n    throw new Error(\"direction must be valid.\");\r\n  }\r\n\r\n  if (distance <= 0) {\r\n    return [];\r\n  }\r\n\r\n  let previousPoint = start;\r\n  let remainingDistance = distance;\r\n  while (remainingDistance >= spacing) {\r\n    const point = pointAdd(previousPoint, pointScale(direction, spacing));\r\n    pointArray.push(point);\r\n    remainingDistance -= spacing;\r\n    previousPoint = point;\r\n  }\r\n\r\n  if (remainingDistance > 0) {\r\n    pointArray.push(\r\n      pointAdd(\r\n        pointArray[pointArray.length - 1] ?? PointZero,\r\n        pointScale(direction, remainingDistance)\r\n      )\r\n    );\r\n  }\r\n\r\n  return pointArray;\r\n}\r\n\r\nexport function pointArrayOffset(\r\n  pointArray: PointArray,\r\n  offset: Point\r\n): PointArray {\r\n  return pointArray.map((point) => pointAdd(point, offset));\r\n}\r\n\r\nexport function takePointArrayByDistance<T extends Point>(\r\n  array: T[],\r\n  takeLength: number\r\n): [taken: T[], remainder: T[]] {\r\n  const totalLength = pointArrayLength(array);\r\n\r\n  if (array.length <= 1 || totalLength <= takeLength) {\r\n    return [array, [] as T[]];\r\n  }\r\n\r\n  const taken: T[] = [array[0]];\r\n  const remainder: T[] = [];\r\n\r\n  let takenLength = 0;\r\n  let previousPoint = array[0];\r\n  for (let i = 1; i < array.length; i++) {\r\n    const p = array[i];\r\n    const length = pointDistance(p, previousPoint);\r\n    if (takenLength + length >= takeLength) {\r\n      const remainingLength = takeLength - takenLength;\r\n      const splitPoint = linearInterpolate(\r\n        previousPoint,\r\n        p,\r\n        remainingLength / length\r\n      );\r\n      taken.push(\r\n        Object.assign({}, previousPoint, { x: splitPoint.x, y: splitPoint.y })\r\n      );\r\n      remainder.push(\r\n        Object.assign({}, p, { x: splitPoint.x, y: splitPoint.y }),\r\n        ...array.slice(i)\r\n      );\r\n      break;\r\n    } else {\r\n      takenLength += length;\r\n      taken.push(p);\r\n      previousPoint = p;\r\n    }\r\n  }\r\n\r\n  return [taken, remainder];\r\n}\r\n","export interface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport const PointZero: Readonly<Point> = Object.freeze({ x: 0, y: 0 });\r\n\r\nexport function pointEquals(a: Point, b: Point): boolean {\r\n  return (\r\n    Math.abs(a.x - b.x) < Number.EPSILON && Math.abs(a.y - b.y) < Number.EPSILON\r\n  );\r\n}\r\n\r\nexport function pointScale(p: Point, factor: number): Point {\r\n  return {\r\n    x: p.x * factor,\r\n    y: p.y * factor,\r\n  };\r\n}\r\n\r\nexport function pointMagnitude(p: Point): number {\r\n  return Math.sqrt(p.x * p.x + p.y * p.y);\r\n}\r\n\r\nexport function pointDistance(p1: Point, p2: Point) {\r\n  const dx = p1.x - p2.x;\r\n  const dy = p1.y - p2.y;\r\n  return Math.sqrt(dx * dx + dy * dy);\r\n}\r\n\r\nexport function pointAdd(a: Point, b: Point) {\r\n  return {\r\n    x: a.x + b.x,\r\n    y: a.y + b.y,\r\n  };\r\n}\r\n\r\nexport function pointSubtract(a: Point, b: Point) {\r\n  return {\r\n    x: a.x - b.x,\r\n    y: a.y - b.y,\r\n  };\r\n}\r\n\r\nexport function pointNormalize(p: Point): Point {\r\n  const magnitude = pointMagnitude(p);\r\n  if (magnitude === 0) {\r\n    return PointZero;\r\n  }\r\n\r\n  return {\r\n    x: p.x / magnitude,\r\n    y: p.y / magnitude,\r\n  };\r\n}\r\n\r\nexport function linearInterpolate(\r\n  start: Point,\r\n  end: Point,\r\n  lerp: number\r\n): Point {\r\n  return {\r\n    x: start.x + (end.x - start.x) * lerp,\r\n    y: start.y + (end.y - start.y) * lerp,\r\n  };\r\n}\r\n","import platform from \"platform\";\r\n\r\nconst OS_WINDOWS = /windows/i;\r\nconst OS_MAC = /Mac|iOS|(OS\\ X)/;\r\nconst OS_LINUX = /linux/i;\r\n\r\nexport type OSType = \"windows\" | \"mac\" | \"linux\" | \"unknown\";\r\n\r\nconst osPlatform = (platform.os && platform.os.family) || \"unknown\";\r\nexport const OSType: OSType = OS_WINDOWS.test(osPlatform)\r\n  ? \"windows\"\r\n  : OS_MAC.test(osPlatform)\r\n  ? \"mac\"\r\n  : OS_LINUX.test(osPlatform)\r\n  ? \"linux\"\r\n  : \"unknown\";\r\n\r\nexport const isProd: boolean = process.env.NODE_ENV === \"production\";\r\n\r\nexport const keyboardModifierUseMeta = osPlatform === \"mac\";\r\n","import { injectable, singleton } from \"microinject\";\r\n\r\nimport { ingredients } from \"./ingredients\";\r\nimport { IngredientDescriptor, IngredientId } from \"./types\";\r\n\r\n@injectable()\r\n@singleton()\r\nexport class IngredientRegistry {\r\n  getIngredients(): readonly IngredientDescriptor[] {\r\n    return ingredients;\r\n  }\r\n\r\n  getIngredientById(id: IngredientId): IngredientDescriptor | null {\r\n    return ingredients.find((x) => x.id === id) ?? null;\r\n  }\r\n}\r\n","import { cubicBezierCurve } from \"@/curves\";\r\nimport { IngredientDescriptor, ingredientId } from \"./types\";\r\n\r\nexport const ingredients: IngredientDescriptor[] = [\r\n  {\r\n    id: ingredientId(\"BloodRuby\"),\r\n\r\n    name: \"Blood Ruby\",\r\n\r\n    color: \"#C24647\",\r\n\r\n    price: 90,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3, -3, -3, -3),\r\n\r\n      cubicBezierCurve(-3, -3, -3, -3, -3, 3, -3, 3),\r\n\r\n      cubicBezierCurve(-3, 3, -3, 3, -5.9999, 0, -6, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.1465,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"BloodyRoot\"),\r\n\r\n    name: \"Bloodthorn\",\r\n\r\n    color: \"#AC4937\",\r\n\r\n    price: 14,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0.0001001358, -2, 0, -2),\r\n\r\n      cubicBezierCurve(0, -2, -0.0001001358, -2, -1.7499, 1, -1.75, 1),\r\n\r\n      cubicBezierCurve(-1.75, 1, -1.7501, 1, -1.7501, -3, -1.75, -3),\r\n\r\n      cubicBezierCurve(-1.75, -3, -1.7499, -3, -4.0001, 2, -4, 2),\r\n\r\n      cubicBezierCurve(-4, 2, -3.9999, 2, -3.9999, -4, -4, -4),\r\n\r\n      cubicBezierCurve(-4, -4, -4.0001, -4, -5.9999, 0, -6, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.435,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"CliffFungus\"),\r\n\r\n    name: \"Brown Mushroom\",\r\n\r\n    color: \"#957C64\",\r\n\r\n    price: 6,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, -1, 0, -1, -1, -1),\r\n\r\n      cubicBezierCurve(-1, -1, -2, -1, -2, -1, -2, -2),\r\n\r\n      cubicBezierCurve(-2, -2, -2, -3, -2, -3, 0, -3),\r\n\r\n      cubicBezierCurve(0, -3, 2, -3, 2, -3, 2, -4),\r\n\r\n      cubicBezierCurve(2, -4, 2, -5, 2, -5, 0.5, -5),\r\n\r\n      cubicBezierCurve(0.5, -5, 0, -5, 0, -5, 0, -6),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Crystal\"),\r\n\r\n    name: \"Cloud Crystal\",\r\n\r\n    color: \"#ADADAD\",\r\n\r\n    price: 60,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 0, -0.75, 1, 0, 1.5),\r\n\r\n      cubicBezierCurve(0, 1.5, 0.7499999, 2, 1, 2, 1, 2.75),\r\n\r\n      cubicBezierCurve(1, 2.75, 0.9999999, 3.75, -0.9999999, 3.25, -1, 4.25),\r\n\r\n      cubicBezierCurve(-1, 4.25, -1, 5, -0.75, 5, 0, 5.5),\r\n\r\n      cubicBezierCurve(0, 5.5, 0.7499999, 6, 0.0001, 7, 0, 7),\r\n    ],\r\n\r\n    preGrindPercent: 0.177,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"DryadMushroom\"),\r\n\r\n    name: \"Dryad's Saddle\",\r\n\r\n    color: \"#9C785A\",\r\n\r\n    price: 5.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -0.25, 0, -1.33541, -0.3291796, -1, -1),\r\n\r\n      cubicBezierCurve(-1, -1, -0.5, -2, 2, -0.5, 2, -2),\r\n\r\n      cubicBezierCurve(2, -2, 2, -3.5, -2, -1.25, -2, -3),\r\n\r\n      cubicBezierCurve(-2, -3, -2, -3.75, 0.0001, -3.75, 0, -3.75),\r\n    ],\r\n\r\n    preGrindPercent: 0.53,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"EarthCrystal\"),\r\n\r\n    name: \"Earth Pyrite\",\r\n\r\n    color: \"#93806A\",\r\n\r\n    price: 30,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0, -1.5, 0, -1.5),\r\n\r\n      cubicBezierCurve(0, -1.5, 0, -1.5, -1, -1.5, -1, -1.5),\r\n\r\n      cubicBezierCurve(-1, -1.5, -1, -1.5, -1, -3.5, -1, -3.5),\r\n\r\n      cubicBezierCurve(-1, -3.5, -1, -3.5, 1, -3.5, 1, -3.5),\r\n\r\n      cubicBezierCurve(1, -3.5, 1, -3.5, 1, -5.5, 1, -5.5),\r\n\r\n      cubicBezierCurve(1, -5.5, 1, -5.5, 0, -5.5, 0, -5.5),\r\n\r\n      cubicBezierCurve(0, -5.5, 0, -5.5, 0.0001, -7, 0, -7),\r\n    ],\r\n\r\n    preGrindPercent: 0.1364,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Firebell\"),\r\n\r\n    name: \"Firebell\",\r\n\r\n    color: \"#D1810D\",\r\n\r\n    price: 5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -1.25, 1, -1.2501, 1, -1.25, 1),\r\n\r\n      cubicBezierCurve(-1.25, 1, -1.2499, 1, -2.5001, 0, -2.5, 0),\r\n\r\n      cubicBezierCurve(-2.5, 0, -2.4999, 0, -3.7501, 1, -3.75, 1),\r\n\r\n      cubicBezierCurve(-3.75, 1, -3.7499, 1, -3.75, 1, -5, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"FireCitrine\"),\r\n\r\n    name: \"Fire Citrine\",\r\n\r\n    color: \"#CD7C19\",\r\n\r\n    price: 50,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -0.75, -1.5, -1.5, 0),\r\n\r\n      cubicBezierCurve(-1.5, 0, -2.5, 2, -2.75, -0.7499999, -3.5, -0.75),\r\n\r\n      cubicBezierCurve(-3.5, -0.75, -4.25, -0.75, -4.5, 2, -5.5, 0),\r\n\r\n      cubicBezierCurve(-5.5, 0, -6.25, -1.5, -6.9999, 0, -7, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.202,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"FrostSapphire\"),\r\n\r\n    name: \"Frost Sapphire\",\r\n\r\n    color: \"#7399BF\",\r\n\r\n    price: 40,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 0, 0.25, 0.5, 0.25, 0.5),\r\n\r\n      cubicBezierCurve(0.25, 0.5, 0.25, 0.5, 1, -1, 1, -1),\r\n\r\n      cubicBezierCurve(1, -1, 1, -1, 2, 1, 2, 1),\r\n\r\n      cubicBezierCurve(2, 1, 2, 1, 3, -1, 3, -1),\r\n\r\n      cubicBezierCurve(3, -1, 3, -1, 4, 1, 4, 1),\r\n\r\n      cubicBezierCurve(4, 1, 4, 1, 5, -1, 5, -1),\r\n\r\n      cubicBezierCurve(5, -1, 5, -1, 6, 1, 6, 1),\r\n\r\n      cubicBezierCurve(6, 1, 6, 1, 6.75, -0.5, 6.75, -0.5),\r\n\r\n      cubicBezierCurve(6.75, -0.5, 6.75, -0.5, 7.0001, 0, 7, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.2139,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"GoblinMushroom\"),\r\n\r\n    name: \"Goblin Shroom\",\r\n\r\n    color: \"#928A5E\",\r\n\r\n    price: 5,\r\n\r\n    path: [cubicBezierCurve(0, 0, 3, 0, 3, -5, 0, -5)],\r\n\r\n    preGrindPercent: 0.663,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Goldthorn\"),\r\n\r\n    name: \"Goldthorn\",\r\n\r\n    color: \"#96714E\",\r\n\r\n    price: 12.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -0.25, 0, -0.5, 0.25, -0.5, 0.5),\r\n\r\n      cubicBezierCurve(-0.5, 0.5, -0.5, 0.75, -0.25, 1, 0, 1),\r\n\r\n      cubicBezierCurve(0, 1, 1, 1, 1, 0.5, 1, 0),\r\n\r\n      cubicBezierCurve(1, 0, 1, -0.5, 0.5, -0.9999999, 0, -1),\r\n\r\n      cubicBezierCurve(0, -1, -0.75, -1, -1.5, -0.25, -1.5, 0.25),\r\n\r\n      cubicBezierCurve(-1.5, 0.25, -1.5, 1.75, -0.75, 2, 0, 2),\r\n\r\n      cubicBezierCurve(0, 2, 1.25, 2, 2, 1.25, 2, 0),\r\n\r\n      cubicBezierCurve(2, 0, 2, -1, 1, -2, 0, -2),\r\n    ],\r\n\r\n    preGrindPercent: 0.3013,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"GraveTruffle\"),\r\n\r\n    name: \"Grave Truffle\",\r\n\r\n    color: \"#908B7F\",\r\n\r\n    price: 10,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3.0001, -2, -3, -2),\r\n\r\n      cubicBezierCurve(-3, -2, -2.9999, -2, -0.7501, -7, -0.75, -7),\r\n\r\n      cubicBezierCurve(-0.75, -7, -0.7499, -7, 0.7499, -7, 0.75, -7),\r\n\r\n      cubicBezierCurve(0.75, -7, 0.7501, -7, 3, -2, 3, -2),\r\n\r\n      cubicBezierCurve(3, -2, 3, -2, -0.0001, -1.25, 0, -1.25),\r\n\r\n      cubicBezierCurve(0, -1.25, 0.0001, -1.25, 0.0001, -5, 0, -5),\r\n    ],\r\n\r\n    preGrindPercent: 0.2535,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"GreenMushroom\"),\r\n\r\n    name: \"Green Mushroom\",\r\n\r\n    color: \"#A5A24F\",\r\n\r\n    price: 9,\r\n\r\n    path: [\r\n      cubicBezierCurve(\r\n        0,\r\n        0,\r\n        3.02107,\r\n        1.020414,\r\n        0.5508628,\r\n        -1.518064,\r\n        1.527383,\r\n        -2.506451\r\n      ),\r\n\r\n      cubicBezierCurve(\r\n        1.527383,\r\n        -2.506451,\r\n        2.500548,\r\n        -3.491441,\r\n        5.012281,\r\n        -0.9910625,\r\n        3.996144,\r\n        -3.978157\r\n      ),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"GreyChanterelle\"),\r\n\r\n    name: \"Shadow Chanterelle\",\r\n\r\n    color: \"#887C77\",\r\n\r\n    price: 10,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 3, 0, -2.384186e-7, 5, 3, 5),\r\n\r\n      cubicBezierCurve(3, 5, 4, 5, 4.5, 4, 4.5, 3),\r\n    ],\r\n\r\n    preGrindPercent: 0.512,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"IceDragonfruit\"),\r\n\r\n    name: \"Ice Fruit\",\r\n\r\n    color: \"#5D8089\",\r\n\r\n    price: 9,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0.9999, 2, 1, 2),\r\n\r\n      cubicBezierCurve(1, 2, 1.0001, 2, 3, -2, 3, -2),\r\n\r\n      cubicBezierCurve(3, -2, 3, -2, 4.9999, 2, 5, 2),\r\n\r\n      cubicBezierCurve(5, 2, 5.0001, 2, 6.0001, 0, 6, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.333,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"LavaRoot\"),\r\n\r\n    name: \"Lava Root\",\r\n\r\n    color: \"#C86B41\",\r\n\r\n    price: 11.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 1.5, -2.5, 1.5, -2.5, 0),\r\n\r\n      cubicBezierCurve(-2.5, 0, -2.5, -1.5, -5, -1.5, -5, 0),\r\n\r\n      cubicBezierCurve(-5, 0, -5, 1.5, -7.5, 1.5, -7.5, 0),\r\n\r\n      cubicBezierCurve(-7.5, 0, -7.5, -0.75, -6.25, -0.75, -6.25, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.4289,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Leaf\"),\r\n\r\n    name: \"Terraria\",\r\n\r\n    color: \"#749064\",\r\n\r\n    price: 3,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -0.25, -0.75, 0, -1),\r\n\r\n      cubicBezierCurve(0, -1, 0.25, -1.25, 0.5, -1, 0.75, -1.25),\r\n\r\n      cubicBezierCurve(0.75, -1.25, 1, -1.5, 1, -2.25, 0.75, -2.5),\r\n\r\n      cubicBezierCurve(0.75, -2.5, 0.5, -2.75, -0.5, -2.25, -0.75, -2.5),\r\n\r\n      cubicBezierCurve(-0.75, -2.5, -1, -2.75, -1, -3.5, -0.75, -3.75),\r\n\r\n      cubicBezierCurve(-0.75, -3.75, -0.5, -4, -0.1767767, -3.823223, 0, -4),\r\n\r\n      cubicBezierCurve(0, -4, 0.25, -4.25, 0.0001, -5, 0, -5),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"LumpyBeet\"),\r\n\r\n    name: \"Lumpy Beet\",\r\n\r\n    color: \"#A36674\",\r\n\r\n    price: 9,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 2, 3, 1, 3, 3),\r\n\r\n      cubicBezierCurve(3, 3, 3, 4, 1, 4, 1, 3),\r\n\r\n      cubicBezierCurve(1, 3, 1, 2, 1, 1, 1, 0),\r\n\r\n      cubicBezierCurve(1, 0, 1, -1, 3, -1, 3, 0),\r\n\r\n      cubicBezierCurve(3, 0, 3, 1, 3, 2, 4, 2),\r\n    ],\r\n\r\n    preGrindPercent: 0.1805,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Marshrooms\"),\r\n\r\n    name: \"Marshroom\",\r\n\r\n    color: \"#837956\",\r\n\r\n    price: 7,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 2, -2, 1, -4, 3, -4),\r\n\r\n      cubicBezierCurve(3, -4, 3.5, -4, 5, -4, 5, -3),\r\n    ],\r\n\r\n    preGrindPercent: 0.423,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"RedMushroom\"),\r\n\r\n    name: \"Red Mushroom\",\r\n\r\n    color: \"#A76C3F\",\r\n\r\n    price: 9.5,\r\n\r\n    path: [cubicBezierCurve(0, 0, -4, 4, -4, -4, -8, 0)],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Refruit\"),\r\n\r\n    name: \"Hairy Banana\",\r\n\r\n    color: \"#C5B13E\",\r\n\r\n    price: 12.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3, -3, -4, -3),\r\n\r\n      cubicBezierCurve(-4, -3, -5, -3, -8.000098, -2.453497e-5, -8, 0),\r\n\r\n      cubicBezierCurve(-8, 0, -7, 0.25, -5, -1.25, -4, -1),\r\n    ],\r\n\r\n    preGrindPercent: 0.3375,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"SulphurShelf\"),\r\n\r\n    name: \"Sulphur Shelf\",\r\n\r\n    color: \"#D77838\",\r\n\r\n    price: 11,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -2, 0, -3.5, 0, -3.5, 0.75),\r\n\r\n      cubicBezierCurve(-3.5, 0.75, -3.5, 1.5, -2.75, 1.5, -2.25, 1.5),\r\n\r\n      cubicBezierCurve(-2.25, 1.5, -1.75, 1.5, -1, 1.5, -1, 2.25),\r\n\r\n      cubicBezierCurve(-1, 2.25, -1, 3, -2.5, 3, -4.5, 3),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Tangleweeds\"),\r\n\r\n    name: \"Tangleweed\",\r\n\r\n    color: \"#759786\",\r\n\r\n    price: 8.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, -1, 3, -1, 3, 0),\r\n\r\n      cubicBezierCurve(3, 0, 3, 1, 1.5, 1, 1.5, 0),\r\n\r\n      cubicBezierCurve(1.5, 0, 1.5, -1, 3, -2, 4, 0),\r\n\r\n      cubicBezierCurve(4, 0, 5, 2, 6.5, 1, 6.5, 0),\r\n\r\n      cubicBezierCurve(6.5, 0, 6.5, -1, 5, -1, 5, 0),\r\n\r\n      cubicBezierCurve(5, 0, 5, 1, 8, 1, 8, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.5005,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Thistle\"),\r\n\r\n    name: \"Thunder Thistle\",\r\n\r\n    color: \"#9E5874\",\r\n\r\n    price: 9,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 1.9999, 3.5, 2, 3.5),\r\n\r\n      cubicBezierCurve(2, 3.5, 2.0001, 3.5, -0.9999, 2.5, -1, 2.5),\r\n\r\n      cubicBezierCurve(-1, 2.5, -1.0001, 2.5, 1.0001, 6, 1, 6),\r\n    ],\r\n\r\n    preGrindPercent: 0.353,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Thornstick\"),\r\n\r\n    name: \"Thornstick\",\r\n\r\n    color: \"#818C4D\",\r\n\r\n    price: 8,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3.9999, -6, -4, -6),\r\n\r\n      cubicBezierCurve(-4, -6, -4.0001, -6, -1.9999, -5, -2, -5),\r\n    ],\r\n\r\n    preGrindPercent: 0.319,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Waterbloom\"),\r\n\r\n    name: \"Waterbloom\",\r\n\r\n    color: \"#539278\",\r\n\r\n    price: 4,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.25, -0.5, 1, -0.5, 1.25, 0),\r\n\r\n      cubicBezierCurve(1.25, 0, 1.5, 0.4999999, 2.25, 0.5, 2.5, 0),\r\n\r\n      cubicBezierCurve(2.5, 0, 2.75, -0.5, 3.5, -0.5, 3.75, 0),\r\n\r\n      cubicBezierCurve(3.75, 0, 4, 0.4999999, 4.75, 0.5, 5, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Wierdshroom\"),\r\n\r\n    name: \"Weirdshroom\",\r\n\r\n    color: \"#B88A51\",\r\n\r\n    price: 8.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -2, 0, -2, -6, -1, -6),\r\n\r\n      cubicBezierCurve(-1, -6, 0.25, -6, 1.353553, -6.207107, 1, -5.5),\r\n\r\n      cubicBezierCurve(1, -5.5, 0.5, -4.5, -0.25, -3.75, 0, -3),\r\n    ],\r\n\r\n    preGrindPercent: 0.3045,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Windbloom\"),\r\n\r\n    name: \"Windbloom\",\r\n\r\n    color: \"#ADABA2\",\r\n\r\n    price: 6,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0, 0, 0.5, 1.25),\r\n\r\n      cubicBezierCurve(0.5, 1.25, 0.9999999, 2.5, 0.9999, 2.5, 1, 2.5),\r\n\r\n      cubicBezierCurve(1, 2.5, 1.0001, 2.5, -1.0001, 2.5, -1, 2.5),\r\n\r\n      cubicBezierCurve(-1, 2.5, -0.9999, 2.5, -1, 2.5, -0.5, 3.75),\r\n\r\n      cubicBezierCurve(-0.5, 3.75, -2.086163e-7, 5, 0.0001, 5, 0, 5),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"WitchMushroom\"),\r\n\r\n    name: \"Witch Mushroom\",\r\n\r\n    color: \"#92777C\",\r\n\r\n    price: 13,\r\n\r\n    path: [cubicBezierCurve(0, 0, 0, 4, 5, 1, 5, 5)],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n];\r\n","import { ContainerModule } from \"microinject\";\r\n\r\nimport { IngredientRegistry } from \"./IngredientRegistry\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(IngredientRegistry);\r\n});\r\n","import { CubicBezierCurve } from \"@/curves\";\r\nimport { Opaque } from \"type-fest\";\r\n\r\nexport type IngredientId = Opaque<string, \"IngredientName\">;\r\nexport function ingredientId(id: string): IngredientId {\r\n  return id as IngredientId;\r\n}\r\n\r\nexport interface IngredientDescriptor {\r\n  readonly id: IngredientId;\r\n  readonly name: string;\r\n  readonly color: string;\r\n  readonly price: number;\r\n  readonly path: CubicBezierCurve[];\r\n  readonly preGrindPercent: number;\r\n}\r\n","import { composeModules } from \"microinject\";\r\n\r\nimport ingredientsModule from \"./ingredients/module\";\r\nimport plotterModule from \"./plotter/module\";\r\nimport potionBasesModule from \"./potion-bases/module\";\r\n\r\nexport default composeModules(\r\n  ingredientsModule,\r\n  plotterModule,\r\n  potionBasesModule\r\n);\r\n","import { isNotNull } from \"@/utils\";\r\nimport { inject, injectable } from \"microinject\";\r\nimport {\r\n  BehaviorSubject,\r\n  combineLatest,\r\n  map,\r\n  Observable,\r\n  Subscription,\r\n} from \"rxjs\";\r\nimport pako from \"pako\";\r\nimport {\r\n  encode as encodeBase64,\r\n  decode as decodeBase64,\r\n} from \"base64-arraybuffer\";\r\n\r\nimport { IngredientId } from \"../ingredients/types\";\r\n\r\nimport { Plotter } from \"./Plotter\";\r\nimport { PlotItem, PlotResult } from \"./types\";\r\n\r\n@injectable()\r\nexport class PlotBuilder {\r\n  private readonly _items$ = new BehaviorSubject<readonly PlotBuilderItem[]>(\r\n    []\r\n  );\r\n  private _itemSubscription: Subscription | null = null;\r\n  private readonly _plot$ = new BehaviorSubject<PlotResult | null>(null);\r\n\r\n  constructor(@inject(Plotter) plotter: Plotter) {\r\n    // This is a little wonky, but subscribing to all observables in an observable array is something I could see wanting to do a lot.\r\n    // Should make a utility function to handle this use case, if one doesnt already exist in rxjs.\r\n    this._items$.subscribe((items) => {\r\n      if (this._itemSubscription) {\r\n        this._itemSubscription.unsubscribe();\r\n      }\r\n\r\n      if (items.length === 0) {\r\n        this._plot$.next(null);\r\n        return;\r\n      }\r\n\r\n      this._itemSubscription = combineLatest(\r\n        items.map((x) => x.plotItem$)\r\n      ).subscribe((plotItems) => {\r\n        this._plot$.next(plotter.plotItems(plotItems.filter(isNotNull)));\r\n      });\r\n    });\r\n  }\r\n\r\n  get items$() {\r\n    return this._items$;\r\n  }\r\n\r\n  get items(): readonly PlotBuilderItem[] {\r\n    return this._items$.value;\r\n  }\r\n\r\n  get plot$() {\r\n    return this._plot$;\r\n  }\r\n\r\n  loadFromShareString(dataStr: string) {\r\n    const array = decodeBase64(dataStr);\r\n    const dv = new DataView(array);\r\n    const version = dv.getUint8(0);\r\n    const data = array.slice(1);\r\n    if (version === 0) {\r\n      const decoded = JSON.parse(pako.inflate(data, { to: \"string\" })) as any[];\r\n      const items = decoded.map((item) => {\r\n        switch (item.type) {\r\n          case \"add-ingredient\":\r\n            return AddIngredientPlotBuilderItem.fromJSON(item, (item) =>\r\n              this._deleteItem(item)\r\n            );\r\n          case \"stir-cauldron\":\r\n            return StirCauldronPlotBuilderItem.fromJSON(item, (item) =>\r\n              this._deleteItem(item)\r\n            );\r\n          case \"pour-solvent\":\r\n            return PourSolventPlotBuilderItem.fromJSON(item, (item) =>\r\n              this._deleteItem(item)\r\n            );\r\n          default:\r\n            throw new Error(`Unknown item type: ${item.type}`);\r\n        }\r\n      });\r\n      this._items$.next(items);\r\n    }\r\n  }\r\n\r\n  getShareString() {\r\n    const items = this._items$.value.map((x) => x.toJSON());\r\n    const encoded = pako.deflate(JSON.stringify(items));\r\n    const data = new Uint8Array(1 + encoded.length);\r\n    data.set(encoded, 1);\r\n    new DataView(data.buffer).setUint8(0, 0);\r\n    return encodeBase64(data);\r\n  }\r\n\r\n  addIngredient(): AddIngredientPlotBuilderItem {\r\n    const item = new AddIngredientPlotBuilderItem((item) =>\r\n      this._deleteItem(item)\r\n    );\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  addStirCauldron(): StirCauldronPlotBuilderItem {\r\n    const item = new StirCauldronPlotBuilderItem((item) =>\r\n      this._deleteItem(item)\r\n    );\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  addPourSolvent(): PourSolventPlotBuilderItem {\r\n    const item = new PourSolventPlotBuilderItem((item) =>\r\n      this._deleteItem(item)\r\n    );\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  builderItemFor(item: PlotItem): PlotBuilderItem | null {\r\n    const result = this._items$.value.find((x) => x.plotItem === item) || null;\r\n    return result;\r\n  }\r\n\r\n  private _deleteItem(item: PlotBuilderItem) {\r\n    this._items$.next(this._items$.value.filter((x) => x !== item));\r\n  }\r\n}\r\n\r\nexport abstract class PlotBuilderItem {\r\n  abstract readonly isValid$: Observable<boolean>;\r\n  abstract readonly isValid: boolean;\r\n\r\n  abstract readonly plotItem$: Observable<PlotItem | null>;\r\n  abstract readonly plotItem: PlotItem | null;\r\n\r\n  abstract delete(): void;\r\n\r\n  abstract toJSON(): any;\r\n}\r\n\r\nexport class AddIngredientPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _ingredientId$ = new BehaviorSubject<IngredientId | null>(\r\n    null\r\n  );\r\n  private readonly _grindPercent$ = new BehaviorSubject<number>(1);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([\r\n      this._ingredientId$,\r\n      this._grindPercent$,\r\n    ]).pipe(map(() => this.isValid));\r\n\r\n    combineLatest([this._ingredientId$, this._grindPercent$]).subscribe(\r\n      ([ingredientId, grindPercent]) => {\r\n        if (!this.isValid) {\r\n          this._plotItem$.next(null);\r\n          return;\r\n        }\r\n\r\n        this._plotItem$.next({\r\n          type: \"add-ingredient\",\r\n          ingredientId: ingredientId as IngredientId,\r\n          grindPercent,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  static fromJSON(\r\n    json: any,\r\n    del: (item: PlotBuilderItem) => void\r\n  ): AddIngredientPlotBuilderItem {\r\n    const item = new AddIngredientPlotBuilderItem(del);\r\n    item.setIngredient(json.ingredientId);\r\n    item.setGrindPercent(json.grindPercent);\r\n    return item;\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      type: \"add-ingredient\",\r\n      ingredientId: this._ingredientId$.value,\r\n      grindPercent: this._grindPercent$.value,\r\n    };\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    // TODO: Check if ingredientId is valid\r\n    const grindPercent = this._grindPercent$.value;\r\n    return (\r\n      this._ingredientId$.value != null &&\r\n      grindPercent >= 0 &&\r\n      grindPercent <= 1\r\n    );\r\n  }\r\n\r\n  get ingredientId$(): Observable<IngredientId | null> {\r\n    return this._ingredientId$;\r\n  }\r\n\r\n  get ingredientId(): IngredientId | null {\r\n    return this._ingredientId$.value;\r\n  }\r\n\r\n  get grindPercent$(): Observable<number> {\r\n    return this._grindPercent$;\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  setIngredient(ingredientId: IngredientId | null) {\r\n    if (ingredientId === this._ingredientId$.value) {\r\n      return;\r\n    }\r\n\r\n    this._ingredientId$.next(ingredientId);\r\n  }\r\n\r\n  setGrindPercent(percent: number) {\r\n    if (percent === this._grindPercent$.value) {\r\n      return;\r\n    }\r\n\r\n    this._grindPercent$.next(percent);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n\r\nexport class StirCauldronPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _distance$ = new BehaviorSubject<number | null>(null);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([this._distance$]).pipe(\r\n      map(() => this.isValid)\r\n    );\r\n\r\n    combineLatest([this._distance$]).subscribe(([stirDistance]) => {\r\n      if (!this.isValid) {\r\n        this._plotItem$.next(null);\r\n        return;\r\n      }\r\n\r\n      this._plotItem$.next({\r\n        type: \"stir-cauldron\",\r\n        distance: stirDistance!,\r\n      });\r\n    });\r\n  }\r\n\r\n  static fromJSON(\r\n    json: any,\r\n    del: (item: PlotBuilderItem) => void\r\n  ): StirCauldronPlotBuilderItem {\r\n    const item = new StirCauldronPlotBuilderItem(del);\r\n    item.setDistance(json.distance);\r\n    return item;\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      type: \"stir-cauldron\",\r\n      distance: this._distance$.value,\r\n    };\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    // TODO: Check if ingredientId is valid\r\n    const stirDistance = this._distance$.value;\r\n    return stirDistance != null && stirDistance >= 0;\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  get distance$(): Observable<number | null> {\r\n    return this._distance$;\r\n  }\r\n\r\n  setDistance(distance: number | null) {\r\n    this._distance$.next(distance);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n\r\nexport class PourSolventPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _distance$ = new BehaviorSubject<number | null>(null);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([this._distance$]).pipe(\r\n      map(() => this.isValid)\r\n    );\r\n\r\n    combineLatest([this._distance$]).subscribe(([stirDistance]) => {\r\n      if (!this.isValid) {\r\n        this._plotItem$.next(null);\r\n        return;\r\n      }\r\n\r\n      this._plotItem$.next({\r\n        type: \"pour-solvent\",\r\n        distance: stirDistance!,\r\n      });\r\n    });\r\n  }\r\n\r\n  static fromJSON(\r\n    json: any,\r\n    del: (item: PlotBuilderItem) => void\r\n  ): PourSolventPlotBuilderItem {\r\n    const item = new PourSolventPlotBuilderItem(del);\r\n    item.setDistance(json.distance);\r\n    return item;\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      type: \"pour-solvent\",\r\n      distance: this._distance$.value,\r\n    };\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    // TODO: Check if ingredientId is valid\r\n    const stirDistance = this._distance$.value;\r\n    return stirDistance != null && stirDistance >= 0;\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  get distance$(): Observable<number | null> {\r\n    return this._distance$;\r\n  }\r\n\r\n  setDistance(distance: number | null) {\r\n    this._distance$.next(distance);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n","import { last } from \"lodash\";\r\nimport { inject, injectable, singleton } from \"microinject\";\r\n\r\nimport { curveToPoints } from \"@/curves\";\r\nimport {\r\n  PointArray,\r\n  pointArrayLengthCached,\r\n  pointArrayLineFromDistance,\r\n  takePointArrayByDistance,\r\n} from \"@/point-array\";\r\nimport {\r\n  Point,\r\n  pointAdd,\r\n  pointDistance,\r\n  pointEquals,\r\n  pointNormalize,\r\n  pointSubtract,\r\n  PointZero,\r\n} from \"@/points\";\r\n\r\nimport { IngredientRegistry } from \"../ingredients/IngredientRegistry\";\r\n\r\nimport {\r\n  AddIngredientPlotItem,\r\n  PlotItem,\r\n  PlotResult,\r\n  PourSolventPlotItem,\r\n  StirCauldronPlotItem,\r\n} from \"./types\";\r\n\r\n@injectable()\r\n@singleton()\r\nexport class Plotter {\r\n  constructor(\r\n    @inject(IngredientRegistry) private ingredientRegistry: IngredientRegistry\r\n  ) {}\r\n\r\n  plotItems(items: readonly PlotItem[]): PlotResult {\r\n    let result: PlotResult = {\r\n      committedPoints: [],\r\n      pendingPoints: [],\r\n    };\r\n\r\n    const now = Date.now();\r\n\r\n    for (const item of items) {\r\n      result = this._plotItem(item, result);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private _plotItem(item: PlotItem, result: PlotResult): PlotResult {\r\n    switch (item.type) {\r\n      case \"add-ingredient\":\r\n        return this._plotAddIngredient(item, result);\r\n      case \"pour-solvent\":\r\n        return this._plotPourSolvent(item, result);\r\n      case \"stir-cauldron\":\r\n        return this._plotStirCauldron(item, result);\r\n      default:\r\n        throw new Error(`Unknown plot item type: ${(item as any).type}`);\r\n    }\r\n  }\r\n\r\n  private _plotAddIngredient(\r\n    item: AddIngredientPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const { ingredientId, grindPercent } = item;\r\n\r\n    const addPosition =\r\n      last(result.pendingPoints) ?? last(result.committedPoints) ?? PointZero;\r\n\r\n    const ingredient = this.ingredientRegistry.getIngredientById(ingredientId);\r\n    if (!ingredient) {\r\n      throw new Error(`Unknown ingredient: ${ingredientId}`);\r\n    }\r\n\r\n    const ingredientPoints: PointArray = [];\r\n    let ingredientLength = 0;\r\n    for (const curve of ingredient.path) {\r\n      const points = curveToPoints(curve);\r\n      ingredientPoints.push(...points);\r\n      // Use the cached length, as curveToPoints is cached and will return consistent array references.\r\n      // Note, this produces a very slightly incorrect length. A difference of around e-15 when compared to getting\r\n      // the length of the final ingredientPoints array.\r\n      ingredientLength += pointArrayLengthCached(points);\r\n    }\r\n\r\n    const takePercent =\r\n      ingredient.preGrindPercent +\r\n      grindPercent * (1 - ingredient.preGrindPercent);\r\n\r\n    const [addedPoints] = takePointArrayByDistance(\r\n      ingredientPoints,\r\n      takePercent * ingredientLength\r\n    );\r\n\r\n    const appendPendingPoints = addedPoints.map((point) =>\r\n      pointAdd(addPosition, point)\r\n    );\r\n\r\n    return appendPendingPlotPoints(appendPendingPoints, item, result);\r\n  }\r\n\r\n  private _plotPourSolvent(\r\n    item: PourSolventPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const currentPoint =\r\n      result.committedPoints[result.committedPoints.length - 1] ?? PointZero;\r\n    if (pointEquals(currentPoint, PointZero)) {\r\n      return result;\r\n    }\r\n\r\n    let { distance } = item;\r\n\r\n    const distanceToOrigin = pointDistance(currentPoint, PointZero);\r\n    if (distance > distanceToOrigin) {\r\n      distance = distanceToOrigin;\r\n    }\r\n\r\n    const newPoints = pointArrayLineFromDistance(\r\n      currentPoint,\r\n      pointNormalize(pointSubtract(PointZero, currentPoint)),\r\n      distance\r\n    );\r\n\r\n    return commitPlotPoints(newPoints, item, result);\r\n  }\r\n\r\n  private _plotStirCauldron(\r\n    item: StirCauldronPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const { distance } = item;\r\n\r\n    const [addedPoints, remainderPlotPoints] = takePointArrayByDistance(\r\n      result.pendingPoints,\r\n      distance\r\n    );\r\n\r\n    return {\r\n      committedPoints: result.committedPoints.concat(addedPoints),\r\n      pendingPoints: remainderPlotPoints,\r\n    };\r\n  }\r\n}\r\n\r\nfunction appendPendingPlotPoints(\r\n  points: Point[],\r\n  source: PlotItem,\r\n  result: PlotResult\r\n): PlotResult {\r\n  if (source == null) {\r\n    throw new Error(\"source is null\");\r\n  }\r\n\r\n  if (points.length === 0) {\r\n    return result;\r\n  }\r\n\r\n  return Object.assign({}, result, {\r\n    pendingPoints: result.pendingPoints.concat(\r\n      points.map((point) => ({\r\n        x: point.x,\r\n        y: point.y,\r\n        source,\r\n      }))\r\n    ),\r\n  });\r\n}\r\n\r\nfunction commitPlotPoints(\r\n  points: Point[],\r\n  source: PlotItem,\r\n  result: PlotResult\r\n): PlotResult {\r\n  if (source == null) {\r\n    throw new Error(\"source is null\");\r\n  }\r\n\r\n  if (points.length === 0) {\r\n    return result;\r\n  }\r\n\r\n  const difference = pointSubtract(\r\n    last(points)!,\r\n    last(result.committedPoints) ?? PointZero\r\n  );\r\n\r\n  return Object.assign({}, result, {\r\n    committedPoints: result.committedPoints.concat(\r\n      points.map((point) => ({\r\n        x: point.x,\r\n        y: point.y,\r\n        source,\r\n      }))\r\n    ),\r\n    pendingPoints: result.pendingPoints.map((point) => ({\r\n      x: point.x + difference.x,\r\n      y: point.y + difference.y,\r\n      source: point.source,\r\n    })),\r\n  });\r\n}\r\n","import { ContainerModule } from \"microinject\";\r\n\r\nimport { PlotBuilder } from \"./PlotBuilder\";\r\nimport { Plotter } from \"./Plotter\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(PlotBuilder);\r\n  bind(Plotter);\r\n});\r\n","import { Point } from \"@/points\";\r\n\r\nimport { IngredientId } from \"../ingredients/types\";\r\n\r\nexport type PlotItem =\r\n  | AddIngredientPlotItem\r\n  | PourSolventPlotItem\r\n  | StirCauldronPlotItem;\r\n\r\nexport interface AddIngredientPlotItem {\r\n  type: \"add-ingredient\";\r\n  ingredientId: IngredientId;\r\n  grindPercent: number;\r\n}\r\n\r\nexport interface PourSolventPlotItem {\r\n  type: \"pour-solvent\";\r\n  distance: number;\r\n}\r\n\r\nexport interface StirCauldronPlotItem {\r\n  type: \"stir-cauldron\";\r\n  distance: number;\r\n}\r\n\r\nexport interface PlotPoint extends Point {\r\n  source: PlotItem;\r\n}\r\n\r\nexport interface PlotResult {\r\n  committedPoints: PlotPoint[];\r\n  pendingPoints: PlotPoint[];\r\n}\r\n\r\nexport const EmptyPlotResult: Readonly<PlotResult> = Object.freeze({\r\n  committedPoints: [],\r\n  pendingPoints: [],\r\n}) as any;\r\n","import { injectable, singleton } from \"microinject\";\r\n\r\nimport { typedKeys } from \"@/utils\";\r\n\r\nimport { PotionBaseMaps } from \"./maps\";\r\nimport { PotionMap } from \"./PotionMap\";\r\nimport { PotionBaseId, PotionBase } from \"./types\";\r\n\r\n@injectable()\r\n@singleton()\r\nexport class PotionBaseRegistry {\r\n  private readonly _potionBasesById: Record<PotionBaseId, PotionBase> = {};\r\n\r\n  constructor() {\r\n    for (const key of typedKeys(PotionBaseMaps)) {\r\n      const id = key as PotionBaseId;\r\n      const base: PotionBase = {\r\n        id,\r\n        map: new PotionMap(PotionBaseMaps[key]),\r\n      };\r\n      this._potionBasesById[id] = base;\r\n    }\r\n  }\r\n\r\n  getPotionBaseById(id: PotionBaseId): PotionBase | null {\r\n    return this._potionBasesById[id] ?? null;\r\n  }\r\n}\r\n","import { Point } from \"@/points\";\r\n\r\nimport { MapEntity } from \"./types\";\r\n\r\nexport class PotionMap {\r\n  constructor(private _entities: readonly Readonly<MapEntity>[]) {}\r\n\r\n  get entities(): readonly Readonly<MapEntity>[] {\r\n    return this._entities;\r\n  }\r\n\r\n  hitTest(p: Point): readonly Readonly<MapEntity>[] {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n}\r\n","import { MapEntity } from \"../types\";\r\n\r\nconst water = Object.freeze(require(\"./water.json\")) as MapEntity[];\r\n\r\nexport const PotionBaseMaps = {\r\n  water,\r\n};\r\n","import { ContainerModule } from \"microinject\";\r\nimport { PotionBaseRegistry } from \"./PotionBaseRegistry\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(PotionBaseRegistry);\r\n});\r\n","export interface Size {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport const SizeZero = Object.freeze({ width: 0, height: 0 }) as any;\r\n","import { ThemeProvider } from \"@emotion/react\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\nimport React from \"react\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: \"light\",\r\n  },\r\n});\r\n\r\nexport interface AppThemeProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst AppThemeProvider = ({ children }: AppThemeProviderProps) => (\r\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n);\r\n\r\nexport default AppThemeProvider;\r\n","export function windowArray<T>(array: T[], count: number): T[][] {\r\n  const a = [...array];\r\n\r\n  let result: T[][] = [];\r\n  let window: T[] = [];\r\n\r\n  while (a.length > 0) {\r\n    window.push(a.pop()!);\r\n    if (window.length === count) {\r\n      result.push(window);\r\n      window = [];\r\n    }\r\n  }\r\n\r\n  if (window.length > 0) {\r\n    result.push(window);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function keepEveryK<T>(array: T[], k: number, keepLast = false) {\r\n  if (array.length === 0) {\r\n    return array;\r\n  }\r\n\r\n  const a = [];\r\n  for (let i = 0; i < array.length; i += k) {\r\n    a.push(array[i]);\r\n  }\r\n  if (keepLast && (array.length - 1) % k !== 0) {\r\n    a.push(array[array.length - 1]);\r\n  }\r\n  return a;\r\n}\r\n\r\nexport function isNotNull<T>(x: T | null | undefined): x is T {\r\n  return x != null;\r\n}\r\n\r\nexport function typedKeys<T>(obj: T): (keyof T)[] {\r\n  return Object.keys(obj) as any;\r\n}\r\n\r\nexport function degreesToRadians(degress: number): number {\r\n  return (degress * Math.PI) / 180;\r\n}\r\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","StyledTooltip","styled","Tooltip","tooltipPlacementLeft","margin","value","onChange","allowEmpty","onMouseOverItem","onMouseOutItem","props","registry","useDIDependency","IngredientRegistry","onSelectChange","useCallback","e","target","Select","MenuItem","getIngredients","map","ingredient","key","onMouseOver","onMouseOut","placement","title","width","height","viewBox","MAX_INGREDIENT_EXTENT","transform","cx","cy","r","POTION_RADIUS","fill","d","path","reduce","curve","start","x","y","p1","p2","end","stroke","strokeWidth","ListItemText","name","Root","backgroundColor","overflow","renderEntity","ctx","entity","entityType","save","translate","rotate","degreesToRadians","angle","src","DangerZoneImageSrces","prefab","img","makeImg","w","h","scale","drawImage","restore","renderDangerZonePart","container","EffectSlotSrc","containerW","containerH","PotionEffectImageSrces","effect","renderPotionEffectEntity","ExperienceBonusImagesSrc","renderExperienceBonusEntity","VortexImagesSrc","renderVortexEntity","className","viewModel","useObservation","viewportSize$","SizeZero","offset","viewOffset$","PointZero","viewScale$","useState","canvasRef","setCanvasRef","entities","useEffect","requestAnimationFrame","getContext","clearRect","zoomFactor","offsetX","offsetY","handler","MAP_EXTENT_RADIUS","transformToMap","beginPath","strokeStyle","lineWidth","moveTo","lineTo","fillStyle","arc","Math","PI","cancelAnimationFrame","ref","imgCache","Map","has","get","Image","onerror","console","error","bind","set","Bone1","Bone2","Fang1","Fang2","Skull1","Acid","Berserker","Bounce","Charm","Crop","Explosion","Fire","Fly","Frost","Growth","Hallucinations","Healing","Invisibility","Libido","Light","Lightning","Mana","Necromancy","Poison","SharpVision","Sleep","SlowDown","StoneSkin","Little","Medium","Large","ZOOM_FACTOR","PAN_FACTOR","children","containerRef","React","useRef","containerBounds","useComponentBounds","useLayoutEffect","onViewportResized","onWheel","current","defaultPrevented","modifiers","getModifiers","ctrlMetaKey","zoom","deltaY","clientX","clientY","preventDefault","stopPropagation","shiftKey","pan","useNativeEvent","passive","onMouseMove","theme","boxSixing","display","flexDirection","listStyle","paddingLeft","spacing","paddingRight","position","marginBottom","top","right","alignSelf","alignItems","PlotListItem","item","highlight","AddIngredientPlotBuilderItem","AddIngredientPlotListItem","StirCauldronPlotBuilderItem","StirCauldronPlotListItem","PourSolventPlotBuilderItem","PourSolventPlotListItem","constructor","PlotListItemCard","valid","isValid$","Card","style","IconButton","size","onClick","delete","Delete","CardContent","savedIngredientRef","isPreviewing","setIsPreviewing","isPreviewingRef","isChangingGrind","setIsChangingGrind","ingredientId","ingredientId$","grindPercent","grindPercent$","displayIngredientId","Typography","variant","fullWidth","onOpen","setIngredient","onClose","Grid","paddingTop","Slider","_","startTransition","setGrindPercent","onChangeCommitted","min","max","step","distance","distance$","inputDistance","setInputDistance","TextField","label","asNumber","Number","isNaN","setDistance","onBlur","builder","highlightItem","items","items$","i","Button","color","addIngredient","Add","addStirCauldron","addPourSolvent","left","bottom","background","useDICreate","PlotEditorViewModel","PotionBaseRegistry","getPotionBaseById","plotObserved","plot$","plot","useDeferredValue","mouseOverBuilderItem$","outputShareString","shareString$","mouseWorld","mouseWorldPosition$","query","URLSearchParams","window","location","search","data","loadFromShareString","history","replaceState","toString","EmptyPlotResult","toFixed","onMouseOverBuilderItem","_builder","_viewportSize$","BehaviorSubject","_viewOffset$","_viewScale$","_mouseOverBuilderItem$","_mouseClientPosition$","_mouseOverPlotItem$","this","_shareString$","pipe","getShareString","_mouseWorldPosition$","combineLatest","clientPos","_clientToWorld","delta","on","prevWorld","next","world","pointSubtract","pointAdd","dx","dy","applyZoom","z","prevSize","scaleFactor","onMouseOverPlotItem","builderItemFor","plotItem","p","_worldToClient","inject","PlotBuilder","PlotLine","line","pending","usePlotViewModel","points","source","evenOdd","onPathMouseOver","length","type","lighten","hex","str","inspectSource","mouseOverPlotItem$","onLineMouseOver","committed","trim","currentLine","sourceCounter","commitedLines","pendingLines","lastSource","point","keepEveryK","resultToPlotLines","committedPoints","pendingPoints","committedLines","PlotViewModelContext","Provider","createContext","plotViewModel","useContext","Error","isIngredientPoint","ingredientRegistry","useMemo","allPoints","concat","ingredients","uniq","filter","baseCost","ingredientTypeCounts","getIngredientById","price","pointArrayLength","sqrt","sum","Object","keys","pow","totalIngredients","totalUniqueIngredients","stress","AddIngredientRoot","justifyContent","AddIngredient","content","modules","composeModules","ContainerContext","Container","useDIContainer","toConstantValue","load","ContainerProvider","identifier","parameters","valRef","create","getCurvePoint","t","b1","b2","b3","b4","startX","startY","p1x","p1y","p2x","p2y","endx","endy","curveLengthCache","getCurveLength","resolution","BEZIER_CURVE_LENGTH_RESOLUTION","cached","previousPoint","index","vector2_2","pointMagnitude","curvePointsCache","PATH_SPACING_PHYSICS","remainingDistance","samplePointCount","ceil","pointDistance","splitPoint","pointScale","pointNormalize","freeze","setSize","observer","ResizeObserver","el","b","getBoundingClientRect","observe","disconnect","listener","listenTarget","addEventListener","removeEventListener","observable","useTransition","onError","val","setVal","Observable","subscribe","unsubscribe","rootEl","document","getElementById","ReactDOM","createRoot","render","StrictMode","MODIFIER_KEYS_NONE","ctrlKey","altKey","metaKey","keyboardModifierUseMeta","event","pointArray","pointArrayLengthCache","direction","array","takeLength","totalLength","taken","remainder","takenLength","remainingLength","linearInterpolate","assign","slice","a","abs","EPSILON","factor","magnitude","lerp","osPlatform","os","family","OSType","test","isProd","find","injectable","singleton","cubicBezierCurve","preGrindPercent","ContainerModule","plotter","_items$","_itemSubscription","_plot$","plotItem$","plotItems","isNotNull","dataStr","decode","version","DataView","getUint8","JSON","parse","inflate","to","fromJSON","_deleteItem","toJSON","encoded","deflate","stringify","Uint8Array","buffer","setUint8","encode","Plotter","PlotBuilderItem","_delete","_ingredientId$","_grindPercent$","_plotItem$","_isValid$","isValid","json","del","percent","_distance$","stirDistance","result","Date","now","_plotItem","_plotAddIngredient","_plotPourSolvent","_plotStirCauldron","addPosition","last","ingredientPoints","ingredientLength","curveToPoints","pointArrayLengthCached","takePercent","appendPendingPlotPoints","takePointArrayByDistance","currentPoint","pointEquals","distanceToOrigin","difference","commitPlotPoints","pointArrayLineFromDistance","addedPoints","remainderPlotPoints","_potionBasesById","typedKeys","PotionBaseMaps","base","PotionMap","_entities","hitTest","water","createTheme","palette","mode","ThemeProvider","count","pop","k","keepLast","obj","degress"],"sourceRoot":""}
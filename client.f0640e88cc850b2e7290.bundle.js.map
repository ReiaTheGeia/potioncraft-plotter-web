{"version":3,"file":"client.f0640e88cc850b2e7290.bundle.js","mappings":"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","sources":["webpack://potioncraft-plotter/./src/style.css","webpack://potioncraft-plotter/./src/style.css?7163","webpack://potioncraft-plotter/./src/components/DragReorderable.tsx","webpack://potioncraft-plotter/./src/components/EntityDetails.tsx","webpack://potioncraft-plotter/./src/components/ExpandButton.tsx","webpack://potioncraft-plotter/./src/components/FixedValue.tsx","webpack://potioncraft-plotter/./src/components/IncDecSlider.tsx","webpack://potioncraft-plotter/./src/components/IngredientSelector.tsx","webpack://potioncraft-plotter/./src/components/Map/Map.tsx","webpack://potioncraft-plotter/./src/components/Map/index.ts","webpack://potioncraft-plotter/./src/components/Overlay.tsx","webpack://potioncraft-plotter/./src/components/PanZoomViewport/CoordinateMappingViewportViewModel.ts","webpack://potioncraft-plotter/./src/components/PanZoomViewport/PanZoomViewport.tsx","webpack://potioncraft-plotter/./src/components/PanZoomViewport/index.ts","webpack://potioncraft-plotter/./src/components/PlotBuilderView/PlotBuilderView.tsx","webpack://potioncraft-plotter/./src/components/PlotBuilderView/PlotBuilderViewModel.ts","webpack://potioncraft-plotter/./src/components/PlotBuilderView/builder/PlotBuilderItem.ts","webpack://potioncraft-plotter/./src/components/PlotBuilderView/builder/PlotBuilderItemCollection.ts","webpack://potioncraft-plotter/./src/components/PlotBuilderView/builder/index.ts","webpack://potioncraft-plotter/./src/components/PlotBuilderView/components/PlotBuilderItemsList/PlotBuilderItemsList.tsx","webpack://potioncraft-plotter/./src/components/PlotBuilderView/components/PlotBuilderItemsList/components/AddIngredientPlotListItem.tsx","webpack://potioncraft-plotter/./src/components/PlotBuilderView/components/PlotBuilderItemsList/components/AddVoidSaltPlotListItem.tsx","webpack://potioncraft-plotter/./src/components/PlotBuilderView/components/PlotBuilderItemsList/components/HeatVortexPlotListItem.tsx","webpack://potioncraft-plotter/./src/components/PlotBuilderView/components/PlotBuilderItemsList/components/PlotListItem.tsx","webpack://potioncraft-plotter/./src/components/PlotBuilderView/components/PlotBuilderItemsList/components/PlotListItemCard.tsx","webpack://potioncraft-plotter/./src/components/PlotBuilderView/components/PlotBuilderItemsList/components/PourSolventPlotListItem.tsx","webpack://potioncraft-plotter/./src/components/PlotBuilderView/components/PlotBuilderItemsList/components/SetPositionPlotListItem.tsx","webpack://potioncraft-plotter/./src/components/PlotBuilderView/components/PlotBuilderItemsList/components/StirCauldronPlotListItem.tsx","webpack://potioncraft-plotter/./src/components/PlotBuilderView/components/PlotBuilderItemsList/index.ts","webpack://potioncraft-plotter/./src/components/PlotBuilderView/index.ts","webpack://potioncraft-plotter/./src/components/PlotDetails/PlotDetails.tsx","webpack://potioncraft-plotter/./src/components/PlotDetails/index.ts","webpack://potioncraft-plotter/./src/components/PlotSvg.tsx","webpack://potioncraft-plotter/./src/components/Plot/Plot.tsx","webpack://potioncraft-plotter/./src/components/Plot/index.ts","webpack://potioncraft-plotter/./src/components/PointDetails.tsx","webpack://potioncraft-plotter/./src/components/StepDetails.tsx","webpack://potioncraft-plotter/./src/console.ts","webpack://potioncraft-plotter/./src/container.tsx","webpack://potioncraft-plotter/./src/curves.ts","webpack://potioncraft-plotter/./src/game-settings.ts","webpack://potioncraft-plotter/./src/hooks/component-bounds.ts","webpack://potioncraft-plotter/./src/hooks/native-event.ts","webpack://potioncraft-plotter/./src/hooks/observe.ts","webpack://potioncraft-plotter/./src/index.tsx","webpack://potioncraft-plotter/./src/modifier-keys.ts","webpack://potioncraft-plotter/./src/observables.ts","webpack://potioncraft-plotter/./src/pages/Challenge/ChallengePage.tsx","webpack://potioncraft-plotter/./src/pages/Challenge/ChallengePageViewModel.ts","webpack://potioncraft-plotter/./src/pages/Challenge/index.ts","webpack://potioncraft-plotter/./src/pages/Index.tsx","webpack://potioncraft-plotter/./src/pages/Plotter/PlotterPage.tsx","webpack://potioncraft-plotter/./src/pages/Plotter/PlotterPageViewModel.ts","webpack://potioncraft-plotter/./src/pages/Plotter/index.ts","webpack://potioncraft-plotter/./src/point-array.ts","webpack://potioncraft-plotter/./src/rectangles.ts","webpack://potioncraft-plotter/./src/routes.tsx","webpack://potioncraft-plotter/./src/runtime-env.ts","webpack://potioncraft-plotter/./src/services/challenge/ChallengeFactory.ts","webpack://potioncraft-plotter/./src/services/challenge/challenge-types/BrewEffectAtPointChallenge.ts","webpack://potioncraft-plotter/./src/services/challenge/module.ts","webpack://potioncraft-plotter/./src/services/history/AppRouter.tsx","webpack://potioncraft-plotter/./src/services/history/History.ts","webpack://potioncraft-plotter/./src/services/history/module.ts","webpack://potioncraft-plotter/./src/services/ingredients/IngredientRegistry.ts","webpack://potioncraft-plotter/./src/services/ingredients/ingredients.ts","webpack://potioncraft-plotter/./src/services/ingredients/module.ts","webpack://potioncraft-plotter/./src/services/ingredients/types.ts","webpack://potioncraft-plotter/./src/services/module.ts","webpack://potioncraft-plotter/./src/services/plotter/Plotter.ts","webpack://potioncraft-plotter/./src/services/plotter/module.ts","webpack://potioncraft-plotter/./src/services/plotter/types.ts","webpack://potioncraft-plotter/./src/services/plotter/utils.ts","webpack://potioncraft-plotter/./src/services/potion-bases/PotionBaseRegistry.ts","webpack://potioncraft-plotter/./src/services/potion-bases/module.ts","webpack://potioncraft-plotter/./src/services/potion-maps/PotionMap.ts","webpack://potioncraft-plotter/./src/services/potion-maps/entity-defs.ts","webpack://potioncraft-plotter/./src/services/potion-maps/maps/index.ts","webpack://potioncraft-plotter/./src/services/potion-maps/regions.ts","webpack://potioncraft-plotter/./src/services/share-string/ShareStringSerializer.ts","webpack://potioncraft-plotter/./src/services/share-string/module.ts","webpack://potioncraft-plotter/./src/size.ts","webpack://potioncraft-plotter/./src/theme.tsx","webpack://potioncraft-plotter/./src/utils.ts","webpack://potioncraft-plotter/./src/vector2.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\r\\nThis should be kept minimal and only provide globals\\r\\nor non-react component styles.\\r\\n*/\\r\\n\\r\\nhtml, body, #root {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  margin: 0;\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;;;CAGC;;AAED;EACE,WAAW;EACX,YAAY;EACZ,SAAS;AACX\",\"sourcesContent\":[\"/*\\r\\nThis should be kept minimal and only provide globals\\r\\nor non-react component styles.\\r\\n*/\\r\\n\\r\\nhtml, body, #root {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  margin: 0;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from \"react\";\r\nimport forkRef from \"react-fork-ref\";\r\n\r\nexport type PrimaryDragReorderableAxis =\r\n  | \"left-to-right\"\r\n  | \"right-to-left\"\r\n  | \"top-to-bottom\"\r\n  | \"bottom-to-top\";\r\nexport type SecondaryDragReorderableAxis = \"none\" | PrimaryDragReorderableAxis;\r\n\r\nexport interface DragReorderEventParams {\r\n  /**\r\n   * The index of the value being reordered.\r\n   */\r\n  fromIndex: number;\r\n\r\n  /**\r\n   * The index the value is being reordered to.\r\n   */\r\n  toIndex: number;\r\n}\r\n\r\nexport interface DragReorderableItemParams {\r\n  /**\r\n   * Whether the element for this value is being dragged.\r\n   */\r\n  isDragging: boolean;\r\n\r\n  /**\r\n   * Whether the dragged value is going to be dropped before this element.\r\n   */\r\n  isDropBefore: boolean;\r\n\r\n  /**\r\n   * Whether the dragged value is going to be dropped after this element.\r\n   */\r\n  isDropAfter: boolean;\r\n}\r\n\r\nexport type DragReorderableRenderFunc<TValue = any> = (\r\n  /**\r\n   * The value this element is for.\r\n   */\r\n  value: TValue,\r\n  /**\r\n   * Parameters describing the drag or drop condition of this element.\r\n   */\r\n  params: DragReorderableItemParams,\r\n\r\n  /**\r\n   * A function to get the properties that should be applied to the root element.\r\n   */\r\n  getRootProps: <T extends React.HTMLProps<HTMLElement>>(\r\n    props?: T & { ref?: React.Ref<HTMLElement> }\r\n  ) => {\r\n    ref: React.Ref<HTMLElement | null>;\r\n  } & T,\r\n\r\n  /***\r\n   * A function to get the properties that should be applied to the draggable handle of this element.\r\n   */\r\n  getDragHandleProps: <T extends React.HTMLProps<HTMLElement>>(\r\n    props?: T\r\n  ) => {\r\n    onPointerDown: React.PointerEventHandler<HTMLElement>;\r\n    onPointerMove: React.PointerEventHandler<HTMLElement>;\r\n    onPointerUp: React.PointerEventHandler<HTMLElement>;\r\n  }\r\n) => React.ReactElement;\r\n\r\nexport interface DragReorderableProps<TValue = any> {\r\n  /**\r\n   * The values representing draggable items.  The order of the values controls the order of the value components in the list.\r\n   */\r\n  values: readonly TValue[];\r\n\r\n  /**\r\n   * The primary direction of the reorderable.\r\n   * This controls how this component will determine the relative order between elements during drag operations.\r\n   */\r\n  primaryAxis: PrimaryDragReorderableAxis;\r\n\r\n  /**\r\n   * The secondary direction of the reorderable.\r\n   * This controls how this component will determine the relative order between elements during drag operations.\r\n   */\r\n  secondaryAxis?: SecondaryDragReorderableAxis;\r\n\r\n  /**\r\n   * An optional drop indicator to render between the items where a drop is currently being hovered.\r\n   */\r\n  dropIndicator?: JSX.Element;\r\n\r\n  /**\r\n   * An event raised when a reorder event occurs.\r\n   * @param values The values in the new order.\r\n   * @param params Parameters describing the reorder event.\r\n   */\r\n  onReorder(values: TValue[], params: DragReorderEventParams): void;\r\n\r\n  /**\r\n   * The render function for each reorderable component.\r\n   */\r\n  children: DragReorderableRenderFunc<TValue>;\r\n}\r\n\r\ninterface ElementBounds {\r\n  left: number;\r\n  top: number;\r\n  right: number;\r\n  bottom: number;\r\n}\r\n\r\nconst DragReorderable = <TValue,>({\r\n  values,\r\n  primaryAxis,\r\n  secondaryAxis = \"none\",\r\n  dropIndicator,\r\n  onReorder,\r\n  children,\r\n}: DragReorderableProps<TValue>) => {\r\n  /**\r\n   * The bounds of each child element matched to the index of the value it represents.\r\n   */\r\n  const childrenBoundsRef = React.useRef<(ElementBounds | null)[]>([]);\r\n\r\n  const [dragIndex, setDragIndex] = React.useState(-1);\r\n  const [dropIndex, setDropIndex] = React.useState(-1);\r\n\r\n  const onBoundsChanged = React.useCallback(\r\n    (valueIndex: number, bounds: ElementBounds | null) => {\r\n      childrenBoundsRef.current[valueIndex] = bounds;\r\n    },\r\n    []\r\n  );\r\n\r\n  const onDragStart = React.useCallback(\r\n    (valueIndex: number) => {\r\n      if (dragIndex !== -1) {\r\n        return;\r\n      }\r\n      setDragIndex(valueIndex);\r\n    },\r\n    [dragIndex]\r\n  );\r\n\r\n  const onDragMove = React.useCallback(\r\n    (valueIndex: number, e: React.PointerEvent) => {\r\n      // valueIndex should remain the dragIndex, as that element will have captured the pointer for the duration of the drag.\r\n\r\n      if (dragIndex === -1) {\r\n        return;\r\n      }\r\n\r\n      const index = getInsertionIndex(\r\n        childrenBoundsRef.current.filter(isNotNull),\r\n        primaryAxis,\r\n        secondaryAxis,\r\n        e.clientX,\r\n        e.clientY\r\n      );\r\n\r\n      setDropIndex(index);\r\n    },\r\n    [dragIndex]\r\n  );\r\n\r\n  const onDragEnd = React.useCallback(\r\n    (valueIndex: number) => {\r\n      if (\r\n        dragIndex === -1 ||\r\n        dropIndex === -1 ||\r\n        dragIndex === dropIndex ||\r\n        // If we remove the item to place it in the place of the next item, the items will collapse back into their same positions.\r\n        dragIndex + 1 === dropIndex\r\n      ) {\r\n        setDragIndex(-1);\r\n        setDropIndex(-1);\r\n        return;\r\n      }\r\n\r\n      const newValues = [...values];\r\n\r\n      let newValueIndex = dropIndex;\r\n\r\n      // Remove the item being dragged from the list.\r\n      const draggedValue = values[dragIndex];\r\n      newValues.splice(dragIndex, 1);\r\n\r\n      if (dragIndex < newValueIndex) {\r\n        // If the item we removed was before where we are dropping, decrement the drop index\r\n        // to compensate for its removal.\r\n        newValueIndex--;\r\n      }\r\n\r\n      newValues.splice(newValueIndex, 0, draggedValue);\r\n      onReorder(newValues, { fromIndex: dragIndex, toIndex: dropIndex });\r\n\r\n      setDragIndex(-1);\r\n      setDropIndex(-1);\r\n    },\r\n    [dragIndex, dropIndex, values, onReorder]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {values.map((value, index) => (\r\n        <React.Fragment key={index}>\r\n          {dropIndex === index && dropIndicator}\r\n          <DragReorderableItem\r\n            valueIndex={index}\r\n            dropIndex={dropIndex}\r\n            value={value}\r\n            isDragging={dragIndex === index}\r\n            onBoundsChanged={onBoundsChanged}\r\n            onDragStart={onDragStart}\r\n            onDragMove={onDragMove}\r\n            onDragEnd={onDragEnd}\r\n          >\r\n            {children}\r\n          </DragReorderableItem>\r\n        </React.Fragment>\r\n      ))}\r\n      {dropIndex === values.length && dropIndicator}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragReorderable;\r\n\r\ninterface DragReorderableItemProps {\r\n  valueIndex: number;\r\n  dropIndex: number;\r\n  value: any;\r\n  isDragging: boolean;\r\n  onBoundsChanged(valueIndex: number, bounds: ElementBounds | null): void;\r\n  onDragStart(valueIndex: number): void;\r\n  onDragMove(valueIndex: number, e: React.PointerEvent): void;\r\n  onDragEnd(valueIndex: number, e: React.PointerEvent): void;\r\n  children: DragReorderableRenderFunc;\r\n}\r\n\r\nconst DragReorderableItem = ({\r\n  valueIndex,\r\n  dropIndex,\r\n  value,\r\n  isDragging,\r\n  onBoundsChanged,\r\n  onDragStart,\r\n  onDragMove,\r\n  onDragEnd,\r\n  children,\r\n}: DragReorderableItemProps) => {\r\n  const [capturedPointerId, setCapturedPointerId] = React.useState<\r\n    number | null\r\n  >(null);\r\n\r\n  const onPointerDown = React.useCallback(\r\n    (e: React.PointerEvent<HTMLElement>) => {\r\n      if (capturedPointerId !== null) {\r\n        // Already captured one.\r\n        return;\r\n      }\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.currentTarget.setPointerCapture(e.pointerId);\r\n      setCapturedPointerId(e.pointerId);\r\n      e.preventDefault();\r\n      onDragStart(valueIndex);\r\n    },\r\n    [onDragStart, capturedPointerId, valueIndex]\r\n  );\r\n\r\n  const onPointerMove = React.useCallback(\r\n    (e: React.PointerEvent<HTMLElement>) => {\r\n      if (capturedPointerId !== e.pointerId) {\r\n        return;\r\n      }\r\n\r\n      onDragMove(valueIndex, e);\r\n    },\r\n    [onDragMove, capturedPointerId, valueIndex]\r\n  );\r\n\r\n  const onPointerUp = React.useCallback(\r\n    (e: React.PointerEvent<HTMLElement>) => {\r\n      if (capturedPointerId !== e.pointerId) {\r\n        return;\r\n      }\r\n\r\n      e.currentTarget.releasePointerCapture(e.pointerId);\r\n      setCapturedPointerId(null);\r\n      onDragEnd(valueIndex, e);\r\n    },\r\n    [onDragEnd, capturedPointerId, valueIndex]\r\n  );\r\n\r\n  // Keep these synced to a ref so we can access them inside the mutation observer without having\r\n  // to rebuild the observer on every change.\r\n  const onBoundsRef = React.useRef(onBoundsChanged);\r\n  const valueIndexRef = React.useRef(valueIndex);\r\n  React.useEffect(() => {\r\n    onBoundsRef.current = onBoundsChanged;\r\n    valueIndexRef.current = valueIndex;\r\n  }, [onBoundsChanged, valueIndex]);\r\n\r\n  const observerRef = React.useRef<MutationObserver | null>(null);\r\n  // Clean up the observer on unmount.\r\n  React.useEffect(() => {\r\n    return () => observerRef.current?.disconnect();\r\n  }, []);\r\n\r\n  // Build the mutation observer when the ref changes.\r\n  const refCallback = (ref: HTMLElement | null) => {\r\n    if (observerRef.current) {\r\n      observerRef.current.disconnect();\r\n      observerRef.current = null;\r\n    }\r\n\r\n    if (!ref) {\r\n      onBoundsChanged(valueIndex, null);\r\n      return;\r\n    }\r\n\r\n    const observer = new MutationObserver(() => {\r\n      const { left, top, right, bottom } = ref.getBoundingClientRect();\r\n      onBoundsChanged(valueIndexRef.current, { left, top, right, bottom });\r\n    });\r\n\r\n    observer.observe(ref, {\r\n      attributes: true,\r\n      characterData: true,\r\n      childList: true,\r\n      subtree: true,\r\n    });\r\n\r\n    observerRef.current = observer;\r\n\r\n    const { left, top, right, bottom } = ref.getBoundingClientRect();\r\n    onBoundsChanged(valueIndexRef.current, { left, top, right, bottom });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {children(\r\n        value,\r\n        {\r\n          isDragging,\r\n          isDropBefore: dropIndex === valueIndex,\r\n          isDropAfter: dropIndex + 1 === valueIndex,\r\n        },\r\n        (additionalProps = {} as any) => ({\r\n          ...additionalProps,\r\n          ref: forkRef(refCallback, additionalProps.ref ?? (() => {})),\r\n        }),\r\n        (additionalProps = {} as any) => ({\r\n          ...additionalProps,\r\n          onPointerDown,\r\n          onPointerMove,\r\n          onPointerUp,\r\n        })\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ntype IndexedBounds = ElementBounds & { itemIndex: number };\r\n\r\n/**\r\n * A group of children and their bounds along one span of an axis.\r\n */\r\ninterface ChildGroup {\r\n  /**\r\n   * The leftmost extent of every child in this group.\r\n   */\r\n  left: number;\r\n\r\n  /**\r\n   * The rightmost extent of every child in this group.\r\n   */\r\n  right: number;\r\n\r\n  /**\r\n   * The topmost extent of every child in this group.\r\n   */\r\n  top: number;\r\n\r\n  /**\r\n   * The bottommost extent of every child in this group.\r\n   */\r\n  bottom: number;\r\n\r\n  /**\r\n   * The bounds and index of every child in this group.\r\n   */\r\n  items: IndexedBounds[];\r\n}\r\n\r\n/**\r\n * Break the elements up into groups based on the primary and secondary axis.\r\n */\r\nfunction getGroups(\r\n  bounds: ElementBounds[],\r\n  primaryAxis: PrimaryDragReorderableAxis,\r\n  secondaryAxis: SecondaryDragReorderableAxis\r\n): ChildGroup[] {\r\n  let currentGroup: ChildGroup | null = null;\r\n  const groups: ChildGroup[] = [];\r\n\r\n  let lastPrimaryPosition: number | null = null;\r\n  for (let i = 0; i < bounds.length; i++) {\r\n    const bound = bounds[i];\r\n\r\n    // Get the position of the element along the primary axis.\r\n    let itemPrimaryPosition: number;\r\n    switch (primaryAxis) {\r\n      case \"left-to-right\":\r\n        itemPrimaryPosition = bound.left;\r\n        break;\r\n      case \"right-to-left\":\r\n        itemPrimaryPosition = bound.right;\r\n        break;\r\n      case \"top-to-bottom\":\r\n        itemPrimaryPosition = bound.top;\r\n        break;\r\n      case \"bottom-to-top\":\r\n        itemPrimaryPosition = bound.bottom;\r\n        break;\r\n    }\r\n\r\n    if (\r\n      // Start a group if we have not yet created one.\r\n      !currentGroup ||\r\n      // Check to see if we have started a new row due to wraparound onto the secondary axis.\r\n      (secondaryAxis !== \"none\" &&\r\n        lastPrimaryPosition != null &&\r\n        // If we are ordering in reverse, then we need to start a new primary axis group\r\n        // if the next item ends up less further along than the previous one.\r\n        (axisIsFlipped(primaryAxis)\r\n          ? itemPrimaryPosition > lastPrimaryPosition\r\n          : itemPrimaryPosition < lastPrimaryPosition))\r\n    ) {\r\n      currentGroup = {\r\n        left: bound.left,\r\n        right: bound.right,\r\n        top: bound.top,\r\n        bottom: bound.bottom,\r\n        items: [\r\n          {\r\n            ...bound,\r\n            itemIndex: i,\r\n          },\r\n        ],\r\n      };\r\n      groups.push(currentGroup);\r\n    } else {\r\n      // The item is still within the current group.  Update the group to include it.\r\n      currentGroup.left = Math.min(currentGroup.left, bound.left);\r\n      currentGroup.right = Math.max(currentGroup.right, bound.right);\r\n      currentGroup.top = Math.min(currentGroup.top, bound.top);\r\n      currentGroup.bottom = Math.max(currentGroup.bottom, bound.bottom);\r\n      currentGroup.items.push({\r\n        ...bound,\r\n        itemIndex: i,\r\n      });\r\n    }\r\n\r\n    lastPrimaryPosition = itemPrimaryPosition;\r\n  }\r\n\r\n  if (axisIsFlipped(primaryAxis)) {\r\n    groups.forEach((group) => group.items.reverse());\r\n  }\r\n\r\n  if (secondaryAxis !== \"none\" && axisIsFlipped(secondaryAxis)) {\r\n    groups.reverse();\r\n  }\r\n\r\n  return groups;\r\n}\r\n\r\n/**\r\n * Determine the insertion point for the given mouse coords based on the bounds of all elements and the sort axes.\r\n */\r\nfunction getInsertionIndex(\r\n  bounds: ElementBounds[],\r\n  primaryAxis: PrimaryDragReorderableAxis,\r\n  secondaryAxis: SecondaryDragReorderableAxis,\r\n  x: number,\r\n  y: number\r\n): number {\r\n  const groups = getGroups(bounds, primaryAxis, secondaryAxis);\r\n  if (groups.length === 0) {\r\n    return -1;\r\n  }\r\n\r\n  // Find the target group along the secondary axis\r\n  let targetGroup: ChildGroup | null = null;\r\n  if (secondaryAxis === \"none\") {\r\n    targetGroup = groups[0];\r\n  } else {\r\n    // Secondary axis is active, so we need to find which secondary axis group the mouse is over.\r\n    const horizontalSecondary = axisIsHorizontal(secondaryAxis);\r\n    for (const group of groups) {\r\n      if (horizontalSecondary) {\r\n        if (x < group.left || x > group.right) {\r\n          continue;\r\n        }\r\n      } else {\r\n        if (y < group.top || y > group.bottom) {\r\n          continue;\r\n        }\r\n      }\r\n\r\n      targetGroup = group;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (!targetGroup || !targetGroup.items.length) {\r\n    return -1;\r\n  }\r\n\r\n  let primaryPosition = axisIsHorizontal(primaryAxis) ? x : y;\r\n  for (let i = 0; i < targetGroup.items.length; i++) {\r\n    const item = targetGroup.items[i];\r\n\r\n    let itemPrimaryMin: number;\r\n    let itemPrimaryMax: number;\r\n\r\n    if (axisIsHorizontal(primaryAxis)) {\r\n      itemPrimaryMin = item.left;\r\n      itemPrimaryMax = item.right;\r\n    } else {\r\n      itemPrimaryMin = item.top;\r\n      itemPrimaryMax = item.bottom;\r\n    }\r\n\r\n    if (primaryPosition < itemPrimaryMin) {\r\n      // Mouse is past the previous item, not not yet at this item.\r\n      // Use this item's index\r\n      // TODO: Return which of the two the mouse is closer to.\r\n      return item.itemIndex;\r\n    }\r\n\r\n    if (primaryPosition < itemPrimaryMax) {\r\n      // Mouse is on this item\r\n      const center = itemPrimaryMin + (itemPrimaryMax - itemPrimaryMin) / 2;\r\n      if (primaryPosition < center) {\r\n        // Mouse is closer to the start of this item, so return the item index to place the drop before us.\r\n        return item.itemIndex;\r\n      } else {\r\n        // Mouse is closer to the end of this item, so return one after this index to place the drop after us.\r\n        return item.itemIndex + 1;\r\n      }\r\n    }\r\n\r\n    // Position was past this item, loop and search the next.\r\n  }\r\n\r\n  // If we didn't find an item by now, consider us past the last item on this axis.\r\n  return targetGroup.items[targetGroup.items.length - 1].itemIndex + 1;\r\n}\r\n\r\nfunction axisIsHorizontal(axis: PrimaryDragReorderableAxis) {\r\n  return axis === \"left-to-right\" || axis === \"right-to-left\";\r\n}\r\n\r\nfunction axisIsFlipped(axis: PrimaryDragReorderableAxis) {\r\n  return axis === \"right-to-left\" || axis === \"bottom-to-top\";\r\n}\r\n\r\nfunction isNotNull<T>(x: T | null | undefined): x is T {\r\n  return x != null;\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Card, CardContent } from \"@mui/material\";\r\n\r\nimport {\r\n  MapEntity,\r\n  PotionEffectMapEntity,\r\n  VortexMapEntity,\r\n} from \"@/services/potion-maps/types\";\r\n\r\nexport interface StepDetailsProps {\r\n  className?: string;\r\n  entity: MapEntity;\r\n}\r\n\r\nconst EntityDetails = ({ entity, className }: StepDetailsProps) => {\r\n  let content: React.ReactNode;\r\n  switch (entity.entityType) {\r\n    case \"PotionEffect\":\r\n      content = <PotionEffectMapEntityDetails entity={entity} />;\r\n      break;\r\n    case \"Vortex\":\r\n      content = <VortexMapEntityDetails entity={entity} />;\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  return (\r\n    <Card className={className} variant=\"outlined\">\r\n      <CardContent>{content}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EntityDetails;\r\n\r\nconst PotionEffectMapEntityDetails = ({\r\n  entity,\r\n}: {\r\n  entity: PotionEffectMapEntity;\r\n}) => {\r\n  return (\r\n    <div>\r\n      {entity.effect} ({entity.x}, {entity.y})\r\n    </div>\r\n  );\r\n};\r\n\r\nconst VortexMapEntityDetails = ({ entity }: { entity: VortexMapEntity }) => {\r\n  return (\r\n    <div>\r\n      Vortex ({entity.x}, {entity.y})\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { IconButton, IconButtonProps, styled } from \"@mui/material\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@mui/icons-material\";\r\n\r\nconst ExpandMore = styled((props: IconButtonProps & { expand: boolean }) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(180deg)\",\r\n  marginLeft: \"auto\",\r\n  transition: theme.transitions.create(\"transform\", {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nexport interface ExpandButtonProps {\r\n  expanded: boolean;\r\n  onExpanded(expanded: boolean): void;\r\n}\r\n\r\nconst ExpandButton = ({ expanded, onExpanded }: ExpandButtonProps) => {\r\n  return (\r\n    <ExpandMore expand={expanded} onClick={() => onExpanded(!expanded)}>\r\n      <ExpandMoreIcon />\r\n    </ExpandMore>\r\n  );\r\n};\r\n\r\nexport default ExpandButton;\r\n","import React from \"react\";\r\n\r\nexport interface FixedValueProps {\r\n  value: number;\r\n  fixed?: number;\r\n}\r\n\r\nconst FixedValue = ({ value, fixed = 2 }: FixedValueProps) => {\r\n  return <span title={value.toString()}>{value.toFixed(fixed)}</span>;\r\n};\r\n\r\nexport default FixedValue;\r\n","import React from \"react\";\r\n\r\nimport { Slider } from \"@mui/material\";\r\n\r\nexport interface IncDecSliderProps {\r\n  className?: string;\r\n  value: number;\r\n  /**\r\n   * The rate of change at maximum deflection in units per second.\r\n   */\r\n  rate: number;\r\n  onChange(value: number): void;\r\n  onChangeCommitted?(): void;\r\n}\r\n\r\nconst IncDecSlider = ({\r\n  className,\r\n  value,\r\n  rate,\r\n  onChange,\r\n  onChangeCommitted,\r\n}: IncDecSliderProps) => {\r\n  const [delta, setDelta] = React.useState(0);\r\n  React.useEffect(() => {\r\n    const token = setInterval(() => {\r\n      if (delta === 0) {\r\n        return;\r\n      }\r\n\r\n      const newValue = value + delta * rate * (1 / 10);\r\n      onChange(newValue);\r\n    }, 10);\r\n    return () => clearInterval(token);\r\n  }, [value, delta, rate]);\r\n\r\n  return (\r\n    <Slider\r\n      className={className}\r\n      min={-1}\r\n      max={1}\r\n      step={0.01}\r\n      value={delta}\r\n      onChange={(e, v) => {\r\n        setDelta(v as number);\r\n      }}\r\n      onChangeCommitted={() => {\r\n        setDelta(0);\r\n        if (onChangeCommitted) {\r\n          onChangeCommitted();\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default IncDecSlider;\r\n","import React from \"react\";\r\nimport { sortBy } from \"lodash\";\r\n\r\nimport {\r\n  MenuItem,\r\n  Select,\r\n  SelectProps,\r\n  SelectChangeEvent,\r\n  ListItemText,\r\n  Tooltip,\r\n  styled,\r\n} from \"@mui/material\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\n\r\nimport {\r\n  IngredientDescriptor,\r\n  IngredientId,\r\n} from \"@/services/ingredients/types\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\nimport { MAX_INGREDIENT_EXTENT, POTION_RADIUS } from \"@/game-settings\";\r\n\r\nexport interface IngredientSelectorProps\r\n  extends Omit<SelectProps<IngredientId | \"\">, \"value\" | \"onChange\"> {\r\n  value: IngredientId | null;\r\n  allowEmpty?: boolean;\r\n  onChange(value: IngredientId | null): void;\r\n  onMouseOverItem?(value: IngredientId | null): void;\r\n  onMouseOutItem?(): void;\r\n}\r\n\r\nconst StyledTooltip = styled(Tooltip)({\r\n  tooltipPlacementLeft: {\r\n    margin: \"10px 0\",\r\n  },\r\n});\r\n\r\nconst IngredientSelector = ({\r\n  value,\r\n  onChange,\r\n  allowEmpty = false,\r\n  onMouseOverItem,\r\n  onMouseOutItem,\r\n  ...props\r\n}: IngredientSelectorProps) => {\r\n  const registry = useDIDependency(IngredientRegistry);\r\n  const ingredients = registry.getIngredients();\r\n  const sortedIngredients = sortBy(\r\n    ingredients,\r\n    (ingredient) => ingredient.name\r\n  );\r\n\r\n  const onSelectChange = React.useCallback(\r\n    (e: SelectChangeEvent<IngredientId | \"\">) => {\r\n      const value = e.target.value;\r\n      if (value === \"\") {\r\n        onChange(null);\r\n      } else {\r\n        onChange(value as any);\r\n      }\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <Select<IngredientId | \"\">\r\n      {...props}\r\n      value={value ?? \"\"}\r\n      onChange={onSelectChange}\r\n    >\r\n      {allowEmpty && <MenuItem value=\"\"></MenuItem>}\r\n      {sortedIngredients.map((ingredient) => (\r\n        <MenuItem\r\n          key={ingredient.id}\r\n          value={ingredient.id}\r\n          onMouseOver={\r\n            onMouseOverItem ? () => onMouseOverItem(ingredient.id) : undefined\r\n          }\r\n          onMouseOut={onMouseOutItem}\r\n        >\r\n          <StyledTooltip\r\n            placement=\"left\"\r\n            title={\r\n              <svg\r\n                width=\"100px\"\r\n                height=\"100px\"\r\n                viewBox={`-${MAX_INGREDIENT_EXTENT} -${MAX_INGREDIENT_EXTENT} ${\r\n                  MAX_INGREDIENT_EXTENT * 2\r\n                } ${MAX_INGREDIENT_EXTENT * 2}`}\r\n                transform=\"scale(1, -1)\"\r\n              >\r\n                <circle cx={0} cy={0} r={POTION_RADIUS} fill=\"blue\" />\r\n                <path\r\n                  d={ingredient.path.reduce(\r\n                    (path, curve) =>\r\n                      path +\r\n                      `M ${curve.start.x} ${curve.start.y} C ${curve.p1.x},${curve.p1.y} ${curve.p2.x},${curve.p2.y} ${curve.end.x},${curve.end.y}`,\r\n                    \"M 0 0 \"\r\n                  )}\r\n                  stroke=\"black\"\r\n                  strokeWidth={0.2}\r\n                  fill=\"none\"\r\n                />\r\n              </svg>\r\n            }\r\n          >\r\n            <ListItemText>{ingredient.name}</ListItemText>\r\n          </StyledTooltip>\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default IngredientSelector;\r\n","import React from \"react\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { Vec2Zero } from \"@/vector2\";\r\nimport { degreesToRadians } from \"@/utils\";\r\nimport { SizeZero } from \"@/size\";\r\n\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { PotionMap } from \"@/services/potion-maps/PotionMap\";\r\nimport {\r\n  DangerZonePartMapEntity,\r\n  ExperienceBonusMapEntity,\r\n  MapEntity,\r\n  PotionEffectMapEntity,\r\n  VortexMapEntity,\r\n} from \"@/services/potion-maps/types\";\r\n\r\nimport { IMapViewModel } from \"./MapViewModel\";\r\n\r\nexport interface MapProps {\r\n  className?: string;\r\n  map: PotionMap;\r\n  viewModel: IMapViewModel;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  backgroundColor: \"#DABE99\",\r\n  overflow: \"hidden\",\r\n}));\r\n\r\nconst imgCache = new Map<string, HTMLImageElement>();\r\nfunction makeImg(src: string): HTMLImageElement {\r\n  if (imgCache.has(src)) {\r\n    return imgCache.get(src)!;\r\n  }\r\n\r\n  const img = new Image();\r\n  img.onerror = console.error.bind(console);\r\n  img.src = src;\r\n  imgCache.set(src, img);\r\n  return img;\r\n}\r\n\r\nconst MapSlotSrc = require(\"@/assets/MapSlot.png\");\r\n\r\nconst PotionMapComponent = ({ className, map, viewModel }: MapProps) => {\r\n  const { width, height } = useObservation(viewModel.viewportSize$) ?? SizeZero;\r\n  const offset = useObservation(viewModel.viewOffset$) ?? Vec2Zero;\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n\r\n  const [canvasRef, setCanvasRef] = React.useState<HTMLCanvasElement | null>(\r\n    null\r\n  );\r\n\r\n  const entities = map.entities;\r\n\r\n  React.useEffect(() => {\r\n    if (!canvasRef) {\r\n      return;\r\n    }\r\n\r\n    const id = requestAnimationFrame(() => {\r\n      const ctx = canvasRef.getContext(\"2d\")!;\r\n\r\n      ctx.clearRect(0, 0, width, height);\r\n\r\n      transformToMap(ctx, scale, offset.x, offset.y, () => {\r\n        // Map border\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = \"red\";\r\n        ctx.lineWidth = 0.2;\r\n        ctx.moveTo(-60, -60);\r\n        ctx.lineTo(-60, 60);\r\n        ctx.lineTo(60, 60);\r\n        ctx.lineTo(60, -60);\r\n        ctx.lineTo(-60, -60);\r\n        ctx.stroke();\r\n\r\n        // ctx.beginPath();\r\n        // ctx.fillStyle = \"blue\";\r\n        // ctx.arc(0, 0, POTION_RADIUS, 0, 2 * Math.PI);\r\n        // ctx.fill();\r\n\r\n        ctx.save();\r\n        const img = makeImg(MapSlotSrc);\r\n        const mapSlotW = img.width / 100;\r\n        const mapSlotH = img.height / 100;\r\n        ctx.scale(1, -1);\r\n        ctx.translate(-mapSlotW / 2, -mapSlotH / 2 - 0.19);\r\n        ctx.drawImage(img, 0, 0, mapSlotW, mapSlotH);\r\n        ctx.restore();\r\n\r\n        for (const entity of entities) {\r\n          renderEntity(ctx, entity);\r\n        }\r\n      });\r\n    });\r\n\r\n    return () => cancelAnimationFrame(id);\r\n  }, [canvasRef, entities, width, height, offset.x, offset.y, scale]);\r\n\r\n  return (\r\n    <Root className={className}>\r\n      <canvas ref={(ref) => setCanvasRef(ref)} width={width} height={height} />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PotionMapComponent;\r\n\r\nfunction transformToMap(\r\n  ctx: CanvasRenderingContext2D,\r\n  zoomFactor: number,\r\n  offsetX: number,\r\n  offsetY: number,\r\n  handler: () => void\r\n) {\r\n  ctx.save();\r\n  ctx.scale(zoomFactor, zoomFactor);\r\n\r\n  ctx.translate(MAP_EXTENT_RADIUS, MAP_EXTENT_RADIUS);\r\n\r\n  ctx.scale(1, -1);\r\n\r\n  // Offset is in map units, so apply after the inversion of y.\r\n  ctx.translate(offsetX, offsetY);\r\n\r\n  handler();\r\n  ctx.restore();\r\n}\r\n\r\nfunction renderEntity(ctx: CanvasRenderingContext2D, entity: MapEntity) {\r\n  switch (entity.entityType) {\r\n    case \"DangerZonePart\":\r\n      renderDangerZonePart(ctx, entity);\r\n      return;\r\n    case \"PotionEffect\":\r\n      renderPotionEffectEntity(ctx, entity);\r\n      return;\r\n    case \"ExperienceBonus\":\r\n      renderExperienceBonusEntity(ctx, entity);\r\n      return;\r\n    case \"Vortex\":\r\n      renderVortexEntity(ctx, entity);\r\n      return;\r\n  }\r\n}\r\n\r\nconst DangerZoneImageSrces: Record<string, string> = {\r\n  Bone1: require(\"@/assets/danger-zone-parts/Bone1.png\"),\r\n  Bone2: require(\"@/assets/danger-zone-parts/Bone2.png\"),\r\n  Fang1: require(\"@/assets/danger-zone-parts/Fang1.png\"),\r\n  Fang2: require(\"@/assets/danger-zone-parts/Fang2.png\"),\r\n  Skull1: require(\"@/assets/danger-zone-parts/Skull1.png\"),\r\n};\r\n\r\nfunction renderDangerZonePart(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: DangerZonePartMapEntity\r\n) {\r\n  ctx.save();\r\n\r\n  ctx.translate(entity.x, entity.y);\r\n  ctx.rotate(degreesToRadians(entity.angle));\r\n\r\n  // switch (entity.prefab) {\r\n  //   case \"Fang1\":\r\n  //     // 0.1226418, 0.400135\r\n  //     ctx.fillRect(-0.1226 / 2 - 0.0085, -0.4001 / 2 + 0.0116, 0.1226, 0.4001);\r\n  //     break;\r\n  //   case \"Fang2\":\r\n  //     // 0.1371522, 0.2445218\r\n  //     ctx.fillRect(-0.1372 / 2 + 0.0031, -0.2445 / 2 + 0.0097, 0.1372, 0.2445);\r\n  //     break;\r\n  //   case \"Bone1\":\r\n  //     // 0.1287996, 0.6983229\r\n  //     ctx.fillRect(-0.1288 / 2 - 0.0196, -0.6983 / 2 + 0.0052, 0.1288, 0.6983);\r\n  //     break;\r\n  //   case \"Bone2\":\r\n  //     // 0.1529365, 0.7249526\r\n  //     ctx.fillRect(-0.1529 / 2 - 0.00042, -0.725 / 2 + 0.0016, 0.1529, 0.725);\r\n  //     break;\r\n  //   case \"Skull1\":\r\n  //   default:\r\n  //     ctx.beginPath();\r\n  //     ctx.arc(0, 0, 0.24, 0, 2 * Math.PI);\r\n  //     ctx.fill();\r\n  //     break;\r\n  // }\r\n\r\n  const src = DangerZoneImageSrces[entity.prefab];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 130;\r\n    const h = img.height / 130;\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n\r\nconst PotionEffectImageSrces: Record<string, string> = {\r\n  Acid: require(\"@/assets/potion-effects/Acid.webp\"),\r\n  Berserker: require(\"@/assets/potion-effects/Berserker.webp\"),\r\n  Bounce: require(\"@/assets/potion-effects/Bounce.webp\"),\r\n  Charm: require(\"@/assets/potion-effects/Charm.webp\"),\r\n  Crop: require(\"@/assets/potion-effects/Crop.webp\"),\r\n  Explosion: require(\"@/assets/potion-effects/Explosion.webp\"),\r\n  Fire: require(\"@/assets/potion-effects/Fire.webp\"),\r\n  Fly: require(\"@/assets/potion-effects/Fly.webp\"),\r\n  Frost: require(\"@/assets/potion-effects/Frost.webp\"),\r\n  Growth: require(\"@/assets/potion-effects/Growth.webp\"),\r\n  Hallucinations: require(\"@/assets/potion-effects/Hallucinations.webp\"),\r\n  Healing: require(\"@/assets/potion-effects/Healing.webp\"),\r\n  Invisibility: require(\"@/assets/potion-effects/Invisibility.webp\"),\r\n  Libido: require(\"@/assets/potion-effects/Libido.webp\"),\r\n  Light: require(\"@/assets/potion-effects/Light.webp\"),\r\n  Lightning: require(\"@/assets/potion-effects/Lightning.webp\"),\r\n  Mana: require(\"@/assets/potion-effects/Mana.webp\"),\r\n  Necromancy: require(\"@/assets/potion-effects/Necromancy.webp\"),\r\n  Poison: require(\"@/assets/potion-effects/Poison.webp\"),\r\n  SharpVision: require(\"@/assets/potion-effects/SharpVision.webp\"),\r\n  Sleep: require(\"@/assets/potion-effects/Sleep.webp\"),\r\n  SlowDown: require(\"@/assets/potion-effects/SlowDown.webp\"),\r\n  StoneSkin: require(\"@/assets/potion-effects/StoneSkin.webp\"),\r\n};\r\n\r\nconst EffectSlotSrc = require(\"@/assets/EffectSlot.png\");\r\nfunction renderPotionEffectEntity(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: PotionEffectMapEntity\r\n) {\r\n  // Line from effect to origin\r\n  ctx.save();\r\n  var grad = ctx.createLinearGradient(entity.x, entity.y, 0, 0);\r\n  grad.addColorStop(0, \"#D2AA7B\");\r\n  grad.addColorStop(1, \"transparent\");\r\n  ctx.strokeStyle = grad;\r\n  ctx.lineWidth = 0.05;\r\n  ctx.beginPath();\r\n  ctx.moveTo(entity.x, entity.y);\r\n  ctx.lineTo(0, 0);\r\n  ctx.stroke();\r\n  ctx.restore();\r\n\r\n  // Effect artwork\r\n  ctx.save();\r\n\r\n  ctx.translate(entity.x, entity.y);\r\n\r\n  // ctx.beginPath();\r\n  // ctx.fillStyle = \"red\";\r\n  // ctx.arc(0, 0, POTION_RADIUS, 0, 2 * Math.PI);\r\n  // ctx.fill();\r\n\r\n  const container = makeImg(EffectSlotSrc);\r\n  const containerW = container.width / 100;\r\n  const containerH = container.height / 100;\r\n  ctx.save();\r\n  ctx.scale(1, -1);\r\n  ctx.translate(-containerW / 2, -containerH / 2 - 0.2);\r\n  ctx.drawImage(container, 0, 0, containerW, containerH);\r\n  ctx.restore();\r\n\r\n  const src = PotionEffectImageSrces[entity.effect];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 40;\r\n    const h = img.height / 40;\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n\r\nconst ExperienceBonusImagesSrc: Record<string, string> = {\r\n  Little: require(\"@/assets/experience-bonus/xp-small.png\"),\r\n  Medium: require(\"@/assets/experience-bonus/xp-medium.png\"),\r\n  Large: require(\"@/assets/experience-bonus/xp-large.png\"),\r\n};\r\n\r\nfunction renderExperienceBonusEntity(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: ExperienceBonusMapEntity\r\n) {\r\n  ctx.save();\r\n  ctx.translate(entity.x, entity.y);\r\n\r\n  const src = ExperienceBonusImagesSrc[entity.prefab];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 200;\r\n    const h = img.height / 200;\r\n    ctx.save();\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n    ctx.restore();\r\n  }\r\n\r\n  // ctx.beginPath();\r\n  // ctx.fillStyle = \"green\";\r\n  // ctx.arc(0, 0, 0.3, 0, 2 * Math.PI);\r\n  // ctx.fill();\r\n\r\n  ctx.restore();\r\n}\r\n\r\nconst VortexImagesSrc: Record<string, string> = {\r\n  Large: require(\"@/assets/vortexes/Vortex Large Idle.png\"),\r\n  Medium: require(\"@/assets/vortexes/Vortex Medium Idle.png\"),\r\n};\r\n\r\nfunction renderVortexEntity(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: VortexMapEntity\r\n) {\r\n  ctx.save();\r\n  ctx.translate(entity.x, entity.y);\r\n\r\n  // let radius = 0;\r\n  // switch (entity.prefab) {\r\n  //   case \"Large\":\r\n  //     radius = 1.65;\r\n  //     break;\r\n  //   case \"Medium\":\r\n  //     radius = 1.25;\r\n  //     break;\r\n  // }\r\n\r\n  // if (radius > 0) {\r\n  //   ctx.beginPath();\r\n  //   ctx.fillStyle = \"purple\";\r\n  //   ctx.arc(0, 0, radius, 0, 2 * Math.PI);\r\n  //   ctx.fill();\r\n  // }\r\n\r\n  // const backgroundSrc = VortexBackgroundImagesSrc[entity.prefab];\r\n  // if (backgroundSrc) {\r\n  //   const img = makeImg(backgroundSrc);\r\n  //   const w = img.width / 150;\r\n  //   const h = img.height / 150;\r\n  //   ctx.save();\r\n  //   ctx.scale(1, -1);\r\n  //   ctx.translate(-w / 2, -h / 2);\r\n  //   ctx.drawImage(img, 0, 0, w, h);\r\n  //   ctx.restore();\r\n  // }\r\n\r\n  const src = VortexImagesSrc[entity.prefab];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 100;\r\n    const h = img.height / 100;\r\n    ctx.save();\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n    ctx.restore();\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n","import PotionMap from \"./Map\";\r\nexport default PotionMap;\r\n","import React from \"react\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nexport interface OverlayProps {\r\n  position: \"top-left\" | \"top\" | \"top-right\";\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  position: \"absolute\",\r\n  \"&.top-left\": {\r\n    top: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n  },\r\n  \"&.top\": {\r\n    top: theme.spacing(2),\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  \"&.top-right\": {\r\n    top: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Overlay = ({ position, children }: OverlayProps) => {\r\n  return <Root className={position}>{children}</Root>;\r\n};\r\n\r\nexport default Overlay;\r\n","import { BehaviorSubject, combineLatest, map, Observable } from \"rxjs\";\r\n\r\nimport { Size, SizeZero } from \"@/size\";\r\nimport { vec2Add, vec2Subtract, Vec2Zero, Vector2 } from \"@/vector2\";\r\n\r\nimport { IPanZoomViewportViewModel } from \"./PanZoomViewportViewModel\";\r\n\r\nexport class CoordinateMappingViewportViewModel\r\n  implements IPanZoomViewportViewModel\r\n{\r\n  private readonly _viewportSize$ = new BehaviorSubject<Size>(SizeZero);\r\n\r\n  /**\r\n   * The offset of the map on the viewport, in map units, unscaled.\r\n   */\r\n  private readonly _viewOffset$ = new BehaviorSubject<Vector2>(Vec2Zero);\r\n  private readonly _viewScale$ = new BehaviorSubject<number>(1);\r\n\r\n  private readonly _mouseClientPosition$ = new BehaviorSubject<Vector2 | null>(\r\n    null\r\n  );\r\n  private readonly _mouseWorldPosition$: Observable<Vector2 | null>;\r\n\r\n  get viewportSize$(): Observable<Size> {\r\n    return this._viewportSize$;\r\n  }\r\n\r\n  get viewOffset$(): Observable<Vector2> {\r\n    return this._viewOffset$;\r\n  }\r\n  get viewScale$(): Observable<number> {\r\n    return this._viewScale$;\r\n  }\r\n\r\n  get mouseWorldPosition$(): Observable<Vector2 | null> {\r\n    return this._mouseWorldPosition$;\r\n  }\r\n\r\n  constructor(\r\n    private readonly _initialSize: Size,\r\n    private readonly _originOffset: Vector2,\r\n    private readonly _unitScale: Vector2\r\n  ) {\r\n    this._viewportSize$.next(_initialSize);\r\n    this._mouseWorldPosition$ = combineLatest([\r\n      this._mouseClientPosition$,\r\n      this._viewOffset$,\r\n      this._viewScale$,\r\n    ]).pipe(\r\n      map(([clientPos]) => (clientPos ? this.clientToWorld(clientPos) : null))\r\n    );\r\n  }\r\n\r\n  zoom(delta: number, on: Vector2 | null = null) {\r\n    const prevWorld = on ? this.clientToWorld(on) : Vec2Zero;\r\n    const pzoom = this._viewScale$.value;\r\n    const zoom = pzoom * delta;\r\n    this._viewScale$.next(zoom);\r\n    if (on) {\r\n      const world = this.clientToWorld(on);\r\n      const delta = vec2Subtract(world, prevWorld);\r\n      this._viewOffset$.next(vec2Add(this._viewOffset$.value, delta));\r\n    }\r\n  }\r\n\r\n  setZoom(zoom: number) {\r\n    const delta = zoom / this._viewScale$.value;\r\n    const { width, height } = this._viewportSize$.value;\r\n    this.zoom(delta, { x: width / 2, y: height / 2 });\r\n  }\r\n\r\n  pan(dx: number, dy: number, applyZoom = false) {\r\n    const z = applyZoom ? 1 / this._viewScale$.value : 1;\r\n    this._viewOffset$.next(\r\n      vec2Add(this._viewOffset$.value, { x: dx * z, y: dy * z })\r\n    );\r\n  }\r\n\r\n  onMouseMove(clientX: number, clientY: number): void {\r\n    this._mouseClientPosition$.next({ x: clientX, y: clientY });\r\n  }\r\n\r\n  onMouseOut() {\r\n    this._mouseClientPosition$.next(null);\r\n  }\r\n\r\n  onViewportResized(width: number, height: number): void {\r\n    let prevSize = this._viewportSize$.value;\r\n    if (prevSize.width === 0 || prevSize.height === 0) {\r\n      prevSize = this._initialSize;\r\n    }\r\n\r\n    this._viewportSize$.next({ width, height });\r\n\r\n    if (width === 0 || height === 0) {\r\n      return;\r\n    }\r\n\r\n    let scaleFactor = 1;\r\n    if (width < height) {\r\n      scaleFactor = width / prevSize.width;\r\n    } else {\r\n      scaleFactor = height / prevSize.height;\r\n    }\r\n\r\n    // TODO: Keep the view centered.\r\n    // const offset: Point = {\r\n    //   x: (prevSize.width - width) / 2 / this._viewScale$.value,\r\n    //   y: (prevSize.height - height) / 2 / this._viewScale$.value,\r\n    // };\r\n    this._viewScale$.next(this._viewScale$.value * scaleFactor);\r\n    // this._viewOffset$.next(pointAdd(this._viewOffset$.value, offset));\r\n  }\r\n\r\n  clientToWorld(p: Vector2): Vector2 {\r\n    const zoomFactor = this._viewScale$.value;\r\n    const { x: offsetX, y: offsetY } = this._viewOffset$.value;\r\n\r\n    // offset is in world coords.\r\n    // We need to add offsetY instead of subtract as y is flipped in world coords when compared to screen.\r\n    return {\r\n      x:\r\n        (p.x / zoomFactor - this._originOffset.x - offsetX) * this._unitScale.x,\r\n      y:\r\n        (p.y / zoomFactor - this._originOffset.y + offsetY) * this._unitScale.y,\r\n    };\r\n  }\r\n\r\n  worldToClient(p: Vector2): Vector2 {\r\n    const zoomFactor = this._viewScale$.value;\r\n    const { x: offsetX, y: offsetY } = this._viewOffset$.value;\r\n\r\n    // Why the hell is this opposite of crucible-web even with the same client to world coord function?\r\n    return {\r\n      x:\r\n        (this._unitScale.x / p.x + this._originOffset.x + offsetX) * zoomFactor,\r\n      y:\r\n        (this._unitScale.y / p.y + this._originOffset.y + offsetY) * zoomFactor,\r\n    };\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { getModifiers } from \"@/modifier-keys\";\r\nimport { Vector2, vec2Subtract, Vec2Zero } from \"@/vector2\";\r\n\r\nimport { useComponentBounds } from \"@/hooks/component-bounds\";\r\nimport { useNativeEvent } from \"@/hooks/native-event\";\r\n\r\nimport { IPanZoomViewportViewModel } from \"./PanZoomViewportViewModel\";\r\n\r\nexport interface PanZoomHandlerProps {\r\n  className?: string;\r\n  viewModel: IPanZoomViewportViewModel;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ZOOM_FACTOR = 1.15;\r\nexport const PAN_FACTOR = 0.15;\r\n\r\nconst Root = styled(\"div\")({\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n});\r\n\r\nconst PanZoomViewport = ({\r\n  className,\r\n  viewModel,\r\n  children,\r\n}: PanZoomHandlerProps) => {\r\n  const containerRef = React.useRef<HTMLDivElement | null>(null);\r\n  const containerBounds = useComponentBounds(containerRef);\r\n  const [dragPointer, setDragPointer] = React.useState<number | null>(null);\r\n  const [mouseLastPos, setMouseLastPos] = React.useState<Vector2>(Vec2Zero);\r\n\r\n  React.useLayoutEffect(() => {\r\n    viewModel.onViewportResized(containerBounds.width, containerBounds.height);\r\n  }, [containerBounds.width, containerBounds.height]);\r\n\r\n  const onWheel = React.useCallback((e: WheelEvent) => {\r\n    const target = containerRef.current;\r\n    if (!target || e.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const modifiers = getModifiers(e);\r\n\r\n    if (modifiers.ctrlMetaKey) {\r\n      viewModel.pan(0, e.deltaY * PAN_FACTOR, true);\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else if (modifiers.shiftKey) {\r\n      viewModel.pan(-e.deltaY * PAN_FACTOR, 0, true);\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else {\r\n      viewModel.zoom(e.deltaY < 0 ? ZOOM_FACTOR : 1 / ZOOM_FACTOR, {\r\n        x: e.clientX,\r\n        y: e.clientY,\r\n      });\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }, []);\r\n\r\n  const onPointerDown = React.useCallback(\r\n    (e: React.PointerEvent<HTMLDivElement>) => {\r\n      if (dragPointer != null) {\r\n        return;\r\n      }\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n      setDragPointer(e.pointerId);\r\n      e.currentTarget.setPointerCapture(e.pointerId);\r\n      setMouseLastPos({ x: e.clientX, y: e.clientY });\r\n    },\r\n    [dragPointer]\r\n  );\r\n\r\n  const onPointerMove = React.useCallback(\r\n    (e: React.PointerEvent<HTMLDivElement>) => {\r\n      if (dragPointer == null) {\r\n        return;\r\n      }\r\n      const p = { x: e.clientX, y: e.clientY };\r\n      const delta = vec2Subtract(p, mouseLastPos);\r\n      setMouseLastPos(p);\r\n      // FIXME: Panning is miscalculated.  Mouse drifts from grab position.\r\n      viewModel.pan(delta.x, -delta.y, true);\r\n    },\r\n    [mouseLastPos, viewModel]\r\n  );\r\n\r\n  const onPointerUp = React.useCallback(\r\n    (e: React.PointerEvent) => {\r\n      if (e.pointerId != dragPointer) {\r\n        return;\r\n      }\r\n      setDragPointer(null);\r\n      setMouseLastPos(Vec2Zero);\r\n      e.currentTarget.releasePointerCapture(e.pointerId);\r\n    },\r\n    [dragPointer]\r\n  );\r\n\r\n  const onMouseOut = React.useCallback(\r\n    () => viewModel.onMouseOut(),\r\n    [viewModel]\r\n  );\r\n\r\n  // React listens to the root listener for all events,\r\n  //  and chrome assumes the root event listener for mouse events\r\n  //  never wants to preventDefault.\r\n  // We need to take a local event listener and mark it as not passive.\r\n  // https://github.com/facebook/react/issues/14856\r\n  useNativeEvent(containerRef, \"wheel\", onWheel, { passive: false });\r\n\r\n  return (\r\n    <Root\r\n      className={className}\r\n      ref={containerRef}\r\n      onMouseMove={(e) => viewModel.onMouseMove(e.clientX, e.clientY)}\r\n      onPointerDown={onPointerDown}\r\n      onPointerMove={onPointerMove}\r\n      onPointerUp={onPointerUp}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      {children}\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PanZoomViewport;\r\n","import PanZoomViewport from \"./PanZoomViewport\";\r\nexport default PanZoomViewport;\r\n","import React from \"react\";\r\nimport { styled, Card, CardContent, Typography } from \"@mui/material\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { EmptyPlotResult } from \"@/services/plotter/types\";\r\n\r\nimport IncDecSlider from \"../IncDecSlider\";\r\nimport PointDetails from \"../PointDetails\";\r\nimport StepDetails from \"../StepDetails\";\r\nimport PlotDetails from \"../PlotDetails\";\r\nimport EntityDetails from \"../EntityDetails\";\r\nimport PotionMap from \"../Map\";\r\nimport PanZoomViewport from \"../PanZoomViewport\";\r\nimport Plot from \"../Plot\";\r\n\r\nimport FixedValue from \"../FixedValue\";\r\n\r\nimport PlotBuilderItemsList from \"./components/PlotBuilderItemsList\";\r\n\r\nimport { IPlotBuilderViewModel } from \"./PlotBuilderViewModel\";\r\nimport { PlotBuilderItem } from \"./builder\";\r\n\r\nexport interface PlotBuilderViewProps {\r\n  className?: string;\r\n  enableCheats?: boolean;\r\n  viewModel: IPlotBuilderViewModel;\r\n  mapOverlay?: React.ReactNode;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  \"& .map-view\": {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .pan-zoom-container\": {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .map\": {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .plot\": {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .inspect-stack\": {\r\n    position: \"absolute\",\r\n    top: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  \"& .inspect-stack > *\": {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  \"& .mouse-coords\": {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  \"& .plot-details\": {\r\n    position: \"absolute\",\r\n    top: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  \"& .zoom\": {\r\n    position: \"absolute\",\r\n    width: \"200px\",\r\n    bottom: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n  },\r\n  \"& .divider\": {\r\n    width: \"2px\",\r\n    height: \"100%\",\r\n    background: \"grey\",\r\n  },\r\n  \"& .plot-items\": {\r\n    width: \"400px\",\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nconst PlotBuilderView = ({\r\n  className,\r\n  viewModel,\r\n  mapOverlay,\r\n  enableCheats,\r\n}: PlotBuilderViewProps) => {\r\n  const map = useObservation(viewModel.map$);\r\n  const items = useObservation(viewModel.plotItems$);\r\n  const plot = useObservation(viewModel.plot$);\r\n\r\n  const mouseOverPlotPoint =\r\n    useObservation(viewModel.highlightPlotPoint$) ?? null;\r\n  const mouseOverPlotItem =\r\n    useObservation(viewModel.highlightPlotItem$) ?? null;\r\n  const mouseOverEntity = useObservation(viewModel.highlightEntity$) ?? null;\r\n  const mouseWorld = useObservation(viewModel.mouseWorldPosition$) ?? null;\r\n\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n\r\n  const highlightItem = useObservation(viewModel.highlightBuilderItem$) ?? null;\r\n\r\n  const onBuildItemMouseOver = React.useCallback(\r\n    (item: PlotBuilderItem) => {\r\n      viewModel.onMouseOverBuilderItem(item);\r\n    },\r\n    [viewModel]\r\n  );\r\n\r\n  const onBuildItemMouseOut = React.useCallback(() => {\r\n    viewModel.onMouseOverBuilderItem(null);\r\n  }, [viewModel]);\r\n\r\n  return (\r\n    <Root className={className}>\r\n      <div className=\"map-view\">\r\n        <PanZoomViewport className=\"pan-zoom-container\" viewModel={viewModel}>\r\n          {map && <PotionMap className=\"map\" map={map} viewModel={viewModel} />}\r\n          <Plot\r\n            className=\"plot\"\r\n            plot={plot ?? EmptyPlotResult}\r\n            viewModel={viewModel}\r\n          />\r\n        </PanZoomViewport>\r\n        <div className=\"inspect-stack\">\r\n          {mouseOverPlotPoint && <PointDetails point={mouseOverPlotPoint} />}\r\n          {mouseOverPlotItem && <StepDetails step={mouseOverPlotItem} />}\r\n          {!mouseOverPlotItem && mouseOverEntity && (\r\n            <EntityDetails entity={mouseOverEntity} />\r\n          )}\r\n        </div>\r\n        {plot && items && (\r\n          <PlotDetails className=\"plot-details\" items={items} plot={plot} />\r\n        )}\r\n        {mouseWorld && (\r\n          <Card className=\"mouse-coords\">\r\n            <CardContent>\r\n              <Typography variant=\"overline\">\r\n                <FixedValue value={mouseWorld.x} />,{\" \"}\r\n                <FixedValue value={mouseWorld.y} />\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n        <IncDecSlider\r\n          className=\"zoom\"\r\n          value={scale}\r\n          rate={14}\r\n          onChange={(value) => viewModel.setZoom(value)}\r\n        />\r\n        {mapOverlay}\r\n      </div>\r\n      <div className=\"divider\" />\r\n      <PlotBuilderItemsList\r\n        className=\"plot-items\"\r\n        items$={viewModel.plotBuilderItems$}\r\n        highlightItem={highlightItem}\r\n        enableCheats={enableCheats}\r\n        onMoveItem={(item, index) => viewModel.movePlotBuilderItem(item, index)}\r\n        onDuplicateItem={(item) => viewModel.duplicatePlotBuilderItem(item)}\r\n        onAddNewItem={(itemType) => viewModel.addPlotBuilderItem(itemType)}\r\n        onMouseOver={onBuildItemMouseOver}\r\n        onMouseOut={onBuildItemMouseOut}\r\n      />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PlotBuilderView;\r\n","import { BehaviorSubject, map, Observable, combineLatest } from \"rxjs\";\r\nimport { inject } from \"microinject\";\r\nimport { first } from \"lodash\";\r\n\r\nimport { vec2Distance, Vector2 } from \"@/vector2\";\r\nimport { Size } from \"@/size\";\r\nimport { isNotNull } from \"@/utils\";\r\n\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\n\r\nimport { PlotItem, PlotPoint, PlotResult } from \"@/services/plotter/types\";\r\nimport { MapEntity } from \"@/services/potion-maps/types\";\r\nimport { PotionMap } from \"@/services/potion-maps/PotionMap\";\r\nimport { Plotter } from \"@/services/plotter/Plotter\";\r\n\r\nimport { IPlotViewModel } from \"@/components/Plot/PlotViewModel\";\r\n\r\nimport { IPanZoomViewportViewModel } from \"@/components/PanZoomViewport/PanZoomViewportViewModel\";\r\nimport { CoordinateMappingViewportViewModel } from \"@/components/PanZoomViewport/CoordinateMappingViewportViewModel\";\r\n\r\nimport { PlotBuilderItem, PlotBuilderItemCollection } from \"./builder\";\r\n\r\nexport interface IPlotBuilderViewModel\r\n  extends IPanZoomViewportViewModel,\r\n    IPlotViewModel {\r\n  get map$(): Observable<PotionMap | null>;\r\n\r\n  get plotBuilderItems$(): Observable<readonly PlotBuilderItem[]>;\r\n  get plotItems$(): Observable<readonly PlotItem[]>;\r\n\r\n  get plot$(): Observable<Readonly<PlotResult> | null>;\r\n\r\n  get mouseWorldPosition$(): Observable<Vector2 | null>;\r\n\r\n  get highlightBuilderItem$(): Observable<PlotBuilderItem | null>;\r\n  get highlightEntity$(): Observable<MapEntity | null>;\r\n\r\n  setZoom(zoom: number): void;\r\n\r\n  movePlotBuilderItem(item: PlotBuilderItem, newIndex: number): void;\r\n  duplicatePlotBuilderItem(item: PlotBuilderItem): void;\r\n  addPlotBuilderItem(itemType: PlotItem[\"type\"]): void;\r\n\r\n  onMouseOverPlotItem(item: PlotItem | null): void;\r\n  onMouseOverBuilderItem(item: PlotBuilderItem | null): void;\r\n}\r\n\r\nexport class PlotBuilderViewModel\r\n  implements IPlotBuilderViewModel, IPlotViewModel, IPanZoomViewportViewModel\r\n{\r\n  private readonly _viewportViewModel: CoordinateMappingViewportViewModel;\r\n\r\n  private readonly _mouseOverPlotItem$ = new BehaviorSubject<PlotItem | null>(\r\n    null\r\n  );\r\n  private readonly _mouseOverBuilderItem$ =\r\n    new BehaviorSubject<PlotBuilderItem | null>(null);\r\n  private readonly _mouseOverEntity$: Observable<MapEntity | null>;\r\n\r\n  private readonly _mouseOverPlotPoint$: Observable<PlotPoint | null>;\r\n\r\n  private readonly _plotBuilderItems: PlotBuilderItemCollection;\r\n\r\n  private readonly _map$ = new BehaviorSubject<PotionMap | null>(null);\r\n  private readonly _plot$: Observable<Readonly<PlotResult> | null>;\r\n\r\n  constructor(@inject(Plotter) plotter: Plotter) {\r\n    this._viewportViewModel = new CoordinateMappingViewportViewModel(\r\n      { width: MAP_EXTENT_RADIUS * 2, height: MAP_EXTENT_RADIUS * 2 },\r\n      { x: MAP_EXTENT_RADIUS, y: MAP_EXTENT_RADIUS },\r\n      { x: 1, y: -1 }\r\n    );\r\n\r\n    this._plotBuilderItems = new PlotBuilderItemCollection();\r\n\r\n    this._plot$ = combineLatest([\r\n      this._map$,\r\n      this._plotBuilderItems.plotItems$,\r\n    ]).pipe(\r\n      map(([map, plotItems]) => {\r\n        if (map == null) {\r\n          return null;\r\n        }\r\n        return plotter.plotItems(plotItems.filter(isNotNull), map);\r\n      })\r\n    );\r\n\r\n    this._mouseOverEntity$ = combineLatest([\r\n      this._viewportViewModel.mouseWorldPosition$,\r\n      this._map$,\r\n    ]).pipe(\r\n      map(([worldPos, map]) => {\r\n        if (!worldPos || !map) {\r\n          return null;\r\n        }\r\n\r\n        const entities = map.hitTest(worldPos) ?? [];\r\n        const entity = first(entities);\r\n        return entity ?? null;\r\n      })\r\n    );\r\n\r\n    this._mouseOverPlotPoint$ = combineLatest([\r\n      this._viewportViewModel.mouseWorldPosition$,\r\n      this._mouseOverPlotItem$,\r\n      this._plot$,\r\n    ]).pipe(\r\n      map(([worldPos, plotItem, plot]) => {\r\n        if (!worldPos || !plotItem || !plot) {\r\n          return null;\r\n        }\r\n\r\n        const plotPoints = plot.committedPoints.concat(plot.pendingPoints);\r\n        const plotItemPoints = plotPoints.filter((x) => x.source === plotItem);\r\n\r\n        let closestPlotItem = first(plotItemPoints);\r\n        if (!closestPlotItem) {\r\n          return null;\r\n        }\r\n\r\n        for (let i = 1; i < plotItemPoints.length; i++) {\r\n          const point = plotItemPoints[i];\r\n          if (\r\n            vec2Distance(worldPos, point) <\r\n            vec2Distance(worldPos, closestPlotItem)\r\n          ) {\r\n            closestPlotItem = point;\r\n          }\r\n        }\r\n\r\n        return closestPlotItem;\r\n      })\r\n    );\r\n  }\r\n\r\n  get viewportSize$(): Observable<Size> {\r\n    return this._viewportViewModel.viewportSize$;\r\n  }\r\n\r\n  get viewOffset$(): Observable<Vector2> {\r\n    return this._viewportViewModel.viewOffset$;\r\n  }\r\n\r\n  get viewScale$(): Observable<number> {\r\n    return this._viewportViewModel.viewScale$;\r\n  }\r\n\r\n  get mouseWorldPosition$(): Observable<Vector2 | null> {\r\n    return this._viewportViewModel.mouseWorldPosition$;\r\n  }\r\n\r\n  get map$(): Observable<PotionMap | null> {\r\n    return this._map$;\r\n  }\r\n\r\n  get plotBuilderItems$(): Observable<readonly PlotBuilderItem[]> {\r\n    return this._plotBuilderItems.plotBuilderItems$;\r\n  }\r\n\r\n  get plotItems$(): Observable<readonly PlotItem[]> {\r\n    return this._plotBuilderItems.plotItems$;\r\n  }\r\n\r\n  get plot$(): Observable<Readonly<PlotResult> | null> {\r\n    return this._plot$;\r\n  }\r\n\r\n  get highlightBuilderItem$(): Observable<PlotBuilderItem | null> {\r\n    return this._mouseOverBuilderItem$;\r\n  }\r\n\r\n  get highlightEntity$(): Observable<MapEntity | null> {\r\n    return this._mouseOverEntity$;\r\n  }\r\n\r\n  get highlightPlotItem$(): Observable<PlotItem | null> {\r\n    return this._mouseOverPlotItem$;\r\n  }\r\n\r\n  get highlightPlotPoint$(): Observable<PlotPoint | null> {\r\n    return this._mouseOverPlotPoint$;\r\n  }\r\n\r\n  setMap(map: PotionMap) {\r\n    this._map$.next(map);\r\n  }\r\n\r\n  zoom(delta: number, on: Vector2 | null | undefined): void {\r\n    this._viewportViewModel.zoom(delta, on);\r\n  }\r\n\r\n  setZoom(scale: number): void {\r\n    this._viewportViewModel.setZoom(scale);\r\n  }\r\n\r\n  pan(dx: number, dy: number, applyZoom?: boolean | undefined): void {\r\n    this._viewportViewModel.pan(dx, dy, applyZoom);\r\n  }\r\n\r\n  clear() {\r\n    this._plotBuilderItems.clear();\r\n  }\r\n\r\n  loadPlotItems(items: PlotItem[]) {\r\n    this._plotBuilderItems.addPlotItems(items);\r\n  }\r\n\r\n  movePlotBuilderItem(item: PlotBuilderItem, newIndex: number): void {\r\n    this._plotBuilderItems.moveItem(item, newIndex);\r\n  }\r\n\r\n  duplicatePlotBuilderItem(item: PlotBuilderItem): void {\r\n    if (item.plotItem) {\r\n      this._plotBuilderItems.addPlotItem(item.plotItem);\r\n    }\r\n  }\r\n\r\n  addPlotBuilderItem(itemType: PlotItem[\"type\"]): void {\r\n    this._plotBuilderItems.addPlotItem(itemType);\r\n  }\r\n\r\n  onViewportResized(width: number, height: number): void {\r\n    this._viewportViewModel.onViewportResized(width, height);\r\n  }\r\n\r\n  onMouseMove(clientX: number, clientY: number): void {\r\n    this._viewportViewModel.onMouseMove(clientX, clientY);\r\n  }\r\n\r\n  onMouseOut(): void {\r\n    this._viewportViewModel.onMouseOut();\r\n    this._mouseOverPlotItem$.next(null);\r\n  }\r\n\r\n  onMouseOverPlotItem(item: PlotItem | null): void {\r\n    this._mouseOverPlotItem$.next(item);\r\n    this._mouseOverBuilderItem$.next(\r\n      item ? this._plotBuilderItems.builderItemFor(item) : null\r\n    );\r\n  }\r\n\r\n  onMouseOverBuilderItem(item: PlotBuilderItem | null): void {\r\n    this._mouseOverBuilderItem$.next(item);\r\n    this._mouseOverPlotItem$.next(item ? item.plotItem : null);\r\n  }\r\n}\r\n","import { Observable, BehaviorSubject, combineLatest } from \"rxjs\";\r\n\r\nimport {\r\n  DefaultPlotItemByType,\r\n  PlotItem,\r\n  PlotItemKeysByType,\r\n  PlotItemValidatorByType,\r\n} from \"@/services/plotter/types\";\r\n\r\nexport interface PlotBuilderItemBase {\r\n  readonly type: PlotItem[\"type\"];\r\n\r\n  readonly isValid$: Observable<boolean>;\r\n  readonly isValid: boolean;\r\n\r\n  readonly plotItem$: Observable<PlotItem | null>;\r\n  readonly plotItem: PlotItem | null;\r\n\r\n  delete(): void;\r\n}\r\n\r\ntype PlotBuilderItemObservables<TPlotItem extends PlotItem> = {\r\n  [K in keyof Omit<TPlotItem, \"type\"> as `${string & K}$`]: Observable<\r\n    TPlotItem[K] | null\r\n  >;\r\n};\r\ntype PlotBuilderItemSetters<TPlotItem extends PlotItem> = {\r\n  [K in keyof Omit<TPlotItem, \"type\"> as `set${Capitalize<string & K>}`]: (\r\n    value: TPlotItem[K] | null\r\n  ) => void;\r\n};\r\n\r\nexport type PlotBuilderItem<TPlotItem extends PlotItem = PlotItem> = {\r\n  type: TPlotItem[\"type\"];\r\n} & PlotBuilderItemBase &\r\n  PlotBuilderItemObservables<TPlotItem> &\r\n  PlotBuilderItemSetters<TPlotItem>;\r\n\r\nexport function createPlotBuilderItem<T extends PlotItem>(\r\n  type: T[\"type\"],\r\n  deleter: (item: PlotBuilderItem) => void\r\n): PlotBuilderItem<T> {\r\n  const keys = PlotItemKeysByType[type];\r\n  const itemPropObservables: Record<string, BehaviorSubject<any>> = {};\r\n\r\n  const builderItem = {} as any;\r\n  for (const key of keys) {\r\n    itemPropObservables[key] = new BehaviorSubject<any>(\r\n      (DefaultPlotItemByType[type] as any)[key]\r\n    );\r\n    builderItem[`set${key[0].toUpperCase() + key.substring(1)}`] = (\r\n      value: any\r\n    ) => itemPropObservables[key].next(value);\r\n\r\n    builderItem[`${key}$`] = itemPropObservables[key];\r\n  }\r\n\r\n  const plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n  const isValid$ = new BehaviorSubject<boolean>(false);\r\n  combineLatest(keys.map((key) => itemPropObservables[key])).subscribe(\r\n    (values) => {\r\n      const item = { type } as any;\r\n      for (let i = 0; i < keys.length; i++) {\r\n        if (values[i] === null) {\r\n          isValid$.next(false);\r\n          plotItem$.next(null);\r\n          return;\r\n        }\r\n        item[keys[i]] = values[i];\r\n      }\r\n      if (!PlotItemValidatorByType[type](item)) {\r\n        plotItem$.next(null);\r\n        isValid$.next(false);\r\n      } else {\r\n        plotItem$.next(item);\r\n        isValid$.next(true);\r\n      }\r\n    }\r\n  );\r\n\r\n  Object.defineProperty(builderItem, \"type\", {\r\n    configurable: false,\r\n    enumerable: true,\r\n    writable: false,\r\n    value: type,\r\n  });\r\n\r\n  Object.defineProperty(builderItem, \"isValid\", {\r\n    configurable: false,\r\n    enumerable: true,\r\n    get: () => isValid$.value,\r\n  });\r\n  builderItem[\"isValid$\"] = isValid$;\r\n\r\n  builderItem.plotItem$ = plotItem$;\r\n  Object.defineProperty(builderItem, \"plotItem\", {\r\n    enumerable: true,\r\n    configurable: false,\r\n    get: () => plotItem$.value,\r\n  });\r\n\r\n  builderItem.delete = () => deleter(builderItem);\r\n\r\n  return builderItem;\r\n}\r\n","import { BehaviorSubject, Observable, debounceTime, map } from \"rxjs\";\r\n\r\nimport { isNotNull } from \"@/utils\";\r\nimport { observeAll } from \"@/observables\";\r\n\r\nimport {\r\n  AddIngredientPlotItem,\r\n  HeatVortexPlotItem,\r\n  PlotItem,\r\n  PourSolventPlotItem,\r\n  SetPositionPlotItem,\r\n  StirCauldronPlotItem,\r\n  AddVoidSaltPlotItem,\r\n} from \"@/services/plotter/types\";\r\n\r\nimport { createPlotBuilderItem, PlotBuilderItem } from \"./PlotBuilderItem\";\r\n\r\nexport interface IPlotBuilderItemCollection {\r\n  readonly items$: Observable<readonly PlotBuilderItem[]>;\r\n\r\n  builderItemFor(item: PlotItem): PlotBuilderItem | null;\r\n\r\n  moveItem(item: PlotBuilderItem, index: number): void;\r\n\r\n  addPlotItems(items: readonly PlotItem[]): void;\r\n  addPlotItem(item: PlotItem): void;\r\n  addPlotItem(itemType: PlotItem[\"type\"]): void;\r\n}\r\n\r\nexport class PlotBuilderItemCollection extends Observable<\r\n  readonly PlotBuilderItem[]\r\n> {\r\n  private readonly _items$ = new BehaviorSubject<readonly PlotBuilderItem[]>(\r\n    []\r\n  );\r\n\r\n  private readonly _plotItems$ = new BehaviorSubject<readonly PlotItem[]>([]);\r\n\r\n  constructor() {\r\n    super((observer) => this._items$.subscribe(observer));\r\n\r\n    this.plotBuilderItems$\r\n      .pipe(map((item) => item.map((x) => x.plotItem$)))\r\n      .pipe(observeAll())\r\n      // Add a small debounce so we dont re-plot rapidly while loading items or making changes.\r\n      .pipe(debounceTime(10))\r\n      .subscribe((items) => {\r\n        this._plotItems$.next(items.filter(isNotNull));\r\n      });\r\n  }\r\n\r\n  get plotBuilderItems$(): Observable<readonly PlotBuilderItem[]> {\r\n    return this._items$;\r\n  }\r\n\r\n  get plotItems$(): Observable<readonly PlotItem[]> {\r\n    return this._plotItems$;\r\n  }\r\n\r\n  clear(): void {\r\n    this._items$.next([]);\r\n  }\r\n\r\n  addPlotItems(items: readonly PlotItem[]) {\r\n    for (const item of items) {\r\n      this.addPlotItem(item);\r\n    }\r\n  }\r\n\r\n  addPlotItem(plotItem: PlotItem): void;\r\n  addPlotItem(itemType: PlotItem[\"type\"]): void;\r\n  addPlotItem(item: PlotItem | PlotItem[\"type\"]) {\r\n    const itemType = typeof item === \"string\" ? item : item.type;\r\n    const itemBase = typeof item === \"string\" ? undefined : item;\r\n    switch (itemType) {\r\n      case \"set-position\":\r\n        this._addSetPosition(itemBase as any);\r\n        break;\r\n      case \"add-ingredient\":\r\n        this._addIngredient(itemBase as any);\r\n        break;\r\n      case \"stir-cauldron\":\r\n        this._addStirCauldron(itemBase as any);\r\n        break;\r\n      case \"pour-solvent\":\r\n        this._addPourSolvent(itemBase as any);\r\n        break;\r\n      case \"heat-vortex\":\r\n        this._addHeatVortex(itemBase as any);\r\n        break;\r\n      case \"void-salt\":\r\n        this._addVoidSalt(itemBase as any);\r\n        break;\r\n      default:\r\n        throw new Error(`Unknown plot item type: ${itemType}`);\r\n    }\r\n  }\r\n\r\n  moveItem(item: PlotBuilderItem, index: number) {\r\n    if (index < 0 || index > this._items$.value.length) {\r\n      return;\r\n    }\r\n\r\n    const sourceIndex = this._items$.value.indexOf(item);\r\n    if (sourceIndex === -1) {\r\n      return;\r\n    }\r\n\r\n    const items = [...this._items$.value];\r\n    items.splice(sourceIndex, 1);\r\n    if (sourceIndex < index) {\r\n      index--;\r\n    }\r\n    items.splice(index, 0, item);\r\n    this._items$.next(items);\r\n  }\r\n\r\n  builderItemFor(item: PlotItem): PlotBuilderItem | null {\r\n    const result = this._items$.value.find((x) => x.plotItem === item) || null;\r\n    return result;\r\n  }\r\n\r\n  private _addSetPosition(\r\n    plotItem?: SetPositionPlotItem\r\n  ): PlotBuilderItem<SetPositionPlotItem> {\r\n    const item = createPlotBuilderItem<SetPositionPlotItem>(\r\n      \"set-position\",\r\n      (item) => this._deleteItem(item)\r\n    );\r\n    if (plotItem) {\r\n      item.setX(plotItem.x);\r\n      item.setY(plotItem.y);\r\n    }\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  private _addIngredient(\r\n    plotItem?: AddIngredientPlotItem\r\n  ): PlotBuilderItem<AddIngredientPlotItem> {\r\n    const item = createPlotBuilderItem<AddIngredientPlotItem>(\r\n      \"add-ingredient\",\r\n      (item) => this._deleteItem(item)\r\n    );\r\n    if (plotItem) {\r\n      item.setIngredientId(plotItem.ingredientId);\r\n      item.setGrindPercent(plotItem.grindPercent);\r\n    }\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  private _addStirCauldron(\r\n    plotItem?: StirCauldronPlotItem\r\n  ): PlotBuilderItem<StirCauldronPlotItem> {\r\n    const item = createPlotBuilderItem<StirCauldronPlotItem>(\r\n      \"stir-cauldron\",\r\n      (item) => this._deleteItem(item)\r\n    );\r\n    if (plotItem) {\r\n      item.setDistance(plotItem.distance);\r\n    }\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  private _addPourSolvent(\r\n    plotItem?: PourSolventPlotItem\r\n  ): PlotBuilderItem<PourSolventPlotItem> {\r\n    const item = createPlotBuilderItem<PourSolventPlotItem>(\r\n      \"pour-solvent\",\r\n      (item) => this._deleteItem(item)\r\n    );\r\n    if (plotItem) {\r\n      item.setDistance(plotItem.distance);\r\n    }\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  private _addHeatVortex(\r\n    plotItem?: HeatVortexPlotItem\r\n  ): PlotBuilderItem<HeatVortexPlotItem> {\r\n    const item = createPlotBuilderItem<HeatVortexPlotItem>(\r\n      \"heat-vortex\",\r\n      (item) => this._deleteItem(item)\r\n    );\r\n    if (plotItem) {\r\n      item.setDistance(plotItem.distance);\r\n    }\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  private _addVoidSalt(\r\n    plotItem?: AddVoidSaltPlotItem\r\n  ): PlotBuilderItem<AddVoidSaltPlotItem> {\r\n    const item = createPlotBuilderItem<AddVoidSaltPlotItem>(\r\n      \"void-salt\",\r\n      (item) => this._deleteItem(item)\r\n    );\r\n    if (plotItem) {\r\n      item.setGrains(plotItem.grains);\r\n    }\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  private _deleteItem(item: PlotBuilderItem) {\r\n    this._items$.next(this._items$.value.filter((x) => x !== item));\r\n  }\r\n}\r\n","export { PlotBuilderItem } from \"./PlotBuilderItem\";\r\nexport { PlotBuilderItemCollection } from \"./PlotBuilderItemCollection\";\r\n","import React from \"react\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { styled, Button } from \"@mui/material\";\r\nimport { DragHandle } from \"@mui/icons-material\";\r\nimport { Add as AddIcon } from \"@mui/icons-material\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { PlotBuilderItem } from \"@/components/PlotBuilderView/builder\";\r\n\r\nimport { PlotItem } from \"@/services/plotter/types\";\r\n\r\nimport DragReorderable from \"../../../DragReorderable\";\r\n\r\nimport PlotListItem from \"./components/PlotListItem\";\r\n\r\nexport interface PlotBuilderItemsListProps {\r\n  className?: string;\r\n  items$: Observable<readonly PlotBuilderItem[]>;\r\n  highlightItem?: PlotBuilderItem | null;\r\n  enableCheats?: boolean;\r\n  onMoveItem(item: PlotBuilderItem, index: number): void;\r\n  onDuplicateItem(item: PlotBuilderItem): void;\r\n  onAddNewItem(itemType: PlotItem[\"type\"]): void;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  overflow: \"auto\",\r\n  boxSixing: \"border-box\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  \"& .list\": {\r\n    listStyle: \"none\",\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  \"& .list-item-container\": {\r\n    position: \"relative\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  \"& .list-item-drag-handle\": {\r\n    position: \"absolute\",\r\n    top: theme.spacing(1),\r\n    left: theme.spacing(1),\r\n  },\r\n  \"& .drop-indicator\": {\r\n    width: \"100%\",\r\n    height: 0,\r\n    borderBottom: \"4px solid black\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  \"& .buttons\": {\r\n    alignSelf: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst PlotBuilderItemsList = ({\r\n  className,\r\n  items$,\r\n  highlightItem,\r\n  enableCheats,\r\n  onMoveItem,\r\n  onDuplicateItem,\r\n  onAddNewItem,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotBuilderItemsListProps) => {\r\n  const items = useObservation(items$) ?? [];\r\n  return (\r\n    <Root className={className}>\r\n      <ul className=\"list\">\r\n        <DragReorderable\r\n          values={items}\r\n          primaryAxis=\"top-to-bottom\"\r\n          dropIndicator={<div className=\"drop-indicator\" />}\r\n          onReorder={(_, p) => {\r\n            onMoveItem(items[p.fromIndex], p.toIndex);\r\n          }}\r\n        >\r\n          {(value, params, getRootProps, getDragHandleProps) => (\r\n            <div {...getRootProps()} className=\"list-item-container\">\r\n              <PlotListItem\r\n                item={value}\r\n                index={items.indexOf(value)}\r\n                highlight={value === highlightItem}\r\n                onDuplicate={onDuplicateItem}\r\n                onMouseOver={onMouseOver}\r\n                onMouseOut={onMouseOut}\r\n              />\r\n              <div className=\"list-item-drag-handle\" {...getDragHandleProps()}>\r\n                <DragHandle />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </DragReorderable>\r\n      </ul>\r\n      <div className=\"buttons\">\r\n        <Button color=\"primary\" onClick={() => onAddNewItem(\"add-ingredient\")}>\r\n          <AddIcon /> Add Ingredient\r\n        </Button>\r\n        <Button color=\"primary\" onClick={() => onAddNewItem(\"stir-cauldron\")}>\r\n          <AddIcon /> Stir Cauldron\r\n        </Button>\r\n        <Button color=\"primary\" onClick={() => onAddNewItem(\"pour-solvent\")}>\r\n          <AddIcon /> Pour Solvent\r\n        </Button>\r\n        <Button color=\"primary\" onClick={() => onAddNewItem(\"heat-vortex\")}>\r\n          <AddIcon /> Heat Vortex\r\n        </Button>\r\n        <Button color=\"primary\" onClick={() => onAddNewItem(\"void-salt\")}>\r\n          <AddIcon /> Add Void Salt\r\n        </Button>\r\n        {enableCheats && (\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={() => onAddNewItem(\"set-position\")}\r\n          >\r\n            <AddIcon /> Add Teleport\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PlotBuilderItemsList;\r\n","import React from \"react\";\r\nimport { Grid, Slider, TextField, Typography } from \"@mui/material\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { IngredientId } from \"@/services/ingredients/types\";\r\nimport { AddIngredientPlotItem } from \"@/services/plotter/types\";\r\n\r\nimport { PlotBuilderItem } from \"@/components/PlotBuilderView/builder\";\r\nimport IngredientSelector from \"@/components/IngredientSelector\";\r\n\r\nexport interface AddIngredientPlotListItemProps {\r\n  item: PlotBuilderItem<AddIngredientPlotItem>;\r\n}\r\nconst AddIngredientPlotListItem = ({\r\n  item,\r\n}: AddIngredientPlotListItemProps) => {\r\n  const savedIngredientRef = React.useRef<IngredientId | null>(null);\r\n\r\n  // Need both state (for rerender on change) and ref (to check it in a callback)\r\n  const [isPreviewing, setIsPreviewing] = React.useState<boolean>(false);\r\n  const isPreviewingRef = React.useRef(false);\r\n\r\n  // Note: This is from when a transition was used to show the preview, we wanted\r\n  // the slider to update live while the preview was not.  However, we no longer use\r\n  // transitions as the system is now fast enough to deal without it.\r\n  const [localGrind, setLocalGrind] = React.useState<number | null>(null);\r\n\r\n  const [inputGrindPercent, setInputGrindPercent] = React.useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const ingredientId = useObservation(item.ingredientId$) ?? null;\r\n  const grindPercent = useObservation(item.grindPercent$) ?? 0;\r\n\r\n  const onIngredientSelectorOpen = React.useCallback(() => {\r\n    savedIngredientRef.current = ingredientId;\r\n    setIsPreviewing(true);\r\n    isPreviewingRef.current = true;\r\n  }, [ingredientId]);\r\n\r\n  const onIngredientSelectorMouseOverItem = React.useCallback(\r\n    (value: IngredientId) => {\r\n      if (!isPreviewing) {\r\n        return;\r\n      }\r\n      item.setIngredientId(value);\r\n    },\r\n    [item, isPreviewing]\r\n  );\r\n\r\n  const onIngredientSelectorChange = React.useCallback(\r\n    (value: IngredientId | null) => {\r\n      setIsPreviewing(false);\r\n      isPreviewingRef.current = false;\r\n      item.setIngredientId(value);\r\n    },\r\n    [item]\r\n  );\r\n\r\n  const onIngredientSelectorClose = React.useCallback(() => {\r\n    if (isPreviewingRef.current) {\r\n      item.setIngredientId(savedIngredientRef.current);\r\n      setIsPreviewing(false);\r\n      isPreviewingRef.current = false;\r\n    }\r\n    savedIngredientRef.current = null;\r\n  }, [item]);\r\n\r\n  const onGrindPercentTextChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let asNumber: number | null = Number(e.target.value) / 100;\r\n      if (isNaN(asNumber) || asNumber < 0 || asNumber > 1) {\r\n        asNumber = null;\r\n      }\r\n\r\n      setInputGrindPercent(e.target.value);\r\n      item.setGrindPercent(asNumber ?? 0);\r\n    },\r\n    [item]\r\n  );\r\n\r\n  const onGrindPercentBlur = React.useCallback(() => {\r\n    setInputGrindPercent(null);\r\n  }, []);\r\n\r\n  const onSliderChange = React.useCallback(\r\n    (_: any, value: number | number[]) => {\r\n      item.setGrindPercent(value as number);\r\n      setLocalGrind(value as number);\r\n    },\r\n    [item]\r\n  );\r\n\r\n  const onSliderChangeCommitted = React.useCallback(\r\n    (_: any, value: number | number[]) => {\r\n      item.setGrindPercent(value as number);\r\n      setLocalGrind(null);\r\n    },\r\n    [item]\r\n  );\r\n\r\n  // We change the ingredientId during mouse over for live feedback, but this changes the ingredient id we wish to display.\r\n  // We need to pin the previously selected id so that IngredientSelector works properly during the selection process.\r\n  const displayIngredientId = isPreviewing\r\n    ? savedIngredientRef.current\r\n    : ingredientId;\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Typography variant=\"overline\">Ingredient</Typography>\r\n      </div>\r\n      <IngredientSelector\r\n        fullWidth\r\n        value={displayIngredientId}\r\n        allowEmpty={displayIngredientId == null}\r\n        // Store the last ingredient when we open, so we can return to it after closing without making a selection.\r\n        onOpen={onIngredientSelectorOpen}\r\n        // Change the ingredient id with the mouse for a live preview.\r\n        onMouseOverItem={onIngredientSelectorMouseOverItem}\r\n        // Change our saved ingredient when the input is committed.  We will restore it when the input closes after the change.\r\n        onChange={onIngredientSelectorChange}\r\n        onClose={onIngredientSelectorClose}\r\n      />\r\n      <Grid paddingTop={1}>\r\n        <TextField\r\n          label=\"Grind Percent\"\r\n          value={inputGrindPercent ?? grindPercent * 100}\r\n          onChange={onGrindPercentTextChange}\r\n          onBlur={onGrindPercentBlur}\r\n        />\r\n        <Slider\r\n          value={localGrind ?? grindPercent}\r\n          onChange={onSliderChange}\r\n          onChangeCommitted={onSliderChangeCommitted}\r\n          min={0}\r\n          max={1}\r\n          step={0.001}\r\n        />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddIngredientPlotListItem;\r\n","import React from \"react\";\r\nimport { TextField, Typography } from \"@mui/material\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { AddVoidSaltPlotItem } from \"@/services/plotter/types\";\r\n\r\nimport IncDecSlider from \"@/components/IncDecSlider\";\r\nimport { PlotBuilderItem } from \"@/components/PlotBuilderView/builder\";\r\n\r\nexport interface AddVoidSaltPlotListItemProps {\r\n  item: PlotBuilderItem<AddVoidSaltPlotItem>;\r\n}\r\nconst AddVoidSaltPlotListItem = ({ item }: AddVoidSaltPlotListItemProps) => {\r\n  const grains = useObservation(item.grains$);\r\n  const [inputGrains, setInputGrains] = React.useState<string | null>(null);\r\n  const [sliderGrains, setSliderGrains] = React.useState<number | null>(null);\r\n  const onTextFieldChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let asNumber: number | null = Number(e.target.value);\r\n      if (isNaN(asNumber)) {\r\n        asNumber = null;\r\n      }\r\n\r\n      setInputGrains(e.target.value);\r\n      item.setGrains(asNumber);\r\n    },\r\n    [item]\r\n  );\r\n  const onTextFieldBlur = React.useCallback(() => {\r\n    setInputGrains(null);\r\n  }, []);\r\n  const onGrainsChange = React.useCallback(\r\n    (value: number) => {\r\n      // Because grains can only be whole numbers, we track the slider value seperately so decimalled values can still increase and decrease\r\n      // appropriately with the rate, making the whole length of the slider useful.\r\n      setSliderGrains(Math.max(0, value));\r\n      item.setGrains(Math.max(0, Math.round(value)));\r\n    },\r\n    [item]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Typography variant=\"overline\">Add Void Salt</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"Grains\"\r\n        value={inputGrains ?? grains ?? \"\"}\r\n        onChange={onTextFieldChange}\r\n        onBlur={onTextFieldBlur}\r\n      />\r\n      <IncDecSlider\r\n        value={sliderGrains ?? grains ?? 0}\r\n        rate={200}\r\n        onChange={onGrainsChange}\r\n        onChangeCommitted={() => setSliderGrains(null)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddVoidSaltPlotListItem;\r\n","import React from \"react\";\r\nimport { TextField, Typography } from \"@mui/material\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { HeatVortexPlotItem } from \"@/services/plotter/types\";\r\n\r\nimport IncDecSlider from \"@/components/IncDecSlider\";\r\nimport { PlotBuilderItem } from \"@/components/PlotBuilderView/builder\";\r\n\r\nexport interface HeatVortexPlotListItemProps {\r\n  item: PlotBuilderItem<HeatVortexPlotItem>;\r\n}\r\nconst HeatVortexPlotListItem = ({ item }: HeatVortexPlotListItemProps) => {\r\n  const distance = useObservation(item.distance$);\r\n  const [inputDistance, setInputDistance] = React.useState<string | null>(null);\r\n\r\n  const onTextFieldChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let asNumber: number | null = Number(e.target.value);\r\n      if (isNaN(asNumber)) {\r\n        asNumber = null;\r\n      }\r\n\r\n      setInputDistance(e.target.value);\r\n      item.setDistance(asNumber);\r\n    },\r\n    [item]\r\n  );\r\n  const onTextFieldBlur = React.useCallback(() => {\r\n    setInputDistance(null);\r\n  }, []);\r\n  const onDistanceChange = React.useCallback(\r\n    (value: number) => {\r\n      item.setDistance(Math.max(0, Number(value.toFixed(3))));\r\n    },\r\n    [item]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Typography variant=\"overline\">Heat Vortex</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"Distance\"\r\n        value={inputDistance ?? distance ?? \"\"}\r\n        onChange={onTextFieldChange}\r\n        onBlur={onTextFieldBlur}\r\n      />\r\n      <IncDecSlider\r\n        value={distance ?? 0}\r\n        rate={10}\r\n        onChange={onDistanceChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeatVortexPlotListItem;\r\n","import React from \"react\";\r\n\r\nimport { PlotBuilderItem } from \"@/components/PlotBuilderView/builder\";\r\n\r\nimport PlotListItemCard from \"./PlotListItemCard\";\r\n\r\nimport AddIngredientPlotListItem from \"./AddIngredientPlotListItem\";\r\nimport StirCauldronPlotListItem from \"./StirCauldronPlotListItem\";\r\nimport PourSolventPlotListItem from \"./PourSolventPlotListItem\";\r\nimport HeatVortexPlotListItem from \"./HeatVortexPlotListItem\";\r\nimport AddVoidSaltPlotListItem from \"./AddVoidSaltPlotListItem\";\r\nimport SetPositionPlotListItem from \"./SetPositionPlotListItem\";\r\n\r\nexport interface PlotListItemProps {\r\n  item: PlotBuilderItem;\r\n  index: number;\r\n  highlight?: boolean;\r\n  onDuplicate(item: PlotBuilderItem): void;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst PlotListItem = ({\r\n  item,\r\n  index,\r\n  highlight = false,\r\n  onDuplicate,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotListItemProps) => {\r\n  let content: React.ReactNode;\r\n  switch (item.type) {\r\n    case \"add-ingredient\":\r\n      content = <AddIngredientPlotListItem item={item as any} />;\r\n      break;\r\n    case \"stir-cauldron\":\r\n      content = <StirCauldronPlotListItem item={item as any} />;\r\n      break;\r\n    case \"pour-solvent\":\r\n      content = <PourSolventPlotListItem item={item as any} />;\r\n      break;\r\n    case \"heat-vortex\":\r\n      content = <HeatVortexPlotListItem item={item as any} />;\r\n      break;\r\n    case \"void-salt\":\r\n      content = <AddVoidSaltPlotListItem item={item as any} />;\r\n      break;\r\n    case \"set-position\":\r\n      content = <SetPositionPlotListItem item={item as any} />;\r\n      break;\r\n    default:\r\n      content = <div>Unknown plot type {item.type as any}</div>;\r\n  }\r\n\r\n  return (\r\n    <PlotListItemCard\r\n      item={item}\r\n      index={index}\r\n      highlight={highlight}\r\n      onDuplicate={onDuplicate}\r\n      onMouseOver={onMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      {content}\r\n    </PlotListItemCard>\r\n  );\r\n};\r\n\r\nexport default PlotListItem;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  Typography,\r\n  IconButton,\r\n  CardContent,\r\n  styled,\r\n} from \"@mui/material\";\r\nimport {\r\n  Delete as DeleteIcon,\r\n  ContentCopy as CopyIcon,\r\n} from \"@mui/icons-material\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { PlotBuilderItem } from \"@/components/PlotBuilderView/builder\";\r\n\r\nexport interface PlotListItemCardProps {\r\n  item: PlotBuilderItem;\r\n  index: number;\r\n  highlight: boolean;\r\n  children: React.ReactNode;\r\n  onDuplicate(item: PlotBuilderItem): void;\r\n  onMouseOver?(item: PlotBuilderItem): void;\r\n  onMouseOut?(): void;\r\n}\r\n\r\nconst Root = styled(Card)(({ theme }) => ({\r\n  position: \"relative\",\r\n  \"& .item-index\": {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n  },\r\n  \"& .delete-button\": {\r\n    position: \"absolute\",\r\n    top: theme.spacing(1),\r\n    right: theme.spacing(1),\r\n  },\r\n  \"& .duplicate-button\": {\r\n    position: \"absolute\",\r\n    top: theme.spacing(1),\r\n    right: theme.spacing(5),\r\n  },\r\n  \"& .item-content\": {\r\n    paddingTop: theme.spacing(5),\r\n  },\r\n}));\r\n\r\nconst PlotListItemCard = ({\r\n  item,\r\n  index,\r\n  highlight,\r\n  children,\r\n  onDuplicate,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotListItemCardProps) => {\r\n  const valid = useObservation(item.isValid$) ?? false;\r\n  const onCardMouseOver = React.useCallback(() => {\r\n    if (onMouseOver) {\r\n      onMouseOver(item);\r\n    }\r\n  }, [onMouseOver, item]);\r\n  const onDeleteClick = React.useCallback(() => item.delete(), [item]);\r\n  return (\r\n    <Root\r\n      style={{\r\n        backgroundColor:\r\n          (!valid && \"salmon\") || (highlight && \"lightblue\") || undefined,\r\n      }}\r\n      onMouseOver={onCardMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <Typography\r\n        className=\"item-index\"\r\n        variant=\"overline\"\r\n        fontSize={14}\r\n        component=\"div\"\r\n      >\r\n        {index + 1}\r\n      </Typography>\r\n      <IconButton\r\n        size=\"small\"\r\n        className=\"delete-button\"\r\n        title=\"Delete\"\r\n        onClick={onDeleteClick}\r\n      >\r\n        <DeleteIcon />\r\n      </IconButton>\r\n      <IconButton\r\n        size=\"small\"\r\n        className=\"duplicate-button\"\r\n        title=\"Duplicate\"\r\n        onClick={() => onDuplicate(item)}\r\n      >\r\n        <CopyIcon />\r\n      </IconButton>\r\n      <CardContent className=\"item-content\">{children}</CardContent>\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PlotListItemCard;\r\n","import React from \"react\";\r\nimport { Typography, TextField } from \"@mui/material\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { PourSolventPlotItem } from \"@/services/plotter/types\";\r\n\r\nimport { PlotBuilderItem } from \"@/components/PlotBuilderView/builder\";\r\nimport IncDecSlider from \"@/components/IncDecSlider\";\r\n\r\nexport interface PourSolventPlotListItemProps {\r\n  item: PlotBuilderItem<PourSolventPlotItem>;\r\n}\r\nconst PourSolventPlotListItem = ({ item }: PourSolventPlotListItemProps) => {\r\n  const distance = useObservation(item.distance$);\r\n  const [inputDistance, setInputDistance] = React.useState<string | null>(null);\r\n\r\n  const onTextFieldChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let asNumber: number | null = Number(e.target.value);\r\n      if (isNaN(asNumber)) {\r\n        asNumber = null;\r\n      }\r\n\r\n      setInputDistance(e.target.value);\r\n      item.setDistance(asNumber);\r\n    },\r\n    [item]\r\n  );\r\n  const onTextFieldBlur = React.useCallback(() => {\r\n    setInputDistance(null);\r\n  }, []);\r\n  const onDistanceChange = React.useCallback(\r\n    (value: number) => {\r\n      item.setDistance(Math.max(0, Number(value.toFixed(3))));\r\n    },\r\n    [item]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Typography variant=\"overline\">Pour Solvent</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"Distance\"\r\n        value={inputDistance ?? distance ?? \"\"}\r\n        onChange={onTextFieldChange}\r\n        onBlur={onTextFieldBlur}\r\n      />\r\n      <IncDecSlider\r\n        value={distance ?? 0}\r\n        rate={10}\r\n        onChange={onDistanceChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PourSolventPlotListItem;\r\n","import React from \"react\";\r\nimport { TextField, Typography } from \"@mui/material\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { SetPositionPlotItem } from \"@/services/plotter/types\";\r\n\r\nimport { PlotBuilderItem } from \"@/components/PlotBuilderView/builder\";\r\n\r\nexport interface SetPositionPlotListItemProps {\r\n  item: PlotBuilderItem<SetPositionPlotItem>;\r\n}\r\nconst SetPositionPlotListItem = ({ item }: SetPositionPlotListItemProps) => {\r\n  const [xInput, setXInput] = React.useState<string | null>(null);\r\n  const [yInput, setYInput] = React.useState<string | null>(null);\r\n\r\n  const x = useObservation(item.x$);\r\n  const y = useObservation(item.y$);\r\n\r\n  const onXChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let asNumber: number | null = Number(e.target.value);\r\n      if (isNaN(asNumber)) {\r\n        asNumber = null;\r\n      }\r\n\r\n      setXInput(e.target.value);\r\n      item.setX(asNumber);\r\n    },\r\n    [item]\r\n  );\r\n\r\n  const onYChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let asNumber: number | null = Number(e.target.value);\r\n      if (isNaN(asNumber)) {\r\n        asNumber = null;\r\n      }\r\n\r\n      setYInput(e.target.value);\r\n      item.setY(asNumber);\r\n    },\r\n    [item]\r\n  );\r\n\r\n  const onXBlur = React.useCallback(() => setXInput(null), []);\r\n  const onYBlur = React.useCallback(() => setYInput(null), []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Typography variant=\"overline\">Teleport</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"X\"\r\n        value={xInput ?? x ?? \"\"}\r\n        onChange={onXChange}\r\n        onBlur={onXBlur}\r\n      />\r\n      <TextField\r\n        label=\"Y\"\r\n        value={yInput ?? y ?? \"\"}\r\n        onChange={onYChange}\r\n        onBlur={onYBlur}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetPositionPlotListItem;\r\n","import React from \"react\";\r\nimport { TextField, Typography } from \"@mui/material\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { StirCauldronPlotItem } from \"@/services/plotter/types\";\r\n\r\nimport { PlotBuilderItem } from \"@/components/PlotBuilderView/builder\";\r\nimport IncDecSlider from \"@/components/IncDecSlider\";\r\n\r\nexport interface StirCauldronPlotListItemProps {\r\n  item: PlotBuilderItem<StirCauldronPlotItem>;\r\n}\r\n\r\nconst StirCauldronPlotListItem = ({ item }: StirCauldronPlotListItemProps) => {\r\n  const distance = useObservation(item.distance$);\r\n  const [inputDistance, setInputDistance] = React.useState<string | null>(null);\r\n\r\n  const onTextFieldChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let asNumber: number | null = Number(e.target.value);\r\n      if (isNaN(asNumber)) {\r\n        asNumber = null;\r\n      }\r\n\r\n      setInputDistance(e.target.value);\r\n      item.setDistance(asNumber);\r\n    },\r\n    [item]\r\n  );\r\n  const onTextFieldBlur = React.useCallback(() => {\r\n    setInputDistance(null);\r\n  }, []);\r\n  const onDistanceChange = React.useCallback(\r\n    (value: number) => {\r\n      item.setDistance(Math.max(0, Number(value.toFixed(3))));\r\n    },\r\n    [item]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Typography variant=\"overline\">Stir Cauldron</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"Distance\"\r\n        value={inputDistance ?? distance ?? \"\"}\r\n        onChange={onTextFieldChange}\r\n        onBlur={onTextFieldBlur}\r\n      />\r\n      <IncDecSlider\r\n        value={distance ?? 0}\r\n        rate={10}\r\n        onChange={onDistanceChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StirCauldronPlotListItem;\r\n","import PlotBuilderItemsList from \"./PlotBuilderItemsList\";\r\nexport default PlotBuilderItemsList;\r\n","import PlotBuilderView from \"./PlotBuilderView\";\r\nexport default PlotBuilderView;\r\n","import React from \"react\";\r\nimport { uniq, sum, last } from \"lodash\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  IconButton,\r\n  styled,\r\n  IconButtonProps,\r\n} from \"@mui/material\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@mui/icons-material\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\nimport { pointArrayLength } from \"@/point-array\";\r\nimport { vec2Magnitude, vec2Subtract, Vec2Zero } from \"@/vector2\";\r\nimport {\r\n  DANGER_LENGTH_LETHAL,\r\n  DANGER_HEALTH_DECREASE_PER_UNIT,\r\n  LIFE_HEALTH_PER_GRAIN,\r\n} from \"@/game-settings\";\r\n\r\nimport {\r\n  AddIngredientPlotItem,\r\n  AddVoidSaltPlotItem,\r\n  isIngredientPlotItem,\r\n  isVoidSaltPlotItem,\r\n  PlotItem,\r\n  PlotPoint,\r\n  PlotResult,\r\n} from \"@/services/plotter/types\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\nimport { MapEntity, PotionEffectMapEntity } from \"@/services/potion-maps/types\";\r\nimport {\r\n  getEffectTier,\r\n  calculateDangerLengths,\r\n} from \"@/services/plotter/utils\";\r\n\r\nimport FixedValue from \"../FixedValue\";\r\nimport ExpandButton from \"../ExpandButton\";\r\n\r\nexport interface PlotDetailsProps {\r\n  className?: string;\r\n  items: readonly PlotItem[];\r\n  plot: PlotResult;\r\n}\r\n\r\nconst PlotDetails = ({ className, items, plot }: PlotDetailsProps) => {\r\n  const ingredientRegistry = useDIDependency(IngredientRegistry);\r\n  const [ingredientsExpanded, setIngredientsExpanded] = React.useState(false);\r\n\r\n  const endsAt = last(plot.committedPoints) ?? Vec2Zero;\r\n\r\n  const [\r\n    effects,\r\n    baseCost,\r\n    length,\r\n    ingredientMap,\r\n    totalIngredients,\r\n    totalUniqueIngredients,\r\n    stress,\r\n    longestDanger,\r\n    lifeSaltRequired,\r\n  ] = React.useMemo(() => {\r\n    const ingredients = items.filter(isIngredientPlotItem);\r\n\r\n    const effects = getEffects(plot.committedPoints);\r\n\r\n    let baseCost = 0;\r\n    let ingredientTypeCounts: Record<string, number> = {};\r\n    for (const { ingredientId } of ingredients) {\r\n      const ingredient = ingredientRegistry.getIngredientById(ingredientId);\r\n      if (!ingredient) {\r\n        continue;\r\n      }\r\n      baseCost += ingredient.price;\r\n      ingredientTypeCounts[ingredient.id] =\r\n        (ingredientTypeCounts[ingredient.id] ?? 0) + 1;\r\n    }\r\n\r\n    const length = pointArrayLength(plot.committedPoints);\r\n\r\n    const ingredientMap: Record<string, number> = {};\r\n    for (const { ingredientId } of ingredients) {\r\n      const name = ingredientRegistry.getIngredientById(ingredientId)?.name;\r\n      if (!name) {\r\n        continue;\r\n      }\r\n      ingredientMap[name] = (ingredientMap[name] ?? 0) + 1;\r\n    }\r\n    const voidSaltCount = sum(\r\n      items.filter(isVoidSaltPlotItem).map((x) => x.grains)\r\n    );\r\n    if (voidSaltCount > 0) {\r\n      ingredientMap[\"Void Salt\"] = voidSaltCount;\r\n    }\r\n    const totalIngredients = ingredients.length;\r\n    const totalUniqueIngredients = uniq(\r\n      ingredients.map((x) => x.ingredientId)\r\n    ).length;\r\n\r\n    const stress = Math.sqrt(\r\n      sum(\r\n        Object.keys(ingredientTypeCounts).map((key) =>\r\n          Math.pow(ingredientTypeCounts[key], 2)\r\n        )\r\n      )\r\n    );\r\n\r\n    const dangerLengths = calculateDangerLengths(\r\n      plot.committedPoints,\r\n      ingredientRegistry\r\n    );\r\n    const longestDanger = Math.max(...dangerLengths, 0);\r\n    const lifeSaltRequiredLengths = dangerLengths\r\n      .map((x) => x - DANGER_LENGTH_LETHAL)\r\n      .filter((x) => x > 0);\r\n    const lifeSaltRequiredHealth = sum(\r\n      lifeSaltRequiredLengths.map((x) => x * -DANGER_HEALTH_DECREASE_PER_UNIT)\r\n    );\r\n    const lifeSaltRequired = Math.ceil(\r\n      lifeSaltRequiredHealth / LIFE_HEALTH_PER_GRAIN\r\n    );\r\n\r\n    return [\r\n      effects,\r\n      baseCost,\r\n      length,\r\n      ingredientMap,\r\n      totalIngredients,\r\n      totalUniqueIngredients,\r\n      stress,\r\n      longestDanger,\r\n      lifeSaltRequired,\r\n    ];\r\n  }, [items, plot, IngredientRegistry]);\r\n\r\n  // PotionCraft subtract .4 health each unit of distance against a max of 1.\r\n  const dangerIsDeath = longestDanger >= DANGER_LENGTH_LETHAL;\r\n\r\n  return (\r\n    <Card className={className} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h6\">Details</Typography>\r\n        <table>\r\n          <tbody>\r\n            {Object.keys(effects).length > 0 && (\r\n              <tr>\r\n                <td>\r\n                  <Typography>Effects on Path:</Typography>\r\n                </td>\r\n                <td>\r\n                  <Typography variant=\"overline\">\r\n                    {Object.keys(effects)\r\n                      .map((effect) => `${effect} (${effects[effect]})`)\r\n                      .join(\", \")}\r\n                  </Typography>\r\n                </td>\r\n              </tr>\r\n            )}\r\n            <tr>\r\n              <td>\r\n                <Typography>Ingredient count:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography variant=\"overline\" component=\"span\">\r\n                  {totalIngredients} ({totalUniqueIngredients} unique)\r\n                </Typography>\r\n                <ExpandButton\r\n                  expanded={ingredientsExpanded}\r\n                  onExpanded={setIngredientsExpanded}\r\n                />\r\n              </td>\r\n            </tr>\r\n            {ingredientsExpanded &&\r\n              Object.keys(ingredientMap).map((ingredient) => (\r\n                <tr key={ingredient}>\r\n                  <td style={{ paddingLeft: \"8px\" }}>{ingredient}</td>\r\n                  <td>\r\n                    <Typography variant=\"overline\">\r\n                      {ingredientMap[ingredient]}\r\n                    </Typography>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            <tr>\r\n              <td>\r\n                <Typography>Ingredient stress:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography variant=\"overline\">\r\n                  <FixedValue value={stress} />\r\n                </Typography>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Typography>Cost:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography variant=\"overline\">{baseCost}</Typography>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Typography>Committed length:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography variant=\"overline\">\r\n                  <FixedValue value={length} />\r\n                </Typography>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Typography>Ends at:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography variant=\"overline\">\r\n                  <FixedValue value={endsAt.x} />,{\" \"}\r\n                  <FixedValue value={endsAt.y} />\r\n                </Typography>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <Typography>Longest length in bones:</Typography>\r\n              </td>\r\n              <td>\r\n                <Typography\r\n                  variant=\"overline\"\r\n                  color={dangerIsDeath ? \"error\" : \"textPrimary\"}\r\n                >\r\n                  <FixedValue value={longestDanger} /> / {DANGER_LENGTH_LETHAL}\r\n                </Typography>\r\n              </td>\r\n            </tr>\r\n            {lifeSaltRequired > 0 && (\r\n              <tr>\r\n                <td>\r\n                  <Typography>Life salt required:</Typography>\r\n                </td>\r\n                <td>\r\n                  <Typography variant=\"overline\">{lifeSaltRequired}</Typography>\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PlotDetails;\r\n\r\nfunction getEffects(items: PlotPoint[]): Record<string, number> {\r\n  const result: Record<string, number> = {};\r\n  for (const item of items) {\r\n    const effect = item.bottleCollisions.find(itemIsEffect);\r\n    if (!effect) {\r\n      continue;\r\n    }\r\n\r\n    const distance = vec2Magnitude(vec2Subtract(item, effect));\r\n    const tier = getEffectTier(distance, 0);\r\n    result[effect.effect] = Math.max(result[effect.effect] ?? 0, tier);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction itemIsEffect(item: MapEntity): item is PotionEffectMapEntity {\r\n  return item.entityType === \"PotionEffect\";\r\n}\r\n","import PlotDetails from \"./PlotDetails\";\r\nexport default PlotDetails;\r\n","import React from \"react\";\r\n\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\nimport { Vector2 } from \"@/vector2\";\r\n\r\nexport interface PlotSvg {\r\n  className?: string;\r\n  width: number;\r\n  height: number;\r\n  scale: number;\r\n  offset: Vector2;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst PlotSvg = ({\r\n  className,\r\n  width,\r\n  height,\r\n  scale,\r\n  offset,\r\n  children,\r\n}: PlotSvg) => {\r\n  return (\r\n    <svg\r\n      className={className}\r\n      width={width}\r\n      height={height}\r\n      viewBox={`0 0 ${width} ${height}`}\r\n    >\r\n      {/* In theory all these transforms can be done in one go, but neither order seems to work when combining them */}\r\n      <g transform={`scale(${scale})`}>\r\n        <g transform={`translate(${MAP_EXTENT_RADIUS}, ${MAP_EXTENT_RADIUS})`}>\r\n          <g transform=\"scale(1, -1)\">\r\n            <g transform={`translate(${offset.x}, ${offset.y})`}>{children}</g>\r\n          </g>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default PlotSvg;\r\n","import React from \"react\";\r\nimport Color from \"color\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { Vec2Zero } from \"@/vector2\";\r\nimport { SizeZero } from \"@/size\";\r\nimport { POTION_RADIUS } from \"@/game-settings\";\r\nimport { PointArray } from \"@/point-array\";\r\nimport { keepEveryK } from \"@/utils\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { PlotItem, PlotPoint, PlotResult } from \"@/services/plotter/types\";\r\n\r\nimport PlotSvg from \"../PlotSvg\";\r\n\r\nimport { IPlotViewModel } from \"./PlotViewModel\";\r\n\r\nimport { last } from \"lodash\";\r\nimport { useDIDependency } from \"@/container\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\n\r\nexport interface PlotProps {\r\n  className?: string;\r\n  plot: PlotResult;\r\n  viewModel: IPlotViewModel;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  overflow: \"hidden\",\r\n  position: \"relative\",\r\n  \"& .plot-svg\": {\r\n    display: \"block\",\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n  },\r\n  \"& .bottle-preview\": {\r\n    pointerEvents: \"none\",\r\n  },\r\n}));\r\n\r\nconst Plot = ({ className, plot, viewModel }: PlotProps) => {\r\n  const { width, height } = useObservation(viewModel.viewportSize$) ?? SizeZero;\r\n  const offset = useObservation(viewModel.viewOffset$) ?? Vec2Zero;\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n  const mouseOverItem = useObservation(viewModel.highlightPlotItem$) ?? null;\r\n  const mouseOverPoint = useObservation(viewModel.highlightPlotPoint$) ?? null;\r\n\r\n  const lastCommitPoint = last(plot.committedPoints) ?? null;\r\n\r\n  const onLineMouseOver = React.useCallback(\r\n    (line: PlotLine) => {\r\n      viewModel.onMouseOverPlotItem(line.source);\r\n    },\r\n    [viewModel]\r\n  );\r\n\r\n  const onLineMouseOut = React.useCallback(() => {\r\n    viewModel.onMouseOverPlotItem(null);\r\n  }, [viewModel]);\r\n\r\n  const [committedLines, pendingLines] = resultToPlotLines(\r\n    plot.committedPoints,\r\n    plot.pendingPoints\r\n  );\r\n\r\n  return (\r\n    <Root className={className}>\r\n      <PlotSvg\r\n        className=\"plot-svg\"\r\n        width={width}\r\n        height={height}\r\n        offset={offset}\r\n        scale={scale}\r\n      >\r\n        {committedLines.map((line, i) => (\r\n          <PlotLine\r\n            key={i}\r\n            line={line}\r\n            pending={false}\r\n            scale={scale}\r\n            highlight={line.source === mouseOverItem}\r\n            onMouseOver={onLineMouseOver}\r\n            onMouseOut={onLineMouseOut}\r\n          />\r\n        ))}\r\n        {pendingLines.map((line, i) => (\r\n          <PlotLine\r\n            key={i}\r\n            line={line}\r\n            pending={true}\r\n            scale={scale}\r\n            highlight={line.source === mouseOverItem}\r\n            onMouseOver={onLineMouseOver}\r\n            onMouseOut={onLineMouseOut}\r\n          />\r\n        ))}\r\n        {lastCommitPoint && (\r\n          <circle\r\n            className=\"bottle-preview\"\r\n            cx={lastCommitPoint.x}\r\n            cy={lastCommitPoint.y}\r\n            r={POTION_RADIUS}\r\n            fill={\r\n              lastCommitPoint.bottleCollisions.some(\r\n                (x) => x.entityType === \"DangerZonePart\"\r\n              )\r\n                ? \"red\"\r\n                : \"blue\"\r\n            }\r\n            opacity={0.2}\r\n          />\r\n        )}\r\n        {mouseOverPoint && (\r\n          <circle\r\n            className=\"bottle-preview\"\r\n            cx={mouseOverPoint.x}\r\n            cy={mouseOverPoint.y}\r\n            r={POTION_RADIUS}\r\n            fill=\"blue\"\r\n            opacity={0.2}\r\n          />\r\n        )}\r\n      </PlotSvg>\r\n    </Root>\r\n  );\r\n};\r\n\r\ninterface PlotLineProps {\r\n  scale: number;\r\n  line: PlotLine;\r\n  pending: boolean;\r\n  highlight: boolean;\r\n  onMouseOver(line: PlotLine): void;\r\n  onMouseOut(): void;\r\n}\r\nconst PlotLine = ({\r\n  scale,\r\n  line,\r\n  pending,\r\n  highlight,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotLineProps) => {\r\n  const registry = useDIDependency(IngredientRegistry);\r\n  const { points, source, evenOdd } = line;\r\n\r\n  const ingredient = React.useMemo(() => {\r\n    if (source.type !== \"add-ingredient\") {\r\n      return null;\r\n    }\r\n    return registry.getIngredientById(source.ingredientId) ?? null;\r\n  }, [source, registry]);\r\n\r\n  const onPathMouseOver = React.useCallback(() => {\r\n    onMouseOver(line);\r\n  }, [line, onMouseOver]);\r\n\r\n  const onPathMouseOut = React.useCallback(() => {\r\n    onMouseOut();\r\n  }, [onMouseOut]);\r\n\r\n  if (points.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  let color = \"black\";\r\n  switch (source.type) {\r\n    case \"add-ingredient\":\r\n      color = evenOdd ? \"red\" : \"green\";\r\n      break;\r\n    case \"pour-solvent\":\r\n      color = \"blue\";\r\n      break;\r\n    case \"heat-vortex\":\r\n      color = \"purple\";\r\n      break;\r\n  }\r\n\r\n  if (pending) {\r\n    color = Color(color).lighten(0.6).hex();\r\n  }\r\n\r\n  const path = line.points.reduce(\r\n    (str, p) => `${str} L${p.x},${p.y}`,\r\n    `M ${points[0].x} ${points[0].y} `\r\n  );\r\n\r\n  let strokeDashArray: string | undefined = undefined;\r\n  if (ingredient && ingredient.teleports) {\r\n    strokeDashArray = [8 / scale, 8 / scale].join(\" \");\r\n  }\r\n\r\n  return (\r\n    <path\r\n      d={path}\r\n      stroke={color}\r\n      strokeWidth={(highlight ? 6 : 3) / scale}\r\n      strokeDasharray={strokeDashArray}\r\n      fill=\"none\"\r\n      onMouseOver={onPathMouseOver}\r\n      onMouseOut={onPathMouseOut}\r\n    />\r\n  );\r\n};\r\n\r\ninterface PlotLine {\r\n  points: PointArray;\r\n  source: PlotItem;\r\n  evenOdd: boolean;\r\n}\r\n\r\nfunction resultToPlotLines(\r\n  committed: PlotPoint[],\r\n  pending: PlotPoint[],\r\n  trim = 4\r\n) {\r\n  let currentLine: PlotLine | null = null;\r\n  let sourceCounter = 0;\r\n\r\n  const commitedLines: PlotLine[] = [];\r\n  const pendingLines: PlotLine[] = [];\r\n\r\n  let lastSource: PlotItem | null = null;\r\n\r\n  for (const point of committed) {\r\n    if (currentLine == null || currentLine.source != point.source) {\r\n      if (lastSource == null || lastSource !== point.source) {\r\n        sourceCounter++;\r\n        lastSource = point.source;\r\n      }\r\n      currentLine = {\r\n        points: [],\r\n        source: point.source,\r\n        evenOdd: sourceCounter % 2 === 1,\r\n      };\r\n      commitedLines.push(currentLine);\r\n    }\r\n\r\n    currentLine.points.push(point);\r\n  }\r\n\r\n  currentLine = null;\r\n\r\n  for (const point of pending) {\r\n    if (currentLine == null || currentLine.source != point.source) {\r\n      if (lastSource == null || lastSource !== point.source) {\r\n        sourceCounter++;\r\n        lastSource = point.source;\r\n      }\r\n      currentLine = {\r\n        points: [],\r\n        source: point.source,\r\n        evenOdd: sourceCounter % 2 === 1,\r\n      };\r\n      pendingLines.push(currentLine);\r\n    }\r\n\r\n    currentLine.points.push(point);\r\n  }\r\n\r\n  if (trim > 1) {\r\n    for (const line of commitedLines) {\r\n      line.points = keepEveryK(line.points, trim, true);\r\n    }\r\n    for (const line of pendingLines) {\r\n      line.points = keepEveryK(line.points, trim, true);\r\n    }\r\n  }\r\n\r\n  return [commitedLines, pendingLines];\r\n}\r\n\r\nexport default Plot;\r\n","import Plot from \"./Plot\";\r\nexport default Plot;\r\n","import React from \"react\";\r\n\r\nimport { Card, CardContent, Typography } from \"@mui/material\";\r\n\r\nimport { uniq } from \"lodash\";\r\n\r\nimport { EntityDefs } from \"@/services/potion-maps/entity-defs\";\r\n\r\nimport { PlotPoint } from \"@/services/plotter/types\";\r\n\r\nimport FixedValue from \"./FixedValue\";\r\n\r\nexport interface PointDetailsProps {\r\n  point: PlotPoint;\r\n}\r\n\r\nconst PointDetails = ({ point }: PointDetailsProps) => {\r\n  const touchedItems = uniq(\r\n    point.bottleCollisions.map((x) =>\r\n      EntityDefs[x.entityType].getFriendlyName(x)\r\n    )\r\n  );\r\n  return (\r\n    <Card variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h6\">Point at mouse</Typography>\r\n        <Typography variant=\"overline\">\r\n          <FixedValue value={point.x} />, <FixedValue value={point.y} />\r\n        </Typography>\r\n        {touchedItems.length > 0 && (\r\n          <>\r\n            <Typography>Bottle touches:</Typography>\r\n            <Typography variant=\"overline\">\r\n              {touchedItems.join(\", \")}\r\n            </Typography>\r\n          </>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PointDetails;\r\n","import React from \"react\";\r\n\r\nimport { Card, CardContent, Typography, styled } from \"@mui/material\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\n\r\nimport { CubicBezierCurve } from \"@/curves\";\r\nimport { MAX_INGREDIENT_EXTENT, POTION_RADIUS } from \"@/game-settings\";\r\n\r\nimport { AddIngredientPlotItem, PlotItem } from \"@/services/plotter/types\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\n\r\nexport interface StepDetailsProps {\r\n  className?: string;\r\n  step: PlotItem;\r\n}\r\n\r\nconst StepDetails = ({ step, className }: StepDetailsProps) => {\r\n  let content: React.ReactNode;\r\n  switch (step.type) {\r\n    case \"add-ingredient\":\r\n      content = <AddIngredient step={step} />;\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  return (\r\n    <Card className={className} variant=\"outlined\">\r\n      <CardContent>{content}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\ninterface AddIngredientStepProps {\r\n  step: AddIngredientPlotItem;\r\n}\r\n\r\nconst AddIngredientRoot = styled(\"div\")({\r\n  \"& .svg-container\": {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\nconst AddIngredient = ({ step }: AddIngredientStepProps) => {\r\n  const ingredientRegistry = useDIDependency(IngredientRegistry);\r\n  const ingredient = ingredientRegistry.getIngredientById(\r\n    step.ingredientId\r\n  ) ?? {\r\n    name: \"Unknown\",\r\n    path: [] as CubicBezierCurve[],\r\n  };\r\n\r\n  const path = ingredient.path.reduce(\r\n    (path, curve) =>\r\n      path +\r\n      `M ${curve.start.x} ${curve.start.y} C ${curve.p1.x},${curve.p1.y} ${curve.p2.x},${curve.p2.y} ${curve.end.x},${curve.end.y}`,\r\n    \"M 0 0 \"\r\n  );\r\n  return (\r\n    <AddIngredientRoot>\r\n      <Typography variant=\"h6\">Ingredient</Typography>\r\n      <Typography variant=\"overline\">{ingredient.name}</Typography>\r\n      <div>\r\n        <Typography>Grind Percentage</Typography>\r\n        <Typography variant=\"overline\">{step.grindPercent}</Typography>\r\n      </div>\r\n      <div className=\"svg-container\">\r\n        <svg\r\n          width=\"100px\"\r\n          height=\"100px\"\r\n          viewBox={`-${MAX_INGREDIENT_EXTENT} -${MAX_INGREDIENT_EXTENT} ${\r\n            MAX_INGREDIENT_EXTENT * 2\r\n          } ${MAX_INGREDIENT_EXTENT * 2}`}\r\n          transform=\"scale(1, -1)\"\r\n        >\r\n          <circle cx={0} cy={0} r={POTION_RADIUS} fill=\"blue\" />\r\n          <path d={path} stroke=\"black\" strokeWidth={0.2} fill=\"none\" />\r\n        </svg>\r\n      </div>\r\n    </AddIngredientRoot>\r\n  );\r\n};\r\n\r\nexport default StepDetails;\r\n","import container from \"./container\";\r\nimport { IngredientRegistry } from \"./services/ingredients/IngredientRegistry\";\r\nimport { Plotter } from \"./services/plotter/Plotter\";\r\nimport { PotionBaseRegistry } from \"./services/potion-bases/PotionBaseRegistry\";\r\n\r\nconst w = window as any;\r\n\r\nw.enableTk = () => {\r\n  w.tk = {\r\n    vector2: require(\"./vector2\"),\r\n    curves: require(\"./curves\"),\r\n    pointArray: require(\"./point-array\"),\r\n    ingredients: container.get(IngredientRegistry),\r\n    plotter: container.get(Plotter),\r\n    potionBases: container.get(PotionBaseRegistry),\r\n    PotionMap: require(\"./services/potion-maps/PotionMap\"),\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  composeModules,\r\n  Container,\r\n  Identifier,\r\n  Newable,\r\n  ParameterRecord,\r\n} from \"microinject\";\r\n\r\nimport servicesModule from \"./services/module\";\r\nimport { PlotterPageViewModel } from \"./pages/Plotter/PlotterPageViewModel\";\r\n\r\nconst modules = composeModules(servicesModule);\r\n\r\nconst ContainerContext = React.createContext<Container>(new Container());\r\n\r\nconst container = new Container();\r\ncontainer.bind(Container).toConstantValue(container);\r\ncontainer.load(modules);\r\n\r\nexport default container;\r\n\r\nexport interface ContainerProviderProps {\r\n  children: React.ReactNode;\r\n}\r\nexport const ContainerProvider = ({ children }: ContainerProviderProps) => {\r\n  return (\r\n    <ContainerContext.Provider value={container}>\r\n      {children}\r\n    </ContainerContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useDIContainer(): Container {\r\n  return React.useContext(ContainerContext);\r\n}\r\n\r\nexport function useDIDependency<T>(identifier: Identifier<T>): T {\r\n  const container = useDIContainer();\r\n  return container.get(identifier);\r\n}\r\n\r\nexport function useDICreate<T>(\r\n  identifier: Newable<T>,\r\n  parameters?: ParameterRecord\r\n): T {\r\n  const container = useDIContainer();\r\n  const valRef = React.useRef<T>();\r\n  if (valRef.current == null) {\r\n    valRef.current = container.create(identifier, parameters);\r\n  }\r\n  return valRef.current;\r\n}\r\n","import { last } from \"lodash\";\r\nimport {\r\n  BEZIER_CURVE_LENGTH_RESOLUTION,\r\n  PATH_SPACING_PHYSICS,\r\n} from \"./game-settings\";\r\n\r\nimport {\r\n  Vector2,\r\n  vec2Add,\r\n  vec2Distance,\r\n  vec2Magnitude,\r\n  vec2Normalize,\r\n  vec2Scale,\r\n  vec2Subtract,\r\n} from \"./vector2\";\r\n\r\nexport interface CubicBezierCurve {\r\n  start: Vector2;\r\n  p1: Vector2;\r\n  p2: Vector2;\r\n  end: Vector2;\r\n}\r\n\r\nexport function cubicBezierCurve(\r\n  startX: number,\r\n  startY: number,\r\n  p1x: number,\r\n  p1y: number,\r\n  p2x: number,\r\n  p2y: number,\r\n  endx: number,\r\n  endy: number\r\n): CubicBezierCurve {\r\n  return {\r\n    start: { x: startX, y: startY },\r\n    p1: { x: p1x, y: p1y },\r\n    p2: { x: p2x, y: p2y },\r\n    end: { x: endx, y: endy },\r\n  };\r\n}\r\n\r\nexport function getCurvePoint(curve: CubicBezierCurve, t: number): Vector2 {\r\n  if (t < 0 || t > 1) {\r\n    throw new Error(\"getPoint: t must be between 0 and 1\");\r\n  }\r\n\r\n  const b1 = (1 - t) * (1 - t) * (1 - t);\r\n  const b2 = 3 * t * (1 - t) * (1 - t);\r\n  const b3 = 3 * t * t * (1 - t);\r\n  const b4 = t * t * t;\r\n\r\n  return {\r\n    x:\r\n      b1 * curve.start.x + b2 * curve.p1.x + b3 * curve.p2.x + b4 * curve.end.x,\r\n    y:\r\n      b1 * curve.start.y + b2 * curve.p1.y + b3 * curve.p2.y + b4 * curve.end.y,\r\n  };\r\n}\r\n\r\nconst curveLengthCache = new Map<CubicBezierCurve, number>();\r\nexport function getCurveLength(curve: CubicBezierCurve): number {\r\n  const cached = curveLengthCache.get(curve);\r\n  if (cached !== undefined) {\r\n    return cached;\r\n  }\r\n\r\n  const resolution = BEZIER_CURVE_LENGTH_RESOLUTION;\r\n\r\n  let length = 0.0;\r\n  let prevPoint = getCurvePoint(curve, 0);\r\n  for (let index = 1; index <= resolution; ++index) {\r\n    const point = getCurvePoint(curve, index / resolution);\r\n    const offset = vec2Subtract(point, prevPoint);\r\n    length += vec2Magnitude(offset);\r\n    prevPoint = point;\r\n  }\r\n\r\n  curveLengthCache.set(curve, length);\r\n\r\n  return length;\r\n}\r\n\r\nconst curvesToPointsCache = new Map<CubicBezierCurve[], Vector2[]>();\r\nexport function curvesToPoints(curves: CubicBezierCurve[]): Vector2[] {\r\n  const cached = curvesToPointsCache.get(curves);\r\n  if (cached !== undefined) {\r\n    return cached;\r\n  }\r\n\r\n  const resolution = 1;\r\n  const spacing = PATH_SPACING_PHYSICS;\r\n  const points: Vector2[] = [];\r\n  let consumedLength = 0;\r\n  let prevPoint = curves[0].start;\r\n  points.push(prevPoint);\r\n  for (const cubicBezierCurve of curves) {\r\n    const samples = Math.ceil(\r\n      getCurveLength(cubicBezierCurve) * resolution * 10.0\r\n    );\r\n    for (let index = 0; index <= samples; ++index) {\r\n      const t = (index * 1) / samples;\r\n      const point = getCurvePoint(cubicBezierCurve, t);\r\n      consumedLength += vec2Distance(prevPoint, point);\r\n      while (consumedLength >= spacing) {\r\n        const num3 = consumedLength - spacing;\r\n        const vector2 = vec2Add(\r\n          point,\r\n          vec2Scale(vec2Normalize(vec2Subtract(prevPoint, point)), num3)\r\n        );\r\n        points.push(vector2);\r\n        consumedLength = num3;\r\n        prevPoint = vector2;\r\n      }\r\n      prevPoint = point;\r\n    }\r\n  }\r\n  if (consumedLength > 0.0) {\r\n    points.push(getCurvePoint(curves[curves.length - 1], 1));\r\n  }\r\n\r\n  curvesToPointsCache.set(curves, points);\r\n\r\n  return points;\r\n}\r\n\r\nconst curvePointsCache = new Map<CubicBezierCurve, Vector2[]>();\r\nexport function curveToPoints(\r\n  curve: CubicBezierCurve\r\n  // spacing: number = PATH_SPACING_PHYSICS,\r\n  // resolution: number = 1\r\n): Vector2[] {\r\n  const spacing: number = PATH_SPACING_PHYSICS;\r\n  const resolution: number = 1;\r\n\r\n  // if (spacing <= Number.EPSILON) {\r\n  //   throw new Error(\"curveToPoints: spacing must be greater than 0\");\r\n  // }\r\n  // if (resolution <= 0) {\r\n  //   throw new Error(\"curveToPoints: resolution must be greater than 0\");\r\n  // }\r\n\r\n  const cached = curvePointsCache.get(curve);\r\n  if (cached !== undefined) {\r\n    return cached;\r\n  }\r\n\r\n  const points: Vector2[] = [];\r\n\r\n  let remainingDistance = 0;\r\n  let previousPoint: Vector2 = curve.start;\r\n\r\n  points.push(previousPoint);\r\n\r\n  const samplePointCount = Math.ceil(getCurveLength(curve) * resolution * 10.0);\r\n  for (let index = 0; index <= samplePointCount; index++) {\r\n    const t = index / samplePointCount;\r\n    const point = getCurvePoint(curve, t);\r\n    remainingDistance += vec2Distance(previousPoint, point);\r\n    while (remainingDistance >= spacing) {\r\n      remainingDistance = remainingDistance - spacing;\r\n      const splitPoint = vec2Add(\r\n        point,\r\n        vec2Scale(\r\n          vec2Normalize(vec2Subtract(previousPoint, point)),\r\n          remainingDistance\r\n        )\r\n      );\r\n      points.push(splitPoint);\r\n      previousPoint = splitPoint;\r\n    }\r\n    previousPoint = point;\r\n  }\r\n\r\n  if (remainingDistance > 0) {\r\n    points.push(getCurvePoint(curve, 1));\r\n  }\r\n\r\n  Object.freeze(points);\r\n  for (const p of points) {\r\n    Object.freeze(p);\r\n  }\r\n  curvePointsCache.set(curve, points);\r\n\r\n  return points;\r\n}\r\n","export const PATH_SPACING_PHYSICS = 0.05;\r\nexport const BEZIER_CURVE_LENGTH_RESOLUTION = 200;\r\nexport const MAP_EXTENT_RADIUS = 60;\r\nexport const POTION_RADIUS = 0.74;\r\n// export const POTION_RADIUS = 0.79;\r\nexport const MAX_INGREDIENT_EXTENT = 10;\r\nexport const DANGER_HEALTH_DECREASE_PER_UNIT = -0.4;\r\nexport const DANGER_LENGTH_LETHAL = 2.5;\r\nexport const VOID_DISTANCE_PER_GRAIN = 0.01;\r\nexport const LIFE_HEALTH_PER_GRAIN = 0.004;\r\n","import * as React from \"react\";\r\n\r\ninterface UseComponentBounds {\r\n  left: number;\r\n  top: number;\r\n  right: number;\r\n  bottom: number;\r\n  width: number;\r\n  height: number;\r\n}\r\nexport function useComponentBounds(ref: React.RefObject<HTMLElement | null>) {\r\n  const [size, setSize] = React.useState<UseComponentBounds>({\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  React.useLayoutEffect(() => {\r\n    if (!ref.current) {\r\n      return;\r\n    }\r\n\r\n    const observer = new ResizeObserver(() => {\r\n      const el = ref.current;\r\n      if (!el) {\r\n        return;\r\n      }\r\n      const b = el.getBoundingClientRect();\r\n      setSize({\r\n        top: b.top,\r\n        left: b.left,\r\n        right: b.right,\r\n        bottom: b.bottom,\r\n        width: b.width,\r\n        height: b.height,\r\n      });\r\n    });\r\n\r\n    observer.observe(ref.current);\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [ref]);\r\n\r\n  return size;\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport function useNativeEvent<\r\n  T extends GlobalEventHandlers,\r\n  K extends keyof GlobalEventHandlersEventMap\r\n>(\r\n  ref: React.RefObject<T | null>,\r\n  type: K,\r\n  listener: (\r\n    this: GlobalEventHandlers,\r\n    ev: GlobalEventHandlersEventMap[K]\r\n  ) => any,\r\n  options?: boolean | AddEventListenerOptions\r\n) {\r\n  React.useEffect(() => {\r\n    if (!ref.current) {\r\n      return;\r\n    }\r\n\r\n    // De-reference the target so we remove from the right element.\r\n    const listenTarget = ref.current;\r\n\r\n    listenTarget.addEventListener(type, listener, options);\r\n    return () => {\r\n      listenTarget.removeEventListener(type, listener, options);\r\n    };\r\n  }, [type, listener, ref, options]);\r\n}\r\n","import React from \"react\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport interface UseObservationOpts {\r\n  useTransition?: boolean;\r\n  onError?: (err: Error) => void;\r\n}\r\nexport function useObservation<T>(\r\n  observable: Observable<T> | T | null | undefined,\r\n  { useTransition, onError }: UseObservationOpts = {}\r\n): T | undefined {\r\n  const [val, setVal] = React.useState<T | undefined>(undefined);\r\n\r\n  React.useEffect(() => {\r\n    if (observable) {\r\n      if (observable instanceof Observable) {\r\n        const subscription = observable.subscribe({\r\n          next: (val) => {\r\n            if (useTransition) {\r\n              React.startTransition(() => setVal(val));\r\n            } else {\r\n              setVal(val);\r\n            }\r\n          },\r\n          error: onError,\r\n        });\r\n        return () => subscription.unsubscribe();\r\n      } else {\r\n        setVal(observable);\r\n      }\r\n    }\r\n  }, [observable, onError, useTransition]);\r\n\r\n  return val;\r\n}\r\n","import \"@/style.css\";\r\n\r\nimport \"./console\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\n\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\n\r\nimport { ContainerProvider } from \"./container\";\r\nimport ThemeProvider from \"./theme\";\r\n\r\nimport AppRouter from \"@/services/history/AppRouter\";\r\nimport AppRoutes from \"./routes\";\r\n\r\nconst rootEl = document.getElementById(\"root\");\r\nconst root = ReactDOM.createRoot(rootEl!);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <ContainerProvider>\r\n      <AppRouter>\r\n        <ThemeProvider>\r\n          <CssBaseline />\r\n          <AppRoutes />\r\n        </ThemeProvider>\r\n      </AppRouter>\r\n    </ContainerProvider>\r\n  </React.StrictMode>\r\n);\r\n","import { keyboardModifierUseMeta } from \"./runtime-env\";\r\n\r\nexport const MODIFIER_KEYS_NONE = Object.freeze<ModifierKeys>({});\r\n\r\nexport interface ModifierKeys {\r\n  ctrlMetaKey?: boolean;\r\n  shiftKey?: boolean;\r\n  altKey?: boolean;\r\n}\r\n\r\nexport interface MouseEventModifierKeys {\r\n  ctrlKey: boolean;\r\n  altKey: boolean;\r\n  shiftKey: boolean;\r\n  metaKey: boolean;\r\n}\r\nexport function getModifiers(e: MouseEventModifierKeys): ModifierKeys {\r\n  const { ctrlKey, altKey, shiftKey, metaKey } = e;\r\n  return {\r\n    // Mac reserves ctrl for system use, apps use meta.\r\n    ctrlMetaKey: keyboardModifierUseMeta ? metaKey : ctrlKey,\r\n    altKey,\r\n    shiftKey,\r\n  };\r\n}\r\n\r\nexport function isModifierPressed(event: React.MouseEvent<any>) {\r\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\r\n}\r\n","import {\r\n  combineLatest,\r\n  OperatorFunction,\r\n  Observable,\r\n  Subscription,\r\n} from \"rxjs\";\r\n\r\nexport function observeAll<K>(): OperatorFunction<Observable<K>[], K[]> {\r\n  return (source: Observable<Observable<K>[]>) => {\r\n    return new Observable<K[]>((subscriber) => {\r\n      let subscription: Subscription | null = null;\r\n      source.subscribe({\r\n        next: (observables) => {\r\n          if (subscription) {\r\n            subscription.unsubscribe();\r\n            subscription = null;\r\n          }\r\n\r\n          if (observables.length === 0) {\r\n            subscriber.next([]);\r\n            return;\r\n          }\r\n\r\n          subscription = combineLatest(observables).subscribe((values) => {\r\n            subscriber.next(values);\r\n          });\r\n        },\r\n        complete: () => subscriber.complete(),\r\n        error: (err) => subscriber.error(err),\r\n      });\r\n    });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Typography, Card, CardContent } from \"@mui/material\";\r\n\r\nimport { useDICreate } from \"@/container\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { PlotBuilderItem } from \"@/components/PlotBuilderView/builder\";\r\n\r\nimport Overlay from \"@/components/Overlay\";\r\nimport PlotBuilderView from \"@/components/PlotBuilderView\";\r\n\r\nimport { ChallengePageViewModel } from \"./ChallengePageViewModel\";\r\nimport { sum } from \"lodash\";\r\n\r\nconst ChallengePage = () => {\r\n  const viewModel = useDICreate(ChallengePageViewModel);\r\n\r\n  const results = useObservation(viewModel.results$) ?? null;\r\n\r\n  return (\r\n    <PlotBuilderView\r\n      viewModel={viewModel}\r\n      mapOverlay={\r\n        <Overlay position=\"top\">\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" textAlign=\"center\">\r\n                Daily Challenge\r\n              </Typography>\r\n              <Typography variant=\"body1\" textAlign=\"center\">\r\n                {viewModel.description}\r\n              </Typography>\r\n              {results && (\r\n                <table>\r\n                  <tbody>\r\n                    {Object.keys(results).map((key) => (\r\n                      <tr>\r\n                        <td>{key}</td>\r\n                        <td>{results[key].value}</td>\r\n                        <td>{results[key].score}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              )}\r\n              {results && (\r\n                <Typography variant=\"overline\">\r\n                  Total Score:{\" \"}\r\n                  {sum(Object.keys(results).map((k) => results[k].score))}\r\n                </Typography>\r\n              )}\r\n              {results && (\r\n                <Typography>\r\n                  Keep tweaking your path to increase your score!\r\n                </Typography>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Overlay>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChallengePage;\r\n","import { inject } from \"microinject\";\r\nimport { Observable, map } from \"rxjs\";\r\n\r\nimport { ChallengeResults, IChallenge } from \"@/services/challenge/Challenge\";\r\nimport { ChallengeFactory } from \"@/services/challenge/ChallengeFactory\";\r\nimport { Plotter } from \"@/services/plotter/Plotter\";\r\n\r\nimport { PlotBuilderViewModel } from \"@/components/PlotBuilderView/PlotBuilderViewModel\";\r\n\r\nexport class ChallengePageViewModel extends PlotBuilderViewModel {\r\n  private readonly _challenge: IChallenge;\r\n\r\n  private readonly _results$: Observable<ChallengeResults | null>;\r\n\r\n  constructor(\r\n    @inject(ChallengeFactory) challengeFactory: ChallengeFactory,\r\n    @inject(Plotter) plotter: Plotter\r\n  ) {\r\n    super(plotter);\r\n    this._challenge = challengeFactory.createDailyChallenge();\r\n    this.setMap(this._challenge.map);\r\n    this._results$ = this.plotItems$.pipe(\r\n      map((plotItems) => this._challenge.getScore(plotItems))\r\n    );\r\n  }\r\n\r\n  get description(): string {\r\n    return this._challenge.description;\r\n  }\r\n\r\n  get results$(): Observable<ChallengeResults | null> {\r\n    return this._results$;\r\n  }\r\n}\r\n","import ChallengePage from \"./ChallengePage\";\r\nexport default ChallengePage;\r\n","import React from \"react\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\nimport { History } from \"@/services/history/History\";\r\n\r\nconst IndexPage = () => {\r\n  const history = useDIDependency(History);\r\n  React.useEffect(() => {\r\n    // HashBrowser keeps its own search inside the hash.  The outer hash may remain and confuse things.\r\n    // Grab whatever hash we can, and normalize into our history.\r\n    const hLoc = history.location;\r\n    const wLoc = window.location;\r\n    const search = hLoc.search.length > 0 ? hLoc.search : wLoc.search;\r\n\r\n    // Clear out the root search query.\r\n    // Use replaceState to avoid refreshing the page\r\n    if (window.location.search != \"\") {\r\n      const url = new URL(window.location.href);\r\n      url.search = \"\";\r\n      window.history.replaceState({}, \"\", url.toString());\r\n    }\r\n    history.replace({ pathname: \"/plotter\", search });\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport default IndexPage;\r\n","import React from \"react\";\r\n\r\nimport { useDICreate, useDIDependency } from \"@/container\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { History } from \"@/services/history/History\";\r\n\r\nimport PlotBuilderView from \"@/components/PlotBuilderView\";\r\n\r\nimport { PlotterPageViewModel } from \"./PlotterPageViewModel\";\r\n\r\nconst PlotterPage = () => {\r\n  const history = useDIDependency(History);\r\n  const viewModel = useDICreate(PlotterPageViewModel);\r\n\r\n  const outputShareString =\r\n    useObservation(viewModel.shareString$, { useTransition: true }) ?? null;\r\n\r\n  React.useEffect(() => {\r\n    const query = new URLSearchParams(history.location.search);\r\n    if (query.has(\"data\")) {\r\n      const data = query.get(\"data\")!;\r\n      viewModel.loadFromShareString(data);\r\n    }\r\n  }, [history]);\r\n\r\n  React.useEffect(() => {\r\n    if (!outputShareString) {\r\n      return;\r\n    }\r\n    const query = new URLSearchParams(history.location.search);\r\n    query.set(\"data\", outputShareString);\r\n    history.replace({\r\n      search: query.toString(),\r\n    });\r\n  }, [history, outputShareString]);\r\n\r\n  return <PlotBuilderView viewModel={viewModel} enableCheats />;\r\n};\r\n\r\nexport default PlotterPage;\r\n","import { map, Observable, debounceTime } from \"rxjs\";\r\nimport { inject } from \"microinject\";\r\n\r\nimport { PotionBaseRegistry } from \"@/services/potion-bases/PotionBaseRegistry\";\r\nimport { PotionBaseId } from \"@/services/potion-bases/types\";\r\nimport { Plotter } from \"@/services/plotter/Plotter\";\r\nimport { ShareStringSerializer } from \"@/services/share-string/ShareStringSerializer\";\r\n\r\nimport { PlotBuilderViewModel } from \"@/components/PlotBuilderView/PlotBuilderViewModel\";\r\n\r\nexport class PlotterPageViewModel extends PlotBuilderViewModel {\r\n  private readonly _shareString$: Observable<string>;\r\n\r\n  constructor(\r\n    @inject(Plotter) plotter: Plotter,\r\n    @inject(PotionBaseRegistry) potionBaseRegistry: PotionBaseRegistry,\r\n    @inject(ShareStringSerializer)\r\n    private readonly _shareStringSerializer: ShareStringSerializer\r\n  ) {\r\n    console.log(\r\n      \"PlotterPageViewModel.constructor\",\r\n      plotter.constructor.name,\r\n      potionBaseRegistry.constructor.name\r\n    );\r\n    super(plotter);\r\n\r\n    const waterMap = potionBaseRegistry.getPotionBaseById(\r\n      \"water\" as PotionBaseId\r\n    )!.map;\r\n    this.setMap(waterMap);\r\n\r\n    this._shareString$ = this.plotItems$\r\n      .pipe(debounceTime(1000))\r\n      .pipe(map((items) => this._shareStringSerializer.serialize(items)));\r\n  }\r\n\r\n  get shareString$(): Observable<string> {\r\n    return this._shareString$;\r\n  }\r\n\r\n  loadFromShareString(dataStr: string) {\r\n    const items = this._shareStringSerializer.deserialize(dataStr);\r\n    this.clear();\r\n    this.loadPlotItems(items);\r\n  }\r\n}\r\n","import PlotterPage from \"./PlotterPage\";\r\nexport default PlotterPage;\r\n","import { clamp, first, last, sum } from \"lodash\";\r\nimport { PATH_SPACING_PHYSICS } from \"./game-settings\";\r\n\r\nimport {\r\n  vec2Lerp,\r\n  Vector2,\r\n  vec2Add,\r\n  vec2Distance,\r\n  vec2Magnitude,\r\n  vec2Scale,\r\n  vec2Subtract,\r\n  Vec2Zero,\r\n} from \"./vector2\";\r\n\r\nexport type PointArray = Vector2[];\r\nexport type ReadOnlyPointArray = readonly Vector2[];\r\n\r\nexport function pointArrayLength(pointArray: ReadOnlyPointArray): number {\r\n  if (pointArray.length <= 1) {\r\n    return 0;\r\n  }\r\n\r\n  let length = 0;\r\n  let previousPoint = pointArray[0];\r\n  for (let i = 1; i < pointArray.length; i++) {\r\n    length += vec2Distance(previousPoint, pointArray[i]);\r\n    previousPoint = pointArray[i];\r\n  }\r\n\r\n  return length;\r\n}\r\n\r\nconst pointArrayLengthCache = new Map<ReadOnlyPointArray, number>();\r\nexport function pointArrayLengthCached(pointArray: ReadOnlyPointArray): number {\r\n  if (pointArray.length <= 1) {\r\n    return 0;\r\n  }\r\n\r\n  let length = pointArrayLengthCache.get(pointArray);\r\n  if (length !== undefined) {\r\n    return length;\r\n  }\r\n\r\n  length = pointArrayLength(pointArray);\r\n  pointArrayLengthCache.set(pointArray, length);\r\n\r\n  return length;\r\n}\r\n\r\nexport function pointArrayLineFromDistance(\r\n  start: Vector2,\r\n  direction: Vector2,\r\n  distance: number,\r\n  spacing: number = PATH_SPACING_PHYSICS\r\n) {\r\n  const pointArray: PointArray = [];\r\n  if (vec2Magnitude(direction) === 0) {\r\n    throw new Error(\"direction must be valid.\");\r\n  }\r\n\r\n  if (distance <= 0) {\r\n    return [];\r\n  }\r\n\r\n  let previousPoint = start;\r\n  pointArray.push(previousPoint);\r\n  let remainingDistance = distance;\r\n  while (remainingDistance >= spacing) {\r\n    const point = vec2Add(previousPoint, vec2Scale(direction, spacing));\r\n    pointArray.push(point);\r\n    remainingDistance -= spacing;\r\n    previousPoint = point;\r\n  }\r\n\r\n  if (remainingDistance > 0) {\r\n    pointArray.push(\r\n      vec2Add(previousPoint, vec2Scale(direction, remainingDistance))\r\n    );\r\n  }\r\n\r\n  return pointArray;\r\n}\r\n\r\nexport function pointArrayOffset(\r\n  pointArray: PointArray,\r\n  offset: Vector2\r\n): PointArray {\r\n  return pointArray.map((point) => vec2Add(point, offset));\r\n}\r\n\r\n// Note: This is reproduced from the logic in IngredientPath.CalculateEvenlySpacedPoints to be exactly equal to the game's path calculation\r\n// with regard to grind percents\r\nexport function takePointArrayByPercent(\r\n  array: Vector2[],\r\n  takePercent: number\r\n): [taken: Vector2[], remainder: Vector2[]] {\r\n  if (array.length === 0) {\r\n    return [array, []];\r\n  }\r\n\r\n  const taken: Vector2[] = [];\r\n  const remainder: Vector2[] = [];\r\n\r\n  if (takePercent > Number.EPSILON) {\r\n    taken.push(array[0]);\r\n  }\r\n\r\n  const totalLength = pointArrayLength(array);\r\n\r\n  let cumulativePercent = 0;\r\n  let transitionedToRemainder = false;\r\n  for (let i = 0; i < array.length - 1; i++) {\r\n    const segmentLength = vec2Distance(array[i], array[i + 1]);\r\n    const segmentLengthPercent = segmentLength / totalLength;\r\n    cumulativePercent = clamp(cumulativePercent + segmentLengthPercent, 0, 1);\r\n    if (cumulativePercent <= takePercent) {\r\n      taken.push(array[i + 1]);\r\n    } else if (\r\n      remainder.length === 0 &&\r\n      taken.length !== 0 &&\r\n      !transitionedToRemainder\r\n    ) {\r\n      transitionedToRemainder = true;\r\n      const p1 = array[i];\r\n      const p2 = array[i + 1];\r\n      const t = 1 - (cumulativePercent - takePercent) / segmentLengthPercent;\r\n      const mid = vec2Lerp(p1, p2, t);\r\n      taken.push(mid);\r\n      remainder.push(mid);\r\n    } else {\r\n      remainder.push(array[i]);\r\n    }\r\n  }\r\n\r\n  if (remainder.length > 0) {\r\n    remainder.push(last(array)!);\r\n  }\r\n\r\n  return [taken, remainder];\r\n}\r\n\r\nexport function takePointArrayByDistance<T extends Vector2>(\r\n  array: T[],\r\n  takeLength: number\r\n): [taken: T[], remainder: T[]] {\r\n  const totalLength = pointArrayLength(array);\r\n\r\n  if (array.length <= 1 || totalLength <= takeLength) {\r\n    return [array, [] as T[]];\r\n  }\r\n\r\n  const taken: T[] = [array[0]];\r\n  const remainder: T[] = [];\r\n\r\n  let takenLength = 0;\r\n  let previousPoint = array[0];\r\n  for (let i = 1; i < array.length; i++) {\r\n    const p = array[i];\r\n    const length = vec2Distance(p, previousPoint);\r\n    if (takenLength + length >= takeLength) {\r\n      const remainingLength = takeLength - takenLength;\r\n      const splitPoint = vec2Lerp(previousPoint, p, remainingLength / length);\r\n      taken.push(\r\n        Object.assign({}, previousPoint, { x: splitPoint.x, y: splitPoint.y })\r\n      );\r\n      remainder.push(\r\n        Object.assign({}, p, { x: splitPoint.x, y: splitPoint.y }),\r\n        ...array.slice(i)\r\n      );\r\n      break;\r\n    } else {\r\n      takenLength += length;\r\n      taken.push(p);\r\n      previousPoint = p;\r\n    }\r\n  }\r\n\r\n  return [taken, remainder];\r\n}\r\n\r\nexport function removePointArrayDistanceFromEnd<T extends Vector2>(\r\n  array: T[],\r\n  takeLength: number\r\n): T[] {\r\n  // Do it the simple way for now.\r\n  // This should be made more efficient\r\n  const length = pointArrayLength(array);\r\n  if (length <= takeLength) {\r\n    const pFirst = first(array);\r\n    return pFirst ? [pFirst] : [];\r\n  }\r\n  const [taken] = takePointArrayByDistance(array, length - takeLength);\r\n  return taken;\r\n}\r\n","import {\r\n  Vector2,\r\n  vec2Add,\r\n  Vec2Zero,\r\n  vec2Magnitude,\r\n  vec2Subtract,\r\n} from \"./vector2\";\r\nimport { Size } from \"./size\";\r\n\r\nexport interface Rectangle {\r\n  p1: Vector2;\r\n  p2: Vector2;\r\n}\r\n\r\nexport const RectZero: Readonly<Rectangle> = Object.freeze({\r\n  p1: Vec2Zero,\r\n  p2: Vec2Zero,\r\n}) as any;\r\n\r\nexport function rectangle(x: number, y: number, w: number, h: number) {\r\n  return {\r\n    p1: { x, y },\r\n    p2: { x: x + w, y: y + h },\r\n  };\r\n}\r\n\r\nexport function rectFromCircle(p: Vector2, radius: number) {\r\n  return {\r\n    p1: {\r\n      x: p.x - radius,\r\n      y: p.y - radius,\r\n    },\r\n    p2: {\r\n      x: p.x + radius,\r\n      y: p.y + radius,\r\n    },\r\n  };\r\n}\r\n\r\nexport function rectOffset(r: Rectangle, offset: Vector2) {\r\n  return {\r\n    p1: vec2Add(r.p1, offset),\r\n    p2: vec2Add(r.p2, offset),\r\n  };\r\n}\r\n\r\nexport function normalizeRectangle(p1: Vector2, p2: Vector2): Rectangle;\r\nexport function normalizeRectangle(r: Rectangle): Rectangle;\r\nexport function normalizeRectangle(...args: any[]): Rectangle {\r\n  let p1: Vector2;\r\n  let p2: Vector2;\r\n  if (args.length === 1) {\r\n    const r = args[0] as Rectangle;\r\n    p1 = r.p1;\r\n    p2 = r.p2;\r\n  } else {\r\n    p1 = args[0] as Vector2;\r\n    p2 = args[1] as Vector2;\r\n  }\r\n  return {\r\n    p1: {\r\n      x: Math.min(p1.x, p2.x),\r\n      y: Math.min(p1.y, p2.y),\r\n    },\r\n    p2: {\r\n      x: Math.max(p1.x, p2.x),\r\n      y: Math.max(p1.y, p2.y),\r\n    },\r\n  };\r\n}\r\n\r\nexport function addPointToRect(r: Rectangle, p: Vector2): Rectangle {\r\n  return {\r\n    p1: {\r\n      x: Math.min(r.p1.x, p.x),\r\n      y: Math.min(r.p1.y, p.y),\r\n    },\r\n    p2: {\r\n      x: Math.max(r.p2.x, p.x),\r\n      y: Math.max(r.p2.y, p.y),\r\n    },\r\n  };\r\n}\r\n\r\nexport function pointIntersectsRect(p: Vector2, r: Rectangle): boolean {\r\n  r = normalizeRectangle(r);\r\n\r\n  if (r.p1.x > p.x || r.p2.x < p.x) {\r\n    return false;\r\n  }\r\n\r\n  if (r.p1.y > p.y || r.p2.y < p.y) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function rectSize(r: Rectangle): Size {\r\n  r = normalizeRectangle(r);\r\n  return {\r\n    width: r.p2.x - r.p1.x,\r\n    height: r.p2.y - r.p1.y,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Route, Routes } from \"react-router\";\r\n\r\nimport IndexPage from \"./pages/Index\";\r\nimport PlotterPage from \"./pages/Plotter\";\r\nimport ChallengePage from \"./pages/Challenge\";\r\n\r\nconst AppRoutes = () => (\r\n  <Routes>\r\n    {/* TODO: If we hit the index with a ?data=, redirect to plotter?data= */}\r\n    <Route index element={<IndexPage />} />\r\n    <Route path=\"/plotter\" element={<PlotterPage />} />\r\n    <Route path=\"/daily-challenge\" element={<ChallengePage />} />\r\n  </Routes>\r\n);\r\n\r\nexport default AppRoutes;\r\n","import platform from \"platform\";\r\n\r\nconst OS_WINDOWS = /windows/i;\r\nconst OS_MAC = /Mac|iOS|(OS\\ X)/;\r\nconst OS_LINUX = /linux/i;\r\n\r\nexport type OSType = \"windows\" | \"mac\" | \"linux\" | \"unknown\";\r\n\r\nconst osPlatform = (platform.os && platform.os.family) || \"unknown\";\r\nexport const OSType: OSType = OS_WINDOWS.test(osPlatform)\r\n  ? \"windows\"\r\n  : OS_MAC.test(osPlatform)\r\n  ? \"mac\"\r\n  : OS_LINUX.test(osPlatform)\r\n  ? \"linux\"\r\n  : \"unknown\";\r\n\r\nexport const isProd: boolean = process.env.NODE_ENV === \"production\";\r\n\r\nexport const keyboardModifierUseMeta = osPlatform === \"mac\";\r\n","import { inject, injectable, singleton } from \"microinject\";\r\nimport { create as createRandom, RandomSeed } from \"random-seed\";\r\n\r\nimport { MAP_EXTENT_RADIUS, POTION_RADIUS } from \"@/game-settings\";\r\nimport { vec2Distance, Vec2Zero, Vector2 } from \"@/vector2\";\r\n\r\nimport { PotionBaseRegistry } from \"../potion-bases/PotionBaseRegistry\";\r\nimport { PotionMap } from \"../potion-maps/PotionMap\";\r\n\r\nimport { BrewEffectAtPointChallengeFactory } from \"./challenge-types/BrewEffectAtPointChallenge\";\r\n\r\nimport { IChallenge } from \"./Challenge\";\r\n\r\nconst CHALLENGE_MIN_RADIUS = 15;\r\n\r\n@injectable()\r\n@singleton()\r\nexport class ChallengeFactory {\r\n  constructor(\r\n    @inject(PotionBaseRegistry)\r\n    private readonly _potionBaseRegistry: PotionBaseRegistry,\r\n    @inject(BrewEffectAtPointChallengeFactory)\r\n    private readonly _brewEffectAtPointChallengeFactory: BrewEffectAtPointChallengeFactory\r\n  ) {}\r\n\r\n  createDailyChallenge(): IChallenge {\r\n    const todayDate = new Date().toISOString().split(\"T\")[0];\r\n    const random = createRandom(`daily-challenge-${todayDate}`);\r\n\r\n    const waterMap = this._potionBaseRegistry.getPotionBaseById(\r\n      \"water\" as any\r\n    )!.map;\r\n    const challengeMap = this._createChallengeMap(waterMap);\r\n    const effectPosition = this._getFreeEffectPosition(\r\n      challengeMap,\r\n      CHALLENGE_MIN_RADIUS,\r\n      random\r\n    );\r\n\r\n    const challenge = this._brewEffectAtPointChallengeFactory({\r\n      baseMap: challengeMap,\r\n      targetPosition: effectPosition,\r\n    });\r\n\r\n    return challenge;\r\n  }\r\n\r\n  private _createChallengeMap(base: PotionMap): PotionMap {\r\n    return new PotionMap(\r\n      base.entities.filter(\r\n        (x) =>\r\n          x.entityType !== \"PotionEffect\" && x.entityType !== \"ExperienceBonus\"\r\n      )\r\n    );\r\n  }\r\n\r\n  private _getFreeEffectPosition(\r\n    map: PotionMap,\r\n    minRadius: number,\r\n    random: RandomSeed\r\n  ): Vector2 {\r\n    for (let i = 0; i < 50; i++) {\r\n      // We need to extend the radius out to reach the corners, so we do not cut them out of the map.\r\n      const radius = random.floatBetween(\r\n        minRadius,\r\n        vec2Distance(Vec2Zero, { x: MAP_EXTENT_RADIUS, y: MAP_EXTENT_RADIUS })\r\n      );\r\n      const angle = random.floatBetween(0, 2 * Math.PI);\r\n      const p: Vector2 = {\r\n        x: Number((radius * Math.cos(angle)).toFixed(2)),\r\n        y: Number((radius * Math.sin(angle)).toFixed(2)),\r\n      };\r\n\r\n      if (\r\n        p.x - POTION_RADIUS < -MAP_EXTENT_RADIUS ||\r\n        p.x + POTION_RADIUS > MAP_EXTENT_RADIUS ||\r\n        p.y - POTION_RADIUS < -MAP_EXTENT_RADIUS ||\r\n        p.y + POTION_RADIUS > MAP_EXTENT_RADIUS\r\n      ) {\r\n        // Make sure its within the rectangular map.\r\n        continue;\r\n      }\r\n\r\n      // Area must be free.  This means we also cant stomp on top of vortexes.\r\n      const hit = map.hitTest(p, POTION_RADIUS);\r\n      if (hit.length > 0) {\r\n        continue;\r\n      }\r\n\r\n      return p;\r\n    }\r\n    throw new Error(\"Failed to find effect position after 50 tries\");\r\n  }\r\n}\r\n","import { Identifier, ServiceLocator } from \"microinject\";\r\nimport { clamp, last, sum, uniq } from \"lodash\";\r\n\r\nimport { vec2Distance, Vec2Zero, Vector2 } from \"@/vector2\";\r\nimport { pointArrayLength } from \"@/point-array\";\r\n\r\nimport { AddIngredientPlotItem, PlotItem } from \"@/services/plotter/types\";\r\n\r\nimport { Plotter } from \"../../plotter/Plotter\";\r\nimport { getEffectTier, calculateDangerLengths } from \"../../plotter/utils\";\r\n\r\nimport { PotionMap } from \"../../potion-maps/PotionMap\";\r\n\r\nimport { ChallengeResults, IChallenge } from \"../Challenge\";\r\nimport { DANGER_LENGTH_LETHAL } from \"@/game-settings\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\n\r\nexport interface BrewEffectAtPointChallengeOptions {\r\n  baseMap: PotionMap;\r\n  targetPosition: Vector2;\r\n}\r\n\r\nexport const BrewEffectAtPointChallengeFactory: Identifier<BrewEffectAtPointChallengeFactory> =\r\n  \"BrewEffectAtPointChallengeFactory\";\r\nexport type BrewEffectAtPointChallengeFactory = (\r\n  options: BrewEffectAtPointChallengeOptions\r\n) => IChallenge;\r\n\r\nexport function brewEffectAtPointChallengeFactoryFactory(\r\n  serviceLocator: ServiceLocator\r\n) {\r\n  return (options: BrewEffectAtPointChallengeOptions) => {\r\n    const plotter = serviceLocator.get(Plotter);\r\n    const ingredientRegistry = serviceLocator.get(IngredientRegistry);\r\n    return new BrewEffectAtPointChallenge(\r\n      options.baseMap,\r\n      options.targetPosition,\r\n      plotter,\r\n      ingredientRegistry\r\n    );\r\n  };\r\n}\r\nclass BrewEffectAtPointChallenge implements IChallenge {\r\n  private readonly _map: PotionMap;\r\n\r\n  constructor(\r\n    baseMap: PotionMap,\r\n    private readonly _targetPosition: Vector2,\r\n    private readonly _plotter: Plotter,\r\n    private readonly _ingredientRegistry: IngredientRegistry\r\n  ) {\r\n    this._map = new PotionMap([\r\n      ...baseMap.entities.filter((x) => x.entityType !== \"PotionEffect\"),\r\n      {\r\n        entityType: \"PotionEffect\",\r\n        // TODO: Should probably make a \"Challenge\" effect internal to us.\r\n        effect: \"Lightning\",\r\n        ..._targetPosition,\r\n      },\r\n    ]);\r\n  }\r\n\r\n  get map(): PotionMap {\r\n    return this._map;\r\n  }\r\n\r\n  get description(): string {\r\n    return `Brew the effect at (${this._targetPosition.x}, ${this._targetPosition.y})`;\r\n  }\r\n\r\n  getScore(plotItems: readonly PlotItem[]): ChallengeResults | null {\r\n    // Disallow cheats/utilities.\r\n    if (plotItems.some((x) => x.type === \"set-position\")) {\r\n      return null;\r\n    }\r\n\r\n    const results: ChallengeResults = {};\r\n\r\n    // Reward multiplied by the teir of the effect.\r\n    const TIER_REWARD = 1000;\r\n\r\n    const WATERLESS_REWARD = 500;\r\n    const VORTEXLESS_REWARD = 200;\r\n\r\n    // Penalty for distance scaled by the actual distance divided by linear distance.\r\n    const DISTANCE_PENALTY = -40;\r\n\r\n    // Penalty for stress.  Penalty applies to any stress value over 1.\r\n    const STRESS_PENALTY = -100;\r\n    const HIGHLANDER_BONUS = 200;\r\n\r\n    // Each unit of cost subtracts this from the score.\r\n    const COST_PENALTY = -5;\r\n\r\n    const { committedPoints } = this._plotter.plotItems(plotItems, this._map);\r\n    const lastPoint = last(committedPoints) ?? Vec2Zero;\r\n    const tier = getEffectTier(\r\n      vec2Distance(lastPoint, this._targetPosition),\r\n      0\r\n    );\r\n\r\n    const isComplete = tier > 0;\r\n    if (!isComplete) {\r\n      return null;\r\n    }\r\n\r\n    let totalScore = 0;\r\n\r\n    const tierScore = TIER_REWARD * tier;\r\n    totalScore += tierScore;\r\n    results[\"tier\"] = {\r\n      value: `Tier ${tier}`,\r\n      score: tierScore,\r\n    };\r\n\r\n    if (plotItems.every((x) => x.type !== \"pour-solvent\")) {\r\n      totalScore += WATERLESS_REWARD;\r\n      results[\"waterless\"] = {\r\n        value: \"Waterless\",\r\n        score: WATERLESS_REWARD,\r\n      };\r\n    }\r\n\r\n    if (plotItems.every((x) => x.type !== \"heat-vortex\")) {\r\n      totalScore += VORTEXLESS_REWARD;\r\n      results[\"vortexless\"] = {\r\n        value: \"Vortexless\",\r\n        score: VORTEXLESS_REWARD,\r\n      };\r\n    }\r\n\r\n    // Grade based on the distance they took to get there compared to the 'perfect' distance of a straight line.\r\n    const pathDistance = pointArrayLength(committedPoints);\r\n    const linearDistance = vec2Distance(Vec2Zero, this._targetPosition);\r\n    const distanceFraction = pathDistance / linearDistance;\r\n    const distanceScore = Math.round(DISTANCE_PENALTY * distanceFraction);\r\n    totalScore += distanceScore;\r\n    results[\"distance\"] = {\r\n      value: `${pathDistance.toFixed(2)} / ${linearDistance.toFixed(2)}`,\r\n      score: distanceScore,\r\n    };\r\n\r\n    const ingredients = plotItems\r\n      .filter(isAddIngredientPlotItem)\r\n      .map((x) => x.ingredientId);\r\n\r\n    let baseCost = 0;\r\n    let ingredientTypeCounts: Record<string, number> = {};\r\n    for (const ingredientId of ingredients) {\r\n      const ingredient =\r\n        this._ingredientRegistry.getIngredientById(ingredientId);\r\n      if (!ingredient) {\r\n        continue;\r\n      }\r\n      baseCost += ingredient.price;\r\n      ingredientTypeCounts[ingredient.id] =\r\n        (ingredientTypeCounts[ingredient.id] ?? 0) + 1;\r\n    }\r\n\r\n    const stress = Math.sqrt(\r\n      sum(\r\n        Object.keys(ingredientTypeCounts).map((key) =>\r\n          Math.pow(ingredientTypeCounts[key], 2)\r\n        )\r\n      )\r\n    );\r\n\r\n    const potentialHighlanderStress = Math.sqrt(\r\n      Object.keys(ingredientTypeCounts).length\r\n    );\r\n    const stressScore = Math.round(\r\n      STRESS_PENALTY * Math.max(stress - potentialHighlanderStress, 0)\r\n    );\r\n    if (stressScore < 0) {\r\n      totalScore += stressScore;\r\n      results[\"stress\"] = {\r\n        value: `${stress.toFixed(2)} / ${potentialHighlanderStress.toFixed(2)}`,\r\n        score: stressScore,\r\n      };\r\n    }\r\n    if (stress === potentialHighlanderStress) {\r\n      totalScore += HIGHLANDER_BONUS;\r\n      results[\"highlander\"] = {\r\n        value: \"Highlander Bonus\",\r\n        score: HIGHLANDER_BONUS,\r\n      };\r\n    }\r\n\r\n    const costScore = Math.round(COST_PENALTY * baseCost);\r\n    totalScore += costScore;\r\n    results[\"cost\"] = {\r\n      value: `${baseCost.toFixed(2)}`,\r\n      score: costScore,\r\n    };\r\n\r\n    const dangerLength = Math.max(\r\n      ...calculateDangerLengths(committedPoints, this._ingredientRegistry)\r\n    );\r\n    if (dangerLength > DANGER_LENGTH_LETHAL) {\r\n      // TODO: Charge for life salt for bones.\r\n      // Each unit of life salt costs (8736 / 5000) to produce.  Check how much life it regens and use that to find the cost\r\n      // to escape EACH danger segment.\r\n      results[\"bones\"] = {\r\n        value: \"Bone penalty (-25%)\",\r\n        score: -Math.round(totalScore * 0.25),\r\n      };\r\n    }\r\n\r\n    return results;\r\n  }\r\n}\r\n\r\nfunction isAddIngredientPlotItem(\r\n  item: PlotItem\r\n): item is AddIngredientPlotItem {\r\n  return item.type === \"add-ingredient\";\r\n}\r\n","import { ContainerModule } from \"microinject\";\r\n\r\nimport {\r\n  BrewEffectAtPointChallengeFactory,\r\n  brewEffectAtPointChallengeFactoryFactory,\r\n} from \"./challenge-types/BrewEffectAtPointChallenge\";\r\n\r\nimport { ChallengeFactory } from \"./ChallengeFactory\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(BrewEffectAtPointChallengeFactory)\r\n    .toFactory(brewEffectAtPointChallengeFactoryFactory)\r\n    .inSingletonScope();\r\n  bind(ChallengeFactory);\r\n});\r\n","import React from \"react\";\r\nimport { Router } from \"react-router\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\n\r\nimport { History } from \"./History\";\r\n\r\nexport interface AppRouterProps {\r\n  children: React.ReactNode;\r\n}\r\nconst AppRouter = ({ children }: AppRouterProps) => {\r\n  const history = useDIDependency(History);\r\n  let [state, setState] = React.useState({\r\n    action: history.action,\r\n    location: history.location,\r\n  });\r\n\r\n  React.useLayoutEffect(() => history.listen(setState), [history]);\r\n\r\n  return (\r\n    <Router\r\n      children={children}\r\n      location={state.location}\r\n      navigationType={state.action}\r\n      navigator={history}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import {\r\n  type History as HistoryType,\r\n  createHashHistory,\r\n  createBrowserHistory,\r\n} from \"history\";\r\nimport { Identifier } from \"microinject\";\r\n\r\nexport const History: Identifier<HistoryType> = \"history\";\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- Merged DI identifier.\r\nexport type History = HistoryType;\r\nexport function historyFactory() {\r\n  // if (process.env.NODE_ENV === \"production\") {\r\n  //   return createBrowserHistory();\r\n  // } else {\r\n  return createHashHistory();\r\n  // }\r\n}\r\n","import { ContainerModule } from \"microinject\";\r\nimport { History, historyFactory } from \"./History\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(History).toFactory(historyFactory).inSingletonScope();\r\n});\r\n","import { injectable, singleton } from \"microinject\";\r\n\r\nimport { ingredients } from \"./ingredients\";\r\nimport { IngredientDescriptor, IngredientId } from \"./types\";\r\n\r\n@injectable()\r\n@singleton()\r\nexport class IngredientRegistry {\r\n  getIngredients(): readonly IngredientDescriptor[] {\r\n    return ingredients;\r\n  }\r\n\r\n  getIngredientById(id: IngredientId): IngredientDescriptor | null {\r\n    return ingredients.find((x) => x.id === id) ?? null;\r\n  }\r\n}\r\n","import { cubicBezierCurve } from \"@/curves\";\r\nimport { IngredientDescriptor, ingredientId } from \"./types\";\r\n\r\nexport const ingredients: IngredientDescriptor[] = [\r\n  {\r\n    id: ingredientId(\"BloodRuby\"),\r\n    name: \"Blood Ruby\",\r\n    color: \"#C24647\",\r\n    price: 90,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3, -3, -3, -3),\r\n      cubicBezierCurve(-3, -3, -3, -3, -3, 3, -3, 3),\r\n      cubicBezierCurve(-3, 3, -3, 3, -5.9999, 0, -6, 0),\r\n    ],\r\n    preGrindPercent: 0.1465,\r\n    teleports: true,\r\n  },\r\n  {\r\n    id: ingredientId(\"BloodyRoot\"),\r\n    name: \"Bloodthorn\",\r\n    color: \"#AC4937\",\r\n    price: 14,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0.0001001358, -2, 0, -2),\r\n      cubicBezierCurve(0, -2, -0.0001001358, -2, -1.7499, 1, -1.75, 1),\r\n      cubicBezierCurve(-1.75, 1, -1.7501, 1, -1.7501, -3, -1.75, -3),\r\n      cubicBezierCurve(-1.75, -3, -1.7499, -3, -4.0001, 2, -4, 2),\r\n      cubicBezierCurve(-4, 2, -3.9999, 2, -3.9999, -4, -4, -4),\r\n      cubicBezierCurve(-4, -4, -4.0001, -4, -5.9999, 0, -6, 0),\r\n    ],\r\n    preGrindPercent: 0.435,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"CliffFungus\"),\r\n    name: \"Brown Mushroom\",\r\n    color: \"#957C64\",\r\n    price: 6,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, -1, 0, -1, -1, -1),\r\n      cubicBezierCurve(-1, -1, -2, -1, -2, -1, -2, -2),\r\n      cubicBezierCurve(-2, -2, -2, -3, -2, -3, 0, -3),\r\n      cubicBezierCurve(0, -3, 2, -3, 2, -3, 2, -4),\r\n      cubicBezierCurve(2, -4, 2, -5, 2, -5, 0.5, -5),\r\n      cubicBezierCurve(0.5, -5, 0, -5, 0, -5, 0, -6),\r\n    ],\r\n    preGrindPercent: 0.5,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Crystal\"),\r\n    name: \"Cloud Crystal\",\r\n    color: \"#ADADAD\",\r\n    price: 60,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 0, -0.75, 1, 0, 1.5),\r\n      cubicBezierCurve(0, 1.5, 0.7499999, 2, 1, 2, 1, 2.75),\r\n      cubicBezierCurve(1, 2.75, 0.9999999, 3.75, -0.9999999, 3.25, -1, 4.25),\r\n      cubicBezierCurve(-1, 4.25, -1, 5, -0.75, 5, 0, 5.5),\r\n      cubicBezierCurve(0, 5.5, 0.7499999, 6, 0.0001, 7, 0, 7),\r\n    ],\r\n    preGrindPercent: 0.177,\r\n    teleports: true,\r\n  },\r\n  {\r\n    id: ingredientId(\"DryadMushroom\"),\r\n    name: \"Dryad's Saddle\",\r\n    color: \"#9C785A\",\r\n    price: 5.5,\r\n    path: [\r\n      cubicBezierCurve(0, 0, -0.25, 0, -1.33541, -0.3291796, -1, -1),\r\n      cubicBezierCurve(-1, -1, -0.5, -2, 2, -0.5, 2, -2),\r\n      cubicBezierCurve(2, -2, 2, -3.5, -2, -1.25, -2, -3),\r\n      cubicBezierCurve(-2, -3, -2, -3.75, 0.0001, -3.75, 0, -3.75),\r\n    ],\r\n    preGrindPercent: 0.53,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"EarthCrystal\"),\r\n    name: \"Earth Pyrite\",\r\n    color: \"#93806A\",\r\n    price: 30,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0, -1.5, 0, -1.5),\r\n      cubicBezierCurve(0, -1.5, 0, -1.5, -1, -1.5, -1, -1.5),\r\n      cubicBezierCurve(-1, -1.5, -1, -1.5, -1, -3.5, -1, -3.5),\r\n      cubicBezierCurve(-1, -3.5, -1, -3.5, 1, -3.5, 1, -3.5),\r\n      cubicBezierCurve(1, -3.5, 1, -3.5, 1, -5.5, 1, -5.5),\r\n      cubicBezierCurve(1, -5.5, 1, -5.5, 0, -5.5, 0, -5.5),\r\n      cubicBezierCurve(0, -5.5, 0, -5.5, 0.0001, -7, 0, -7),\r\n    ],\r\n    preGrindPercent: 0.1364,\r\n    teleports: true,\r\n  },\r\n  {\r\n    id: ingredientId(\"Firebell\"),\r\n    name: \"Firebell\",\r\n    color: \"#D1810D\",\r\n    price: 5,\r\n    path: [\r\n      cubicBezierCurve(0, 0, -1.25, 1, -1.2501, 1, -1.25, 1),\r\n      cubicBezierCurve(-1.25, 1, -1.2499, 1, -2.5001, 0, -2.5, 0),\r\n      cubicBezierCurve(-2.5, 0, -2.4999, 0, -3.7501, 1, -3.75, 1),\r\n      cubicBezierCurve(-3.75, 1, -3.7499, 1, -3.75, 1, -5, 0),\r\n    ],\r\n    preGrindPercent: 0.5,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"FireCitrine\"),\r\n    name: \"Fire Citrine\",\r\n    color: \"#CD7C19\",\r\n    price: 50,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -0.75, -1.5, -1.5, 0),\r\n      cubicBezierCurve(-1.5, 0, -2.5, 2, -2.75, -0.7499999, -3.5, -0.75),\r\n      cubicBezierCurve(-3.5, -0.75, -4.25, -0.75, -4.5, 2, -5.5, 0),\r\n      cubicBezierCurve(-5.5, 0, -6.25, -1.5, -6.9999, 0, -7, 0),\r\n    ],\r\n    preGrindPercent: 0.202,\r\n    teleports: true,\r\n  },\r\n  {\r\n    id: ingredientId(\"FrostSapphire\"),\r\n    name: \"Frost Sapphire\",\r\n    color: \"#7399BF\",\r\n    price: 40,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 0, 0.25, 0.5, 0.25, 0.5),\r\n      cubicBezierCurve(0.25, 0.5, 0.25, 0.5, 1, -1, 1, -1),\r\n      cubicBezierCurve(1, -1, 1, -1, 2, 1, 2, 1),\r\n      cubicBezierCurve(2, 1, 2, 1, 3, -1, 3, -1),\r\n      cubicBezierCurve(3, -1, 3, -1, 4, 1, 4, 1),\r\n      cubicBezierCurve(4, 1, 4, 1, 5, -1, 5, -1),\r\n      cubicBezierCurve(5, -1, 5, -1, 6, 1, 6, 1),\r\n      cubicBezierCurve(6, 1, 6, 1, 6.75, -0.5, 6.75, -0.5),\r\n      cubicBezierCurve(6.75, -0.5, 6.75, -0.5, 7.0001, 0, 7, 0),\r\n    ],\r\n    preGrindPercent: 0.2139,\r\n    teleports: true,\r\n  },\r\n  {\r\n    id: ingredientId(\"GoblinMushroom\"),\r\n    name: \"Goblin Shroom\",\r\n    color: \"#928A5E\",\r\n    price: 5,\r\n    path: [cubicBezierCurve(0, 0, 3, 0, 3, -5, 0, -5)],\r\n    preGrindPercent: 0.663,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Goldthorn\"),\r\n    name: \"Goldthorn\",\r\n    color: \"#96714E\",\r\n    price: 12.5,\r\n    path: [\r\n      cubicBezierCurve(0, 0, -0.25, 0, -0.5, 0.25, -0.5, 0.5),\r\n      cubicBezierCurve(-0.5, 0.5, -0.5, 0.75, -0.25, 1, 0, 1),\r\n      cubicBezierCurve(0, 1, 1, 1, 1, 0.5, 1, 0),\r\n      cubicBezierCurve(1, 0, 1, -0.5, 0.5, -0.9999999, 0, -1),\r\n      cubicBezierCurve(0, -1, -0.75, -1, -1.5, -0.25, -1.5, 0.25),\r\n      cubicBezierCurve(-1.5, 0.25, -1.5, 1.75, -0.75, 2, 0, 2),\r\n      cubicBezierCurve(0, 2, 1.25, 2, 2, 1.25, 2, 0),\r\n      cubicBezierCurve(2, 0, 2, -1, 1, -2, 0, -2),\r\n    ],\r\n    preGrindPercent: 0.3013,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"GraveTruffle\"),\r\n    name: \"Grave Truffle\",\r\n    color: \"#908B7F\",\r\n    price: 10,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3.0001, -2, -3, -2),\r\n      cubicBezierCurve(-3, -2, -2.9999, -2, -0.7501, -7, -0.75, -7),\r\n      cubicBezierCurve(-0.75, -7, -0.7499, -7, 0.7499, -7, 0.75, -7),\r\n      cubicBezierCurve(0.75, -7, 0.7501, -7, 3, -2, 3, -2),\r\n      cubicBezierCurve(3, -2, 3, -2, -0.0001, -1.25, 0, -1.25),\r\n      cubicBezierCurve(0, -1.25, 0.0001, -1.25, 0.0001, -5, 0, -5),\r\n    ],\r\n    preGrindPercent: 0.2535,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"GreenMushroom\"),\r\n    name: \"Green Mushroom\",\r\n    color: \"#A5A24F\",\r\n    price: 9,\r\n    path: [\r\n      cubicBezierCurve(\r\n        0,\r\n        0,\r\n        3.02107,\r\n        1.020414,\r\n        0.5508628,\r\n        -1.518064,\r\n        1.527383,\r\n        -2.506451\r\n      ),\r\n      cubicBezierCurve(\r\n        1.527383,\r\n        -2.506451,\r\n        2.500548,\r\n        -3.491441,\r\n        5.012281,\r\n        -0.9910625,\r\n        3.996144,\r\n        -3.978157\r\n      ),\r\n    ],\r\n    preGrindPercent: 0.5,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"GreyChanterelle\"),\r\n    name: \"Shadow Chanterelle\",\r\n    color: \"#887C77\",\r\n    price: 10,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 3, 0, -2.384186e-7, 5, 3, 5),\r\n      cubicBezierCurve(3, 5, 4, 5, 4.5, 4, 4.5, 3),\r\n    ],\r\n    preGrindPercent: 0.512,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"IceDragonfruit\"),\r\n    name: \"Ice Fruit\",\r\n    color: \"#5D8089\",\r\n    price: 9,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0.9999, 2, 1, 2),\r\n      cubicBezierCurve(1, 2, 1.0001, 2, 3, -2, 3, -2),\r\n      cubicBezierCurve(3, -2, 3, -2, 4.9999, 2, 5, 2),\r\n      cubicBezierCurve(5, 2, 5.0001, 2, 6.0001, 0, 6, 0),\r\n    ],\r\n    preGrindPercent: 0.333,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"LavaRoot\"),\r\n    name: \"Lava Root\",\r\n    color: \"#C86B41\",\r\n    price: 11.5,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 1.5, -2.5, 1.5, -2.5, 0),\r\n      cubicBezierCurve(-2.5, 0, -2.5, -1.5, -5, -1.5, -5, 0),\r\n      cubicBezierCurve(-5, 0, -5, 1.5, -7.5, 1.5, -7.5, 0),\r\n      cubicBezierCurve(-7.5, 0, -7.5, -0.75, -6.25, -0.75, -6.25, 0),\r\n    ],\r\n    preGrindPercent: 0.4289,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Leaf\"),\r\n    name: \"Terraria\",\r\n    color: \"#749064\",\r\n    price: 3,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -0.25, -0.75, 0, -1),\r\n      cubicBezierCurve(0, -1, 0.25, -1.25, 0.5, -1, 0.75, -1.25),\r\n      cubicBezierCurve(0.75, -1.25, 1, -1.5, 1, -2.25, 0.75, -2.5),\r\n      cubicBezierCurve(0.75, -2.5, 0.5, -2.75, -0.5, -2.25, -0.75, -2.5),\r\n      cubicBezierCurve(-0.75, -2.5, -1, -2.75, -1, -3.5, -0.75, -3.75),\r\n      cubicBezierCurve(-0.75, -3.75, -0.5, -4, -0.1767767, -3.823223, 0, -4),\r\n      cubicBezierCurve(0, -4, 0.25, -4.25, 0.0001, -5, 0, -5),\r\n    ],\r\n    preGrindPercent: 0.5,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"LumpyBeet\"),\r\n    name: \"Lumpy Beet\",\r\n    color: \"#A36674\",\r\n    price: 9,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 2, 3, 1, 3, 3),\r\n      cubicBezierCurve(3, 3, 3, 4, 1, 4, 1, 3),\r\n      cubicBezierCurve(1, 3, 1, 2, 1, 1, 1, 0),\r\n      cubicBezierCurve(1, 0, 1, -1, 3, -1, 3, 0),\r\n      cubicBezierCurve(3, 0, 3, 1, 3, 2, 4, 2),\r\n    ],\r\n    preGrindPercent: 0.1805,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Marshrooms\"),\r\n    name: \"Marshroom\",\r\n    color: \"#837956\",\r\n    price: 7,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 2, -2, 1, -4, 3, -4),\r\n      cubicBezierCurve(3, -4, 3.5, -4, 5, -4, 5, -3),\r\n    ],\r\n    preGrindPercent: 0.423,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"RedMushroom\"),\r\n    name: \"Red Mushroom\",\r\n    color: \"#A76C3F\",\r\n    price: 9.5,\r\n    path: [cubicBezierCurve(0, 0, -4, 4, -4, -4, -8, 0)],\r\n    preGrindPercent: 0.5,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Refruit\"),\r\n    name: \"Hairy Banana\",\r\n    color: \"#C5B13E\",\r\n    price: 12.5,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3, -3, -4, -3),\r\n      cubicBezierCurve(-4, -3, -5, -3, -8.000098, -2.453497e-5, -8, 0),\r\n      cubicBezierCurve(-8, 0, -7, 0.25, -5, -1.25, -4, -1),\r\n    ],\r\n    preGrindPercent: 0.3375,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"SulphurShelf\"),\r\n    name: \"Sulphur Shelf\",\r\n    color: \"#D77838\",\r\n    price: 11,\r\n    path: [\r\n      cubicBezierCurve(0, 0, -2, 0, -3.5, 0, -3.5, 0.75),\r\n      cubicBezierCurve(-3.5, 0.75, -3.5, 1.5, -2.75, 1.5, -2.25, 1.5),\r\n      cubicBezierCurve(-2.25, 1.5, -1.75, 1.5, -1, 1.5, -1, 2.25),\r\n      cubicBezierCurve(-1, 2.25, -1, 3, -2.5, 3, -4.5, 3),\r\n    ],\r\n    preGrindPercent: 0.5,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Tangleweeds\"),\r\n    name: \"Tangleweed\",\r\n    color: \"#759786\",\r\n    price: 8.5,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, -1, 3, -1, 3, 0),\r\n      cubicBezierCurve(3, 0, 3, 1, 1.5, 1, 1.5, 0),\r\n      cubicBezierCurve(1.5, 0, 1.5, -1, 3, -2, 4, 0),\r\n      cubicBezierCurve(4, 0, 5, 2, 6.5, 1, 6.5, 0),\r\n      cubicBezierCurve(6.5, 0, 6.5, -1, 5, -1, 5, 0),\r\n      cubicBezierCurve(5, 0, 5, 1, 8, 1, 8, 0),\r\n    ],\r\n    preGrindPercent: 0.5005,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Thistle\"),\r\n    name: \"Thunder Thistle\",\r\n    color: \"#9E5874\",\r\n    price: 9,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 1.9999, 3.5, 2, 3.5),\r\n      cubicBezierCurve(2, 3.5, 2.0001, 3.5, -0.9999, 2.5, -1, 2.5),\r\n      cubicBezierCurve(-1, 2.5, -1.0001, 2.5, 1.0001, 6, 1, 6),\r\n    ],\r\n    preGrindPercent: 0.353,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Thornstick\"),\r\n    name: \"Thornstick\",\r\n    color: \"#818C4D\",\r\n    price: 8,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3.9999, -6, -4, -6),\r\n      cubicBezierCurve(-4, -6, -4.0001, -6, -1.9999, -5, -2, -5),\r\n    ],\r\n    preGrindPercent: 0.319,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Waterbloom\"),\r\n    name: \"Waterbloom\",\r\n    color: \"#539278\",\r\n    price: 4,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.25, -0.5, 1, -0.5, 1.25, 0),\r\n      cubicBezierCurve(1.25, 0, 1.5, 0.4999999, 2.25, 0.5, 2.5, 0),\r\n      cubicBezierCurve(2.5, 0, 2.75, -0.5, 3.5, -0.5, 3.75, 0),\r\n      cubicBezierCurve(3.75, 0, 4, 0.4999999, 4.75, 0.5, 5, 0),\r\n    ],\r\n    preGrindPercent: 0.5,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Wierdshroom\"),\r\n    name: \"Weirdshroom\",\r\n    color: \"#B88A51\",\r\n    price: 8.5,\r\n    path: [\r\n      cubicBezierCurve(0, 0, -2, 0, -2, -6, -1, -6),\r\n      cubicBezierCurve(-1, -6, 0.25, -6, 1.353553, -6.207107, 1, -5.5),\r\n      cubicBezierCurve(1, -5.5, 0.5, -4.5, -0.25, -3.75, 0, -3),\r\n    ],\r\n    preGrindPercent: 0.3045,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"Windbloom\"),\r\n    name: \"Windbloom\",\r\n    color: \"#ADABA2\",\r\n    price: 6,\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0, 0, 0.5, 1.25),\r\n      cubicBezierCurve(0.5, 1.25, 0.9999999, 2.5, 0.9999, 2.5, 1, 2.5),\r\n      cubicBezierCurve(1, 2.5, 1.0001, 2.5, -1.0001, 2.5, -1, 2.5),\r\n      cubicBezierCurve(-1, 2.5, -0.9999, 2.5, -1, 2.5, -0.5, 3.75),\r\n      cubicBezierCurve(-0.5, 3.75, -2.086163e-7, 5, 0.0001, 5, 0, 5),\r\n    ],\r\n    preGrindPercent: 0.5,\r\n    teleports: false,\r\n  },\r\n  {\r\n    id: ingredientId(\"WitchMushroom\"),\r\n    name: \"Witch Mushroom\",\r\n    color: \"#92777C\",\r\n    price: 13,\r\n    path: [cubicBezierCurve(0, 0, 0, 4, 5, 1, 5, 5)],\r\n    preGrindPercent: 0.5,\r\n    teleports: false,\r\n  },\r\n];\r\n","import { ContainerModule } from \"microinject\";\r\n\r\nimport { IngredientRegistry } from \"./IngredientRegistry\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(IngredientRegistry);\r\n});\r\n","import { CubicBezierCurve } from \"@/curves\";\r\nimport { Opaque } from \"type-fest\";\r\n\r\nexport type IngredientId = Opaque<string, \"IngredientName\">;\r\nexport function ingredientId(id: string): IngredientId {\r\n  return id as IngredientId;\r\n}\r\n\r\nexport interface IngredientDescriptor {\r\n  readonly id: IngredientId;\r\n  readonly name: string;\r\n  readonly color: string;\r\n  readonly price: number;\r\n  readonly path: CubicBezierCurve[];\r\n  readonly preGrindPercent: number;\r\n  readonly teleports: boolean;\r\n}\r\n","import { composeModules } from \"microinject\";\r\n\r\nimport challengeModule from \"./challenge/module\";\r\nimport historyModule from \"./history/module\";\r\nimport ingredientsModule from \"./ingredients/module\";\r\nimport plotterModule from \"./plotter/module\";\r\nimport potionBasesModule from \"./potion-bases/module\";\r\nimport shareStringModule from \"./share-string/module\";\r\n\r\nexport default composeModules(\r\n  challengeModule,\r\n  historyModule,\r\n  ingredientsModule,\r\n  plotterModule,\r\n  potionBasesModule,\r\n  shareStringModule\r\n);\r\n","import { last } from \"lodash\";\r\nimport { inject, injectable, singleton } from \"microinject\";\r\n\r\nimport { POTION_RADIUS, VOID_DISTANCE_PER_GRAIN } from \"@/game-settings\";\r\nimport { degreesToRadians } from \"@/utils\";\r\nimport { curvesToPoints, curveToPoints } from \"@/curves\";\r\nimport {\r\n  PointArray,\r\n  pointArrayLength,\r\n  pointArrayLengthCached,\r\n  pointArrayLineFromDistance,\r\n  removePointArrayDistanceFromEnd,\r\n  takePointArrayByDistance,\r\n  takePointArrayByPercent,\r\n} from \"@/point-array\";\r\nimport {\r\n  Vector2,\r\n  vec2Add,\r\n  vec2Distance,\r\n  vec2Equals,\r\n  vec2Magnitude,\r\n  vec2MoveTowards,\r\n  vec2Normalize,\r\n  vec2Rotate,\r\n  vec2Scale,\r\n  pointSignedAngleDegrees180,\r\n  vec2Subtract,\r\n  Vec2Zero,\r\n} from \"@/vector2\";\r\n\r\nimport { IngredientRegistry } from \"../ingredients/IngredientRegistry\";\r\nimport { PotionMap } from \"../potion-maps/PotionMap\";\r\n\r\nimport {\r\n  AddIngredientPlotItem,\r\n  HeatVortexPlotItem,\r\n  PlotItem,\r\n  PlotResult,\r\n  PourSolventPlotItem,\r\n  SetPositionPlotItem,\r\n  StirCauldronPlotItem,\r\n  AddVoidSaltPlotItem,\r\n} from \"./types\";\r\n\r\n@injectable()\r\n@singleton()\r\nexport class Plotter {\r\n  constructor(\r\n    @inject(IngredientRegistry) private ingredientRegistry: IngredientRegistry\r\n  ) {}\r\n\r\n  plotItems(items: readonly PlotItem[], map: PotionMap): PlotResult {\r\n    let result: PlotResult = {\r\n      committedPoints: [],\r\n      pendingPoints: [],\r\n    };\r\n\r\n    const now = Date.now();\r\n\r\n    for (const item of items) {\r\n      result = this._plotItem(item, result, map);\r\n    }\r\n\r\n    for (const point of result.committedPoints.concat(result.pendingPoints)) {\r\n      const collisions = map.hitTest(point, POTION_RADIUS);\r\n      point.bottleCollisions = collisions as any;\r\n    }\r\n\r\n    console.log(\"plotting took\", Date.now() - now);\r\n\r\n    return result;\r\n  }\r\n\r\n  private _plotItem(\r\n    item: PlotItem,\r\n    result: PlotResult,\r\n    map: PotionMap\r\n  ): PlotResult {\r\n    switch (item.type) {\r\n      case \"set-position\":\r\n        return this._plotSetPosition(item, result);\r\n      case \"add-ingredient\":\r\n        return this._plotAddIngredient(item, result);\r\n      case \"pour-solvent\":\r\n        return this._plotPourSolvent(item, result);\r\n      case \"stir-cauldron\":\r\n        return this._plotStirCauldron(item, result);\r\n      case \"heat-vortex\":\r\n        return this._plotHeatVortex(item, result, map);\r\n      case \"void-salt\":\r\n        return this._plotVoidSalt(item, result);\r\n      default:\r\n        throw new Error(`Unknown plot item type: ${(item as any).type}`);\r\n    }\r\n  }\r\n\r\n  private _plotSetPosition(\r\n    item: SetPositionPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const { x, y } = item;\r\n\r\n    return commitPlotPoints([{ x, y }], item, result);\r\n  }\r\n\r\n  private _plotAddIngredient(\r\n    item: AddIngredientPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const { ingredientId, grindPercent } = item;\r\n\r\n    const addPosition =\r\n      last(result.pendingPoints) ?? last(result.committedPoints) ?? Vec2Zero;\r\n\r\n    const ingredient = this.ingredientRegistry.getIngredientById(ingredientId);\r\n    if (!ingredient) {\r\n      throw new Error(`Unknown ingredient: ${ingredientId}`);\r\n    }\r\n\r\n    // const ingredientPoints: PointArray = [];\r\n    // for (const curve of ingredient.path) {\r\n    //   const points = curveToPoints(curve);\r\n    //   ingredientPoints.push(...points);\r\n    // }\r\n\r\n    const ingredientPoints = curvesToPoints(ingredient.path);\r\n\r\n    const takePercent =\r\n      ingredient.preGrindPercent +\r\n      grindPercent * (1 - ingredient.preGrindPercent);\r\n\r\n    const [addedPoints] = takePointArrayByPercent(\r\n      ingredientPoints,\r\n      takePercent\r\n    );\r\n\r\n    const appendPendingPoints = addedPoints.map((point) =>\r\n      vec2Add(addPosition, point)\r\n    );\r\n\r\n    return appendPendingPlotPoints(appendPendingPoints, item, result);\r\n  }\r\n\r\n  private _plotPourSolvent(\r\n    item: PourSolventPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const currentPoint =\r\n      result.committedPoints[result.committedPoints.length - 1] ?? Vec2Zero;\r\n    if (vec2Equals(currentPoint, Vec2Zero)) {\r\n      return result;\r\n    }\r\n\r\n    let { distance } = item;\r\n\r\n    const distanceToOrigin = vec2Distance(currentPoint, Vec2Zero);\r\n    if (distance > distanceToOrigin) {\r\n      distance = distanceToOrigin;\r\n    }\r\n\r\n    const newPoints = pointArrayLineFromDistance(\r\n      currentPoint,\r\n      vec2Normalize(vec2Subtract(Vec2Zero, currentPoint)),\r\n      distance\r\n    );\r\n\r\n    return commitPlotPoints(newPoints, item, result);\r\n  }\r\n\r\n  private _plotStirCauldron(\r\n    item: StirCauldronPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const { distance } = item;\r\n\r\n    const [addedPoints, remainderPlotPoints] = takePointArrayByDistance(\r\n      result.pendingPoints,\r\n      distance\r\n    );\r\n\r\n    return {\r\n      committedPoints: result.committedPoints.concat(addedPoints),\r\n      pendingPoints: remainderPlotPoints,\r\n    };\r\n  }\r\n\r\n  private _plotHeatVortex(\r\n    item: HeatVortexPlotItem,\r\n    result: PlotResult,\r\n    map: PotionMap\r\n  ): PlotResult {\r\n    const indicatorPosition = last(result.committedPoints) ?? Vec2Zero;\r\n    const vortex = map\r\n      .hitTest(indicatorPosition, POTION_RADIUS)\r\n      .find((x) => x.entityType === \"Vortex\");\r\n\r\n    if (!vortex) {\r\n      return result;\r\n    }\r\n\r\n    const { distance } = item;\r\n\r\n    /* RecipeMapManager.MoveIndicatorTowardsVortex()\r\n    float maxDistanceDelta = this.vortexSettings.vortexMovementFromHeatDependence.Evaluate(Managers.Ingredient.coals.Heat) * this.vortexSettings.vortexMovementSpeed * Time.deltaTime;\r\n    Vector2 localPosition1 = (Vector2) this.currentVortexMapItem.thisTransform.localPosition;\r\n    Vector2 localPosition2 = (Vector2) this.recipeMapObject.indicatorContainer.localPosition;\r\n    Vector2 to = localPosition2 - localPosition1;\r\n    float magnitude = to.magnitude;\r\n    float f1 = Mathf.Sign(this.vortexSettings.vortexSpiralThetaPower) * this.vortexSettings.vortexSpiralStep;\r\n    float f2 = Mathf.Pow((float) ((double) magnitude * 2.0 * 3.14159274101257) / f1, 1f / this.vortexSettings.vortexSpiralThetaPower);\r\n    float b = f2 - maxDistanceDelta * (float) ((int) Mathf.Sign(this.vortexSettings.vortexSpiralThetaPower) * (int) Mathf.Sign(f1));\r\n    float f3 = f2.Is(0.0f) ? 0.0f : ((double) f2 < 0.0 ? Mathf.Min(0.0f, b) : Mathf.Max(0.0f, b));\r\n    double num = (double) f1 * 0.5 / 3.14159274101257 * (double) Mathf.Pow(f3, this.vortexSettings.vortexSpiralThetaPower);\r\n    Vector2 from = magnitude * new Vector2(Mathf.Cos(f2), Mathf.Sin(f2));\r\n    Vector2 vector2_1 = new Vector2(Mathf.Cos(f3), Mathf.Sin(f3));\r\n    Vector2 vector2_2 = ((float) num * vector2_1).Rotate(Vector2.SignedAngle(from, to));\r\n    Vector2 vector2_3 = Vector2.MoveTowards(localPosition2, localPosition1 + vector2_2, maxDistanceDelta);\r\n    this.indicator.targetPosition += vector2_3 - localPosition2;\r\n    this.recipeMapObject.indicatorContainer.localPosition = (Vector3) vector2_3;\r\n    */\r\n\r\n    // VortexSettings\r\n    const vortexMovementFromHeatDependence10Percent = 0.19;\r\n    const vortexMovementSpeed = 2.5;\r\n    const vortexSpiralStep = 1;\r\n    const vortexSpiralThetaPower = 1;\r\n\r\n    // Calculate the step as if we were running at 10% heat at 60 frames a second.\r\n    const step =\r\n      vortexMovementFromHeatDependence10Percent *\r\n      vortexMovementSpeed *\r\n      (1 / 60);\r\n\r\n    let remainingDistance = distance;\r\n    let currentPosition = indicatorPosition;\r\n    const pointsToAdd: Vector2[] = [indicatorPosition];\r\n    while (remainingDistance > 0) {\r\n      const to = vec2Subtract(currentPosition, vortex);\r\n      const magnitude = vec2Magnitude(to);\r\n      const f1 = Math.sign(vortexSpiralThetaPower) * vortexSpiralStep;\r\n      const f2 = Math.pow(\r\n        (magnitude * 2.0 * Math.PI) / f1,\r\n        1 / vortexSpiralThetaPower\r\n      );\r\n      const b = f2 - step * (Math.sign(vortexSpiralThetaPower) * Math.sign(f1));\r\n      const f3 =\r\n        Math.abs(f2) < Number.EPSILON\r\n          ? 0\r\n          : f2 < 0.0\r\n          ? Math.min(0.0, b)\r\n          : Math.max(0.0, b);\r\n      const num = ((f1 * 0.5) / Math.PI) * Math.pow(f3, vortexSpiralThetaPower);\r\n      const from = vec2Scale({ x: Math.cos(f2), y: Math.sin(f2) }, magnitude);\r\n      const vector2_1 = { x: Math.cos(f3), y: Math.sin(f3) };\r\n\r\n      const rotation = degreesToRadians(pointSignedAngleDegrees180(from, to));\r\n      const vector2_2 = vec2Rotate(vec2Scale(vector2_1, num), rotation);\r\n      const vector2_3 = vec2MoveTowards(\r\n        currentPosition,\r\n        vec2Add(vortex, vector2_2),\r\n        step\r\n      );\r\n\r\n      currentPosition = vector2_3;\r\n      pointsToAdd.push(currentPosition);\r\n\r\n      remainingDistance = Math.max(0, remainingDistance - step);\r\n    }\r\n\r\n    return commitPlotPoints(pointsToAdd, item, result);\r\n  }\r\n\r\n  private _plotVoidSalt(\r\n    item: AddVoidSaltPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const { grains } = item;\r\n    const points = removePointArrayDistanceFromEnd(\r\n      result.pendingPoints,\r\n      grains * VOID_DISTANCE_PER_GRAIN\r\n    );\r\n\r\n    return {\r\n      committedPoints: result.committedPoints,\r\n      pendingPoints: points,\r\n    };\r\n  }\r\n}\r\n\r\nfunction appendPendingPlotPoints(\r\n  points: Vector2[],\r\n  source: PlotItem,\r\n  result: PlotResult\r\n): PlotResult {\r\n  if (source == null) {\r\n    throw new Error(\"source is null\");\r\n  }\r\n\r\n  if (points.length === 0) {\r\n    return result;\r\n  }\r\n\r\n  return Object.assign({}, result, {\r\n    pendingPoints: result.pendingPoints.concat(\r\n      points.map((point) => ({\r\n        x: point.x,\r\n        y: point.y,\r\n        source,\r\n        bottleCollisions: [],\r\n      }))\r\n    ),\r\n  });\r\n}\r\n\r\nfunction commitPlotPoints(\r\n  points: Vector2[],\r\n  source: PlotItem,\r\n  result: PlotResult\r\n): PlotResult {\r\n  if (source == null) {\r\n    throw new Error(\"source is null\");\r\n  }\r\n\r\n  if (points.length === 0) {\r\n    return result;\r\n  }\r\n\r\n  const difference = vec2Subtract(\r\n    last(points)!,\r\n    last(result.committedPoints) ?? Vec2Zero\r\n  );\r\n\r\n  return Object.assign({}, result, {\r\n    committedPoints: result.committedPoints.concat(\r\n      points.map((point) => ({\r\n        x: point.x,\r\n        y: point.y,\r\n        source,\r\n        bottleCollisions: [],\r\n      }))\r\n    ),\r\n    pendingPoints: result.pendingPoints.map((point) => ({\r\n      x: point.x + difference.x,\r\n      y: point.y + difference.y,\r\n      source: point.source,\r\n    })),\r\n  });\r\n}\r\n","import { ContainerModule } from \"microinject\";\r\n\r\nimport { Plotter } from \"./Plotter\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(Plotter);\r\n});\r\n","import { Vector2 } from \"@/vector2\";\r\n\r\nimport { IngredientId } from \"../ingredients/types\";\r\nimport { MapEntity } from \"../potion-maps/types\";\r\n\r\nexport interface SetPositionPlotItem {\r\n  type: \"set-position\";\r\n  x: number;\r\n  y: number;\r\n}\r\nconst SetPositionPlotItemKeys = [\"x\", \"y\"] as const;\r\nexport const DefaultSetPositionPlotItem = Object.freeze({\r\n  type: \"set-position\",\r\n  x: 0,\r\n  y: 0,\r\n});\r\nexport function isValidSetPositionPlotItem(item: SetPositionPlotItem) {\r\n  return true;\r\n}\r\n\r\nexport interface AddIngredientPlotItem {\r\n  type: \"add-ingredient\";\r\n  ingredientId: IngredientId;\r\n  grindPercent: number;\r\n}\r\nconst AddIngredientPlotItemKeys = [\"ingredientId\", \"grindPercent\"] as const;\r\nexport const DefaultAddIngredientPlotItem = Object.freeze({\r\n  type: \"add-ingredient\",\r\n  ingredientId: null as any as IngredientId,\r\n  grindPercent: 1,\r\n});\r\nexport function isValidAddIngredientPlotItem(\r\n  item: AddIngredientPlotItem\r\n): boolean {\r\n  const { ingredientId, grindPercent } = item;\r\n  return (\r\n    ingredientId != null &&\r\n    ingredientId !== \"\" &&\r\n    grindPercent >= 0 &&\r\n    grindPercent <= 1\r\n  );\r\n}\r\nexport function isIngredientPlotItem(\r\n  item: PlotItem\r\n): item is AddIngredientPlotItem {\r\n  return item.type === \"add-ingredient\";\r\n}\r\n\r\nexport interface PourSolventPlotItem {\r\n  type: \"pour-solvent\";\r\n  distance: number;\r\n}\r\nconst PourSolventPlotItemKeys = [\"distance\"] as const;\r\nexport const DefaultPourSolventPlotItem = Object.freeze({\r\n  type: \"pour-solvent\",\r\n  distance: 0,\r\n});\r\nexport function isValidPourSolventPlotItem(item: PourSolventPlotItem) {\r\n  return item.distance >= 0;\r\n}\r\n\r\nexport interface StirCauldronPlotItem {\r\n  type: \"stir-cauldron\";\r\n  distance: number;\r\n}\r\nexport const DefaultStirCauldronPlotItem = Object.freeze({\r\n  type: \"stir-cauldron\",\r\n  distance: 0,\r\n});\r\nexport function isValidStirCauldronPlotItem(item: StirCauldronPlotItem) {\r\n  return item.distance >= 0;\r\n}\r\nconst StirCauldronPlotItemKeys = [\"distance\"] as const;\r\n\r\nexport interface HeatVortexPlotItem {\r\n  type: \"heat-vortex\";\r\n  distance: number;\r\n}\r\nconst HeatVortexPlotItemKeys = [\"distance\"] as const;\r\nexport const DefaultHeatVortexPlotItem = Object.freeze({\r\n  type: \"heat-vortex\",\r\n  distance: 0,\r\n});\r\nexport function isValidHeatVortexPlotItem(item: HeatVortexPlotItem) {\r\n  return item.distance >= 0;\r\n}\r\n\r\nexport interface AddVoidSaltPlotItem {\r\n  type: \"void-salt\";\r\n  grains: number;\r\n}\r\nconst AddVoidSaltPlotItemKeys = [\"grains\"] as const;\r\nexport function isVoidSaltPlotItem(\r\n  item: PlotItem\r\n): item is AddVoidSaltPlotItem {\r\n  return item.type === \"void-salt\";\r\n}\r\nexport const DefaultAddVoidSaltPlotItemItem = Object.freeze({\r\n  type: \"void-salt\",\r\n  grains: 0,\r\n});\r\nexport function isValidAddVoidSaltPlotItem(item: AddVoidSaltPlotItem) {\r\n  return item.grains >= 0;\r\n}\r\n\r\nexport type PlotItem =\r\n  | SetPositionPlotItem\r\n  | AddIngredientPlotItem\r\n  | PourSolventPlotItem\r\n  | StirCauldronPlotItem\r\n  | HeatVortexPlotItem\r\n  | AddVoidSaltPlotItem;\r\n\r\nexport const PlotItemKeysByType: Record<PlotItem[\"type\"], readonly string[]> = {\r\n  \"set-position\": SetPositionPlotItemKeys,\r\n  \"add-ingredient\": AddIngredientPlotItemKeys,\r\n  \"pour-solvent\": PourSolventPlotItemKeys,\r\n  \"stir-cauldron\": StirCauldronPlotItemKeys,\r\n  \"heat-vortex\": HeatVortexPlotItemKeys,\r\n  \"void-salt\": AddVoidSaltPlotItemKeys,\r\n};\r\n\r\nexport const DefaultPlotItemByType: Record<\r\n  PlotItem[\"type\"],\r\n  Readonly<PlotItem>\r\n> = {\r\n  \"set-position\": DefaultSetPositionPlotItem,\r\n  \"add-ingredient\": DefaultAddIngredientPlotItem,\r\n  \"pour-solvent\": DefaultPourSolventPlotItem,\r\n  \"stir-cauldron\": DefaultStirCauldronPlotItem,\r\n  \"heat-vortex\": DefaultHeatVortexPlotItem,\r\n  \"void-salt\": DefaultAddVoidSaltPlotItemItem,\r\n};\r\n\r\nexport const PlotItemValidatorByType: Record<\r\n  PlotItem[\"type\"],\r\n  (value: any) => boolean\r\n> = {\r\n  \"set-position\": isValidSetPositionPlotItem,\r\n  \"add-ingredient\": isValidAddIngredientPlotItem,\r\n  \"pour-solvent\": isValidPourSolventPlotItem,\r\n  \"stir-cauldron\": isValidStirCauldronPlotItem,\r\n  \"heat-vortex\": isValidHeatVortexPlotItem,\r\n  \"void-salt\": isValidAddVoidSaltPlotItem,\r\n};\r\n\r\nexport interface PlotPoint extends Vector2 {\r\n  source: PlotItem;\r\n  bottleCollisions: Readonly<MapEntity>[];\r\n}\r\n\r\nexport interface PlotResult {\r\n  committedPoints: PlotPoint[];\r\n  pendingPoints: PlotPoint[];\r\n}\r\n\r\nexport const EmptyPlotResult: Readonly<PlotResult> = Object.freeze({\r\n  committedPoints: [],\r\n  pendingPoints: [],\r\n}) as any;\r\n","import { POTION_RADIUS } from \"@/game-settings\";\r\nimport { vec2Magnitude, vec2Subtract } from \"@/vector2\";\r\nimport { clamp } from \"lodash\";\r\nimport { IngredientRegistry } from \"../ingredients/IngredientRegistry\";\r\nimport { isIngredientPlotItem, PlotPoint } from \"./types\";\r\n\r\nexport function getEffectTier(\r\n  distance: number,\r\n  angleDegreesDelta: number\r\n): number {\r\n  // Bottle and effect both have radius of POTION_RADIUS, and they must touch\r\n  // to achieve the first tier.\r\n  if (distance >= POTION_RADIUS * 2) {\r\n    return 0;\r\n  }\r\n\r\n  // From RecipeMapManager.GetEffectTier()\r\n  const middleEffectPowerPosition = 0.9;\r\n  const effectPowerDistanceDependence = (value: number) => {\r\n    return -0.36 * value + 0.72;\r\n  };\r\n  const effectPowerAngleDependence = (value: number) => {\r\n    // TODO: angle\r\n    // We know its 0.3 at the perfect angle.\r\n    return 0.3;\r\n  };\r\n\r\n  const value = clamp(\r\n    effectPowerDistanceDependence(distance) +\r\n      effectPowerAngleDependence(angleDegreesDelta),\r\n    0,\r\n    1\r\n  );\r\n  if (value < middleEffectPowerPosition) {\r\n    return 1;\r\n  }\r\n  return !(Math.abs(value - 1) < Number.EPSILON) ? 2 : 3;\r\n}\r\n\r\nexport function calculateDangerLengths(\r\n  items: PlotPoint[],\r\n  ingredientRegistry: IngredientRegistry\r\n): number[] {\r\n  const lengths: number[] = [];\r\n  let currentLength = 0;\r\n  let prevItem = items[0];\r\n  for (let i = 1; i < items.length; i++) {\r\n    const item = items[i];\r\n    let teleports = false;\r\n    if (isIngredientPlotItem(item.source)) {\r\n      const ingredient = ingredientRegistry.getIngredientById(\r\n        item.source.ingredientId\r\n      );\r\n      if (ingredient && ingredient.teleports) {\r\n        teleports = true;\r\n      }\r\n    }\r\n    if (\r\n      !teleports &&\r\n      item.bottleCollisions.some((x) => x.entityType === \"DangerZonePart\")\r\n    ) {\r\n      currentLength += vec2Magnitude(vec2Subtract(item, prevItem));\r\n    } else {\r\n      lengths.push(currentLength);\r\n      currentLength = 0;\r\n    }\r\n    prevItem = item;\r\n  }\r\n\r\n  if (currentLength > 0) {\r\n    lengths.push(currentLength);\r\n  }\r\n\r\n  return lengths;\r\n}\r\n","import { injectable, singleton } from \"microinject\";\r\n\r\nimport { typedKeys } from \"@/utils\";\r\n\r\nimport { PotionBaseMaps } from \"../potion-maps/maps\";\r\nimport { PotionMap } from \"../potion-maps/PotionMap\";\r\nimport { PotionBaseId, PotionBase } from \"./types\";\r\n\r\n@injectable()\r\n@singleton()\r\nexport class PotionBaseRegistry {\r\n  private readonly _potionBasesById: Record<PotionBaseId, PotionBase> = {};\r\n\r\n  constructor() {\r\n    for (const key of typedKeys(PotionBaseMaps)) {\r\n      const id = key as PotionBaseId;\r\n      const base: PotionBase = {\r\n        id,\r\n        map: new PotionMap(PotionBaseMaps[key]),\r\n      };\r\n      this._potionBasesById[id] = base;\r\n    }\r\n  }\r\n\r\n  getPotionBaseById(id: PotionBaseId): PotionBase | null {\r\n    return this._potionBasesById[id] ?? null;\r\n  }\r\n}\r\n","import { ContainerModule } from \"microinject\";\r\nimport { PotionBaseRegistry } from \"./PotionBaseRegistry\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(PotionBaseRegistry);\r\n});\r\n","import { uniq } from \"lodash\";\r\n\r\nimport { Vector2 } from \"@/vector2\";\r\nimport { rectFromCircle } from \"@/rectangles\";\r\n\r\nimport {\r\n  getRegionIndexesFromRect,\r\n  getRegionIndexFromPoint,\r\n  REGION_COUNT,\r\n} from \"./regions\";\r\nimport { MapEntity } from \"./types\";\r\nimport { EntityDefs } from \"./entity-defs\";\r\n\r\nexport class PotionMap {\r\n  private _entityRegions: MapEntity[][] | null = null;\r\n\r\n  constructor(private _entities: readonly Readonly<MapEntity>[]) {}\r\n\r\n  get entities(): readonly Readonly<MapEntity>[] {\r\n    return this._entities;\r\n  }\r\n\r\n  hitTest(p: Vector2, radius = 0): readonly Readonly<MapEntity>[] {\r\n    const regions = this._getEntityRegions();\r\n\r\n    const indexes =\r\n      radius <= 0\r\n        ? [getRegionIndexFromPoint(p)]\r\n        : getRegionIndexesFromRect(rectFromCircle(p, radius));\r\n\r\n    const entities = uniq(\r\n      ([] as MapEntity[]).concat(...indexes.map((index) => regions[index]))\r\n    );\r\n\r\n    const result: MapEntity[] = [];\r\n    for (const entity of entities) {\r\n      const entityDef = EntityDefs[entity.entityType];\r\n      if (!entityDef) {\r\n        continue;\r\n      }\r\n\r\n      if (entityDef.hitTest(p, entity, radius)) {\r\n        result.push(entity);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private _getEntityRegions(): MapEntity[][] {\r\n    if (this._entityRegions) {\r\n      return this._entityRegions;\r\n    }\r\n\r\n    this._entityRegions = new Array(REGION_COUNT);\r\n    for (let i = 0; i < REGION_COUNT; i++) {\r\n      this._entityRegions[i] = [];\r\n    }\r\n\r\n    for (const entity of this._entities) {\r\n      const entityDef = EntityDefs[entity.entityType];\r\n      if (!entityDef) {\r\n        continue;\r\n      }\r\n      const bounds = entityDef.getBounds(entity);\r\n      const indexes = getRegionIndexesFromRect(bounds);\r\n      for (const index of indexes) {\r\n        this._entityRegions[index].push(entity);\r\n      }\r\n    }\r\n\r\n    return this._entityRegions;\r\n  }\r\n}\r\n","import { POTION_RADIUS } from \"@/game-settings\";\r\nimport { Vector2, vec2Magnitude, vec2Rotate, vec2Subtract } from \"@/vector2\";\r\nimport {\r\n  rectangle,\r\n  Rectangle,\r\n  rectFromCircle,\r\n  rectOffset,\r\n  rectSize,\r\n} from \"@/rectangles\";\r\nimport { degreesToRadians } from \"@/utils\";\r\n\r\nimport { MapEntity } from \"./types\";\r\n\r\nexport interface EntityDefinition {\r\n  readonly entityType: MapEntity[\"entityType\"];\r\n  getFriendlyName(entity: MapEntity): string;\r\n  getBounds(entity: MapEntity): Rectangle;\r\n  hitTest(p: Vector2, entity: MapEntity, radius?: number): boolean;\r\n}\r\n\r\nconst VortexRadii = {\r\n  Large: 1.65,\r\n  Medium: 1.25,\r\n} as const;\r\n\r\nexport const EntityDefs: Record<MapEntity[\"entityType\"], EntityDefinition> = {\r\n  PotionEffect: {\r\n    entityType: \"PotionEffect\",\r\n    getFriendlyName(entity: MapEntity) {\r\n      const effectEntity = assertEntity(entity, \"PotionEffect\");\r\n      return effectEntity.effect;\r\n    },\r\n    getBounds(entity: MapEntity) {\r\n      return rectFromCircle(entity, POTION_RADIUS);\r\n    },\r\n    hitTest(p: Vector2, entity: MapEntity, radius = 0) {\r\n      return vec2Magnitude(vec2Subtract(p, entity)) - radius <= POTION_RADIUS;\r\n    },\r\n  },\r\n  // NOTE: This should be replaced by something that knows the different hitboxes of each type.\r\n  // This would be complicated, as many of them are rects and rotation needs to be taken into account.\r\n  DangerZonePart: {\r\n    entityType: \"DangerZonePart\",\r\n    getFriendlyName(entity: MapEntity) {\r\n      const boneEntity = assertEntity(entity, \"DangerZonePart\");\r\n      // return boneEntity.prefab;\r\n      return \"Bone\";\r\n    },\r\n    getBounds(entity: MapEntity) {\r\n      const bone = assertEntity(entity, \"DangerZonePart\");\r\n      switch (bone.prefab) {\r\n        case \"Fang1\":\r\n          // Need to cover all rotations, so use the largest axis for both.\r\n          return rectOffset(rectangle(-0.06, -0.06, 0.12, 0.12), entity);\r\n        case \"Fang2\":\r\n          // Need to cover all rotations, so use the largest axis for both.\r\n          return rectOffset(rectangle(-0.12, -0.12, 0.24, 0.24), entity);\r\n        case \"Bone1\":\r\n          // Need to cover all rotations, so use the largest axis for both.\r\n          return rectOffset(rectangle(-0.345, -0.345, 0.69, 0.69), entity);\r\n        case \"Bone2\":\r\n          // Need to cover all rotations, so use the largest axis for both.\r\n          return rectOffset(rectangle(-0.32, -0.32, 0.72, 0.72), entity);\r\n        case \"Skull1\":\r\n        default:\r\n          return rectFromCircle(entity, 0.24);\r\n      }\r\n    },\r\n    hitTest(p: Vector2, entity: MapEntity, radius = 0) {\r\n      const bone = assertEntity(entity, \"DangerZonePart\");\r\n      if (bone.prefab === \"Skull1\") {\r\n        return vec2Magnitude(vec2Subtract(p, entity)) - radius <= 0.24;\r\n      }\r\n\r\n      let r: Rectangle;\r\n      switch (bone.prefab) {\r\n        case \"Fang1\":\r\n          r = rectangle(\r\n            -0.1226 / 2 - 0.0085,\r\n            -0.4001 / 2 + 0.0116,\r\n            0.1226,\r\n            0.4001\r\n          );\r\n          // r = rectangle(-0.06, -0.02, 0.12, 0.4);\r\n          break;\r\n        case \"Fang2\":\r\n          r = rectangle(\r\n            -0.1372 / 2 + 0.0031,\r\n            -0.2445 / 2 + 0.0097,\r\n            0.1372,\r\n            0.2445\r\n          );\r\n          // r = rectangle(-0.065, -0.12, 0.13, 0.24);\r\n          break;\r\n        case \"Bone1\":\r\n          r = rectangle(\r\n            -0.1288 / 2 - 0.0196,\r\n            -0.6983 / 2 + 0.0052,\r\n            0.1288,\r\n            0.6983\r\n          );\r\n          // r = rectangle(-0.06, -0.345, 0.12, 0.69);\r\n          break;\r\n        case \"Bone2\":\r\n          r = rectangle(\r\n            -0.1529 / 2 - 0.00042,\r\n            -0.725 / 2 + 0.0016,\r\n            0.1529,\r\n            0.725\r\n          );\r\n          //r = rectangle(-0.07, -0.36, 0.1529, 0.725);\r\n          break;\r\n        default:\r\n          return false;\r\n      }\r\n\r\n      const boneAngle = degreesToRadians(bone.angle);\r\n\r\n      // get it aligned with the axis aligned hitbox of the bone\r\n      p = vec2Subtract(p, entity);\r\n      p = vec2Rotate(p, -boneAngle);\r\n\r\n      const rc = {\r\n        x: r.p1.x + (r.p2.x - r.p1.x) / 2,\r\n        y: r.p1.y + (r.p2.y - r.p1.y) / 2,\r\n      };\r\n      const rsize = rectSize(r);\r\n\r\n      const distx = Math.abs(p.x - rc.x);\r\n      const disty = Math.abs(p.y - rc.y);\r\n\r\n      const dx = distx - rsize.width / 2;\r\n      const dy = disty - rsize.height / 2;\r\n      if (\r\n        distx > rsize.width / 2 + radius ||\r\n        disty > rsize.height / 2 + radius\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      if (\r\n        dx * dx + dy * dy > radius * radius &&\r\n        distx > rsize.width / 2 &&\r\n        disty > rsize.height / 2\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    },\r\n  },\r\n  ExperienceBonus: {\r\n    entityType: \"ExperienceBonus\",\r\n    getFriendlyName(entity: MapEntity) {\r\n      const expEntity = assertEntity(entity, \"ExperienceBonus\");\r\n      return `${expEntity.prefab} XP Bonus`;\r\n    },\r\n    getBounds: (entity: MapEntity): Rectangle => {\r\n      // FIXME: Arent these different sizes?\r\n      return rectFromCircle(entity, 0.3);\r\n    },\r\n    hitTest: (p: Vector2, entity: MapEntity, radius = 0): boolean => {\r\n      return vec2Magnitude(vec2Subtract(p, entity)) - radius <= 0.3;\r\n    },\r\n  },\r\n  Vortex: {\r\n    entityType: \"Vortex\",\r\n    getFriendlyName(entity: MapEntity) {\r\n      return \"Vortex\";\r\n    },\r\n    getBounds: (entity: MapEntity): Rectangle => {\r\n      const vortex = assertEntity(entity, \"Vortex\");\r\n      const radius = VortexRadii[vortex.prefab];\r\n      return rectFromCircle(entity, radius);\r\n    },\r\n    hitTest: (p: Vector2, entity: MapEntity, radius = 0): boolean => {\r\n      const vortex = assertEntity(entity, \"Vortex\");\r\n      const vortexRadius = VortexRadii[vortex.prefab];\r\n      return vec2Magnitude(vec2Subtract(p, entity)) - radius <= vortexRadius;\r\n    },\r\n  },\r\n};\r\n\r\nfunction assertEntity<T extends MapEntity[\"entityType\"]>(\r\n  entity: MapEntity,\r\n  type: T\r\n): MapEntity & { entityType: T } {\r\n  if (entity.entityType === type) {\r\n    return entity as any;\r\n  }\r\n  throw new Error(`Expected entity to be of type ${type}`);\r\n}\r\n","import { MapEntity } from \"../types\";\r\n\r\nconst water = Object.freeze(require(\"./water.json\")) as MapEntity[];\r\n\r\nexport const PotionBaseMaps = {\r\n  water,\r\n};\r\n","import { first } from \"lodash\";\r\n\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\nimport { Vector2, vec2Add } from \"@/vector2\";\r\nimport { Rectangle } from \"@/rectangles\";\r\n\r\nconst MAP_WIDTH = MAP_EXTENT_RADIUS * 2;\r\nconst MAP_HEIGHT = MAP_EXTENT_RADIUS * 2;\r\nconst REGION_WIDTH = 0.5;\r\nconst REGION_HEIGHT = 0.5;\r\n\r\nconst ORIGIN_OFFSET: Vector2 = { x: MAP_EXTENT_RADIUS, y: MAP_EXTENT_RADIUS };\r\n\r\nexport const REGION_COUNT =\r\n  (MAP_WIDTH / REGION_WIDTH) * (MAP_HEIGHT / REGION_HEIGHT) + 1;\r\nexport const FALLBACK_REGION = REGION_COUNT - 1;\r\n\r\nexport function getRegionIndexFromPoint(p: Vector2): number {\r\n  return first(getRegionIndexesFromRect({ p1: p, p2: p }))!;\r\n}\r\n\r\nexport function getRegionIndexesFromRect(r: Rectangle): number[] {\r\n  let { p1, p2 } = r;\r\n  p1 = vec2Add(p1, ORIGIN_OFFSET);\r\n  p2 = vec2Add(p2, ORIGIN_OFFSET);\r\n\r\n  let x1 = Math.floor(p1.x / REGION_WIDTH);\r\n  let y1 = Math.floor(p1.y / REGION_HEIGHT);\r\n  let x2 = Math.ceil(p2.x / REGION_WIDTH);\r\n  let y2 = Math.ceil(p2.y / REGION_HEIGHT);\r\n\r\n  const indexes = [];\r\n\r\n  let addedOOB = false;\r\n  const addOOB = () => {\r\n    if (addedOOB) {\r\n      return;\r\n    }\r\n    indexes.push(FALLBACK_REGION);\r\n    addedOOB = true;\r\n  };\r\n\r\n  if (x1 < 0) {\r\n    x1 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (x2 < 0) {\r\n    x2 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (x1 >= MAP_WIDTH / REGION_WIDTH) {\r\n    x1 = MAP_WIDTH / REGION_WIDTH - 1;\r\n    addOOB();\r\n  }\r\n\r\n  if (x2 >= MAP_WIDTH / REGION_WIDTH) {\r\n    x2 = MAP_WIDTH / REGION_WIDTH - 1;\r\n    addOOB();\r\n  }\r\n\r\n  if (y1 < 0) {\r\n    y1 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (y2 < 0) {\r\n    y2 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (y1 >= MAP_HEIGHT / REGION_HEIGHT) {\r\n    y1 = MAP_HEIGHT / REGION_HEIGHT - 1;\r\n    addOOB();\r\n  }\r\n\r\n  if (y2 >= MAP_HEIGHT / REGION_HEIGHT) {\r\n    y2 = MAP_HEIGHT / REGION_HEIGHT - 1;\r\n    addOOB();\r\n  }\r\n\r\n  for (let x = x1; x <= x2; x++) {\r\n    for (let y = y1; y <= y2; y++) {\r\n      indexes.push(x + y * (MAP_WIDTH / REGION_WIDTH));\r\n    }\r\n  }\r\n\r\n  return indexes;\r\n}\r\n","import { injectable, singleton } from \"microinject\";\r\nimport pako from \"pako\";\r\nimport {\r\n  encode as encodeBase64,\r\n  decode as decodeBase64,\r\n} from \"base64-arraybuffer\";\r\n\r\nimport { PlotItem } from \"../plotter/types\";\r\n\r\n@injectable()\r\n@singleton()\r\nexport class ShareStringSerializer {\r\n  serialize(items: readonly PlotItem[]): string {\r\n    const json = JSON.stringify(items);\r\n    const encoded = pako.deflate(json);\r\n\r\n    // Testing\r\n    try {\r\n      const decoded = pako.inflate(encoded, { to: \"string\" });\r\n      console.log(\"Round trip test: \" + decoded === json ? \"OK\" : \"FAIL\");\r\n    } catch (e) {\r\n      console.log(\"Round trip test: FAIL\");\r\n    }\r\n\r\n    const data = new Uint8Array(1 + encoded.length);\r\n    data.set(encoded, 1);\r\n    new DataView(data.buffer).setUint8(0, 0);\r\n    return encodeBase64(data);\r\n  }\r\n\r\n  deserialize(shareString: string): PlotItem[] {\r\n    const array = decodeBase64(shareString);\r\n    const dv = new DataView(array);\r\n    const version = dv.getUint8(0);\r\n    const data = array.slice(1);\r\n    if (version === 0) {\r\n      let zipData: string;\r\n      try {\r\n        zipData = pako.inflate(data, { to: \"string\" });\r\n      } catch (e: any) {\r\n        // pako throws strings.\r\n        throw new Error(\"Failed to decode share data: \" + e);\r\n      }\r\n      const decoded = JSON.parse(zipData) as any[];\r\n      if (!Array.isArray(decoded)) {\r\n        return [];\r\n      }\r\n      return decoded.map((item) => this._deserializePlotItemV0(item));\r\n    }\r\n    throw new Error(`Unknown shareString version ${version}.`);\r\n  }\r\n\r\n  private _deserializePlotItemV0(item: any): PlotItem {\r\n    if (item.type === \"set-position\" && item.position) {\r\n      return {\r\n        type: \"set-position\",\r\n        x: item.position.x,\r\n        y: item.position.y,\r\n      };\r\n    }\r\n\r\n    return item;\r\n  }\r\n}\r\n","import { ContainerModule } from \"microinject\";\r\n\r\nimport { ShareStringSerializer } from \"./ShareStringSerializer\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(ShareStringSerializer);\r\n});\r\n","export interface Size {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport const SizeZero = Object.freeze({ width: 0, height: 0 }) as any;\r\n","import { ThemeProvider } from \"@emotion/react\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\nimport React from \"react\";\r\n\r\nconst lightTheme = createTheme({\r\n  palette: {\r\n    mode: \"light\",\r\n  },\r\n});\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    mode: \"dark\",\r\n  },\r\n});\r\n\r\nconst darkModeMatch =\r\n  window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n\r\nconst AppThemeProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [isDarkMode, setDarkMode] = React.useState(darkModeMatch.matches);\r\n  React.useEffect(() => {\r\n    darkModeMatch.addEventListener(\"change\", (e) => setDarkMode(e.matches));\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppThemeProvider;\r\n","import { Value } from \"classnames\";\r\n\r\nexport function windowArray<T>(array: T[], count: number): T[][] {\r\n  const a = [...array];\r\n\r\n  let result: T[][] = [];\r\n  let window: T[] = [];\r\n\r\n  while (a.length > 0) {\r\n    window.push(a.pop()!);\r\n    if (window.length === count) {\r\n      result.push(window);\r\n      window = [];\r\n    }\r\n  }\r\n\r\n  if (window.length > 0) {\r\n    result.push(window);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function keepEveryK<T>(array: T[], k: number, keepLast = false) {\r\n  if (array.length === 0) {\r\n    return array;\r\n  }\r\n\r\n  const a = [];\r\n  for (let i = 0; i < array.length; i += k) {\r\n    a.push(array[i]);\r\n  }\r\n  if (keepLast && (array.length - 1) % k !== 0) {\r\n    a.push(array[array.length - 1]);\r\n  }\r\n  return a;\r\n}\r\n\r\nexport function isNotNull<T>(x: T | null | undefined): x is T {\r\n  return x != null;\r\n}\r\n\r\nexport function typedKeys<T>(obj: T): (keyof T)[] {\r\n  return Object.keys(obj) as any;\r\n}\r\n\r\nexport function degreesToRadians(degress: number): number {\r\n  return (degress * Math.PI) / 180;\r\n}\r\n","import { clamp } from \"lodash\";\r\n\r\nexport interface Vector2 {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport const Vec2Zero: Readonly<Vector2> = Object.freeze({ x: 0, y: 0 });\r\n\r\nexport function vec2Equals(a: Vector2, b: Vector2): boolean {\r\n  return (\r\n    Math.abs(a.x - b.x) < Number.EPSILON && Math.abs(a.y - b.y) < Number.EPSILON\r\n  );\r\n}\r\n\r\nexport function vec2Scale(p: Vector2, factor: number): Vector2 {\r\n  return {\r\n    x: p.x * factor,\r\n    y: p.y * factor,\r\n  };\r\n}\r\n\r\nexport function vec2Magnitude(p: Vector2): number {\r\n  return Math.sqrt(p.x * p.x + p.y * p.y);\r\n}\r\n\r\nexport function vec2AngleRadians(from: Vector2, to: Vector2): number {\r\n  return Math.atan2(to.y - from.y, to.x - from.x);\r\n}\r\n\r\nexport function vec2MoveTowards(\r\n  current: Vector2,\r\n  target: Vector2,\r\n  maxDistanceDelta: number\r\n): Vector2 {\r\n  const mt1 = target.x - current.x;\r\n  const mt2 = target.y - current.y;\r\n  const mt3 = mt1 * mt1 + mt2 * mt2;\r\n  if (\r\n    mt3 == 0.0 ||\r\n    (maxDistanceDelta >= 0.0 && mt3 <= maxDistanceDelta * maxDistanceDelta)\r\n  )\r\n    return target;\r\n  const mt4 = Math.sqrt(mt3);\r\n  return {\r\n    x: current.x + (mt1 / mt4) * maxDistanceDelta,\r\n    y: current.y + (mt2 / mt4) * maxDistanceDelta,\r\n  };\r\n}\r\n\r\n/**\r\n * Gets the smallest angle in degrees between two points.\r\n */\r\nexport function vec2AngleDegrees180(from: Vector2, to: Vector2) {\r\n  const num = Math.sqrt(\r\n    (from.x * from.x + from.y * from.y) * (to.x * to.x + to.y * to.y)\r\n  );\r\n  if (num < Number.EPSILON) {\r\n    return 0;\r\n  }\r\n  return Math.acos(clamp(vec2Dot(from, to) / num, -1, 1)) * 57.29578;\r\n}\r\n\r\n/**\r\n * Gets the smallest angle between to points.  Value will be negative if the angle if to is counterclockwise of from.\r\n */\r\nexport function pointSignedAngleDegrees180(from: Vector2, to: Vector2) {\r\n  const a = vec2AngleDegrees180(from, to);\r\n  const sign = Math.sign(from.x * to.y - from.y * to.x);\r\n  const sa = sign * a;\r\n  return sa;\r\n}\r\n\r\nexport function vec2Rotate(p: Vector2, angleInRadians: number): Vector2 {\r\n  const x = p.x * Math.cos(angleInRadians) - p.y * Math.sin(angleInRadians);\r\n  const y = p.x * Math.sin(angleInRadians) + p.y * Math.cos(angleInRadians);\r\n  return { x, y };\r\n}\r\n\r\nexport function vec2Dot(a: Vector2, b: Vector2): number {\r\n  return a.x * b.x + a.y * b.y;\r\n}\r\n\r\nexport function vec2Distance(p1: Vector2, p2: Vector2) {\r\n  const dx = p1.x - p2.x;\r\n  const dy = p1.y - p2.y;\r\n  return Math.sqrt(dx * dx + dy * dy);\r\n}\r\n\r\nexport function vec2Add(a: Vector2, b: Vector2) {\r\n  return {\r\n    x: a.x + b.x,\r\n    y: a.y + b.y,\r\n  };\r\n}\r\n\r\nexport function vec2Subtract(a: Vector2, b: Vector2) {\r\n  return {\r\n    x: a.x - b.x,\r\n    y: a.y - b.y,\r\n  };\r\n}\r\n\r\nexport function vec2Normalize(p: Vector2): Vector2 {\r\n  const magnitude = vec2Magnitude(p);\r\n  if (magnitude === 0) {\r\n    return Vec2Zero;\r\n  }\r\n\r\n  return {\r\n    x: p.x / magnitude,\r\n    y: p.y / magnitude,\r\n  };\r\n}\r\n\r\nexport function vec2Lerp(start: Vector2, end: Vector2, lerp: number): Vector2 {\r\n  return {\r\n    x: start.x + (end.x - start.x) * lerp,\r\n    y: start.y + (end.y - start.y) * lerp,\r\n  };\r\n}\r\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","values","primaryAxis","secondaryAxis","dropIndicator","onReorder","children","childrenBoundsRef","useRef","useState","dragIndex","setDragIndex","dropIndex","setDropIndex","onBoundsChanged","useCallback","valueIndex","bounds","current","onDragStart","onDragMove","e","index","x","y","groups","currentGroup","lastPrimaryPosition","i","length","bound","itemPrimaryPosition","left","right","top","bottom","axisIsFlipped","items","itemIndex","Math","min","max","forEach","group","reverse","getGroups","targetGroup","horizontalSecondary","axisIsHorizontal","primaryPosition","item","itemPrimaryMin","itemPrimaryMax","getInsertionIndex","filter","isNotNull","clientX","clientY","onDragEnd","newValues","newValueIndex","draggedValue","splice","fromIndex","toIndex","map","value","Fragment","key","DragReorderableItem","isDragging","capturedPointerId","setCapturedPointerId","onPointerDown","defaultPrevented","currentTarget","setPointerCapture","pointerId","preventDefault","onPointerMove","onPointerUp","releasePointerCapture","onBoundsRef","valueIndexRef","useEffect","observerRef","disconnect","refCallback","ref","observer","MutationObserver","getBoundingClientRect","observe","attributes","characterData","childList","subtree","isDropBefore","isDropAfter","additionalProps","axis","content","entity","className","entityType","PotionEffectMapEntityDetails","VortexMapEntityDetails","Card","variant","CardContent","effect","ExpandMore","styled","props","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","expanded","onExpanded","expand","onClick","fixed","title","toString","toFixed","rate","onChange","onChangeCommitted","delta","setDelta","token","setInterval","clearInterval","Slider","step","v","StyledTooltip","Tooltip","tooltipPlacementLeft","margin","allowEmpty","onMouseOverItem","onMouseOutItem","ingredients","useDIDependency","IngredientRegistry","getIngredients","sortedIngredients","sortBy","ingredient","name","onSelectChange","target","Select","MenuItem","onMouseOver","onMouseOut","placement","width","height","viewBox","MAX_INGREDIENT_EXTENT","cx","cy","r","POTION_RADIUS","fill","d","path","reduce","curve","start","p1","p2","end","stroke","strokeWidth","ListItemText","Root","backgroundColor","overflow","imgCache","Map","makeImg","src","has","get","img","Image","onerror","console","error","bind","set","MapSlotSrc","renderEntity","ctx","save","translate","rotate","degreesToRadians","angle","DangerZoneImageSrces","prefab","w","h","scale","drawImage","restore","renderDangerZonePart","grad","createLinearGradient","addColorStop","strokeStyle","lineWidth","beginPath","moveTo","lineTo","container","EffectSlotSrc","containerW","containerH","PotionEffectImageSrces","renderPotionEffectEntity","ExperienceBonusImagesSrc","renderExperienceBonusEntity","VortexImagesSrc","renderVortexEntity","viewModel","useObservation","viewportSize$","SizeZero","offset","viewOffset$","Vec2Zero","viewScale$","canvasRef","setCanvasRef","entities","requestAnimationFrame","getContext","clearRect","zoomFactor","offsetX","offsetY","handler","MAP_EXTENT_RADIUS","transformToMap","mapSlotW","mapSlotH","cancelAnimationFrame","Bone1","Bone2","Fang1","Fang2","Skull1","Acid","Berserker","Bounce","Charm","Crop","Explosion","Fire","Fly","Frost","Growth","Hallucinations","Healing","Invisibility","Libido","Light","Lightning","Mana","Necromancy","Poison","SharpVision","Sleep","SlowDown","StoneSkin","Little","Medium","Large","position","spacing","display","flexDirection","alignItems","_initialSize","_originOffset","_unitScale","_viewportSize$","BehaviorSubject","_viewOffset$","_viewScale$","_mouseClientPosition$","this","next","_mouseWorldPosition$","combineLatest","pipe","clientPos","clientToWorld","zoom","on","prevWorld","world","vec2Subtract","vec2Add","setZoom","pan","dx","dy","applyZoom","z","onMouseMove","onViewportResized","prevSize","scaleFactor","p","worldToClient","CoordinateMappingViewportViewModel","ZOOM_FACTOR","PAN_FACTOR","containerRef","React","containerBounds","useComponentBounds","dragPointer","setDragPointer","mouseLastPos","setMouseLastPos","useLayoutEffect","onWheel","modifiers","getModifiers","ctrlMetaKey","deltaY","stopPropagation","shiftKey","useNativeEvent","passive","marginBottom","background","mapOverlay","enableCheats","map$","plotItems$","plot","plot$","mouseOverPlotPoint","highlightPlotPoint$","mouseOverPlotItem","highlightPlotItem$","mouseOverEntity","highlightEntity$","mouseWorld","mouseWorldPosition$","highlightItem","highlightBuilderItem$","onBuildItemMouseOver","onMouseOverBuilderItem","onBuildItemMouseOut","EmptyPlotResult","point","Typography","plotBuilderItems$","onMoveItem","movePlotBuilderItem","onDuplicateItem","duplicatePlotBuilderItem","onAddNewItem","itemType","addPlotBuilderItem","plotter","_mouseOverPlotItem$","_mouseOverBuilderItem$","_map$","_viewportViewModel","_plotBuilderItems","PlotBuilderItemCollection","_plot$","plotItems","_mouseOverEntity$","worldPos","hitTest","first","_mouseOverPlotPoint$","plotItem","plotItemPoints","committedPoints","concat","pendingPoints","source","closestPlotItem","vec2Distance","setMap","clear","loadPlotItems","addPlotItems","newIndex","moveItem","addPlotItem","onMouseOverPlotItem","builderItemFor","inject","Plotter","PlotBuilderViewModel","type","deleter","keys","PlotItemKeysByType","itemPropObservables","builderItem","DefaultPlotItemByType","toUpperCase","substring","plotItem$","isValid$","subscribe","PlotItemValidatorByType","Object","defineProperty","configurable","enumerable","writable","delete","_items$","_plotItems$","observeAll","debounceTime","itemBase","_addSetPosition","_addIngredient","_addStirCauldron","_addPourSolvent","_addHeatVortex","_addVoidSalt","Error","sourceIndex","indexOf","find","createPlotBuilderItem","_deleteItem","setX","setY","setIngredientId","ingredientId","setGrindPercent","grindPercent","setDistance","distance","setGrains","grains","Observable","boxSixing","listStyle","paddingLeft","paddingRight","borderBottom","alignSelf","items$","_","params","getRootProps","getDragHandleProps","highlight","onDuplicate","DragHandle","Button","color","Add","savedIngredientRef","isPreviewing","setIsPreviewing","isPreviewingRef","localGrind","setLocalGrind","inputGrindPercent","setInputGrindPercent","ingredientId$","grindPercent$","onIngredientSelectorOpen","onIngredientSelectorMouseOverItem","onIngredientSelectorChange","onIngredientSelectorClose","onGrindPercentTextChange","asNumber","Number","isNaN","onGrindPercentBlur","onSliderChange","onSliderChangeCommitted","displayIngredientId","fullWidth","onOpen","onClose","Grid","paddingTop","TextField","label","onBlur","grains$","inputGrains","setInputGrains","sliderGrains","setSliderGrains","onTextFieldChange","onTextFieldBlur","onGrainsChange","round","distance$","inputDistance","setInputDistance","onDistanceChange","valid","onCardMouseOver","onDeleteClick","style","fontSize","component","size","Delete","xInput","setXInput","yInput","setYInput","x$","y$","onXChange","onYChange","onXBlur","onYBlur","itemIsEffect","ingredientRegistry","ingredientsExpanded","setIngredientsExpanded","endsAt","last","useMemo","isIngredientPlotItem","effects","result","bottleCollisions","vec2Magnitude","tier","getEffectTier","getEffects","baseCost","ingredientTypeCounts","getIngredientById","price","pointArrayLength","ingredientMap","voidSaltCount","sum","isVoidSaltPlotItem","totalIngredients","totalUniqueIngredients","uniq","stress","sqrt","pow","dangerLengths","calculateDangerLengths","longestDanger","lifeSaltRequiredLengths","DANGER_LENGTH_LETHAL","lifeSaltRequiredHealth","DANGER_HEALTH_DECREASE_PER_UNIT","ceil","LIFE_HEALTH_PER_GRAIN","lifeSaltRequired","dangerIsDeath","join","pointerEvents","PlotLine","line","pending","registry","points","evenOdd","onPathMouseOver","onPathMouseOut","lighten","hex","str","strokeDashArray","teleports","strokeDasharray","mouseOverItem","mouseOverPoint","lastCommitPoint","onLineMouseOver","onLineMouseOut","committed","trim","currentLine","sourceCounter","commitedLines","pendingLines","lastSource","keepEveryK","resultToPlotLines","committedLines","some","opacity","touchedItems","EntityDefs","getFriendlyName","AddIngredientRoot","justifyContent","AddIngredient","window","enableTk","tk","vector2","curves","pointArray","potionBases","PotionBaseRegistry","PotionMap","modules","composeModules","ContainerContext","createContext","Container","useDIContainer","useContext","toConstantValue","load","ContainerProvider","Provider","identifier","parameters","valRef","getCurvePoint","t","b1","b2","b3","b4","startX","startY","p1x","p1y","p2x","p2y","endx","endy","curveLengthCache","getCurveLength","cached","resolution","BEZIER_CURVE_LENGTH_RESOLUTION","prevPoint","curvesToPointsCache","PATH_SPACING_PHYSICS","consumedLength","samples","num3","vec2Scale","vec2Normalize","curvePointsCache","remainingDistance","previousPoint","samplePointCount","splitPoint","freeze","VOID_DISTANCE_PER_GRAIN","setSize","ResizeObserver","el","b","listener","listenTarget","addEventListener","removeEventListener","observable","useTransition","onError","val","setVal","startTransition","unsubscribe","rootEl","document","getElementById","createRoot","render","StrictMode","MODIFIER_KEYS_NONE","ctrlKey","altKey","metaKey","keyboardModifierUseMeta","event","subscriber","subscription","observables","complete","err","useDICreate","ChallengePageViewModel","results","results$","textAlign","description","score","k","challengeFactory","_challenge","createDailyChallenge","_results$","getScore","ChallengeFactory","history","History","hLoc","location","wLoc","search","url","URL","href","replaceState","replace","pathname","PlotterPageViewModel","outputShareString","shareString$","query","URLSearchParams","data","loadFromShareString","potionBaseRegistry","_shareStringSerializer","log","constructor","waterMap","getPotionBaseById","_shareString$","serialize","dataStr","deserialize","ShareStringSerializer","pointArrayLengthCache","takePointArrayByDistance","array","takeLength","totalLength","taken","remainder","takenLength","remainingLength","vec2Lerp","assign","slice","direction","takePercent","EPSILON","cumulativePercent","transitionedToRemainder","segmentLengthPercent","clamp","mid","pFirst","normalizeRectangle","args","RectZero","radius","Routes","Route","element","osPlatform","os","family","OSType","test","isProd","_potionBaseRegistry","_brewEffectAtPointChallengeFactory","todayDate","Date","toISOString","split","random","challengeMap","_createChallengeMap","effectPosition","_getFreeEffectPosition","baseMap","targetPosition","base","minRadius","floatBetween","PI","cos","sin","injectable","singleton","BrewEffectAtPointChallengeFactory","serviceLocator","BrewEffectAtPointChallenge","_targetPosition","_plotter","_ingredientRegistry","_map","lastPoint","totalScore","tierScore","every","pathDistance","linearDistance","distanceFraction","distanceScore","isAddIngredientPlotItem","potentialHighlanderStress","stressScore","costScore","ContainerModule","toFactory","brewEffectAtPointChallengeFactoryFactory","inSingletonScope","action","state","setState","listen","Router","navigationType","navigator","createHashHistory","historyFactory","cubicBezierCurve","preGrindPercent","now","_plotItem","collisions","_plotSetPosition","_plotAddIngredient","_plotPourSolvent","_plotStirCauldron","_plotHeatVortex","_plotVoidSalt","commitPlotPoints","addPosition","ingredientPoints","curvesToPoints","appendPendingPlotPoints","takePointArrayByPercent","currentPoint","vec2Equals","distanceToOrigin","pointArrayLineFromDistance","addedPoints","remainderPlotPoints","indicatorPosition","vortex","vortexMovementFromHeatDependence10Percent","currentPosition","pointsToAdd","to","magnitude","f1","sign","f2","f3","abs","num","from","vector2_1","rotation","pointSignedAngleDegrees180","vector2_2","vec2Rotate","vec2MoveTowards","removePointArrayDistanceFromEnd","difference","isValidSetPositionPlotItem","isValidAddIngredientPlotItem","isValidPourSolventPlotItem","isValidStirCauldronPlotItem","isValidHeatVortexPlotItem","isValidAddVoidSaltPlotItem","DefaultSetPositionPlotItem","DefaultAddIngredientPlotItem","DefaultPourSolventPlotItem","DefaultStirCauldronPlotItem","DefaultHeatVortexPlotItem","DefaultAddVoidSaltPlotItemItem","angleDegreesDelta","effectPowerDistanceDependence","lengths","currentLength","prevItem","_potionBasesById","typedKeys","PotionBaseMaps","_entities","_entityRegions","regions","_getEntityRegions","indexes","getRegionIndexFromPoint","getRegionIndexesFromRect","rectFromCircle","entityDef","Array","REGION_COUNT","getBounds","VortexRadii","assertEntity","PotionEffect","DangerZonePart","rectOffset","rectangle","bone","boneAngle","rc","rsize","rectSize","distx","disty","ExperienceBonus","expEntity","Vortex","vortexRadius","water","MAP_WIDTH","MAP_HEIGHT","REGION_WIDTH","REGION_HEIGHT","ORIGIN_OFFSET","x1","floor","y1","x2","y2","addedOOB","addOOB","FALLBACK_REGION","json","JSON","stringify","encoded","deflate","decoded","inflate","Uint8Array","DataView","buffer","setUint8","encode","shareString","decode","version","getUint8","zipData","parse","isArray","_deserializePlotItemV0","lightTheme","createTheme","palette","mode","darkTheme","darkModeMatch","matchMedia","matches","isDarkMode","setDarkMode","ThemeProvider","count","a","pop","keepLast","obj","degress","vec2AngleDegrees180","acos","vec2Dot","factor","atan2","maxDistanceDelta","mt1","mt2","mt3","mt4","angleInRadians","lerp"],"sourceRoot":""}
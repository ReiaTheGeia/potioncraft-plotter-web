{"version":3,"file":"client.8b0092e519eddae9afb0.bundle.js","mappings":"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","sources":["webpack://potioncraft-plotter/./src/style.css","webpack://potioncraft-plotter/./src/style.css?7163","webpack://potioncraft-plotter/./src/components/App.tsx","webpack://potioncraft-plotter/./src/components/IncDecSlider.tsx","webpack://potioncraft-plotter/./src/components/IngredientSelector.tsx","webpack://potioncraft-plotter/./src/components/Map/Map.tsx","webpack://potioncraft-plotter/./src/components/Map/index.ts","webpack://potioncraft-plotter/./src/components/PanZoomViewport/PanZoomViewport.tsx","webpack://potioncraft-plotter/./src/components/PanZoomViewport/index.ts","webpack://potioncraft-plotter/./src/components/PlotBuilderItemsList.tsx","webpack://potioncraft-plotter/./src/components/PlotEditor/PlotEditor.tsx","webpack://potioncraft-plotter/./src/components/PlotEditor/PlotEditorViewModel.ts","webpack://potioncraft-plotter/./src/components/PlotEditor/components/EntityDetails.tsx","webpack://potioncraft-plotter/./src/components/PlotEditor/components/PlotDetails.tsx","webpack://potioncraft-plotter/./src/components/PlotEditor/components/StepDetails.tsx","webpack://potioncraft-plotter/./src/components/PlotEditor/index.ts","webpack://potioncraft-plotter/./src/components/Plot/Plot.tsx","webpack://potioncraft-plotter/./src/components/Plot/PlotViewModel.ts","webpack://potioncraft-plotter/./src/components/Plot/index.ts","webpack://potioncraft-plotter/./src/container.tsx","webpack://potioncraft-plotter/./src/curves.ts","webpack://potioncraft-plotter/./src/game-settings.ts","webpack://potioncraft-plotter/./src/hooks/component-bounds.ts","webpack://potioncraft-plotter/./src/hooks/native-event.ts","webpack://potioncraft-plotter/./src/hooks/observe.ts","webpack://potioncraft-plotter/./src/index.tsx","webpack://potioncraft-plotter/./src/modifier-keys.ts","webpack://potioncraft-plotter/./src/point-array.ts","webpack://potioncraft-plotter/./src/points.ts","webpack://potioncraft-plotter/./src/rectangles.ts","webpack://potioncraft-plotter/./src/runtime-env.ts","webpack://potioncraft-plotter/./src/services/ingredients/IngredientRegistry.ts","webpack://potioncraft-plotter/./src/services/ingredients/ingredients.ts","webpack://potioncraft-plotter/./src/services/ingredients/module.ts","webpack://potioncraft-plotter/./src/services/ingredients/types.ts","webpack://potioncraft-plotter/./src/services/module.ts","webpack://potioncraft-plotter/./src/services/plotter/PlotBuilder.ts","webpack://potioncraft-plotter/./src/services/plotter/Plotter.ts","webpack://potioncraft-plotter/./src/services/plotter/module.ts","webpack://potioncraft-plotter/./src/services/plotter/types.ts","webpack://potioncraft-plotter/./src/services/potion-bases/PotionBaseRegistry.ts","webpack://potioncraft-plotter/./src/services/potion-bases/module.ts","webpack://potioncraft-plotter/./src/services/potion-maps/PotionMap.ts","webpack://potioncraft-plotter/./src/services/potion-maps/entity-defs.ts","webpack://potioncraft-plotter/./src/services/potion-maps/maps/index.ts","webpack://potioncraft-plotter/./src/services/potion-maps/regions.ts","webpack://potioncraft-plotter/./src/size.ts","webpack://potioncraft-plotter/./src/theme.tsx","webpack://potioncraft-plotter/./src/utils.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\r\\nThis should be kept minimal and only provide globals\\r\\nor non-react component styles.\\r\\n*/\\r\\n\\r\\nhtml, body, #root {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  margin: 0;\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;;;CAGC;;AAED;EACE,WAAW;EACX,YAAY;EACZ,SAAS;AACX\",\"sourcesContent\":[\"/*\\r\\nThis should be kept minimal and only provide globals\\r\\nor non-react component styles.\\r\\n*/\\r\\n\\r\\nhtml, body, #root {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  margin: 0;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import * as React from \"react\";\r\n\r\nimport PlotEditor from \"./PlotEditor\";\r\n\r\nconst App: React.FC = () => {\r\n  return <PlotEditor />;\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nimport { Slider } from \"@mui/material\";\r\n\r\nexport interface IncDecSliderProps {\r\n  className?: string;\r\n  value: number;\r\n  /**\r\n   * The rate of change at maximum deflection in units per second.\r\n   */\r\n  rate: number;\r\n  onChange(value: number): void;\r\n  onChangeCommitted?(): void;\r\n}\r\n\r\nconst IncDecSlider = ({\r\n  className,\r\n  value,\r\n  rate,\r\n  onChange,\r\n  onChangeCommitted,\r\n}: IncDecSliderProps) => {\r\n  const [delta, setDelta] = React.useState(0);\r\n  React.useEffect(() => {\r\n    const token = setInterval(() => {\r\n      if (delta === 0) {\r\n        return;\r\n      }\r\n\r\n      const newValue = value + delta * rate * (1 / 10);\r\n      onChange(newValue);\r\n    }, 10);\r\n    return () => clearInterval(token);\r\n  }, [value, delta, rate]);\r\n\r\n  return (\r\n    <Slider\r\n      className={className}\r\n      min={-1}\r\n      max={1}\r\n      step={0.01}\r\n      value={delta}\r\n      onChange={(e, v) => {\r\n        setDelta(v as number);\r\n      }}\r\n      onChangeCommitted={() => {\r\n        setDelta(0);\r\n        if (onChangeCommitted) {\r\n          onChangeCommitted();\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default IncDecSlider;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  MenuItem,\r\n  Select,\r\n  SelectProps,\r\n  SelectChangeEvent,\r\n  ListItemText,\r\n  Tooltip,\r\n  styled,\r\n} from \"@mui/material\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\n\r\nimport {\r\n  IngredientDescriptor,\r\n  IngredientId,\r\n} from \"@/services/ingredients/types\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\nimport { MAX_INGREDIENT_EXTENT, POTION_RADIUS } from \"@/game-settings\";\r\n\r\nexport interface IngredientSelectorProps\r\n  extends Omit<SelectProps<IngredientId | \"\">, \"value\" | \"onChange\"> {\r\n  value: IngredientId | null;\r\n  allowEmpty?: boolean;\r\n  onChange(value: IngredientId | null): void;\r\n  onMouseOverItem?(value: IngredientId | null): void;\r\n  onMouseOutItem?(): void;\r\n}\r\n\r\nconst StyledTooltip = styled(Tooltip)({\r\n  tooltipPlacementLeft: {\r\n    margin: \"10px 0\",\r\n  },\r\n});\r\n\r\nconst IngredientSelector = ({\r\n  value,\r\n  onChange,\r\n  allowEmpty = false,\r\n  onMouseOverItem,\r\n  onMouseOutItem,\r\n  ...props\r\n}: IngredientSelectorProps) => {\r\n  const registry = useDIDependency(IngredientRegistry);\r\n\r\n  const onSelectChange = React.useCallback(\r\n    (e: SelectChangeEvent<IngredientId | \"\">) => {\r\n      const value = e.target.value;\r\n      if (value === \"\") {\r\n        onChange(null);\r\n      } else {\r\n        onChange(value as any);\r\n      }\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <Select<IngredientId | \"\">\r\n      {...props}\r\n      value={value ?? \"\"}\r\n      onChange={onSelectChange}\r\n    >\r\n      {allowEmpty && <MenuItem value=\"\"></MenuItem>}\r\n      {registry.getIngredients().map((ingredient) => (\r\n        <MenuItem\r\n          key={ingredient.id}\r\n          value={ingredient.id}\r\n          onMouseOver={\r\n            onMouseOverItem ? () => onMouseOverItem(ingredient.id) : undefined\r\n          }\r\n          onMouseOut={onMouseOutItem}\r\n        >\r\n          <StyledTooltip\r\n            placement=\"left\"\r\n            title={\r\n              <svg\r\n                width=\"100px\"\r\n                height=\"100px\"\r\n                viewBox={`-${MAX_INGREDIENT_EXTENT} -${MAX_INGREDIENT_EXTENT} ${\r\n                  MAX_INGREDIENT_EXTENT * 2\r\n                } ${MAX_INGREDIENT_EXTENT * 2}`}\r\n                transform=\"scale(1, -1)\"\r\n              >\r\n                <circle cx={0} cy={0} r={POTION_RADIUS} fill=\"blue\" />\r\n                <path\r\n                  d={ingredient.path.reduce(\r\n                    (path, curve) =>\r\n                      path +\r\n                      `M ${curve.start.x} ${curve.start.y} C ${curve.p1.x},${curve.p1.y} ${curve.p2.x},${curve.p2.y} ${curve.end.x},${curve.end.y}`,\r\n                    \"M 0 0 \"\r\n                  )}\r\n                  stroke=\"black\"\r\n                  strokeWidth={0.2}\r\n                  fill=\"none\"\r\n                />\r\n              </svg>\r\n            }\r\n          >\r\n            <ListItemText>{ingredient.name}</ListItemText>\r\n          </StyledTooltip>\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default IngredientSelector;\r\n","import React from \"react\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { PointZero } from \"@/points\";\r\nimport { degreesToRadians } from \"@/utils\";\r\nimport { SizeZero } from \"@/size\";\r\n\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { PotionMap } from \"@/services/potion-maps/PotionMap\";\r\nimport {\r\n  DangerZonePartMapEntity,\r\n  ExperienceBonusMapEntity,\r\n  MapEntity,\r\n  PotionEffectMapEntity,\r\n  VortexMapEntity,\r\n} from \"@/services/potion-maps/types\";\r\n\r\nimport { IMapViewModel } from \"./MapViewModel\";\r\n\r\nexport interface MapProps {\r\n  className?: string;\r\n  map: PotionMap;\r\n  viewModel: IMapViewModel;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  backgroundColor: \"#DABE99\",\r\n  overflow: \"hidden\",\r\n}));\r\n\r\nconst imgCache = new Map<string, HTMLImageElement>();\r\nfunction makeImg(src: string): HTMLImageElement {\r\n  if (imgCache.has(src)) {\r\n    return imgCache.get(src)!;\r\n  }\r\n\r\n  const img = new Image();\r\n  img.onerror = console.error.bind(console);\r\n  img.src = src;\r\n  imgCache.set(src, img);\r\n  return img;\r\n}\r\n\r\nconst MapSlotSrc = require(\"./assets/MapSlot.png\");\r\n\r\nconst PotionMapComponent = ({ className, map, viewModel }: MapProps) => {\r\n  const { width, height } = useObservation(viewModel.viewportSize$) ?? SizeZero;\r\n  const offset = useObservation(viewModel.viewOffset$) ?? PointZero;\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n\r\n  const [canvasRef, setCanvasRef] = React.useState<HTMLCanvasElement | null>(\r\n    null\r\n  );\r\n\r\n  const entities = map.entities;\r\n\r\n  React.useEffect(() => {\r\n    if (!canvasRef) {\r\n      return;\r\n    }\r\n\r\n    const id = requestAnimationFrame(() => {\r\n      const ctx = canvasRef.getContext(\"2d\")!;\r\n\r\n      ctx.clearRect(0, 0, width, height);\r\n\r\n      transformToMap(ctx, scale, offset.x, offset.y, () => {\r\n        // Map border\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = \"red\";\r\n        ctx.lineWidth = 0.2;\r\n        ctx.moveTo(-60, -60);\r\n        ctx.lineTo(-60, 60);\r\n        ctx.lineTo(60, 60);\r\n        ctx.lineTo(60, -60);\r\n        ctx.lineTo(-60, -60);\r\n        ctx.stroke();\r\n\r\n        // ctx.beginPath();\r\n        // ctx.fillStyle = \"blue\";\r\n        // ctx.arc(0, 0, POTION_RADIUS, 0, 2 * Math.PI);\r\n        // ctx.fill();\r\n\r\n        ctx.save();\r\n        const img = makeImg(MapSlotSrc);\r\n        const mapSlotW = img.width / 100;\r\n        const mapSlotH = img.height / 100;\r\n        ctx.scale(1, -1);\r\n        ctx.translate(-mapSlotW / 2, -mapSlotH / 2 - 0.19);\r\n        ctx.drawImage(img, 0, 0, mapSlotW, mapSlotH);\r\n        ctx.restore();\r\n\r\n        for (const entity of entities) {\r\n          renderEntity(ctx, entity);\r\n        }\r\n      });\r\n    });\r\n\r\n    return () => cancelAnimationFrame(id);\r\n  }, [canvasRef, entities, width, height, offset.x, offset.y, scale]);\r\n\r\n  return (\r\n    <Root className={className}>\r\n      <canvas ref={(ref) => setCanvasRef(ref)} width={width} height={height} />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PotionMapComponent;\r\n\r\nfunction transformToMap(\r\n  ctx: CanvasRenderingContext2D,\r\n  zoomFactor: number,\r\n  offsetX: number,\r\n  offsetY: number,\r\n  handler: () => void\r\n) {\r\n  ctx.save();\r\n  ctx.scale(zoomFactor, zoomFactor);\r\n\r\n  ctx.translate(MAP_EXTENT_RADIUS, MAP_EXTENT_RADIUS);\r\n\r\n  ctx.scale(1, -1);\r\n\r\n  // Offset is in map units, so apply after the inversion of y.\r\n  ctx.translate(offsetX, offsetY);\r\n\r\n  handler();\r\n  ctx.restore();\r\n}\r\n\r\nfunction renderEntity(ctx: CanvasRenderingContext2D, entity: MapEntity) {\r\n  switch (entity.entityType) {\r\n    case \"DangerZonePart\":\r\n      renderDangerZonePart(ctx, entity);\r\n      return;\r\n    case \"PotionEffect\":\r\n      renderPotionEffectEntity(ctx, entity);\r\n      return;\r\n    case \"ExperienceBonus\":\r\n      renderExperienceBonusEntity(ctx, entity);\r\n      return;\r\n    case \"Vortex\":\r\n      renderVortexEntity(ctx, entity);\r\n      return;\r\n  }\r\n}\r\n\r\nconst DangerZoneImageSrces: Record<string, string> = {\r\n  Bone1: require(\"./assets/danger-zone-parts/Bone1.png\"),\r\n  Bone2: require(\"./assets/danger-zone-parts/Bone2.png\"),\r\n  Fang1: require(\"./assets/danger-zone-parts/Fang1.png\"),\r\n  Fang2: require(\"./assets/danger-zone-parts/Fang2.png\"),\r\n  Skull1: require(\"./assets/danger-zone-parts/Skull1.png\"),\r\n};\r\n\r\nfunction renderDangerZonePart(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: DangerZonePartMapEntity\r\n) {\r\n  ctx.save();\r\n\r\n  ctx.translate(entity.x, entity.y);\r\n  ctx.rotate(degreesToRadians(entity.angle));\r\n\r\n  const src = DangerZoneImageSrces[entity.prefab];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 130;\r\n    const h = img.height / 130;\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n\r\nconst PotionEffectImageSrces: Record<string, string> = {\r\n  Acid: require(\"./assets/potion-effects/Acid.webp\"),\r\n  Berserker: require(\"./assets/potion-effects/Berserker.webp\"),\r\n  Bounce: require(\"./assets/potion-effects/Bounce.webp\"),\r\n  Charm: require(\"./assets/potion-effects/Charm.webp\"),\r\n  Crop: require(\"./assets/potion-effects/Crop.webp\"),\r\n  Explosion: require(\"./assets/potion-effects/Explosion.webp\"),\r\n  Fire: require(\"./assets/potion-effects/Fire.webp\"),\r\n  Fly: require(\"./assets/potion-effects/Fly.webp\"),\r\n  Frost: require(\"./assets/potion-effects/Frost.webp\"),\r\n  Growth: require(\"./assets/potion-effects/Growth.webp\"),\r\n  Hallucinations: require(\"./assets/potion-effects/Hallucinations.webp\"),\r\n  Healing: require(\"./assets/potion-effects/Healing.webp\"),\r\n  Invisibility: require(\"./assets/potion-effects/Invisibility.webp\"),\r\n  Libido: require(\"./assets/potion-effects/Libido.webp\"),\r\n  Light: require(\"./assets/potion-effects/Light.webp\"),\r\n  Lightning: require(\"./assets/potion-effects/Lightning.webp\"),\r\n  Mana: require(\"./assets/potion-effects/Mana.webp\"),\r\n  Necromancy: require(\"./assets/potion-effects/Necromancy.webp\"),\r\n  Poison: require(\"./assets/potion-effects/Poison.webp\"),\r\n  SharpVision: require(\"./assets/potion-effects/SharpVision.webp\"),\r\n  Sleep: require(\"./assets/potion-effects/Sleep.webp\"),\r\n  SlowDown: require(\"./assets/potion-effects/SlowDown.webp\"),\r\n  StoneSkin: require(\"./assets/potion-effects/StoneSkin.webp\"),\r\n};\r\n\r\nconst EffectSlotSrc = require(\"./assets/EffectSlot.png\");\r\nfunction renderPotionEffectEntity(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: PotionEffectMapEntity\r\n) {\r\n  // Line from effect to origin\r\n  ctx.save();\r\n  var grad = ctx.createLinearGradient(entity.x, entity.y, 0, 0);\r\n  grad.addColorStop(0, \"#D2AA7B\");\r\n  grad.addColorStop(1, \"transparent\");\r\n  ctx.strokeStyle = grad;\r\n  ctx.lineWidth = 0.05;\r\n  ctx.beginPath();\r\n  ctx.moveTo(entity.x, entity.y);\r\n  ctx.lineTo(0, 0);\r\n  ctx.stroke();\r\n  ctx.restore();\r\n\r\n  // Effect artwork\r\n  ctx.save();\r\n\r\n  ctx.translate(entity.x, entity.y);\r\n\r\n  // ctx.beginPath();\r\n  // ctx.fillStyle = \"red\";\r\n  // ctx.arc(0, 0, POTION_RADIUS, 0, 2 * Math.PI);\r\n  // ctx.fill();\r\n\r\n  const container = makeImg(EffectSlotSrc);\r\n  const containerW = container.width / 100;\r\n  const containerH = container.height / 100;\r\n  ctx.save();\r\n  ctx.scale(1, -1);\r\n  ctx.translate(-containerW / 2, -containerH / 2 - 0.2);\r\n  ctx.drawImage(container, 0, 0, containerW, containerH);\r\n  ctx.restore();\r\n\r\n  const src = PotionEffectImageSrces[entity.effect];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 40;\r\n    const h = img.height / 40;\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n\r\nconst ExperienceBonusImagesSrc: Record<string, string> = {\r\n  Little: require(\"./assets/experience-bonus/xp-small.png\"),\r\n  Medium: require(\"./assets/experience-bonus/xp-medium.png\"),\r\n  Large: require(\"./assets/experience-bonus/xp-large.png\"),\r\n};\r\n\r\nfunction renderExperienceBonusEntity(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: ExperienceBonusMapEntity\r\n) {\r\n  ctx.save();\r\n  ctx.translate(entity.x, entity.y);\r\n\r\n  const src = ExperienceBonusImagesSrc[entity.prefab];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 200;\r\n    const h = img.height / 200;\r\n    ctx.save();\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n    ctx.restore();\r\n  }\r\n\r\n  // ctx.beginPath();\r\n  // ctx.fillStyle = \"green\";\r\n  // ctx.arc(0, 0, 0.3, 0, 2 * Math.PI);\r\n  // ctx.fill();\r\n\r\n  ctx.restore();\r\n}\r\n\r\nconst VortexImagesSrc: Record<string, string> = {\r\n  Large: require(\"./assets/vortexes/Vortex Large Idle.png\"),\r\n  Medium: require(\"./assets/vortexes/Vortex Medium Idle.png\"),\r\n};\r\n\r\nfunction renderVortexEntity(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: VortexMapEntity\r\n) {\r\n  ctx.save();\r\n  ctx.translate(entity.x, entity.y);\r\n\r\n  // let radius = 0;\r\n  // switch (entity.prefab) {\r\n  //   case \"Large\":\r\n  //     radius = 1.65;\r\n  //     break;\r\n  //   case \"Medium\":\r\n  //     radius = 1.25;\r\n  //     break;\r\n  // }\r\n\r\n  // if (radius > 0) {\r\n  //   ctx.beginPath();\r\n  //   ctx.fillStyle = \"purple\";\r\n  //   ctx.arc(0, 0, radius, 0, 2 * Math.PI);\r\n  //   ctx.fill();\r\n  // }\r\n\r\n  // const backgroundSrc = VortexBackgroundImagesSrc[entity.prefab];\r\n  // if (backgroundSrc) {\r\n  //   const img = makeImg(backgroundSrc);\r\n  //   const w = img.width / 150;\r\n  //   const h = img.height / 150;\r\n  //   ctx.save();\r\n  //   ctx.scale(1, -1);\r\n  //   ctx.translate(-w / 2, -h / 2);\r\n  //   ctx.drawImage(img, 0, 0, w, h);\r\n  //   ctx.restore();\r\n  // }\r\n\r\n  const src = VortexImagesSrc[entity.prefab];\r\n  if (src) {\r\n    const img = makeImg(src);\r\n    const w = img.width / 100;\r\n    const h = img.height / 100;\r\n    ctx.save();\r\n    ctx.scale(1, -1);\r\n    ctx.translate(-w / 2, -h / 2);\r\n    ctx.drawImage(img, 0, 0, w, h);\r\n    ctx.restore();\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n","import PotionMap from \"./Map\";\r\nexport default PotionMap;\r\n","import * as React from \"react\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { getModifiers } from \"@/modifier-keys\";\r\n\r\nimport { useComponentBounds } from \"@/hooks/component-bounds\";\r\nimport { useNativeEvent } from \"@/hooks/native-event\";\r\n\r\nimport { IPanZoomViewportViewModel } from \"./PanZoomViewportViewModel\";\r\nimport { Point, pointSubtract, PointZero } from \"@/points\";\r\n\r\nexport interface PanZoomHandlerProps {\r\n  className?: string;\r\n  viewModel: IPanZoomViewportViewModel;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ZOOM_FACTOR = 1.15;\r\nexport const PAN_FACTOR = 0.15;\r\n\r\nconst Root = styled(\"div\")({\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n});\r\n\r\nconst PanZoomViewport = ({\r\n  className,\r\n  viewModel,\r\n  children,\r\n}: PanZoomHandlerProps) => {\r\n  const containerRef = React.useRef<HTMLDivElement | null>(null);\r\n  const containerBounds = useComponentBounds(containerRef);\r\n  const [dragPointer, setDragPointer] = React.useState<number | null>(null);\r\n  const [mouseLastPos, setMouseLastPos] = React.useState<Point>(PointZero);\r\n\r\n  React.useLayoutEffect(() => {\r\n    viewModel.onViewportResized(containerBounds.width, containerBounds.height);\r\n  }, [containerBounds.width, containerBounds.height]);\r\n\r\n  const onWheel = React.useCallback((e: WheelEvent) => {\r\n    const target = containerRef.current;\r\n    if (!target || e.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const modifiers = getModifiers(e);\r\n\r\n    if (modifiers.ctrlMetaKey) {\r\n      viewModel.zoom(e.deltaY < 0 ? ZOOM_FACTOR : 1 / ZOOM_FACTOR, {\r\n        x: e.clientX,\r\n        y: e.clientY,\r\n      });\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else if (modifiers.shiftKey) {\r\n      viewModel.pan(-e.deltaY * PAN_FACTOR, 0, true);\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else {\r\n      viewModel.pan(0, e.deltaY * PAN_FACTOR, true);\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }, []);\r\n\r\n  const onPointerDown = React.useCallback(\r\n    (e: React.PointerEvent<HTMLDivElement>) => {\r\n      if (dragPointer != null) {\r\n        return;\r\n      }\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n      setDragPointer(e.pointerId);\r\n      e.currentTarget.setPointerCapture(e.pointerId);\r\n      setMouseLastPos({ x: e.clientX, y: e.clientY });\r\n    },\r\n    [dragPointer]\r\n  );\r\n\r\n  const onPointerMove = React.useCallback(\r\n    (e: React.PointerEvent<HTMLDivElement>) => {\r\n      if (dragPointer == null) {\r\n        return;\r\n      }\r\n      const p = { x: e.clientX, y: e.clientY };\r\n      const delta = pointSubtract(p, mouseLastPos);\r\n      setMouseLastPos(p);\r\n      // FIXME: Panning is miscalculated.  Mouse drifts from grab position.\r\n      viewModel.pan(delta.x, -delta.y, true);\r\n    },\r\n    [mouseLastPos, viewModel]\r\n  );\r\n\r\n  const onPointerUp = React.useCallback(\r\n    (e: React.PointerEvent) => {\r\n      if (e.pointerId != dragPointer) {\r\n        return;\r\n      }\r\n      setDragPointer(null);\r\n      setMouseLastPos(PointZero);\r\n      e.currentTarget.releasePointerCapture(e.pointerId);\r\n    },\r\n    [dragPointer]\r\n  );\r\n\r\n  // React listens to the root listener for all events,\r\n  //  and chrome assumes the root event listener for mouse events\r\n  //  never wants to preventDefault.\r\n  // We need to take a local event listener and mark it as not passive.\r\n  // https://github.com/facebook/react/issues/14856\r\n  useNativeEvent(containerRef, \"wheel\", onWheel, { passive: false });\r\n\r\n  return (\r\n    <Root\r\n      className={className}\r\n      ref={containerRef}\r\n      onMouseMove={(e) => viewModel.onMouseMove(e.clientX, e.clientY)}\r\n      onPointerDown={onPointerDown}\r\n      onPointerMove={onPointerMove}\r\n      onPointerUp={onPointerUp}\r\n    >\r\n      {children}\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PanZoomViewport;\r\n","import PanZoomViewport from \"./PanZoomViewport\";\r\nexport default PanZoomViewport;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  styled,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Slider,\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { Add as AddIcon, Delete as DeleteIcon } from \"@mui/icons-material\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport {\r\n  AddIngredientPlotBuilderItem,\r\n  PlotBuilder,\r\n  PlotBuilderItem,\r\n  PourSolventPlotBuilderItem,\r\n  StirCauldronPlotBuilderItem,\r\n} from \"@/services/plotter/PlotBuilder\";\r\nimport { IngredientId } from \"@/services/ingredients/types\";\r\n\r\nimport IngredientSelector from \"./IngredientSelector\";\r\nimport IncDecSlider from \"./IncDecSlider\";\r\n\r\nexport interface PlotBuilderItemsListProps {\r\n  className?: string;\r\n  builder: PlotBuilder;\r\n  highlightItem?: PlotBuilderItem | null;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  overflow: \"auto\",\r\n  boxSixing: \"border-box\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  \"& .list\": {\r\n    listStyle: \"none\",\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  \"& .list-item\": {\r\n    position: \"relative\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  \"& .list-item .delete-button\": {\r\n    position: \"absolute\",\r\n    top: \"5px\",\r\n    right: \"15px\",\r\n  },\r\n  \"& .buttons\": {\r\n    alignSelf: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst PlotBuilderItemsList = ({\r\n  className,\r\n  builder,\r\n  highlightItem,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotBuilderItemsListProps) => {\r\n  const items = useObservation(builder.items$) ?? [];\r\n  return (\r\n    <Root className={className}>\r\n      <ul className=\"list\">\r\n        {items.map((item, i) => (\r\n          <PlotListItem\r\n            key={i}\r\n            item={item}\r\n            highlight={item === highlightItem}\r\n            onMouseOver={onMouseOver}\r\n            onMouseOut={onMouseOut}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <div className=\"buttons\">\r\n        <Button color=\"primary\" onClick={() => builder.addIngredient()}>\r\n          <AddIcon /> Ingredient\r\n        </Button>\r\n        <Button color=\"primary\" onClick={() => builder.addStirCauldron()}>\r\n          <AddIcon /> Stir Cauldron\r\n        </Button>\r\n        <Button color=\"primary\" onClick={() => builder.addPourSolvent()}>\r\n          <AddIcon /> Pour Solvent\r\n        </Button>\r\n      </div>\r\n    </Root>\r\n  );\r\n};\r\n\r\ninterface PlotListItemProps {\r\n  item: PlotBuilderItem;\r\n  highlight?: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst PlotListItem = ({\r\n  item,\r\n  highlight = false,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotListItemProps) => {\r\n  if (item instanceof AddIngredientPlotBuilderItem) {\r\n    return (\r\n      <AddIngredientPlotListItem\r\n        item={item}\r\n        highlight={highlight}\r\n        onMouseOver={onMouseOver}\r\n        onMouseOut={onMouseOut}\r\n      />\r\n    );\r\n  } else if (item instanceof StirCauldronPlotBuilderItem) {\r\n    return (\r\n      <StirCauldronPlotListItem\r\n        item={item}\r\n        highlight={highlight}\r\n        onMouseOver={onMouseOver}\r\n        onMouseOut={onMouseOut}\r\n      />\r\n    );\r\n  } else if (item instanceof PourSolventPlotBuilderItem) {\r\n    return (\r\n      <PourSolventPlotListItem\r\n        item={item}\r\n        highlight={highlight}\r\n        onMouseOver={onMouseOver}\r\n        onMouseOut={onMouseOut}\r\n      />\r\n    );\r\n  }\r\n  return <div>Unknown PlotItem {item.constructor.name}</div>;\r\n};\r\n\r\ninterface PlotListItemCardProps {\r\n  item: PlotBuilderItem;\r\n  highlight: boolean;\r\n  children: React.ReactNode;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\n\r\nconst PlotListItemCard = ({\r\n  item,\r\n  highlight,\r\n  children,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotListItemCardProps) => {\r\n  const valid = useObservation(item.isValid$) ?? false;\r\n  return (\r\n    <Card\r\n      className=\"list-item\"\r\n      style={{\r\n        backgroundColor:\r\n          (!valid && \"salmon\") || (highlight && \"lightblue\") || undefined,\r\n      }}\r\n      onMouseOver={() => onMouseOver(item)}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <IconButton\r\n        size=\"small\"\r\n        className=\"delete-button\"\r\n        onClick={() => item.delete()}\r\n      >\r\n        <DeleteIcon />\r\n      </IconButton>\r\n      <CardContent>{children}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\ninterface AddIngredientPlotListItemProps {\r\n  item: AddIngredientPlotBuilderItem;\r\n  highlight: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst AddIngredientPlotListItem = ({\r\n  item,\r\n  highlight,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: AddIngredientPlotListItemProps) => {\r\n  const savedIngredientRef = React.useRef<IngredientId | null>(null);\r\n\r\n  // Need both state (for rerender on change) and ref (to check it in a callback)\r\n  const [isPreviewing, setIsPreviewing] = React.useState<boolean>(false);\r\n  const isPreviewingRef = React.useRef(false);\r\n\r\n  // Note: This is from when a transition was used to show the preview, we wanted\r\n  // the slider to update live while the preview was not.  However, we no longer use\r\n  // transitions as the system is now fast enough to deal without it.\r\n  const [localGrind, setLocalGrind] = React.useState<number | null>(null);\r\n\r\n  const [inputGrindPercent, setInputGrindPercent] = React.useState<\r\n    string | null\r\n  >(null);\r\n\r\n  const ingredientId = useObservation(item.ingredientId$) ?? null;\r\n  const grindPercent = useObservation(item.grindPercent$) ?? 0;\r\n\r\n  // We change the ingredientId during mouse over for live feedback, but this changes the ingredient id we wish to display.\r\n  // We need to pin the previously selected id so that IngredientSelector works properly during the selection process.\r\n  const displayIngredientId = isPreviewing\r\n    ? savedIngredientRef.current\r\n    : ingredientId;\r\n  return (\r\n    <PlotListItemCard\r\n      item={item}\r\n      highlight={highlight}\r\n      onMouseOver={localGrind != null ? () => {} : onMouseOver}\r\n      onMouseOut={localGrind != null ? () => {} : onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Ingredient</Typography>\r\n      </div>\r\n      <IngredientSelector\r\n        fullWidth\r\n        value={displayIngredientId}\r\n        allowEmpty={displayIngredientId == null}\r\n        // Store the last ingredient when we open, so we can return to it after closing without making a selection.\r\n        onOpen={() => {\r\n          savedIngredientRef.current = item.ingredientId;\r\n          setIsPreviewing(true);\r\n          isPreviewingRef.current = true;\r\n        }}\r\n        // Change the ingredient id with the mouse for a live preview.\r\n        onMouseOverItem={(id) => {\r\n          if (!isPreviewing) {\r\n            return;\r\n          }\r\n          item.setIngredient(id);\r\n        }}\r\n        // Change our saved ingredient when the input is committed.  We will restore it when the input closes after the change.\r\n        onChange={(id) => {\r\n          setIsPreviewing(false);\r\n          isPreviewingRef.current = false;\r\n          item.setIngredient(id);\r\n        }}\r\n        onClose={() => {\r\n          if (isPreviewingRef.current) {\r\n            item.setIngredient(savedIngredientRef.current);\r\n            setIsPreviewing(false);\r\n            isPreviewingRef.current = false;\r\n          }\r\n          savedIngredientRef.current = null;\r\n        }}\r\n      />\r\n      <Grid paddingTop={1}>\r\n        <TextField\r\n          label=\"Grind Percent\"\r\n          value={inputGrindPercent ?? grindPercent * 100}\r\n          onChange={(e) => {\r\n            let asNumber: number | null = Number(e.target.value) / 100;\r\n            if (isNaN(asNumber) || asNumber < 0 || asNumber > 1) {\r\n              asNumber = null;\r\n            }\r\n\r\n            setInputGrindPercent(e.target.value);\r\n            item.setGrindPercent(asNumber ?? 0);\r\n          }}\r\n          onBlur={() => setInputGrindPercent(null)}\r\n        />\r\n        <Slider\r\n          value={localGrind ?? grindPercent}\r\n          onChange={(_, value) => {\r\n            item.setGrindPercent(value as number);\r\n            setLocalGrind(value as number);\r\n          }}\r\n          onChangeCommitted={(_, value) => {\r\n            item.setGrindPercent(value as number);\r\n            setLocalGrind(null);\r\n          }}\r\n          min={0}\r\n          max={1}\r\n          step={0.001}\r\n        />\r\n      </Grid>\r\n    </PlotListItemCard>\r\n  );\r\n};\r\n\r\ninterface StirCauldronPlotListItemProps {\r\n  item: StirCauldronPlotBuilderItem;\r\n  highlight: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\n\r\nconst StirCauldronPlotListItem = ({\r\n  item,\r\n  highlight,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: StirCauldronPlotListItemProps) => {\r\n  const distance = useObservation(item.distance$);\r\n  const [inputDistance, setInputDistance] = React.useState<string | null>(null);\r\n  return (\r\n    <PlotListItemCard\r\n      item={item}\r\n      highlight={highlight}\r\n      onMouseOver={onMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Stir Cauldron</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"Distance\"\r\n        value={inputDistance ?? distance ?? \"\"}\r\n        onChange={(e) => {\r\n          let asNumber: number | null = Number(e.target.value);\r\n          if (isNaN(asNumber)) {\r\n            asNumber = null;\r\n          }\r\n\r\n          setInputDistance(e.target.value);\r\n          item.setDistance(asNumber);\r\n        }}\r\n        onBlur={() => setInputDistance(null)}\r\n      />\r\n      <IncDecSlider\r\n        value={distance ?? 0}\r\n        rate={10}\r\n        onChange={(value) =>\r\n          item.setDistance(Math.max(0, Number(value.toFixed(3))))\r\n        }\r\n      />\r\n    </PlotListItemCard>\r\n  );\r\n};\r\n\r\ninterface PourSolventPlotListItemProps {\r\n  item: PourSolventPlotBuilderItem;\r\n  highlight: boolean;\r\n  onMouseOver(item: PlotBuilderItem): void;\r\n  onMouseOut(): void;\r\n}\r\nconst PourSolventPlotListItem = ({\r\n  item,\r\n  highlight,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PourSolventPlotListItemProps) => {\r\n  const distance = useObservation(item.distance$);\r\n  const [inputDistance, setInputDistance] = React.useState<string | null>(null);\r\n  return (\r\n    <PlotListItemCard\r\n      item={item}\r\n      highlight={highlight}\r\n      onMouseOver={onMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    >\r\n      <div>\r\n        <Typography variant=\"overline\">Pour Solvent</Typography>\r\n      </div>\r\n      <TextField\r\n        label=\"Distance\"\r\n        value={inputDistance ?? distance ?? \"\"}\r\n        onChange={(e) => {\r\n          let asNumber: number | null = Number(e.target.value);\r\n          if (isNaN(asNumber)) {\r\n            asNumber = null;\r\n          }\r\n\r\n          setInputDistance(e.target.value);\r\n          item.setDistance(asNumber);\r\n        }}\r\n        onBlur={() => setInputDistance(null)}\r\n      />\r\n      <IncDecSlider\r\n        value={distance ?? 0}\r\n        rate={10}\r\n        onChange={(value) =>\r\n          item.setDistance(Math.max(0, Number(value.toFixed(3))))\r\n        }\r\n      />\r\n    </PlotListItemCard>\r\n  );\r\n};\r\n\r\nexport default PlotBuilderItemsList;\r\n","import React from \"react\";\r\nimport { styled, Card, CardContent, Typography } from \"@mui/material\";\r\n\r\nimport { useDICreate, useDIDependency } from \"@/container\";\r\nimport { PointZero } from \"@/points\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\n\r\nimport { EmptyPlotResult } from \"@/services/plotter/types\";\r\nimport { PotionBaseRegistry } from \"@/services/potion-bases/PotionBaseRegistry\";\r\n\r\nimport Plot from \"../Plot\";\r\nimport PlotBuilderItemsList from \"../PlotBuilderItemsList\";\r\nimport PotionMap from \"../Map\";\r\nimport PanZoomViewport from \"../PanZoomViewport\";\r\nimport IncDecSlider from \"../IncDecSlider\";\r\n\r\nimport { PlotEditorViewModel } from \"./PlotEditorViewModel\";\r\n\r\nimport StepDetails from \"./components/StepDetails\";\r\nimport PlotDetails from \"./components/PlotDetails\";\r\nimport EntityDetails from \"./components/EntityDetails\";\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  \"& .outer-container\": {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .plot-container\": {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .map\": {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .plot\": {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  \"& .plot-details\": {\r\n    position: \"absolute\",\r\n    top: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  \"& .inspect-source\": {\r\n    position: \"absolute\",\r\n    top: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n  },\r\n  \"& .mouse-coords\": {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  \"& .zoom\": {\r\n    position: \"absolute\",\r\n    width: \"200px\",\r\n    bottom: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n  },\r\n  \"& .divider\": {\r\n    width: \"2px\",\r\n    height: \"100%\",\r\n    background: \"grey\",\r\n  },\r\n  \"& .plot-items\": {\r\n    width: \"400px\",\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nconst PlotEditor = () => {\r\n  const viewModel = useDICreate(PlotEditorViewModel);\r\n  const baseRegistry = useDIDependency(PotionBaseRegistry);\r\n  const map = baseRegistry.getPotionBaseById(\"water\" as any)?.map;\r\n  const inspectSource = useObservation(viewModel.mouseOverPlotItem$) ?? null;\r\n  const inspectEntity = useObservation(viewModel.mouseOverEntity$) ?? null;\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n\r\n  const builder = viewModel.builder;\r\n\r\n  const plot = useObservation(builder.plot$, { useTransition: false }) ?? null;\r\n\r\n  const highlightItem = useObservation(viewModel.mouseOverBuilderItem$) ?? null;\r\n  const outputShareString =\r\n    useObservation(viewModel.shareString$, { useTransition: true }) ?? null;\r\n\r\n  const mouseWorld = useObservation(viewModel.mouseWorldPosition$) ?? PointZero;\r\n\r\n  React.useEffect(() => {\r\n    const query = new URLSearchParams(window.location.search);\r\n    if (query.has(\"data\")) {\r\n      const data = query.get(\"data\")!;\r\n      builder.loadFromShareString(data);\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (!outputShareString) {\r\n      return;\r\n    }\r\n    const query = new URLSearchParams(window.location.search);\r\n    query.set(\"data\", outputShareString);\r\n    window.history.replaceState({}, \"\", `?${query.toString()}`);\r\n  }, [outputShareString]);\r\n\r\n  return (\r\n    <Root>\r\n      <div className=\"outer-container\">\r\n        <PanZoomViewport className=\"plot-container\" viewModel={viewModel}>\r\n          {map && <PotionMap className=\"map\" map={map} viewModel={viewModel} />}\r\n          <Plot\r\n            className=\"plot\"\r\n            plot={plot ?? EmptyPlotResult}\r\n            viewModel={viewModel}\r\n          />\r\n        </PanZoomViewport>\r\n        {inspectSource && (\r\n          <StepDetails className=\"inspect-source\" step={inspectSource} />\r\n        )}\r\n        {!inspectSource && inspectEntity && (\r\n          <EntityDetails className=\"inspect-source\" entity={inspectEntity} />\r\n        )}\r\n        {plot && <PlotDetails className=\"plot-details\" plot={plot} />}\r\n        <Card className=\"mouse-coords\">\r\n          <CardContent>\r\n            <Typography variant=\"overline\">\r\n              ({mouseWorld.x.toFixed(2)}, {mouseWorld.y.toFixed(2)})\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n        <IncDecSlider\r\n          className=\"zoom\"\r\n          value={scale}\r\n          rate={4}\r\n          onChange={(value) => viewModel.setZoom(value)}\r\n        />\r\n      </div>\r\n      <div className=\"divider\" />\r\n      <PlotBuilderItemsList\r\n        className=\"plot-items\"\r\n        builder={builder}\r\n        highlightItem={highlightItem}\r\n        onMouseOver={(item) => viewModel.onMouseOverBuilderItem(item)}\r\n        onMouseOut={() => viewModel.onMouseOverBuilderItem(null)}\r\n      />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PlotEditor;\r\n","import {\r\n  BehaviorSubject,\r\n  map,\r\n  Observable,\r\n  combineLatest,\r\n  debounceTime,\r\n} from \"rxjs\";\r\nimport { first } from \"lodash\";\r\n\r\nimport { inject } from \"microinject\";\r\n\r\nimport { Point, pointAdd, pointSubtract, PointZero } from \"@/points\";\r\nimport { Size, SizeZero } from \"@/size\";\r\n\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\n\r\nimport { PlotBuilder, PlotBuilderItem } from \"@/services/plotter/PlotBuilder\";\r\nimport { PlotItem } from \"@/services/plotter/types\";\r\n\r\nimport { IPlotViewModel } from \"../Plot/PlotViewModel\";\r\nimport { IPanZoomViewportViewModel } from \"../PanZoomViewport/PanZoomViewportViewModel\";\r\nimport { MapEntity } from \"@/services/potion-maps/types\";\r\n\r\nexport class PlotEditorViewModel\r\n  implements IPlotViewModel, IPanZoomViewportViewModel\r\n{\r\n  private readonly _viewportSize$ = new BehaviorSubject<Size>(SizeZero);\r\n\r\n  /**\r\n   * The offset of the map on the viewport, in map units, unscaled.\r\n   */\r\n  private readonly _viewOffset$ = new BehaviorSubject<Point>(PointZero);\r\n  private readonly _viewScale$ = new BehaviorSubject<number>(1);\r\n\r\n  private readonly _shareString$: Observable<string>;\r\n\r\n  private readonly _mouseClientPosition$ = new BehaviorSubject<Point>(\r\n    PointZero\r\n  );\r\n  private readonly _mouseWorldPosition$: Observable<Point>;\r\n  private readonly _mouseOverPlotItem$ = new BehaviorSubject<PlotItem | null>(\r\n    null\r\n  );\r\n  private readonly _mouseOverBuilderItem$ =\r\n    new BehaviorSubject<PlotBuilderItem | null>(null);\r\n  private readonly _mouseOverEntity$: Observable<MapEntity | null>;\r\n\r\n  constructor(@inject(PlotBuilder) private readonly _builder: PlotBuilder) {\r\n    this._shareString$ = this._builder.plot$\r\n      .pipe(debounceTime(1000))\r\n      .pipe(map((x) => _builder.getShareString()));\r\n\r\n    this._mouseWorldPosition$ = combineLatest([\r\n      this._mouseClientPosition$,\r\n      this._viewOffset$,\r\n      this._viewScale$,\r\n    ]).pipe(map(([clientPos]) => this._clientToWorld(clientPos)));\r\n\r\n    this._mouseOverEntity$ = combineLatest([\r\n      this._mouseWorldPosition$,\r\n      _builder.map$,\r\n    ]).pipe(\r\n      map(([worldPos, map]) => {\r\n        const entities = map?.hitTest(worldPos) ?? [];\r\n        const entity = first(entities);\r\n        return entity ?? null;\r\n      })\r\n    );\r\n  }\r\n\r\n  get builder(): PlotBuilder {\r\n    return this._builder;\r\n  }\r\n\r\n  get shareString$(): Observable<string> {\r\n    return this._shareString$;\r\n  }\r\n\r\n  get viewportSize$(): Observable<Size> {\r\n    return this._viewportSize$;\r\n  }\r\n\r\n  get viewOffset$(): Observable<Point> {\r\n    return this._viewOffset$;\r\n  }\r\n  get viewScale$(): Observable<number> {\r\n    return this._viewScale$;\r\n  }\r\n\r\n  get mouseWorldPosition$(): Observable<Point> {\r\n    return this._mouseWorldPosition$;\r\n  }\r\n\r\n  get mouseOverPlotItem$(): Observable<PlotItem | null> {\r\n    return this._mouseOverPlotItem$;\r\n  }\r\n\r\n  get mouseOverBuilderItem$(): Observable<PlotBuilderItem | null> {\r\n    return this._mouseOverBuilderItem$;\r\n  }\r\n\r\n  get mouseOverEntity$(): Observable<MapEntity | null> {\r\n    return this._mouseOverEntity$;\r\n  }\r\n\r\n  zoom(delta: number, on: Point | null = null) {\r\n    const prevWorld = on ? this._clientToWorld(on) : PointZero;\r\n    const pzoom = this._viewScale$.value;\r\n    const zoom = pzoom * delta;\r\n    this._viewScale$.next(zoom);\r\n    if (on) {\r\n      const world = this._clientToWorld(on);\r\n      const delta = pointSubtract(world, prevWorld);\r\n      this._viewOffset$.next(pointAdd(this._viewOffset$.value, delta));\r\n    }\r\n  }\r\n\r\n  setZoom(zoom: number) {\r\n    const delta = zoom / this._viewScale$.value;\r\n    const { width, height } = this._viewportSize$.value;\r\n    this.zoom(delta, { x: width / 2, y: height / 2 });\r\n  }\r\n\r\n  pan(dx: number, dy: number, applyZoom = false) {\r\n    const z = applyZoom ? 1 / this._viewScale$.value : 1;\r\n    this._viewOffset$.next(\r\n      pointAdd(this._viewOffset$.value, { x: dx * z, y: dy * z })\r\n    );\r\n  }\r\n\r\n  onMouseMove(clientX: number, clientY: number): void {\r\n    this._mouseClientPosition$.next({ x: clientX, y: clientY });\r\n  }\r\n\r\n  onViewportResized(width: number, height: number): void {\r\n    let prevSize = this._viewportSize$.value;\r\n    if (prevSize.width === 0 || prevSize.height === 0) {\r\n      prevSize = {\r\n        width: MAP_EXTENT_RADIUS * 2,\r\n        height: MAP_EXTENT_RADIUS * 2,\r\n      };\r\n    }\r\n\r\n    this._viewportSize$.next({ width, height });\r\n\r\n    if (width === 0 || height === 0) {\r\n      return;\r\n    }\r\n\r\n    let scaleFactor = 1;\r\n    if (width < height) {\r\n      scaleFactor = width / prevSize.width;\r\n    } else {\r\n      scaleFactor = height / prevSize.height;\r\n    }\r\n\r\n    // TODO: Keep the view centered.\r\n    // const offset: Point = {\r\n    //   x: (prevSize.width - width) / 2 / this._viewScale$.value,\r\n    //   y: (prevSize.height - height) / 2 / this._viewScale$.value,\r\n    // };\r\n    this._viewScale$.next(this._viewScale$.value * scaleFactor);\r\n    // this._viewOffset$.next(pointAdd(this._viewOffset$.value, offset));\r\n  }\r\n\r\n  onMouseOverPlotItem(item: PlotItem | null): void {\r\n    this._mouseOverPlotItem$.next(item);\r\n    this._mouseOverBuilderItem$.next(\r\n      item ? this._builder.builderItemFor(item) : null\r\n    );\r\n  }\r\n\r\n  onMouseOverBuilderItem(item: PlotBuilderItem | null): void {\r\n    this._mouseOverBuilderItem$.next(item);\r\n    this._mouseOverPlotItem$.next(item ? item.plotItem : null);\r\n  }\r\n\r\n  private _clientToWorld(p: Point): Point {\r\n    const zoomFactor = this._viewScale$.value;\r\n    const { x: offsetX, y: offsetY } = this._viewOffset$.value;\r\n\r\n    // offset is in world coords.\r\n    // We need to add offsetY instead of subtract as y is flipped in world coords when compared to screen.\r\n    return {\r\n      x: p.x / zoomFactor - MAP_EXTENT_RADIUS - offsetX,\r\n      y: (p.y / zoomFactor - MAP_EXTENT_RADIUS + offsetY) * -1,\r\n    };\r\n  }\r\n\r\n  private _worldToClient(p: Point): Point {\r\n    const zoomFactor = this._viewScale$.value;\r\n    const { x: offsetX, y: offsetY } = this._viewOffset$.value;\r\n\r\n    // Why the hell is this opposite of crucible-web even with the same client to world coord function?\r\n    return {\r\n      x: (p.x + MAP_EXTENT_RADIUS + offsetX) * zoomFactor,\r\n      y: (-p.y + MAP_EXTENT_RADIUS + offsetY) * zoomFactor,\r\n    };\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Card, CardContent } from \"@mui/material\";\r\n\r\nimport {\r\n  MapEntity,\r\n  PotionEffectMapEntity,\r\n  VortexMapEntity,\r\n} from \"@/services/potion-maps/types\";\r\n\r\nexport interface StepDetailsProps {\r\n  className?: string;\r\n  entity: MapEntity;\r\n}\r\n\r\nconst EntityDetails = ({ entity, className }: StepDetailsProps) => {\r\n  let content: React.ReactNode;\r\n  switch (entity.entityType) {\r\n    case \"PotionEffect\":\r\n      content = <PotionEffectMapEntityDetails entity={entity} />;\r\n      break;\r\n    case \"Vortex\":\r\n      content = <VortexMapEntityDetails entity={entity} />;\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  return (\r\n    <Card className={className} variant=\"outlined\">\r\n      <CardContent>{content}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EntityDetails;\r\n\r\nconst PotionEffectMapEntityDetails = ({\r\n  entity,\r\n}: {\r\n  entity: PotionEffectMapEntity;\r\n}) => {\r\n  return (\r\n    <div>\r\n      {entity.effect} ({entity.x}, {entity.y})\r\n    </div>\r\n  );\r\n};\r\n\r\nconst VortexMapEntityDetails = ({ entity }: { entity: VortexMapEntity }) => {\r\n  return (\r\n    <div>\r\n      Vortex ({entity.x}, {entity.y})\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { uniq, sum, last } from \"lodash\";\r\n\r\nimport { Card, CardContent, Typography } from \"@mui/material\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\nimport { pointArrayLength } from \"@/point-array\";\r\nimport { pointMagnitude, pointSubtract, PointZero } from \"@/points\";\r\n\r\nimport {\r\n  AddIngredientPlotItem,\r\n  PlotItem,\r\n  PlotPoint,\r\n  PlotResult,\r\n} from \"@/services/plotter/types\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\n\r\nexport interface PlotDetailsProps {\r\n  className?: string;\r\n  plot: PlotResult;\r\n}\r\n\r\nconst PlotDetails = ({ className, plot }: PlotDetailsProps) => {\r\n  const ingredientRegistry = useDIDependency(IngredientRegistry);\r\n\r\n  const endsAt = last(plot.committedPoints) ?? PointZero;\r\n\r\n  const [\r\n    baseCost,\r\n    length,\r\n    totalIngredients,\r\n    totalUniqueIngredients,\r\n    stress,\r\n    longestDanger,\r\n  ] = React.useMemo(() => {\r\n    const allPoints = plot.committedPoints.concat(plot.pendingPoints);\r\n    const sources = uniq(allPoints.map((point) => point.source));\r\n    const ingredients = sources.filter(isIngredientPoint);\r\n\r\n    let baseCost = 0;\r\n    let ingredientTypeCounts: Record<string, number> = {};\r\n    for (const { ingredientId } of ingredients) {\r\n      const ingredient = ingredientRegistry.getIngredientById(ingredientId);\r\n      if (!ingredient) {\r\n        continue;\r\n      }\r\n      baseCost += ingredient.price;\r\n      ingredientTypeCounts[ingredient.id] =\r\n        (ingredientTypeCounts[ingredient.id] ?? 0) + 1;\r\n    }\r\n\r\n    const length = pointArrayLength(plot.committedPoints);\r\n\r\n    const totalIngredients = ingredients.length;\r\n    const totalUniqueIngredients = uniq(\r\n      ingredients.map((x) => x.ingredientId)\r\n    ).length;\r\n\r\n    const stress = Math.sqrt(\r\n      sum(\r\n        Object.keys(ingredientTypeCounts).map((key) =>\r\n          Math.pow(ingredientTypeCounts[key], 2)\r\n        )\r\n      )\r\n    );\r\n\r\n    const longestDanger = longestDangerLength(plot.committedPoints);\r\n\r\n    return [\r\n      baseCost,\r\n      length,\r\n      totalIngredients,\r\n      totalUniqueIngredients,\r\n      stress,\r\n      longestDanger,\r\n    ];\r\n  }, [plot, IngredientRegistry]);\r\n\r\n  return (\r\n    <Card className={className} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h6\">Details</Typography>\r\n        <div>\r\n          <Typography>Ingredient count: </Typography>\r\n          <Typography variant=\"overline\">\r\n            {totalIngredients} ({totalUniqueIngredients} unique)\r\n          </Typography>\r\n        </div>\r\n        <div>\r\n          <Typography>Ingredient stress: </Typography>\r\n          <Typography variant=\"overline\">{stress.toFixed(2)}</Typography>\r\n        </div>\r\n        <div>\r\n          <Typography>Base Cost: </Typography>\r\n          <Typography variant=\"overline\">{baseCost}</Typography>\r\n        </div>\r\n        <div>\r\n          <Typography>Committed length: </Typography>\r\n          <Typography variant=\"overline\">{length.toFixed(2)}</Typography>\r\n        </div>\r\n        <div>\r\n          <Typography>Ends at: </Typography>\r\n          <Typography variant=\"overline\">\r\n            {endsAt.x.toFixed(2)}, {endsAt.y.toFixed(2)}\r\n          </Typography>\r\n        </div>\r\n        <div>\r\n          <Typography>Longest length in bones: </Typography>\r\n          <Typography variant=\"overline\">{longestDanger.toFixed(2)}</Typography>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PlotDetails;\r\n\r\nexport function isIngredientPoint(\r\n  point: PlotItem\r\n): point is AddIngredientPlotItem {\r\n  return point.type === \"add-ingredient\";\r\n}\r\n\r\nfunction longestDangerLength(items: PlotPoint[]): number {\r\n  let longestLength = 0;\r\n  let currentLength = 0;\r\n  let prevItem = items[0];\r\n  for (let i = 1; i < items.length; i++) {\r\n    const item = items[i];\r\n    if (item.entities.some((x) => x.entityType === \"DangerZonePart\")) {\r\n      currentLength += pointMagnitude(pointSubtract(item, prevItem));\r\n    } else {\r\n      longestLength = Math.max(longestLength, currentLength);\r\n      currentLength = 0;\r\n    }\r\n    prevItem = item;\r\n  }\r\n\r\n  return Math.max(longestLength, currentLength);\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Card, CardContent, Typography, styled } from \"@mui/material\";\r\n\r\nimport { useDIDependency } from \"@/container\";\r\n\r\nimport { CubicBezierCurve } from \"@/curves\";\r\nimport { MAX_INGREDIENT_EXTENT, POTION_RADIUS } from \"@/game-settings\";\r\n\r\nimport { AddIngredientPlotItem, PlotItem } from \"@/services/plotter/types\";\r\nimport { IngredientRegistry } from \"@/services/ingredients/IngredientRegistry\";\r\n\r\nexport interface StepDetailsProps {\r\n  className?: string;\r\n  step: PlotItem;\r\n}\r\n\r\nconst StepDetails = ({ step, className }: StepDetailsProps) => {\r\n  let content: React.ReactNode;\r\n  switch (step.type) {\r\n    case \"add-ingredient\":\r\n      content = <AddIngredient step={step} />;\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  return (\r\n    <Card className={className} variant=\"outlined\">\r\n      <CardContent>{content}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\ninterface AddIngredientStepProps {\r\n  step: AddIngredientPlotItem;\r\n}\r\n\r\nconst AddIngredientRoot = styled(\"div\")({\r\n  \"& .svg-container\": {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\nconst AddIngredient = ({ step }: AddIngredientStepProps) => {\r\n  const ingredientRegistry = useDIDependency(IngredientRegistry);\r\n  const ingredient = ingredientRegistry.getIngredientById(\r\n    step.ingredientId\r\n  ) ?? {\r\n    name: \"Unknown\",\r\n    path: [] as CubicBezierCurve[],\r\n  };\r\n\r\n  const path = ingredient.path.reduce(\r\n    (path, curve) =>\r\n      path +\r\n      `M ${curve.start.x} ${curve.start.y} C ${curve.p1.x},${curve.p1.y} ${curve.p2.x},${curve.p2.y} ${curve.end.x},${curve.end.y}`,\r\n    \"M 0 0 \"\r\n  );\r\n  return (\r\n    <AddIngredientRoot>\r\n      <Typography variant=\"h6\">Ingredient</Typography>\r\n      <Typography variant=\"overline\">{ingredient.name}</Typography>\r\n      <div>\r\n        <Typography>Grind Percentage</Typography>\r\n        <Typography variant=\"overline\">{step.grindPercent}</Typography>\r\n      </div>\r\n      <div className=\"svg-container\">\r\n        <svg\r\n          width=\"100px\"\r\n          height=\"100px\"\r\n          viewBox={`-${MAX_INGREDIENT_EXTENT} -${MAX_INGREDIENT_EXTENT} ${\r\n            MAX_INGREDIENT_EXTENT * 2\r\n          } ${MAX_INGREDIENT_EXTENT * 2}`}\r\n          transform=\"scale(1, -1)\"\r\n        >\r\n          <circle cx={0} cy={0} r={POTION_RADIUS} fill=\"blue\" />\r\n          <path d={path} stroke=\"black\" strokeWidth={0.2} fill=\"none\" />\r\n        </svg>\r\n      </div>\r\n    </AddIngredientRoot>\r\n  );\r\n};\r\n\r\nexport default StepDetails;\r\n","import PlotEditor from \"./PlotEditor\";\r\nexport default PlotEditor;\r\n","import React from \"react\";\r\nimport Color from \"color\";\r\nimport { styled } from \"@mui/material\";\r\n\r\nimport { useObservation } from \"@/hooks/observe\";\r\nimport { PointZero } from \"@/points\";\r\nimport { MAP_EXTENT_RADIUS, POTION_RADIUS } from \"@/game-settings\";\r\nimport { PointArray } from \"@/point-array\";\r\nimport { keepEveryK } from \"@/utils\";\r\n\r\nimport { PlotItem, PlotPoint, PlotResult } from \"@/services/plotter/types\";\r\nimport {\r\n  IPlotViewModel,\r\n  PlotViewModelContext,\r\n  usePlotViewModel,\r\n} from \"./PlotViewModel\";\r\n\r\nimport { SizeZero } from \"@/size\";\r\n\r\nexport interface PlotProps {\r\n  className?: string;\r\n  plot: PlotResult;\r\n  viewModel: IPlotViewModel;\r\n}\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  overflow: \"hidden\",\r\n  position: \"relative\",\r\n  \"& .plot-svg\": {\r\n    display: \"block\",\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n  },\r\n}));\r\n\r\nconst Plot = ({ className, plot, viewModel }: PlotProps) => {\r\n  const { width, height } = useObservation(viewModel.viewportSize$) ?? SizeZero;\r\n  const offset = useObservation(viewModel.viewOffset$) ?? PointZero;\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n  const inspectSource = useObservation(viewModel.mouseOverPlotItem$) ?? null;\r\n\r\n  const onLineMouseOver = React.useCallback(\r\n    (line: PlotLine) => {\r\n      viewModel.onMouseOverPlotItem(line.source);\r\n    },\r\n    [viewModel]\r\n  );\r\n\r\n  const [committedLines, pendingLines] = resultToPlotLines(\r\n    plot.committedPoints,\r\n    plot.pendingPoints\r\n  );\r\n\r\n  return (\r\n    <Root className={className}>\r\n      <PlotViewModelContext.Provider value={viewModel}>\r\n        <svg\r\n          className=\"plot-svg\"\r\n          width={width}\r\n          height={height}\r\n          viewBox={`0 0 ${width} ${height}`}\r\n        >\r\n          {/* In theory all these transforms can be done in one go, but neither order seems to work when combining them */}\r\n          <g transform={`scale(${scale})`}>\r\n            <g\r\n              transform={`translate(${MAP_EXTENT_RADIUS}, ${MAP_EXTENT_RADIUS})`}\r\n            >\r\n              <g transform=\"scale(1, -1)\">\r\n                <g transform={`translate(${offset.x}, ${offset.y})`}>\r\n                  {committedLines.map((line, i) => (\r\n                    <PlotLine\r\n                      key={i}\r\n                      line={line}\r\n                      pending={false}\r\n                      highlight={line.source === inspectSource}\r\n                      onMouseOver={onLineMouseOver}\r\n                      onMouseOut={() => viewModel.onMouseOverPlotItem(null)}\r\n                    />\r\n                  ))}\r\n                  {pendingLines.map((line, i) => (\r\n                    <PlotLine\r\n                      key={i}\r\n                      line={line}\r\n                      pending={true}\r\n                      highlight={line.source === inspectSource}\r\n                      onMouseOver={onLineMouseOver}\r\n                      onMouseOut={() => viewModel.onMouseOverPlotItem(null)}\r\n                    />\r\n                  ))}\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </g>\r\n        </svg>\r\n      </PlotViewModelContext.Provider>\r\n    </Root>\r\n  );\r\n};\r\n\r\ninterface PlotLineProps {\r\n  line: PlotLine;\r\n  pending: boolean;\r\n  highlight: boolean;\r\n  onMouseOver(line: PlotLine): void;\r\n  onMouseOut(): void;\r\n}\r\nconst PlotLine = ({\r\n  line,\r\n  pending,\r\n  highlight,\r\n  onMouseOver,\r\n  onMouseOut,\r\n}: PlotLineProps) => {\r\n  const viewModel = usePlotViewModel();\r\n  const scale = useObservation(viewModel.viewScale$) ?? 1;\r\n  const { points, source, evenOdd } = line;\r\n\r\n  const onPathMouseOver = React.useCallback(() => {\r\n    onMouseOver(line);\r\n  }, [line, onMouseOver]);\r\n\r\n  if (points.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  let color = \"black\";\r\n  switch (source.type) {\r\n    case \"add-ingredient\":\r\n      color = evenOdd ? \"red\" : \"green\";\r\n      break;\r\n    case \"pour-solvent\":\r\n      color = \"blue\";\r\n      break;\r\n  }\r\n\r\n  if (pending) {\r\n    color = Color(color).lighten(0.4).hex();\r\n  }\r\n\r\n  const path = line.points.reduce(\r\n    (str, p) => `${str} L${p.x},${p.y}`,\r\n    `M ${points[0].x} ${points[0].y} `\r\n  );\r\n\r\n  return (\r\n    <path\r\n      d={path}\r\n      stroke={color}\r\n      strokeWidth={(highlight ? 6 : 3) / scale}\r\n      fill=\"none\"\r\n      onMouseOver={onPathMouseOver}\r\n      onMouseOut={onMouseOut}\r\n    />\r\n  );\r\n};\r\n\r\ninterface PlotLine {\r\n  points: PointArray;\r\n  source: PlotItem;\r\n  evenOdd: boolean;\r\n}\r\n\r\nfunction resultToPlotLines(\r\n  committed: PlotPoint[],\r\n  pending: PlotPoint[],\r\n  trim = 4\r\n) {\r\n  let currentLine: PlotLine | null = null;\r\n  let sourceCounter = 0;\r\n\r\n  const commitedLines: PlotLine[] = [];\r\n  const pendingLines: PlotLine[] = [];\r\n\r\n  let lastSource: PlotItem | null = null;\r\n\r\n  for (const point of committed) {\r\n    if (currentLine == null || currentLine.source != point.source) {\r\n      if (lastSource == null || lastSource !== point.source) {\r\n        sourceCounter++;\r\n        lastSource = point.source;\r\n      }\r\n      currentLine = {\r\n        points: [],\r\n        source: point.source,\r\n        evenOdd: sourceCounter % 2 === 1,\r\n      };\r\n      commitedLines.push(currentLine);\r\n    }\r\n\r\n    currentLine.points.push(point);\r\n  }\r\n\r\n  currentLine = null;\r\n\r\n  for (const point of pending) {\r\n    if (currentLine == null || currentLine.source != point.source) {\r\n      if (lastSource == null || lastSource !== point.source) {\r\n        sourceCounter++;\r\n        lastSource = point.source;\r\n      }\r\n      currentLine = {\r\n        points: [],\r\n        source: point.source,\r\n        evenOdd: sourceCounter % 2 === 1,\r\n      };\r\n      pendingLines.push(currentLine);\r\n    }\r\n\r\n    currentLine.points.push(point);\r\n  }\r\n\r\n  if (trim > 1) {\r\n    for (const line of commitedLines) {\r\n      line.points = keepEveryK(line.points, trim, true);\r\n    }\r\n    for (const line of pendingLines) {\r\n      line.points = keepEveryK(line.points, trim, true);\r\n    }\r\n  }\r\n\r\n  return [commitedLines, pendingLines];\r\n}\r\n\r\nexport default Plot;\r\n","import React from \"react\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\n\r\nimport {\r\n  Point,\r\n  pointAdd,\r\n  pointScale,\r\n  pointSubtract,\r\n  PointZero,\r\n} from \"@/points\";\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\nimport { PlotItem } from \"@/services/plotter/types\";\r\nimport { Size } from \"@/size\";\r\n\r\nexport const PlotViewModelContext = React.createContext<IPlotViewModel | null>(\r\n  null\r\n);\r\n\r\nexport function usePlotViewModel(): IPlotViewModel {\r\n  const plotViewModel = React.useContext(PlotViewModelContext);\r\n  if (!plotViewModel) {\r\n    throw new Error(\"PlotViewModelContext not found\");\r\n  }\r\n  return plotViewModel;\r\n}\r\n\r\nexport interface IPlotViewModel {\r\n  readonly viewportSize$: Observable<Size>;\r\n  readonly viewOffset$: Observable<Point>;\r\n  readonly viewScale$: Observable<number>;\r\n  readonly mouseOverPlotItem$: Observable<PlotItem | null>;\r\n\r\n  onMouseOverPlotItem(item: PlotItem | null): void;\r\n}\r\n","import Plot from \"./Plot\";\r\nexport default Plot;\r\n","import React from \"react\";\r\nimport {\r\n  composeModules,\r\n  Container,\r\n  Identifier,\r\n  Newable,\r\n  ParameterRecord,\r\n} from \"microinject\";\r\n\r\nimport servicesModule from \"./services/module\";\r\n\r\nconst modules = composeModules(servicesModule);\r\n\r\nconst ContainerContext = React.createContext<Container>(new Container());\r\n\r\nconst container = new Container();\r\ncontainer.bind(Container).toConstantValue(container);\r\ncontainer.load(modules);\r\n\r\nexport default container;\r\n\r\nexport interface ContainerProviderProps {\r\n  children: React.ReactNode;\r\n}\r\nexport const ContainerProvider = ({ children }: ContainerProviderProps) => {\r\n  return (\r\n    <ContainerContext.Provider value={container}>\r\n      {children}\r\n    </ContainerContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useDIContainer(): Container {\r\n  return React.useContext(ContainerContext);\r\n}\r\n\r\nexport function useDIDependency<T>(identifier: Identifier<T>): T {\r\n  const container = useDIContainer();\r\n  return container.get(identifier);\r\n}\r\n\r\nexport function useDICreate<T>(\r\n  identifier: Newable<T>,\r\n  parameters?: ParameterRecord\r\n): T {\r\n  const container = useDIContainer();\r\n  const valRef = React.useRef<T>();\r\n  if (valRef.current == null) {\r\n    valRef.current = container.create(identifier, parameters);\r\n  }\r\n  return valRef.current;\r\n}\r\n","import {\r\n  BEZIER_CURVE_LENGTH_RESOLUTION,\r\n  PATH_SPACING_PHYSICS,\r\n} from \"./game-settings\";\r\n\r\nimport {\r\n  Point,\r\n  pointAdd,\r\n  pointDistance,\r\n  pointMagnitude,\r\n  pointNormalize,\r\n  pointScale,\r\n  pointSubtract,\r\n  PointZero,\r\n} from \"./points\";\r\n\r\nexport interface CubicBezierCurve {\r\n  start: Point;\r\n  p1: Point;\r\n  p2: Point;\r\n  end: Point;\r\n}\r\n\r\nexport function cubicBezierCurve(\r\n  startX: number,\r\n  startY: number,\r\n  p1x: number,\r\n  p1y: number,\r\n  p2x: number,\r\n  p2y: number,\r\n  endx: number,\r\n  endy: number\r\n): CubicBezierCurve {\r\n  return {\r\n    start: { x: startX, y: startY },\r\n    p1: { x: p1x, y: p1y },\r\n    p2: { x: p2x, y: p2y },\r\n    end: { x: endx, y: endy },\r\n  };\r\n}\r\n\r\nexport function getCurvePoint(curve: CubicBezierCurve, t: number): Point {\r\n  if (t < 0 || t > 1) {\r\n    throw new Error(\"getPoint: t must be between 0 and 1\");\r\n  }\r\n\r\n  const b1 = (1 - t) * (1 - t) * (1 - t);\r\n  const b2 = 3 * t * (1 - t) * (1 - t);\r\n  const b3 = 3 * t * t * (1 - t);\r\n  const b4 = t * t * t;\r\n\r\n  return {\r\n    x:\r\n      b1 * curve.start.x + b2 * curve.p1.x + b3 * curve.p2.x + b4 * curve.end.x,\r\n    y:\r\n      b1 * curve.start.y + b2 * curve.p1.y + b3 * curve.p2.y + b4 * curve.end.y,\r\n  };\r\n}\r\n\r\nconst curveLengthCache = new Map<CubicBezierCurve, number>();\r\nexport function getCurveLength(\r\n  curve: CubicBezierCurve\r\n  // resolution: number = BEZIER_CURVE_LENGTH_RESOLUTION\r\n): number {\r\n  const resolution = BEZIER_CURVE_LENGTH_RESOLUTION;\r\n  const cached = curveLengthCache.get(curve);\r\n  if (cached !== undefined) {\r\n    return cached;\r\n  }\r\n\r\n  let length = 0.0;\r\n\r\n  let previousPoint = getCurvePoint(curve, 0);\r\n\r\n  for (let index = 1; index <= resolution; index++) {\r\n    const point = getCurvePoint(curve, index / resolution);\r\n    const vector2_2 = pointSubtract(point, previousPoint);\r\n    length += pointMagnitude(vector2_2);\r\n    previousPoint = point;\r\n  }\r\n\r\n  curveLengthCache.set(curve, length);\r\n\r\n  return length;\r\n}\r\n\r\nconst curvePointsCache = new Map<CubicBezierCurve, readonly Point[]>();\r\nexport function curveToPoints(\r\n  curve: CubicBezierCurve\r\n  // spacing: number = PATH_SPACING_PHYSICS,\r\n  // resolution: number = 1\r\n): readonly Point[] {\r\n  const spacing: number = PATH_SPACING_PHYSICS;\r\n  const resolution: number = 1;\r\n\r\n  // if (spacing <= Number.EPSILON) {\r\n  //   throw new Error(\"curveToPoints: spacing must be greater than 0\");\r\n  // }\r\n  // if (resolution <= 0) {\r\n  //   throw new Error(\"curveToPoints: resolution must be greater than 0\");\r\n  // }\r\n\r\n  const cached = curvePointsCache.get(curve);\r\n  if (cached !== undefined) {\r\n    return cached;\r\n  }\r\n\r\n  const points: Point[] = [];\r\n\r\n  let remainingDistance = 0;\r\n  let previousPoint: Point = curve.start;\r\n\r\n  points.push(previousPoint);\r\n\r\n  const samplePointCount = Math.ceil(getCurveLength(curve) * resolution * 10.0);\r\n  for (let index = 0; index <= samplePointCount; index++) {\r\n    const t = index / samplePointCount;\r\n    const point = getCurvePoint(curve, t);\r\n    remainingDistance += pointDistance(previousPoint, point);\r\n    while (remainingDistance >= spacing) {\r\n      remainingDistance = remainingDistance - spacing;\r\n      const splitPoint = pointAdd(\r\n        point,\r\n        pointScale(\r\n          pointNormalize(pointSubtract(previousPoint, point)),\r\n          remainingDistance\r\n        )\r\n      );\r\n      points.push(splitPoint);\r\n      previousPoint = splitPoint;\r\n    }\r\n    previousPoint = point;\r\n  }\r\n\r\n  if (remainingDistance > 0) {\r\n    points.push(getCurvePoint(curve, 1));\r\n  }\r\n\r\n  Object.freeze(points);\r\n  for (const p of points) {\r\n    Object.freeze(p);\r\n  }\r\n  curvePointsCache.set(curve, points);\r\n\r\n  return points;\r\n}\r\n","export const PATH_SPACING_PHYSICS = 0.05;\r\nexport const BEZIER_CURVE_LENGTH_RESOLUTION = 200;\r\nexport const MAP_EXTENT_RADIUS = 60;\r\nexport const POTION_RADIUS = 0.79;\r\nexport const MAX_INGREDIENT_EXTENT = 10;\r\n","import * as React from \"react\";\r\n\r\ninterface UseComponentBounds {\r\n  left: number;\r\n  top: number;\r\n  right: number;\r\n  bottom: number;\r\n  width: number;\r\n  height: number;\r\n}\r\nexport function useComponentBounds(ref: React.RefObject<HTMLElement | null>) {\r\n  const [size, setSize] = React.useState<UseComponentBounds>({\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  React.useLayoutEffect(() => {\r\n    if (!ref.current) {\r\n      return;\r\n    }\r\n\r\n    const observer = new ResizeObserver(() => {\r\n      const el = ref.current;\r\n      if (!el) {\r\n        return;\r\n      }\r\n      const b = el.getBoundingClientRect();\r\n      setSize({\r\n        top: b.top,\r\n        left: b.left,\r\n        right: b.right,\r\n        bottom: b.bottom,\r\n        width: b.width,\r\n        height: b.height,\r\n      });\r\n    });\r\n\r\n    observer.observe(ref.current);\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [ref]);\r\n\r\n  return size;\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport function useNativeEvent<\r\n  T extends GlobalEventHandlers,\r\n  K extends keyof GlobalEventHandlersEventMap\r\n>(\r\n  ref: React.RefObject<T | null>,\r\n  type: K,\r\n  listener: (\r\n    this: GlobalEventHandlers,\r\n    ev: GlobalEventHandlersEventMap[K]\r\n  ) => any,\r\n  options?: boolean | AddEventListenerOptions\r\n) {\r\n  React.useEffect(() => {\r\n    if (!ref.current) {\r\n      return;\r\n    }\r\n\r\n    // De-reference the target so we remove from the right element.\r\n    const listenTarget = ref.current;\r\n\r\n    listenTarget.addEventListener(type, listener, options);\r\n    return () => {\r\n      listenTarget.removeEventListener(type, listener, options);\r\n    };\r\n  }, [type, listener, ref, options]);\r\n}\r\n","import React from \"react\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport interface UseObservationOpts {\r\n  useTransition?: boolean;\r\n  onError?: (err: Error) => void;\r\n}\r\nexport function useObservation<T>(\r\n  observable: Observable<T> | T | null | undefined,\r\n  { useTransition, onError }: UseObservationOpts = {}\r\n): T | undefined {\r\n  const [val, setVal] = React.useState<T | undefined>(undefined);\r\n\r\n  React.useEffect(() => {\r\n    if (observable) {\r\n      if (observable instanceof Observable) {\r\n        const subscription = observable.subscribe({\r\n          next: (val) => {\r\n            if (useTransition) {\r\n              React.startTransition(() => setVal(val));\r\n            } else {\r\n              setVal(val);\r\n            }\r\n          },\r\n          error: onError,\r\n        });\r\n        return () => subscription.unsubscribe();\r\n      } else {\r\n        setVal(observable);\r\n      }\r\n    }\r\n  }, [observable, onError, useTransition]);\r\n\r\n  return val;\r\n}\r\n","import \"@/style.css\";\r\n\r\nimport * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom/client\";\r\n\r\nimport { ContainerProvider } from \"./container\";\r\nimport ThemeProvider from \"./theme\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nconst rootEl = document.getElementById(\"root\");\r\nconst root = ReactDOM.createRoot(rootEl!);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <ContainerProvider>\r\n      <ThemeProvider>\r\n        <App />\r\n      </ThemeProvider>\r\n    </ContainerProvider>\r\n  </React.StrictMode>\r\n);\r\n","import { keyboardModifierUseMeta } from \"./runtime-env\";\r\n\r\nexport const MODIFIER_KEYS_NONE = Object.freeze<ModifierKeys>({});\r\n\r\nexport interface ModifierKeys {\r\n  ctrlMetaKey?: boolean;\r\n  shiftKey?: boolean;\r\n  altKey?: boolean;\r\n}\r\n\r\nexport interface MouseEventModifierKeys {\r\n  ctrlKey: boolean;\r\n  altKey: boolean;\r\n  shiftKey: boolean;\r\n  metaKey: boolean;\r\n}\r\nexport function getModifiers(e: MouseEventModifierKeys): ModifierKeys {\r\n  const { ctrlKey, altKey, shiftKey, metaKey } = e;\r\n  return {\r\n    // Mac reserves ctrl for system use, apps use meta.\r\n    ctrlMetaKey: keyboardModifierUseMeta ? metaKey : ctrlKey,\r\n    altKey,\r\n    shiftKey,\r\n  };\r\n}\r\n\r\nexport function isModifierPressed(event: React.MouseEvent<any>) {\r\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\r\n}\r\n","import { sum } from \"lodash\";\r\nimport { PATH_SPACING_PHYSICS } from \"./game-settings\";\r\n\r\nimport {\r\n  linearInterpolate,\r\n  Point,\r\n  pointAdd,\r\n  pointDistance,\r\n  pointMagnitude,\r\n  pointScale,\r\n  pointSubtract,\r\n  PointZero,\r\n} from \"./points\";\r\n\r\nexport type PointArray = Point[];\r\nexport type ReadOnlyPointArray = readonly Point[];\r\n\r\nexport function pointArrayLength(pointArray: ReadOnlyPointArray): number {\r\n  if (pointArray.length <= 1) {\r\n    return 0;\r\n  }\r\n\r\n  let length = 0;\r\n  let previousPoint = pointArray[0];\r\n  for (let i = 1; i < pointArray.length; i++) {\r\n    length += pointDistance(previousPoint, pointArray[i]);\r\n    previousPoint = pointArray[i];\r\n  }\r\n\r\n  return length;\r\n}\r\n\r\nconst pointArrayLengthCache = new Map<ReadOnlyPointArray, number>();\r\nexport function pointArrayLengthCached(pointArray: ReadOnlyPointArray): number {\r\n  if (pointArray.length <= 1) {\r\n    return 0;\r\n  }\r\n\r\n  let length = pointArrayLengthCache.get(pointArray);\r\n  if (length !== undefined) {\r\n    return length;\r\n  }\r\n\r\n  length = pointArrayLength(pointArray);\r\n  pointArrayLengthCache.set(pointArray, length);\r\n\r\n  return length;\r\n}\r\n\r\nexport function pointArrayLineFromDistance(\r\n  start: Point,\r\n  direction: Point,\r\n  distance: number,\r\n  spacing: number = PATH_SPACING_PHYSICS\r\n) {\r\n  const pointArray: PointArray = [];\r\n  if (pointMagnitude(direction) === 0) {\r\n    throw new Error(\"direction must be valid.\");\r\n  }\r\n\r\n  if (distance <= 0) {\r\n    return [];\r\n  }\r\n\r\n  let previousPoint = start;\r\n  let remainingDistance = distance;\r\n  while (remainingDistance >= spacing) {\r\n    const point = pointAdd(previousPoint, pointScale(direction, spacing));\r\n    pointArray.push(point);\r\n    remainingDistance -= spacing;\r\n    previousPoint = point;\r\n  }\r\n\r\n  if (remainingDistance > 0) {\r\n    pointArray.push(\r\n      pointAdd(previousPoint, pointScale(direction, remainingDistance))\r\n    );\r\n  }\r\n\r\n  return pointArray;\r\n}\r\n\r\nexport function pointArrayOffset(\r\n  pointArray: PointArray,\r\n  offset: Point\r\n): PointArray {\r\n  return pointArray.map((point) => pointAdd(point, offset));\r\n}\r\n\r\nexport function takePointArrayByDistance<T extends Point>(\r\n  array: T[],\r\n  takeLength: number\r\n): [taken: T[], remainder: T[]] {\r\n  const totalLength = pointArrayLength(array);\r\n\r\n  if (array.length <= 1 || totalLength <= takeLength) {\r\n    return [array, [] as T[]];\r\n  }\r\n\r\n  const taken: T[] = [array[0]];\r\n  const remainder: T[] = [];\r\n\r\n  let takenLength = 0;\r\n  let previousPoint = array[0];\r\n  for (let i = 1; i < array.length; i++) {\r\n    const p = array[i];\r\n    const length = pointDistance(p, previousPoint);\r\n    if (takenLength + length >= takeLength) {\r\n      const remainingLength = takeLength - takenLength;\r\n      const splitPoint = linearInterpolate(\r\n        previousPoint,\r\n        p,\r\n        remainingLength / length\r\n      );\r\n      taken.push(\r\n        Object.assign({}, previousPoint, { x: splitPoint.x, y: splitPoint.y })\r\n      );\r\n      remainder.push(\r\n        Object.assign({}, p, { x: splitPoint.x, y: splitPoint.y }),\r\n        ...array.slice(i)\r\n      );\r\n      break;\r\n    } else {\r\n      takenLength += length;\r\n      taken.push(p);\r\n      previousPoint = p;\r\n    }\r\n  }\r\n\r\n  return [taken, remainder];\r\n}\r\n","export interface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport const PointZero: Readonly<Point> = Object.freeze({ x: 0, y: 0 });\r\n\r\nexport function pointEquals(a: Point, b: Point): boolean {\r\n  return (\r\n    Math.abs(a.x - b.x) < Number.EPSILON && Math.abs(a.y - b.y) < Number.EPSILON\r\n  );\r\n}\r\n\r\nexport function pointScale(p: Point, factor: number): Point {\r\n  return {\r\n    x: p.x * factor,\r\n    y: p.y * factor,\r\n  };\r\n}\r\n\r\nexport function pointMagnitude(p: Point): number {\r\n  return Math.sqrt(p.x * p.x + p.y * p.y);\r\n}\r\n\r\nexport function pointDistance(p1: Point, p2: Point) {\r\n  const dx = p1.x - p2.x;\r\n  const dy = p1.y - p2.y;\r\n  return Math.sqrt(dx * dx + dy * dy);\r\n}\r\n\r\nexport function pointAdd(a: Point, b: Point) {\r\n  return {\r\n    x: a.x + b.x,\r\n    y: a.y + b.y,\r\n  };\r\n}\r\n\r\nexport function pointSubtract(a: Point, b: Point) {\r\n  return {\r\n    x: a.x - b.x,\r\n    y: a.y - b.y,\r\n  };\r\n}\r\n\r\nexport function pointNormalize(p: Point): Point {\r\n  const magnitude = pointMagnitude(p);\r\n  if (magnitude === 0) {\r\n    return PointZero;\r\n  }\r\n\r\n  return {\r\n    x: p.x / magnitude,\r\n    y: p.y / magnitude,\r\n  };\r\n}\r\n\r\nexport function linearInterpolate(\r\n  start: Point,\r\n  end: Point,\r\n  lerp: number\r\n): Point {\r\n  return {\r\n    x: start.x + (end.x - start.x) * lerp,\r\n    y: start.y + (end.y - start.y) * lerp,\r\n  };\r\n}\r\n","import { Point, PointZero } from \"./points\";\r\nimport { Size } from \"./size\";\r\n\r\nexport interface Rectangle {\r\n  p1: Point;\r\n  p2: Point;\r\n}\r\n\r\nexport const RectZero: Readonly<Rectangle> = Object.freeze({\r\n  p1: PointZero,\r\n  p2: PointZero,\r\n}) as any;\r\n\r\nexport function rectFromCircle(p: Point, radius: number) {\r\n  return {\r\n    p1: {\r\n      x: p.x - radius,\r\n      y: p.y - radius,\r\n    },\r\n    p2: {\r\n      x: p.x + radius,\r\n      y: p.y + radius,\r\n    },\r\n  };\r\n}\r\n\r\nexport function normalizeRectangle(p1: Point, p2: Point): Rectangle;\r\nexport function normalizeRectangle(r: Rectangle): Rectangle;\r\nexport function normalizeRectangle(...args: any[]): Rectangle {\r\n  let p1: Point;\r\n  let p2: Point;\r\n  if (args.length === 1) {\r\n    const r = args[0] as Rectangle;\r\n    p1 = r.p1;\r\n    p2 = r.p2;\r\n  } else {\r\n    p1 = args[0] as Point;\r\n    p2 = args[1] as Point;\r\n  }\r\n  return {\r\n    p1: {\r\n      x: Math.min(p1.x, p2.x),\r\n      y: Math.min(p1.y, p2.y),\r\n    },\r\n    p2: {\r\n      x: Math.max(p1.x, p2.x),\r\n      y: Math.max(p1.y, p2.y),\r\n    },\r\n  };\r\n}\r\n\r\nexport function addPointToRect(r: Rectangle, p: Point): Rectangle {\r\n  return {\r\n    p1: {\r\n      x: Math.min(r.p1.x, p.x),\r\n      y: Math.min(r.p1.y, p.y),\r\n    },\r\n    p2: {\r\n      x: Math.max(r.p2.x, p.x),\r\n      y: Math.max(r.p2.y, p.y),\r\n    },\r\n  };\r\n}\r\n\r\nexport function pointIntersectsRect(p: Point, r: Rectangle): boolean {\r\n  r = normalizeRectangle(r);\r\n\r\n  if (r.p1.x > p.x || r.p2.x < p.x) {\r\n    return false;\r\n  }\r\n\r\n  if (r.p1.y > p.y || r.p2.y < p.y) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function rectSize(r: Rectangle): Size {\r\n  r = normalizeRectangle(r);\r\n  return {\r\n    width: r.p2.x - r.p1.x,\r\n    height: r.p2.y - r.p1.y,\r\n  };\r\n}\r\n","import platform from \"platform\";\r\n\r\nconst OS_WINDOWS = /windows/i;\r\nconst OS_MAC = /Mac|iOS|(OS\\ X)/;\r\nconst OS_LINUX = /linux/i;\r\n\r\nexport type OSType = \"windows\" | \"mac\" | \"linux\" | \"unknown\";\r\n\r\nconst osPlatform = (platform.os && platform.os.family) || \"unknown\";\r\nexport const OSType: OSType = OS_WINDOWS.test(osPlatform)\r\n  ? \"windows\"\r\n  : OS_MAC.test(osPlatform)\r\n  ? \"mac\"\r\n  : OS_LINUX.test(osPlatform)\r\n  ? \"linux\"\r\n  : \"unknown\";\r\n\r\nexport const isProd: boolean = process.env.NODE_ENV === \"production\";\r\n\r\nexport const keyboardModifierUseMeta = osPlatform === \"mac\";\r\n","import { injectable, singleton } from \"microinject\";\r\n\r\nimport { ingredients } from \"./ingredients\";\r\nimport { IngredientDescriptor, IngredientId } from \"./types\";\r\n\r\n@injectable()\r\n@singleton()\r\nexport class IngredientRegistry {\r\n  getIngredients(): readonly IngredientDescriptor[] {\r\n    return ingredients;\r\n  }\r\n\r\n  getIngredientById(id: IngredientId): IngredientDescriptor | null {\r\n    return ingredients.find((x) => x.id === id) ?? null;\r\n  }\r\n}\r\n","import { cubicBezierCurve } from \"@/curves\";\r\nimport { IngredientDescriptor, ingredientId } from \"./types\";\r\n\r\nexport const ingredients: IngredientDescriptor[] = [\r\n  {\r\n    id: ingredientId(\"BloodRuby\"),\r\n\r\n    name: \"Blood Ruby\",\r\n\r\n    color: \"#C24647\",\r\n\r\n    price: 90,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3, -3, -3, -3),\r\n\r\n      cubicBezierCurve(-3, -3, -3, -3, -3, 3, -3, 3),\r\n\r\n      cubicBezierCurve(-3, 3, -3, 3, -5.9999, 0, -6, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.1465,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"BloodyRoot\"),\r\n\r\n    name: \"Bloodthorn\",\r\n\r\n    color: \"#AC4937\",\r\n\r\n    price: 14,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0.0001001358, -2, 0, -2),\r\n\r\n      cubicBezierCurve(0, -2, -0.0001001358, -2, -1.7499, 1, -1.75, 1),\r\n\r\n      cubicBezierCurve(-1.75, 1, -1.7501, 1, -1.7501, -3, -1.75, -3),\r\n\r\n      cubicBezierCurve(-1.75, -3, -1.7499, -3, -4.0001, 2, -4, 2),\r\n\r\n      cubicBezierCurve(-4, 2, -3.9999, 2, -3.9999, -4, -4, -4),\r\n\r\n      cubicBezierCurve(-4, -4, -4.0001, -4, -5.9999, 0, -6, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.435,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"CliffFungus\"),\r\n\r\n    name: \"Brown Mushroom\",\r\n\r\n    color: \"#957C64\",\r\n\r\n    price: 6,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, -1, 0, -1, -1, -1),\r\n\r\n      cubicBezierCurve(-1, -1, -2, -1, -2, -1, -2, -2),\r\n\r\n      cubicBezierCurve(-2, -2, -2, -3, -2, -3, 0, -3),\r\n\r\n      cubicBezierCurve(0, -3, 2, -3, 2, -3, 2, -4),\r\n\r\n      cubicBezierCurve(2, -4, 2, -5, 2, -5, 0.5, -5),\r\n\r\n      cubicBezierCurve(0.5, -5, 0, -5, 0, -5, 0, -6),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Crystal\"),\r\n\r\n    name: \"Cloud Crystal\",\r\n\r\n    color: \"#ADADAD\",\r\n\r\n    price: 60,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 0, -0.75, 1, 0, 1.5),\r\n\r\n      cubicBezierCurve(0, 1.5, 0.7499999, 2, 1, 2, 1, 2.75),\r\n\r\n      cubicBezierCurve(1, 2.75, 0.9999999, 3.75, -0.9999999, 3.25, -1, 4.25),\r\n\r\n      cubicBezierCurve(-1, 4.25, -1, 5, -0.75, 5, 0, 5.5),\r\n\r\n      cubicBezierCurve(0, 5.5, 0.7499999, 6, 0.0001, 7, 0, 7),\r\n    ],\r\n\r\n    preGrindPercent: 0.177,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"DryadMushroom\"),\r\n\r\n    name: \"Dryad's Saddle\",\r\n\r\n    color: \"#9C785A\",\r\n\r\n    price: 5.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -0.25, 0, -1.33541, -0.3291796, -1, -1),\r\n\r\n      cubicBezierCurve(-1, -1, -0.5, -2, 2, -0.5, 2, -2),\r\n\r\n      cubicBezierCurve(2, -2, 2, -3.5, -2, -1.25, -2, -3),\r\n\r\n      cubicBezierCurve(-2, -3, -2, -3.75, 0.0001, -3.75, 0, -3.75),\r\n    ],\r\n\r\n    preGrindPercent: 0.53,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"EarthCrystal\"),\r\n\r\n    name: \"Earth Pyrite\",\r\n\r\n    color: \"#93806A\",\r\n\r\n    price: 30,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0, -1.5, 0, -1.5),\r\n\r\n      cubicBezierCurve(0, -1.5, 0, -1.5, -1, -1.5, -1, -1.5),\r\n\r\n      cubicBezierCurve(-1, -1.5, -1, -1.5, -1, -3.5, -1, -3.5),\r\n\r\n      cubicBezierCurve(-1, -3.5, -1, -3.5, 1, -3.5, 1, -3.5),\r\n\r\n      cubicBezierCurve(1, -3.5, 1, -3.5, 1, -5.5, 1, -5.5),\r\n\r\n      cubicBezierCurve(1, -5.5, 1, -5.5, 0, -5.5, 0, -5.5),\r\n\r\n      cubicBezierCurve(0, -5.5, 0, -5.5, 0.0001, -7, 0, -7),\r\n    ],\r\n\r\n    preGrindPercent: 0.1364,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Firebell\"),\r\n\r\n    name: \"Firebell\",\r\n\r\n    color: \"#D1810D\",\r\n\r\n    price: 5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -1.25, 1, -1.2501, 1, -1.25, 1),\r\n\r\n      cubicBezierCurve(-1.25, 1, -1.2499, 1, -2.5001, 0, -2.5, 0),\r\n\r\n      cubicBezierCurve(-2.5, 0, -2.4999, 0, -3.7501, 1, -3.75, 1),\r\n\r\n      cubicBezierCurve(-3.75, 1, -3.7499, 1, -3.75, 1, -5, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"FireCitrine\"),\r\n\r\n    name: \"Fire Citrine\",\r\n\r\n    color: \"#CD7C19\",\r\n\r\n    price: 50,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -0.75, -1.5, -1.5, 0),\r\n\r\n      cubicBezierCurve(-1.5, 0, -2.5, 2, -2.75, -0.7499999, -3.5, -0.75),\r\n\r\n      cubicBezierCurve(-3.5, -0.75, -4.25, -0.75, -4.5, 2, -5.5, 0),\r\n\r\n      cubicBezierCurve(-5.5, 0, -6.25, -1.5, -6.9999, 0, -7, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.202,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"FrostSapphire\"),\r\n\r\n    name: \"Frost Sapphire\",\r\n\r\n    color: \"#7399BF\",\r\n\r\n    price: 40,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 0, 0.25, 0.5, 0.25, 0.5),\r\n\r\n      cubicBezierCurve(0.25, 0.5, 0.25, 0.5, 1, -1, 1, -1),\r\n\r\n      cubicBezierCurve(1, -1, 1, -1, 2, 1, 2, 1),\r\n\r\n      cubicBezierCurve(2, 1, 2, 1, 3, -1, 3, -1),\r\n\r\n      cubicBezierCurve(3, -1, 3, -1, 4, 1, 4, 1),\r\n\r\n      cubicBezierCurve(4, 1, 4, 1, 5, -1, 5, -1),\r\n\r\n      cubicBezierCurve(5, -1, 5, -1, 6, 1, 6, 1),\r\n\r\n      cubicBezierCurve(6, 1, 6, 1, 6.75, -0.5, 6.75, -0.5),\r\n\r\n      cubicBezierCurve(6.75, -0.5, 6.75, -0.5, 7.0001, 0, 7, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.2139,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"GoblinMushroom\"),\r\n\r\n    name: \"Goblin Shroom\",\r\n\r\n    color: \"#928A5E\",\r\n\r\n    price: 5,\r\n\r\n    path: [cubicBezierCurve(0, 0, 3, 0, 3, -5, 0, -5)],\r\n\r\n    preGrindPercent: 0.663,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Goldthorn\"),\r\n\r\n    name: \"Goldthorn\",\r\n\r\n    color: \"#96714E\",\r\n\r\n    price: 12.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -0.25, 0, -0.5, 0.25, -0.5, 0.5),\r\n\r\n      cubicBezierCurve(-0.5, 0.5, -0.5, 0.75, -0.25, 1, 0, 1),\r\n\r\n      cubicBezierCurve(0, 1, 1, 1, 1, 0.5, 1, 0),\r\n\r\n      cubicBezierCurve(1, 0, 1, -0.5, 0.5, -0.9999999, 0, -1),\r\n\r\n      cubicBezierCurve(0, -1, -0.75, -1, -1.5, -0.25, -1.5, 0.25),\r\n\r\n      cubicBezierCurve(-1.5, 0.25, -1.5, 1.75, -0.75, 2, 0, 2),\r\n\r\n      cubicBezierCurve(0, 2, 1.25, 2, 2, 1.25, 2, 0),\r\n\r\n      cubicBezierCurve(2, 0, 2, -1, 1, -2, 0, -2),\r\n    ],\r\n\r\n    preGrindPercent: 0.3013,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"GraveTruffle\"),\r\n\r\n    name: \"Grave Truffle\",\r\n\r\n    color: \"#908B7F\",\r\n\r\n    price: 10,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3.0001, -2, -3, -2),\r\n\r\n      cubicBezierCurve(-3, -2, -2.9999, -2, -0.7501, -7, -0.75, -7),\r\n\r\n      cubicBezierCurve(-0.75, -7, -0.7499, -7, 0.7499, -7, 0.75, -7),\r\n\r\n      cubicBezierCurve(0.75, -7, 0.7501, -7, 3, -2, 3, -2),\r\n\r\n      cubicBezierCurve(3, -2, 3, -2, -0.0001, -1.25, 0, -1.25),\r\n\r\n      cubicBezierCurve(0, -1.25, 0.0001, -1.25, 0.0001, -5, 0, -5),\r\n    ],\r\n\r\n    preGrindPercent: 0.2535,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"GreenMushroom\"),\r\n\r\n    name: \"Green Mushroom\",\r\n\r\n    color: \"#A5A24F\",\r\n\r\n    price: 9,\r\n\r\n    path: [\r\n      cubicBezierCurve(\r\n        0,\r\n        0,\r\n        3.02107,\r\n        1.020414,\r\n        0.5508628,\r\n        -1.518064,\r\n        1.527383,\r\n        -2.506451\r\n      ),\r\n\r\n      cubicBezierCurve(\r\n        1.527383,\r\n        -2.506451,\r\n        2.500548,\r\n        -3.491441,\r\n        5.012281,\r\n        -0.9910625,\r\n        3.996144,\r\n        -3.978157\r\n      ),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"GreyChanterelle\"),\r\n\r\n    name: \"Shadow Chanterelle\",\r\n\r\n    color: \"#887C77\",\r\n\r\n    price: 10,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 3, 0, -2.384186e-7, 5, 3, 5),\r\n\r\n      cubicBezierCurve(3, 5, 4, 5, 4.5, 4, 4.5, 3),\r\n    ],\r\n\r\n    preGrindPercent: 0.512,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"IceDragonfruit\"),\r\n\r\n    name: \"Ice Fruit\",\r\n\r\n    color: \"#5D8089\",\r\n\r\n    price: 9,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0.9999, 2, 1, 2),\r\n\r\n      cubicBezierCurve(1, 2, 1.0001, 2, 3, -2, 3, -2),\r\n\r\n      cubicBezierCurve(3, -2, 3, -2, 4.9999, 2, 5, 2),\r\n\r\n      cubicBezierCurve(5, 2, 5.0001, 2, 6.0001, 0, 6, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.333,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"LavaRoot\"),\r\n\r\n    name: \"Lava Root\",\r\n\r\n    color: \"#C86B41\",\r\n\r\n    price: 11.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 1.5, -2.5, 1.5, -2.5, 0),\r\n\r\n      cubicBezierCurve(-2.5, 0, -2.5, -1.5, -5, -1.5, -5, 0),\r\n\r\n      cubicBezierCurve(-5, 0, -5, 1.5, -7.5, 1.5, -7.5, 0),\r\n\r\n      cubicBezierCurve(-7.5, 0, -7.5, -0.75, -6.25, -0.75, -6.25, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.4289,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Leaf\"),\r\n\r\n    name: \"Terraria\",\r\n\r\n    color: \"#749064\",\r\n\r\n    price: 3,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -0.25, -0.75, 0, -1),\r\n\r\n      cubicBezierCurve(0, -1, 0.25, -1.25, 0.5, -1, 0.75, -1.25),\r\n\r\n      cubicBezierCurve(0.75, -1.25, 1, -1.5, 1, -2.25, 0.75, -2.5),\r\n\r\n      cubicBezierCurve(0.75, -2.5, 0.5, -2.75, -0.5, -2.25, -0.75, -2.5),\r\n\r\n      cubicBezierCurve(-0.75, -2.5, -1, -2.75, -1, -3.5, -0.75, -3.75),\r\n\r\n      cubicBezierCurve(-0.75, -3.75, -0.5, -4, -0.1767767, -3.823223, 0, -4),\r\n\r\n      cubicBezierCurve(0, -4, 0.25, -4.25, 0.0001, -5, 0, -5),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"LumpyBeet\"),\r\n\r\n    name: \"Lumpy Beet\",\r\n\r\n    color: \"#A36674\",\r\n\r\n    price: 9,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, 2, 3, 1, 3, 3),\r\n\r\n      cubicBezierCurve(3, 3, 3, 4, 1, 4, 1, 3),\r\n\r\n      cubicBezierCurve(1, 3, 1, 2, 1, 1, 1, 0),\r\n\r\n      cubicBezierCurve(1, 0, 1, -1, 3, -1, 3, 0),\r\n\r\n      cubicBezierCurve(3, 0, 3, 1, 3, 2, 4, 2),\r\n    ],\r\n\r\n    preGrindPercent: 0.1805,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Marshrooms\"),\r\n\r\n    name: \"Marshroom\",\r\n\r\n    color: \"#837956\",\r\n\r\n    price: 7,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 2, -2, 1, -4, 3, -4),\r\n\r\n      cubicBezierCurve(3, -4, 3.5, -4, 5, -4, 5, -3),\r\n    ],\r\n\r\n    preGrindPercent: 0.423,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"RedMushroom\"),\r\n\r\n    name: \"Red Mushroom\",\r\n\r\n    color: \"#A76C3F\",\r\n\r\n    price: 9.5,\r\n\r\n    path: [cubicBezierCurve(0, 0, -4, 4, -4, -4, -8, 0)],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Refruit\"),\r\n\r\n    name: \"Hairy Banana\",\r\n\r\n    color: \"#C5B13E\",\r\n\r\n    price: 12.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3, -3, -4, -3),\r\n\r\n      cubicBezierCurve(-4, -3, -5, -3, -8.000098, -2.453497e-5, -8, 0),\r\n\r\n      cubicBezierCurve(-8, 0, -7, 0.25, -5, -1.25, -4, -1),\r\n    ],\r\n\r\n    preGrindPercent: 0.3375,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"SulphurShelf\"),\r\n\r\n    name: \"Sulphur Shelf\",\r\n\r\n    color: \"#D77838\",\r\n\r\n    price: 11,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -2, 0, -3.5, 0, -3.5, 0.75),\r\n\r\n      cubicBezierCurve(-3.5, 0.75, -3.5, 1.5, -2.75, 1.5, -2.25, 1.5),\r\n\r\n      cubicBezierCurve(-2.25, 1.5, -1.75, 1.5, -1, 1.5, -1, 2.25),\r\n\r\n      cubicBezierCurve(-1, 2.25, -1, 3, -2.5, 3, -4.5, 3),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Tangleweeds\"),\r\n\r\n    name: \"Tangleweed\",\r\n\r\n    color: \"#759786\",\r\n\r\n    price: 8.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0, -1, 3, -1, 3, 0),\r\n\r\n      cubicBezierCurve(3, 0, 3, 1, 1.5, 1, 1.5, 0),\r\n\r\n      cubicBezierCurve(1.5, 0, 1.5, -1, 3, -2, 4, 0),\r\n\r\n      cubicBezierCurve(4, 0, 5, 2, 6.5, 1, 6.5, 0),\r\n\r\n      cubicBezierCurve(6.5, 0, 6.5, -1, 5, -1, 5, 0),\r\n\r\n      cubicBezierCurve(5, 0, 5, 1, 8, 1, 8, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.5005,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Thistle\"),\r\n\r\n    name: \"Thunder Thistle\",\r\n\r\n    color: \"#9E5874\",\r\n\r\n    price: 9,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 1.9999, 3.5, 2, 3.5),\r\n\r\n      cubicBezierCurve(2, 3.5, 2.0001, 3.5, -0.9999, 2.5, -1, 2.5),\r\n\r\n      cubicBezierCurve(-1, 2.5, -1.0001, 2.5, 1.0001, 6, 1, 6),\r\n    ],\r\n\r\n    preGrindPercent: 0.353,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Thornstick\"),\r\n\r\n    name: \"Thornstick\",\r\n\r\n    color: \"#818C4D\",\r\n\r\n    price: 8,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, -3.9999, -6, -4, -6),\r\n\r\n      cubicBezierCurve(-4, -6, -4.0001, -6, -1.9999, -5, -2, -5),\r\n    ],\r\n\r\n    preGrindPercent: 0.319,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Waterbloom\"),\r\n\r\n    name: \"Waterbloom\",\r\n\r\n    color: \"#539278\",\r\n\r\n    price: 4,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.25, -0.5, 1, -0.5, 1.25, 0),\r\n\r\n      cubicBezierCurve(1.25, 0, 1.5, 0.4999999, 2.25, 0.5, 2.5, 0),\r\n\r\n      cubicBezierCurve(2.5, 0, 2.75, -0.5, 3.5, -0.5, 3.75, 0),\r\n\r\n      cubicBezierCurve(3.75, 0, 4, 0.4999999, 4.75, 0.5, 5, 0),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Wierdshroom\"),\r\n\r\n    name: \"Weirdshroom\",\r\n\r\n    color: \"#B88A51\",\r\n\r\n    price: 8.5,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, -2, 0, -2, -6, -1, -6),\r\n\r\n      cubicBezierCurve(-1, -6, 0.25, -6, 1.353553, -6.207107, 1, -5.5),\r\n\r\n      cubicBezierCurve(1, -5.5, 0.5, -4.5, -0.25, -3.75, 0, -3),\r\n    ],\r\n\r\n    preGrindPercent: 0.3045,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"Windbloom\"),\r\n\r\n    name: \"Windbloom\",\r\n\r\n    color: \"#ADABA2\",\r\n\r\n    price: 6,\r\n\r\n    path: [\r\n      cubicBezierCurve(0, 0, 0.0001, 0, 0, 0, 0.5, 1.25),\r\n\r\n      cubicBezierCurve(0.5, 1.25, 0.9999999, 2.5, 0.9999, 2.5, 1, 2.5),\r\n\r\n      cubicBezierCurve(1, 2.5, 1.0001, 2.5, -1.0001, 2.5, -1, 2.5),\r\n\r\n      cubicBezierCurve(-1, 2.5, -0.9999, 2.5, -1, 2.5, -0.5, 3.75),\r\n\r\n      cubicBezierCurve(-0.5, 3.75, -2.086163e-7, 5, 0.0001, 5, 0, 5),\r\n    ],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n\r\n  {\r\n    id: ingredientId(\"WitchMushroom\"),\r\n\r\n    name: \"Witch Mushroom\",\r\n\r\n    color: \"#92777C\",\r\n\r\n    price: 13,\r\n\r\n    path: [cubicBezierCurve(0, 0, 0, 4, 5, 1, 5, 5)],\r\n\r\n    preGrindPercent: 0.5,\r\n  },\r\n];\r\n","import { ContainerModule } from \"microinject\";\r\n\r\nimport { IngredientRegistry } from \"./IngredientRegistry\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(IngredientRegistry);\r\n});\r\n","import { CubicBezierCurve } from \"@/curves\";\r\nimport { Opaque } from \"type-fest\";\r\n\r\nexport type IngredientId = Opaque<string, \"IngredientName\">;\r\nexport function ingredientId(id: string): IngredientId {\r\n  return id as IngredientId;\r\n}\r\n\r\nexport interface IngredientDescriptor {\r\n  readonly id: IngredientId;\r\n  readonly name: string;\r\n  readonly color: string;\r\n  readonly price: number;\r\n  readonly path: CubicBezierCurve[];\r\n  readonly preGrindPercent: number;\r\n}\r\n","import { composeModules } from \"microinject\";\r\n\r\nimport ingredientsModule from \"./ingredients/module\";\r\nimport plotterModule from \"./plotter/module\";\r\nimport potionBasesModule from \"./potion-bases/module\";\r\n\r\nexport default composeModules(\r\n  ingredientsModule,\r\n  plotterModule,\r\n  potionBasesModule\r\n);\r\n","import { isNotNull } from \"@/utils\";\r\nimport { inject, injectable } from \"microinject\";\r\nimport {\r\n  BehaviorSubject,\r\n  combineLatest,\r\n  map,\r\n  Observable,\r\n  Subscription,\r\n} from \"rxjs\";\r\nimport pako from \"pako\";\r\nimport {\r\n  encode as encodeBase64,\r\n  decode as decodeBase64,\r\n} from \"base64-arraybuffer\";\r\n\r\nimport { IngredientId } from \"../ingredients/types\";\r\n\r\nimport { PotionMap } from \"../potion-maps/PotionMap\";\r\nimport { PotionBaseRegistry } from \"../potion-bases/PotionBaseRegistry\";\r\n\r\nimport { Plotter } from \"./Plotter\";\r\nimport { PlotItem, PlotResult } from \"./types\";\r\n\r\n@injectable()\r\nexport class PlotBuilder {\r\n  private readonly _map$ = new BehaviorSubject<PotionMap | null>(null);\r\n  private readonly _items$ = new BehaviorSubject<readonly PlotBuilderItem[]>(\r\n    []\r\n  );\r\n  private _itemSubscription: Subscription | null = null;\r\n  private readonly _plot$ = new BehaviorSubject<PlotResult | null>(null);\r\n\r\n  constructor(\r\n    @inject(PotionBaseRegistry) potionBaseRegistry: PotionBaseRegistry,\r\n    @inject(Plotter) plotter: Plotter\r\n  ) {\r\n    this._map$.next(potionBaseRegistry.getPotionBaseById(\"water\" as any)!.map);\r\n\r\n    // This is a little wonky, but subscribing to all observables in an observable array is something I could see wanting to do a lot.\r\n    // Should make a utility function to handle this use case, if one doesnt already exist in rxjs.\r\n    this._items$.subscribe((items) => {\r\n      if (this._itemSubscription) {\r\n        this._itemSubscription.unsubscribe();\r\n      }\r\n\r\n      if (items.length === 0) {\r\n        this._plot$.next(null);\r\n        return;\r\n      }\r\n\r\n      this._itemSubscription = combineLatest([\r\n        this._map$,\r\n        ...items.map((x) => x.plotItem$),\r\n      ]).subscribe(([map, ...plotItems]) => {\r\n        if (map == null) {\r\n          return null;\r\n        }\r\n        this._plot$.next(plotter.plotItems(plotItems.filter(isNotNull), map));\r\n      });\r\n    });\r\n  }\r\n\r\n  get map$() {\r\n    return this._map$;\r\n  }\r\n\r\n  get items$() {\r\n    return this._items$;\r\n  }\r\n\r\n  get items(): readonly PlotBuilderItem[] {\r\n    return this._items$.value;\r\n  }\r\n\r\n  get plot$() {\r\n    return this._plot$;\r\n  }\r\n\r\n  loadFromShareString(dataStr: string) {\r\n    const array = decodeBase64(dataStr);\r\n    const dv = new DataView(array);\r\n    const version = dv.getUint8(0);\r\n    const data = array.slice(1);\r\n    if (version === 0) {\r\n      const decoded = JSON.parse(pako.inflate(data, { to: \"string\" })) as any[];\r\n      const items = decoded.map((item) => {\r\n        switch (item.type) {\r\n          case \"add-ingredient\":\r\n            return AddIngredientPlotBuilderItem.fromJSON(item, (item) =>\r\n              this._deleteItem(item)\r\n            );\r\n          case \"stir-cauldron\":\r\n            return StirCauldronPlotBuilderItem.fromJSON(item, (item) =>\r\n              this._deleteItem(item)\r\n            );\r\n          case \"pour-solvent\":\r\n            return PourSolventPlotBuilderItem.fromJSON(item, (item) =>\r\n              this._deleteItem(item)\r\n            );\r\n          default:\r\n            throw new Error(`Unknown item type: ${item.type}`);\r\n        }\r\n      });\r\n      this._items$.next(items);\r\n    }\r\n  }\r\n\r\n  getShareString() {\r\n    const items = this._items$.value.map((x) => x.toJSON());\r\n    const encoded = pako.deflate(JSON.stringify(items));\r\n    const data = new Uint8Array(1 + encoded.length);\r\n    data.set(encoded, 1);\r\n    new DataView(data.buffer).setUint8(0, 0);\r\n    return encodeBase64(data);\r\n  }\r\n\r\n  addIngredient(): AddIngredientPlotBuilderItem {\r\n    const item = new AddIngredientPlotBuilderItem((item) =>\r\n      this._deleteItem(item)\r\n    );\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  addStirCauldron(): StirCauldronPlotBuilderItem {\r\n    const item = new StirCauldronPlotBuilderItem((item) =>\r\n      this._deleteItem(item)\r\n    );\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  addPourSolvent(): PourSolventPlotBuilderItem {\r\n    const item = new PourSolventPlotBuilderItem((item) =>\r\n      this._deleteItem(item)\r\n    );\r\n    this._items$.next([...this._items$.value, item]);\r\n    return item;\r\n  }\r\n\r\n  builderItemFor(item: PlotItem): PlotBuilderItem | null {\r\n    const result = this._items$.value.find((x) => x.plotItem === item) || null;\r\n    return result;\r\n  }\r\n\r\n  private _deleteItem(item: PlotBuilderItem) {\r\n    this._items$.next(this._items$.value.filter((x) => x !== item));\r\n  }\r\n}\r\n\r\nexport abstract class PlotBuilderItem {\r\n  abstract readonly isValid$: Observable<boolean>;\r\n  abstract readonly isValid: boolean;\r\n\r\n  abstract readonly plotItem$: Observable<PlotItem | null>;\r\n  abstract readonly plotItem: PlotItem | null;\r\n\r\n  abstract delete(): void;\r\n\r\n  abstract toJSON(): any;\r\n}\r\n\r\nexport class AddIngredientPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _ingredientId$ = new BehaviorSubject<IngredientId | null>(\r\n    null\r\n  );\r\n  private readonly _grindPercent$ = new BehaviorSubject<number>(1);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([\r\n      this._ingredientId$,\r\n      this._grindPercent$,\r\n    ]).pipe(map(() => this.isValid));\r\n\r\n    combineLatest([this._ingredientId$, this._grindPercent$]).subscribe(\r\n      ([ingredientId, grindPercent]) => {\r\n        if (!this.isValid) {\r\n          this._plotItem$.next(null);\r\n          return;\r\n        }\r\n\r\n        this._plotItem$.next({\r\n          type: \"add-ingredient\",\r\n          ingredientId: ingredientId as IngredientId,\r\n          grindPercent,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  static fromJSON(\r\n    json: any,\r\n    del: (item: PlotBuilderItem) => void\r\n  ): AddIngredientPlotBuilderItem {\r\n    const item = new AddIngredientPlotBuilderItem(del);\r\n    item.setIngredient(json.ingredientId);\r\n    item.setGrindPercent(json.grindPercent);\r\n    return item;\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      type: \"add-ingredient\",\r\n      ingredientId: this._ingredientId$.value,\r\n      grindPercent: this._grindPercent$.value,\r\n    };\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    // TODO: Check if ingredientId is valid\r\n    const grindPercent = this._grindPercent$.value;\r\n    return (\r\n      this._ingredientId$.value != null &&\r\n      grindPercent >= 0 &&\r\n      grindPercent <= 1\r\n    );\r\n  }\r\n\r\n  get ingredientId$(): Observable<IngredientId | null> {\r\n    return this._ingredientId$;\r\n  }\r\n\r\n  get ingredientId(): IngredientId | null {\r\n    return this._ingredientId$.value;\r\n  }\r\n\r\n  get grindPercent$(): Observable<number> {\r\n    return this._grindPercent$;\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  setIngredient(ingredientId: IngredientId | null) {\r\n    if (ingredientId === this._ingredientId$.value) {\r\n      return;\r\n    }\r\n\r\n    this._ingredientId$.next(ingredientId);\r\n  }\r\n\r\n  setGrindPercent(percent: number) {\r\n    if (percent === this._grindPercent$.value) {\r\n      return;\r\n    }\r\n\r\n    this._grindPercent$.next(percent);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n\r\nexport class StirCauldronPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _distance$ = new BehaviorSubject<number | null>(null);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([this._distance$]).pipe(\r\n      map(() => this.isValid)\r\n    );\r\n\r\n    combineLatest([this._distance$]).subscribe(([stirDistance]) => {\r\n      if (!this.isValid) {\r\n        this._plotItem$.next(null);\r\n        return;\r\n      }\r\n\r\n      this._plotItem$.next({\r\n        type: \"stir-cauldron\",\r\n        distance: stirDistance!,\r\n      });\r\n    });\r\n  }\r\n\r\n  static fromJSON(\r\n    json: any,\r\n    del: (item: PlotBuilderItem) => void\r\n  ): StirCauldronPlotBuilderItem {\r\n    const item = new StirCauldronPlotBuilderItem(del);\r\n    item.setDistance(json.distance);\r\n    return item;\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      type: \"stir-cauldron\",\r\n      distance: this._distance$.value,\r\n    };\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    // TODO: Check if ingredientId is valid\r\n    const stirDistance = this._distance$.value;\r\n    return stirDistance != null && stirDistance >= 0;\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  get distance$(): Observable<number | null> {\r\n    return this._distance$;\r\n  }\r\n\r\n  setDistance(distance: number | null) {\r\n    this._distance$.next(distance);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n\r\nexport class PourSolventPlotBuilderItem extends PlotBuilderItem {\r\n  private readonly _isValid$: Observable<boolean>;\r\n  private readonly _distance$ = new BehaviorSubject<number | null>(null);\r\n\r\n  private readonly _plotItem$ = new BehaviorSubject<PlotItem | null>(null);\r\n\r\n  constructor(private readonly _delete: (item: PlotBuilderItem) => void) {\r\n    super();\r\n    this._isValid$ = combineLatest([this._distance$]).pipe(\r\n      map(() => this.isValid)\r\n    );\r\n\r\n    combineLatest([this._distance$]).subscribe(([stirDistance]) => {\r\n      if (!this.isValid) {\r\n        this._plotItem$.next(null);\r\n        return;\r\n      }\r\n\r\n      this._plotItem$.next({\r\n        type: \"pour-solvent\",\r\n        distance: stirDistance!,\r\n      });\r\n    });\r\n  }\r\n\r\n  static fromJSON(\r\n    json: any,\r\n    del: (item: PlotBuilderItem) => void\r\n  ): PourSolventPlotBuilderItem {\r\n    const item = new PourSolventPlotBuilderItem(del);\r\n    item.setDistance(json.distance);\r\n    return item;\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      type: \"pour-solvent\",\r\n      distance: this._distance$.value,\r\n    };\r\n  }\r\n\r\n  get isValid$() {\r\n    return this._isValid$;\r\n  }\r\n\r\n  get isValid() {\r\n    // TODO: Check if ingredientId is valid\r\n    const stirDistance = this._distance$.value;\r\n    return stirDistance != null && stirDistance >= 0;\r\n  }\r\n\r\n  get plotItem$(): Observable<PlotItem | null> {\r\n    return this._plotItem$;\r\n  }\r\n\r\n  get plotItem(): PlotItem | null {\r\n    return this._plotItem$.value;\r\n  }\r\n\r\n  get distance$(): Observable<number | null> {\r\n    return this._distance$;\r\n  }\r\n\r\n  setDistance(distance: number | null) {\r\n    this._distance$.next(distance);\r\n  }\r\n\r\n  delete() {\r\n    this._delete(this);\r\n  }\r\n}\r\n","import { last } from \"lodash\";\r\nimport { inject, injectable, singleton } from \"microinject\";\r\n\r\nimport { curveToPoints } from \"@/curves\";\r\nimport {\r\n  PointArray,\r\n  pointArrayLengthCached,\r\n  pointArrayLineFromDistance,\r\n  takePointArrayByDistance,\r\n} from \"@/point-array\";\r\nimport {\r\n  Point,\r\n  pointAdd,\r\n  pointDistance,\r\n  pointEquals,\r\n  pointNormalize,\r\n  pointSubtract,\r\n  PointZero,\r\n} from \"@/points\";\r\n\r\nimport { IngredientRegistry } from \"../ingredients/IngredientRegistry\";\r\nimport { PotionMap } from \"../potion-maps/PotionMap\";\r\n\r\nimport {\r\n  AddIngredientPlotItem,\r\n  PlotItem,\r\n  PlotResult,\r\n  PourSolventPlotItem,\r\n  StirCauldronPlotItem,\r\n} from \"./types\";\r\nimport { POTION_RADIUS } from \"@/game-settings\";\r\n\r\n@injectable()\r\n@singleton()\r\nexport class Plotter {\r\n  constructor(\r\n    @inject(IngredientRegistry) private ingredientRegistry: IngredientRegistry\r\n  ) {}\r\n\r\n  plotItems(items: readonly PlotItem[], map: PotionMap): PlotResult {\r\n    let result: PlotResult = {\r\n      committedPoints: [],\r\n      pendingPoints: [],\r\n    };\r\n\r\n    // return result;\r\n\r\n    const now = Date.now();\r\n\r\n    for (const item of items) {\r\n      result = this._plotItem(item, result);\r\n    }\r\n\r\n    for (const point of result.committedPoints.concat(result.pendingPoints)) {\r\n      const entities = map.hitTest(point, POTION_RADIUS);\r\n      point.entities = entities as any;\r\n    }\r\n\r\n    // console.log(\"plotting took\", Date.now() - now);\r\n\r\n    return result;\r\n  }\r\n\r\n  private _plotItem(item: PlotItem, result: PlotResult): PlotResult {\r\n    switch (item.type) {\r\n      case \"add-ingredient\":\r\n        return this._plotAddIngredient(item, result);\r\n      case \"pour-solvent\":\r\n        return this._plotPourSolvent(item, result);\r\n      case \"stir-cauldron\":\r\n        return this._plotStirCauldron(item, result);\r\n      default:\r\n        throw new Error(`Unknown plot item type: ${(item as any).type}`);\r\n    }\r\n  }\r\n\r\n  private _plotAddIngredient(\r\n    item: AddIngredientPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const { ingredientId, grindPercent } = item;\r\n\r\n    const addPosition =\r\n      last(result.pendingPoints) ?? last(result.committedPoints) ?? PointZero;\r\n\r\n    const ingredient = this.ingredientRegistry.getIngredientById(ingredientId);\r\n    if (!ingredient) {\r\n      throw new Error(`Unknown ingredient: ${ingredientId}`);\r\n    }\r\n\r\n    const ingredientPoints: PointArray = [];\r\n    let ingredientLength = 0;\r\n    for (const curve of ingredient.path) {\r\n      const points = curveToPoints(curve);\r\n      ingredientPoints.push(...points);\r\n      // Use the cached length, as curveToPoints is cached and will return consistent array references.\r\n      // Note, this produces a very slightly incorrect length. A difference of around e-15 when compared to getting\r\n      // the length of the final ingredientPoints array.\r\n      ingredientLength += pointArrayLengthCached(points);\r\n    }\r\n\r\n    const takePercent =\r\n      ingredient.preGrindPercent +\r\n      grindPercent * (1 - ingredient.preGrindPercent);\r\n\r\n    const [addedPoints] = takePointArrayByDistance(\r\n      ingredientPoints,\r\n      takePercent * ingredientLength\r\n    );\r\n\r\n    const appendPendingPoints = addedPoints.map((point) =>\r\n      pointAdd(addPosition, point)\r\n    );\r\n\r\n    return appendPendingPlotPoints(appendPendingPoints, item, result);\r\n  }\r\n\r\n  private _plotPourSolvent(\r\n    item: PourSolventPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const currentPoint =\r\n      result.committedPoints[result.committedPoints.length - 1] ?? PointZero;\r\n    if (pointEquals(currentPoint, PointZero)) {\r\n      return result;\r\n    }\r\n\r\n    let { distance } = item;\r\n\r\n    const distanceToOrigin = pointDistance(currentPoint, PointZero);\r\n    if (distance > distanceToOrigin) {\r\n      distance = distanceToOrigin;\r\n    }\r\n\r\n    const newPoints = pointArrayLineFromDistance(\r\n      currentPoint,\r\n      pointNormalize(pointSubtract(PointZero, currentPoint)),\r\n      distance\r\n    );\r\n\r\n    return commitPlotPoints(newPoints, item, result);\r\n  }\r\n\r\n  private _plotStirCauldron(\r\n    item: StirCauldronPlotItem,\r\n    result: PlotResult\r\n  ): PlotResult {\r\n    const { distance } = item;\r\n\r\n    const [addedPoints, remainderPlotPoints] = takePointArrayByDistance(\r\n      result.pendingPoints,\r\n      distance\r\n    );\r\n\r\n    return {\r\n      committedPoints: result.committedPoints.concat(addedPoints),\r\n      pendingPoints: remainderPlotPoints,\r\n    };\r\n  }\r\n}\r\n\r\nfunction appendPendingPlotPoints(\r\n  points: Point[],\r\n  source: PlotItem,\r\n  result: PlotResult\r\n): PlotResult {\r\n  if (source == null) {\r\n    throw new Error(\"source is null\");\r\n  }\r\n\r\n  if (points.length === 0) {\r\n    return result;\r\n  }\r\n\r\n  return Object.assign({}, result, {\r\n    pendingPoints: result.pendingPoints.concat(\r\n      points.map((point) => ({\r\n        x: point.x,\r\n        y: point.y,\r\n        source,\r\n        entities: [],\r\n      }))\r\n    ),\r\n  });\r\n}\r\n\r\nfunction commitPlotPoints(\r\n  points: Point[],\r\n  source: PlotItem,\r\n  result: PlotResult\r\n): PlotResult {\r\n  if (source == null) {\r\n    throw new Error(\"source is null\");\r\n  }\r\n\r\n  if (points.length === 0) {\r\n    return result;\r\n  }\r\n\r\n  const difference = pointSubtract(\r\n    last(points)!,\r\n    last(result.committedPoints) ?? PointZero\r\n  );\r\n\r\n  return Object.assign({}, result, {\r\n    committedPoints: result.committedPoints.concat(\r\n      points.map((point) => ({\r\n        x: point.x,\r\n        y: point.y,\r\n        source,\r\n        entities: [],\r\n      }))\r\n    ),\r\n    pendingPoints: result.pendingPoints.map((point) => ({\r\n      x: point.x + difference.x,\r\n      y: point.y + difference.y,\r\n      source: point.source,\r\n    })),\r\n  });\r\n}\r\n","import { ContainerModule } from \"microinject\";\r\n\r\nimport { PlotBuilder } from \"./PlotBuilder\";\r\nimport { Plotter } from \"./Plotter\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(PlotBuilder);\r\n  bind(Plotter);\r\n});\r\n","import { Point } from \"@/points\";\r\n\r\nimport { IngredientId } from \"../ingredients/types\";\r\nimport { MapEntity } from \"../potion-maps/types\";\r\n\r\nexport type PlotItem =\r\n  | AddIngredientPlotItem\r\n  | PourSolventPlotItem\r\n  | StirCauldronPlotItem;\r\n\r\nexport interface AddIngredientPlotItem {\r\n  type: \"add-ingredient\";\r\n  ingredientId: IngredientId;\r\n  grindPercent: number;\r\n}\r\n\r\nexport interface PourSolventPlotItem {\r\n  type: \"pour-solvent\";\r\n  distance: number;\r\n}\r\n\r\nexport interface StirCauldronPlotItem {\r\n  type: \"stir-cauldron\";\r\n  distance: number;\r\n}\r\n\r\nexport interface PlotPoint extends Point {\r\n  source: PlotItem;\r\n  entities: Readonly<MapEntity>[];\r\n}\r\n\r\nexport interface PlotResult {\r\n  committedPoints: PlotPoint[];\r\n  pendingPoints: PlotPoint[];\r\n}\r\n\r\nexport const EmptyPlotResult: Readonly<PlotResult> = Object.freeze({\r\n  committedPoints: [],\r\n  pendingPoints: [],\r\n}) as any;\r\n","import { injectable, singleton } from \"microinject\";\r\n\r\nimport { typedKeys } from \"@/utils\";\r\n\r\nimport { PotionBaseMaps } from \"../potion-maps/maps\";\r\nimport { PotionMap } from \"../potion-maps/PotionMap\";\r\nimport { PotionBaseId, PotionBase } from \"./types\";\r\n\r\n@injectable()\r\n@singleton()\r\nexport class PotionBaseRegistry {\r\n  private readonly _potionBasesById: Record<PotionBaseId, PotionBase> = {};\r\n\r\n  constructor() {\r\n    for (const key of typedKeys(PotionBaseMaps)) {\r\n      const id = key as PotionBaseId;\r\n      const base: PotionBase = {\r\n        id,\r\n        map: new PotionMap(PotionBaseMaps[key]),\r\n      };\r\n      this._potionBasesById[id] = base;\r\n    }\r\n  }\r\n\r\n  getPotionBaseById(id: PotionBaseId): PotionBase | null {\r\n    return this._potionBasesById[id] ?? null;\r\n  }\r\n}\r\n","import { ContainerModule } from \"microinject\";\r\nimport { PotionBaseRegistry } from \"./PotionBaseRegistry\";\r\n\r\nexport default new ContainerModule((bind) => {\r\n  bind(PotionBaseRegistry);\r\n});\r\n","import { uniq } from \"lodash\";\r\n\r\nimport { Point } from \"@/points\";\r\nimport { rectFromCircle } from \"@/rectangles\";\r\n\r\nimport {\r\n  getRegionIndexesFromRect,\r\n  getRegionIndexFromPoint,\r\n  REGION_COUNT,\r\n} from \"./regions\";\r\nimport { MapEntity } from \"./types\";\r\nimport { EntityDefs } from \"./entity-defs\";\r\n\r\nexport class PotionMap {\r\n  private _entityRegions: MapEntity[][] | null = null;\r\n\r\n  constructor(private _entities: readonly Readonly<MapEntity>[]) {}\r\n\r\n  get entities(): readonly Readonly<MapEntity>[] {\r\n    return this._entities;\r\n  }\r\n\r\n  hitTest(p: Point, radius = 0): readonly Readonly<MapEntity>[] {\r\n    const regions = this._getEntityRegions();\r\n\r\n    const indexes =\r\n      radius <= 0\r\n        ? [getRegionIndexFromPoint(p)]\r\n        : getRegionIndexesFromRect(rectFromCircle(p, radius));\r\n\r\n    const entities = uniq(\r\n      ([] as MapEntity[]).concat(...indexes.map((index) => regions[index]))\r\n    );\r\n\r\n    const result: MapEntity[] = [];\r\n    for (const entity of entities) {\r\n      const entityDef = EntityDefs[entity.entityType];\r\n      if (!entityDef) {\r\n        continue;\r\n      }\r\n\r\n      if (entityDef.hitTest(p, entity, radius)) {\r\n        result.push(entity);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private _getEntityRegions(): MapEntity[][] {\r\n    if (this._entityRegions) {\r\n      return this._entityRegions;\r\n    }\r\n\r\n    this._entityRegions = new Array(REGION_COUNT);\r\n    for (let i = 0; i < REGION_COUNT; i++) {\r\n      this._entityRegions[i] = [];\r\n    }\r\n\r\n    for (const entity of this._entities) {\r\n      const entityDef = EntityDefs[entity.entityType];\r\n      if (!entityDef) {\r\n        continue;\r\n      }\r\n      const bounds = entityDef.getBounds(entity);\r\n      const indexes = getRegionIndexesFromRect(bounds);\r\n      for (const index of indexes) {\r\n        this._entityRegions[index].push(entity);\r\n      }\r\n    }\r\n\r\n    return this._entityRegions;\r\n  }\r\n}\r\n","import { POTION_RADIUS } from \"@/game-settings\";\r\nimport { Point, pointMagnitude, pointSubtract } from \"@/points\";\r\nimport { Rectangle, rectFromCircle } from \"@/rectangles\";\r\n\r\nimport { MapEntity } from \"./types\";\r\n\r\nexport interface EntityDefinition {\r\n  readonly entityType: MapEntity[\"entityType\"];\r\n  getBounds(entity: MapEntity): Rectangle;\r\n  hitTest(p: Point, entity: MapEntity, radius?: number): boolean;\r\n}\r\n\r\nclass RadiusEntity implements EntityDefinition {\r\n  constructor(\r\n    private readonly _entityType: MapEntity[\"entityType\"],\r\n    private readonly _radius: number\r\n  ) {}\r\n\r\n  get entityType() {\r\n    return this._entityType;\r\n  }\r\n\r\n  getBounds(entity: MapEntity): Rectangle {\r\n    return rectFromCircle(entity, this._radius);\r\n  }\r\n\r\n  hitTest(p: Point, entity: MapEntity, radius = 0): boolean {\r\n    return pointMagnitude(pointSubtract(p, entity)) - radius <= this._radius;\r\n  }\r\n}\r\n\r\nconst VortexRadii = {\r\n  Large: 1.65,\r\n  Medium: 1.25,\r\n} as const;\r\n\r\nexport const EntityDefs: Record<MapEntity[\"entityType\"], EntityDefinition> = {\r\n  PotionEffect: new RadiusEntity(\"PotionEffect\" as const, POTION_RADIUS),\r\n  // NOTE: This should be replaced by something that knows the different hitboxes of each type.\r\n  // This would be complicated, as many of them are rects and rotation needs to be taken into account.\r\n  DangerZonePart: new RadiusEntity(\"DangerZonePart\" as const, 0.24),\r\n  ExperienceBonus: {\r\n    entityType: \"ExperienceBonus\",\r\n    getBounds: (entity: MapEntity): Rectangle => {\r\n      // FIXME: Arent these different sizes?\r\n      return rectFromCircle(entity, 0.3);\r\n    },\r\n    hitTest: (p: Point, entity: MapEntity, radius = 0): boolean => {\r\n      return pointMagnitude(pointSubtract(p, entity)) - radius <= 0.3;\r\n    },\r\n  },\r\n  Vortex: {\r\n    entityType: \"Vortex\",\r\n    getBounds: (entity: MapEntity): Rectangle => {\r\n      const vortex = assertEntity(entity, \"Vortex\");\r\n      const radius = VortexRadii[vortex.prefab];\r\n      return rectFromCircle(entity, radius);\r\n    },\r\n    hitTest: (p: Point, entity: MapEntity, radius = 0): boolean => {\r\n      const vortex = assertEntity(entity, \"Vortex\");\r\n      const vortexRadius = VortexRadii[vortex.prefab];\r\n      return pointMagnitude(pointSubtract(p, entity)) - radius <= vortexRadius;\r\n    },\r\n  },\r\n};\r\n\r\nfunction assertEntity<T extends MapEntity[\"entityType\"]>(\r\n  entity: MapEntity,\r\n  type: T\r\n): MapEntity & { entityType: T } {\r\n  if (entity.entityType === type) {\r\n    return entity as any;\r\n  }\r\n  throw new Error(`Expected entity to be of type ${type}`);\r\n}\r\n","import { MapEntity } from \"../types\";\r\n\r\nconst water = Object.freeze(require(\"./water.json\")) as MapEntity[];\r\n\r\nexport const PotionBaseMaps = {\r\n  water,\r\n};\r\n","import { first } from \"lodash\";\r\n\r\nimport { MAP_EXTENT_RADIUS } from \"@/game-settings\";\r\nimport { Point, pointAdd } from \"@/points\";\r\nimport { Rectangle } from \"@/rectangles\";\r\n\r\nconst MAP_WIDTH = MAP_EXTENT_RADIUS * 2;\r\nconst MAP_HEIGHT = MAP_EXTENT_RADIUS * 2;\r\nconst REGION_WIDTH = 0.5;\r\nconst REGION_HEIGHT = 0.5;\r\n\r\nconst ORIGIN_OFFSET: Point = { x: MAP_EXTENT_RADIUS, y: MAP_EXTENT_RADIUS };\r\n\r\nexport const REGION_COUNT =\r\n  (MAP_WIDTH / REGION_WIDTH) * (MAP_HEIGHT / REGION_HEIGHT) + 1;\r\nexport const FALLBACK_REGION = REGION_COUNT - 1;\r\n\r\nexport function getRegionIndexFromPoint(p: Point): number {\r\n  return first(getRegionIndexesFromRect({ p1: p, p2: p }))!;\r\n}\r\n\r\nexport function getRegionIndexesFromRect(r: Rectangle): number[] {\r\n  let { p1, p2 } = r;\r\n  p1 = pointAdd(p1, ORIGIN_OFFSET);\r\n  p2 = pointAdd(p2, ORIGIN_OFFSET);\r\n\r\n  let x1 = Math.floor(p1.x / REGION_WIDTH);\r\n  let y1 = Math.floor(p1.y / REGION_HEIGHT);\r\n  let x2 = Math.ceil(p2.x / REGION_WIDTH);\r\n  let y2 = Math.ceil(p2.y / REGION_HEIGHT);\r\n\r\n  const indexes = [];\r\n\r\n  let addedOOB = false;\r\n  const addOOB = () => {\r\n    if (addedOOB) {\r\n      return;\r\n    }\r\n    indexes.push(FALLBACK_REGION);\r\n    addedOOB = true;\r\n  };\r\n\r\n  if (x1 < 0) {\r\n    x1 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (x2 < 0) {\r\n    x2 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (x1 >= MAP_WIDTH / REGION_WIDTH) {\r\n    x1 = MAP_WIDTH / REGION_WIDTH - 1;\r\n    addOOB();\r\n  }\r\n\r\n  if (x2 >= MAP_WIDTH / REGION_WIDTH) {\r\n    x2 = MAP_WIDTH / REGION_WIDTH - 1;\r\n    addOOB();\r\n  }\r\n\r\n  if (y1 < 0) {\r\n    y1 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (y2 < 0) {\r\n    y2 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (y1 >= MAP_HEIGHT / REGION_HEIGHT) {\r\n    y1 = MAP_HEIGHT / REGION_HEIGHT - 1;\r\n    addOOB();\r\n  }\r\n\r\n  if (y2 >= MAP_HEIGHT / REGION_HEIGHT) {\r\n    y2 = MAP_HEIGHT / REGION_HEIGHT - 1;\r\n    addOOB();\r\n  }\r\n\r\n  for (let x = x1; x <= x2; x++) {\r\n    for (let y = y1; y <= y2; y++) {\r\n      indexes.push(x + y * (MAP_WIDTH / REGION_WIDTH));\r\n    }\r\n  }\r\n\r\n  return indexes;\r\n}\r\n","export interface Size {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport const SizeZero = Object.freeze({ width: 0, height: 0 }) as any;\r\n","import { ThemeProvider } from \"@emotion/react\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\nimport React from \"react\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: \"light\",\r\n  },\r\n});\r\n\r\nexport interface AppThemeProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst AppThemeProvider = ({ children }: AppThemeProviderProps) => (\r\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n);\r\n\r\nexport default AppThemeProvider;\r\n","export function windowArray<T>(array: T[], count: number): T[][] {\r\n  const a = [...array];\r\n\r\n  let result: T[][] = [];\r\n  let window: T[] = [];\r\n\r\n  while (a.length > 0) {\r\n    window.push(a.pop()!);\r\n    if (window.length === count) {\r\n      result.push(window);\r\n      window = [];\r\n    }\r\n  }\r\n\r\n  if (window.length > 0) {\r\n    result.push(window);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function keepEveryK<T>(array: T[], k: number, keepLast = false) {\r\n  if (array.length === 0) {\r\n    return array;\r\n  }\r\n\r\n  const a = [];\r\n  for (let i = 0; i < array.length; i += k) {\r\n    a.push(array[i]);\r\n  }\r\n  if (keepLast && (array.length - 1) % k !== 0) {\r\n    a.push(array[array.length - 1]);\r\n  }\r\n  return a;\r\n}\r\n\r\nexport function isNotNull<T>(x: T | null | undefined): x is T {\r\n  return x != null;\r\n}\r\n\r\nexport function typedKeys<T>(obj: T): (keyof T)[] {\r\n  return Object.keys(obj) as any;\r\n}\r\n\r\nexport function degreesToRadians(degress: number): number {\r\n  return (degress * Math.PI) / 180;\r\n}\r\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","className","value","rate","onChange","onChangeCommitted","useState","delta","setDelta","useEffect","token","setInterval","clearInterval","Slider","min","max","step","e","v","StyledTooltip","styled","Tooltip","tooltipPlacementLeft","margin","allowEmpty","onMouseOverItem","onMouseOutItem","props","registry","useDIDependency","IngredientRegistry","onSelectChange","useCallback","target","Select","MenuItem","getIngredients","map","ingredient","key","onMouseOver","onMouseOut","placement","title","width","height","viewBox","MAX_INGREDIENT_EXTENT","transform","cx","cy","r","POTION_RADIUS","fill","d","path","reduce","curve","start","x","y","p1","p2","end","stroke","strokeWidth","ListItemText","name","Root","backgroundColor","overflow","imgCache","Map","makeImg","src","has","get","img","Image","onerror","console","error","bind","set","MapSlotSrc","renderEntity","ctx","entity","entityType","save","translate","rotate","degreesToRadians","angle","DangerZoneImageSrces","prefab","w","h","scale","drawImage","restore","renderDangerZonePart","grad","createLinearGradient","addColorStop","strokeStyle","lineWidth","beginPath","moveTo","lineTo","container","EffectSlotSrc","containerW","containerH","PotionEffectImageSrces","effect","renderPotionEffectEntity","ExperienceBonusImagesSrc","renderExperienceBonusEntity","VortexImagesSrc","renderVortexEntity","viewModel","useObservation","viewportSize$","SizeZero","offset","viewOffset$","PointZero","viewScale$","canvasRef","setCanvasRef","entities","requestAnimationFrame","getContext","clearRect","zoomFactor","offsetX","offsetY","handler","MAP_EXTENT_RADIUS","transformToMap","mapSlotW","mapSlotH","cancelAnimationFrame","ref","Bone1","Bone2","Fang1","Fang2","Skull1","Acid","Berserker","Bounce","Charm","Crop","Explosion","Fire","Fly","Frost","Growth","Hallucinations","Healing","Invisibility","Libido","Light","Lightning","Mana","Necromancy","Poison","SharpVision","Sleep","SlowDown","StoneSkin","Little","Medium","Large","ZOOM_FACTOR","PAN_FACTOR","children","containerRef","React","useRef","containerBounds","useComponentBounds","dragPointer","setDragPointer","mouseLastPos","setMouseLastPos","useLayoutEffect","onViewportResized","onWheel","current","defaultPrevented","modifiers","getModifiers","ctrlMetaKey","zoom","deltaY","clientX","clientY","preventDefault","stopPropagation","shiftKey","pan","onPointerDown","pointerId","currentTarget","setPointerCapture","onPointerMove","p","pointSubtract","onPointerUp","releasePointerCapture","useNativeEvent","passive","onMouseMove","theme","boxSixing","display","flexDirection","listStyle","paddingLeft","spacing","paddingRight","position","marginBottom","top","right","alignSelf","alignItems","PlotListItem","item","highlight","AddIngredientPlotBuilderItem","AddIngredientPlotListItem","StirCauldronPlotBuilderItem","StirCauldronPlotListItem","PourSolventPlotBuilderItem","PourSolventPlotListItem","constructor","PlotListItemCard","valid","isValid$","Card","style","IconButton","size","onClick","delete","Delete","CardContent","savedIngredientRef","isPreviewing","setIsPreviewing","isPreviewingRef","localGrind","setLocalGrind","inputGrindPercent","setInputGrindPercent","ingredientId","ingredientId$","grindPercent","grindPercent$","displayIngredientId","Typography","variant","fullWidth","onOpen","setIngredient","onClose","Grid","paddingTop","TextField","label","asNumber","Number","isNaN","setGrindPercent","onBlur","_","distance","distance$","inputDistance","setInputDistance","setDistance","Math","toFixed","builder","highlightItem","items","items$","i","Button","color","addIngredient","Add","addStirCauldron","addPourSolvent","left","bottom","background","useDICreate","PlotEditorViewModel","PotionBaseRegistry","getPotionBaseById","inspectSource","mouseOverPlotItem$","inspectEntity","mouseOverEntity$","plot","plot$","useTransition","mouseOverBuilderItem$","outputShareString","shareString$","mouseWorld","mouseWorldPosition$","query","URLSearchParams","window","location","search","data","loadFromShareString","history","replaceState","toString","EmptyPlotResult","setZoom","onMouseOverBuilderItem","_builder","_viewportSize$","BehaviorSubject","_viewOffset$","_viewScale$","_mouseClientPosition$","_mouseOverPlotItem$","_mouseOverBuilderItem$","this","_shareString$","pipe","debounceTime","getShareString","_mouseWorldPosition$","combineLatest","clientPos","_clientToWorld","_mouseOverEntity$","map$","worldPos","hitTest","first","on","prevWorld","next","world","pointAdd","dx","dy","applyZoom","z","prevSize","scaleFactor","onMouseOverPlotItem","builderItemFor","plotItem","_worldToClient","inject","PlotBuilder","content","PotionEffectMapEntityDetails","VortexMapEntityDetails","isIngredientPoint","point","type","ingredientRegistry","endsAt","last","committedPoints","useMemo","allPoints","concat","pendingPoints","ingredients","uniq","source","filter","baseCost","ingredientTypeCounts","getIngredientById","price","pointArrayLength","length","sqrt","sum","Object","keys","pow","longestLength","currentLength","prevItem","some","pointMagnitude","longestDangerLength","totalIngredients","totalUniqueIngredients","stress","longestDanger","AddIngredientRoot","justifyContent","AddIngredient","PlotLine","line","pending","usePlotViewModel","points","evenOdd","onPathMouseOver","lighten","hex","str","onLineMouseOver","committed","trim","currentLine","sourceCounter","commitedLines","pendingLines","lastSource","keepEveryK","resultToPlotLines","committedLines","PlotViewModelContext","Provider","createContext","plotViewModel","useContext","Error","modules","composeModules","ContainerContext","Container","useDIContainer","toConstantValue","load","ContainerProvider","identifier","parameters","valRef","create","getCurvePoint","t","b1","b2","b3","b4","startX","startY","p1x","p1y","p2x","p2y","endx","endy","curveLengthCache","getCurveLength","resolution","BEZIER_CURVE_LENGTH_RESOLUTION","cached","previousPoint","index","vector2_2","curvePointsCache","PATH_SPACING_PHYSICS","remainingDistance","samplePointCount","ceil","pointDistance","splitPoint","pointScale","pointNormalize","freeze","setSize","observer","ResizeObserver","el","b","getBoundingClientRect","observe","disconnect","listener","listenTarget","addEventListener","removeEventListener","observable","onError","val","setVal","Observable","subscribe","startTransition","unsubscribe","rootEl","document","getElementById","ReactDOM","createRoot","render","StrictMode","MODIFIER_KEYS_NONE","ctrlKey","altKey","metaKey","keyboardModifierUseMeta","event","pointArray","pointArrayLengthCache","direction","array","takeLength","totalLength","taken","remainder","takenLength","remainingLength","linearInterpolate","assign","slice","a","abs","EPSILON","factor","magnitude","lerp","normalizeRectangle","args","RectZero","radius","osPlatform","os","family","OSType","test","isProd","find","injectable","singleton","cubicBezierCurve","preGrindPercent","ContainerModule","potionBaseRegistry","plotter","_map$","_items$","_itemSubscription","_plot$","plotItem$","plotItems","isNotNull","dataStr","decode","version","DataView","getUint8","JSON","parse","inflate","to","fromJSON","_deleteItem","toJSON","encoded","deflate","stringify","Uint8Array","buffer","setUint8","encode","Plotter","PlotBuilderItem","_delete","_ingredientId$","_grindPercent$","_plotItem$","_isValid$","isValid","json","del","percent","_distance$","stirDistance","result","Date","now","_plotItem","_plotAddIngredient","_plotPourSolvent","_plotStirCauldron","addPosition","ingredientPoints","ingredientLength","curveToPoints","pointArrayLengthCached","takePercent","appendPendingPlotPoints","takePointArrayByDistance","currentPoint","pointEquals","distanceToOrigin","difference","commitPlotPoints","pointArrayLineFromDistance","addedPoints","remainderPlotPoints","_potionBasesById","typedKeys","PotionBaseMaps","base","PotionMap","_entities","_entityRegions","regions","_getEntityRegions","indexes","getRegionIndexFromPoint","getRegionIndexesFromRect","rectFromCircle","entityDef","EntityDefs","Array","REGION_COUNT","bounds","getBounds","_entityType","_radius","VortexRadii","assertEntity","PotionEffect","RadiusEntity","DangerZonePart","ExperienceBonus","Vortex","vortex","vortexRadius","water","MAP_WIDTH","MAP_HEIGHT","REGION_WIDTH","REGION_HEIGHT","ORIGIN_OFFSET","x1","floor","y1","x2","y2","addedOOB","addOOB","FALLBACK_REGION","createTheme","palette","mode","ThemeProvider","count","pop","k","keepLast","obj","degress","PI"],"sourceRoot":""}